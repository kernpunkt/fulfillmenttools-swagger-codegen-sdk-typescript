/// <reference path="./custom.d.ts" />
// tslint:disable
/**
 * fulfillmenttools - simplifying retail complexity
 * This is the fulfillmenttools API documentation. Visit https://docs.fulfillmenttools.com/ for first steps.
 *
 * OpenAPI spec version: VERSIONLESS
 * Contact: api@fulfillmenttools.com
 *
 * NOTE: This file is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the file manually.
 */

import * as url from "url";
import * as isomorphicFetch from "isomorphic-fetch";
import { Configuration } from "./configuration";

const BASE_PATH = "/".replace(/\/+$/, "");

/**
 *
 * @export
 */
export const COLLECTION_FORMATS = {
    csv: ",",
    ssv: " ",
    tsv: "\t",
    pipes: "|",
};

/**
 *
 * @export
 * @interface FetchAPI
 */
export interface FetchAPI {
    (url: string, init?: any): Promise<Response>;
}

/**
 *
 * @export
 * @interface FetchArgs
 */
export interface FetchArgs {
    url: string;
    options: any;
}

/**
 *
 * @export
 * @class BaseAPI
 */
export class BaseAPI {
    protected configuration: Configuration = {};

    constructor(configuration?: Configuration, protected basePath: string = BASE_PATH, protected fetch: FetchAPI = isomorphicFetch) {
        if (configuration) {
            this.configuration = configuration;
            this.basePath = configuration.basePath || this.basePath;
        }
    }
}

/**
 *
 * @export
 * @class RequiredError
 * @extends {Error}
 */
export class RequiredError extends Error {
    name = "RequiredError"
    constructor(public field: string, msg?: string) {
        super(msg);
    }
}

/**
 * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />@deprecated Use api/pickjobs/:id/actions instead
 * @export
 * @interface AbortPickJobAction
 */
export interface AbortPickJobAction extends AbstractModificationAction {
    /**
     * Use value 'AbortPickJob', because you want to cancel a pickjob
     * @type {string}
     * @memberof AbortPickJobAction
     */
    action: AbortPickJobAction.ActionEnum;
}

/**
 * @export
 * @namespace AbortPickJobAction
 */
export namespace AbortPickJobAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        AbortPickJob = 'AbortPickJob'
    }
}
/**
 *
 * @export
 * @interface AbstractArticle
 */
export interface AbstractArticle {
    /**
     * Attributes that can be added to this entity. These attributes **cannot** be used within fulfillment processes, but enable you to attach custom data from your systems to fulfillmenttools entities.
     * @type {any}
     * @memberof AbstractArticle
     */
    customAttributes?: any;
    /**
     * A web link to a picture of this article. Please make sure that no authentication is required to fetch the image!
     * @type {string}
     * @memberof AbstractArticle
     */
    imageUrl?: string;
    /**
     * This is a reference to an article number
     * @type {string}
     * @memberof AbstractArticle
     */
    tenantArticleId: string;
    /**
     * The title of the product
     * @type {string}
     * @memberof AbstractArticle
     */
    title: string;
    /**
     * The translations for the title of the product
     * @type {LocaleString}
     * @memberof AbstractArticle
     */
    titleLocalized?: LocaleString;
    /**
     * weight value is in gram
     * @type {number}
     * @memberof AbstractArticle
     */
    weight?: number;
}
/**
 *
 * @export
 * @interface AbstractCarrierCredentials
 */
export interface AbstractCarrierCredentials {
    /**
     *
     * @type {string}
     * @memberof AbstractCarrierCredentials
     */
    key: string;
}
/**
 *
 * @export
 * @interface AbstractFacilityActionsParameter
 */
export interface AbstractFacilityActionsParameter {
    /**
     *
     * @type {string}
     * @memberof AbstractFacilityActionsParameter
     */
    name: string;
    /**
     * Version of the entity to be changed
     * @type {number}
     * @memberof AbstractFacilityActionsParameter
     */
    version: number;
}
/**
 *
 * @export
 * @interface AbstractFacilityCarrierConfiguration
 */
export interface AbstractFacilityCarrierConfiguration {
    /**
     *
     * @type {string}
     * @memberof AbstractFacilityCarrierConfiguration
     */
    key: string;
    /**
     *
     * @type {string}
     * @memberof AbstractFacilityCarrierConfiguration
     */
    serviceUrl?: string;
}
/**
 *
 * @export
 * @interface AbstractFulfillabilityConstraintType
 */
export interface AbstractFulfillabilityConstraintType {
    /**
     * Type of the constraint (must be supported by the fulfillmenttools platform).
     * @type {string}
     * @memberof AbstractFulfillabilityConstraintType
     */
    type?: AbstractFulfillabilityConstraintType.TypeEnum;
    /**
     * Additional parameters needed for the referenced type of constraint.
     * @type {any}
     * @memberof AbstractFulfillabilityConstraintType
     */
    value?: any;
}

/**
 * @export
 * @namespace AbstractFulfillabilityConstraintType
 */
export namespace AbstractFulfillabilityConstraintType {
    /**
     * @export
     * @enum {string}
     */
    export enum TypeEnum {
        ITEMS = 'ITEMS'
    }
}
/**
 *
 * @export
 * @interface AbstractModificationAction
 */
export interface AbstractModificationAction {
    /**
     *
     * @type {string}
     * @memberof AbstractModificationAction
     */
    action: AbstractModificationAction.ActionEnum;
}

/**
 * @export
 * @namespace AbstractModificationAction
 */
export namespace AbstractModificationAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        AddAllowedValueToTag = 'AddAllowedValueToTag',
        ModifyPickJob = 'ModifyPickJob',
        ModifyPickJobLastEditor = 'ModifyPickJobLastEditor',
        RestartPickJob = 'RestartPickJob',
        ResetPickJob = 'ResetPickJob',
        CancelPickRun = 'CancelPickRun',
        CancelHandoverjob = 'CancelHandoverjob',
        AbortPickJob = 'AbortPickJob',
        FinishPickRun = 'FinishPickRun',
        StartPickRun = 'StartPickRun',
        ModifyPickLineItem = 'ModifyPickLineItem',
        ModifyPickRunLineItem = 'ModifyPickRunLineItem',
        ModifyPackJob = 'ModifyPackJob',
        PausePackJob = 'PausePackJob',
        ModifyPackLineItem = 'ModifyPackLineItem',
        ModifyFacility = 'ModifyFacility',
        ModifyListing = 'ModifyListing',
        ModifyRetainedOfflineStock = 'ModifyRetainedOfflineStock',
        ModifyListingReactivationAfter = 'ModifyListingReactivationAfter',
        ModifyUser = 'ModifyUser',
        ModifyShipment = 'ModifyShipment',
        ModifyHandoverjob = 'ModifyHandoverjob',
        ModifyCarrier = 'ModifyCarrier',
        ModifyShortpick = 'ModifyShortpick',
        ModifyReturn = 'ModifyReturn',
        ModifyReturnLineItem = 'ModifyReturnLineItem',
        ModifyRoutingPlan = 'ModifyRoutingPlan',
        ModifyFence = 'ModifyFence',
        ModifyRating = 'ModifyRating',
        ModifyTimingMode = 'ModifyTimingMode',
        ModifyGlobalRoutingConfiguration = 'ModifyGlobalRoutingConfiguration',
        ModifyOrderSplit = 'ModifyOrderSplit',
        ModifyPrioritization = 'ModifyPrioritization',
        ModifyLoadUnitType = 'ModifyLoadUnitType',
        ModifyFeature = 'ModifyFeature',
        ModifyParcel = 'ModifyParcel',
        ModifyParcelLoadUnit = 'ModifyParcelLoadUnit',
        ModifyRestowItem = 'ModifyRestowItem',
        RemovePickJobFromPickRunAction = 'RemovePickJobFromPickRunAction',
        ModifyPartialStock = 'ModifyPartialStock',
        AddTagsToProcess = 'AddTagsToProcess',
        AssignFacilityToProcess = 'AssignFacilityToProcess',
        ModifyStorageLocation = 'ModifyStorageLocation',
        ModifyPackingContainerType = 'ModifyPackingContainerType',
        ModifyPackingContainerTypeIcon = 'ModifyPackingContainerTypeIcon',
        ReplaceCodesInPackingTargetContainer = 'ReplaceCodesInPackingTargetContainer',
        ReplaceLoadUnitLineItems = 'ReplaceLoadUnitLineItems',
        AddLineItemToPackingTargetContainer = 'AddLineItemToPackingTargetContainer',
        RemoveLineItemFromPackingTargetContainer = 'RemoveLineItemFromPackingTargetContainer',
        UpdateLineItemOnPackingTargetContainer = 'UpdateLineItemOnPackingTargetContainer',
        ModifyCustomService = 'ModifyCustomService',
        UnlockOrder = 'UnlockOrder'
    }
}
/**
 *
 * @export
 * @interface AbstractModifyCarrierCredentials
 */
export interface AbstractModifyCarrierCredentials {
    /**
     *
     * @type {string}
     * @memberof AbstractModifyCarrierCredentials
     */
    key: string;
}
/**
 *
 * @export
 * @interface AbstractOrderActionsParameter
 */
export interface AbstractOrderActionsParameter {
    /**
     *
     * @type {string}
     * @memberof AbstractOrderActionsParameter
     */
    name: string;
    /**
     * Version of the entity to be changed
     * @type {number}
     * @memberof AbstractOrderActionsParameter
     */
    version: number;
}
/**
 * Base Configuration for Ratings. See documentation for Details.
 * @export
 * @interface AbstractRatingConfiguration
 */
export interface AbstractRatingConfiguration {
}
/**
 *
 * @export
 * @interface AbstractReason
 */
export interface AbstractReason extends AbstractReasonForCreation {
    /**
     * The date this entity was created at the platform. This value is generated by the service.
     * @type {Date}
     * @memberof AbstractReason
     */
    created?: Date;
    /**
     * The date this entity was modified last. This value is generated by the service.
     * @type {Date}
     * @memberof AbstractReason
     */
    lastModified?: Date;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof AbstractReason
     */
    version: number;
    /**
     * The id of the Reason
     * @type {string}
     * @memberof AbstractReason
     */
    id: string;
    /**
     * The action this reason can be attached to.
     * @type {string}
     * @memberof AbstractReason
     */
    action: string;
}
/**
 *
 * @export
 * @interface AbstractReasonForCreation
 */
export interface AbstractReasonForCreation {
    /**
     * Text explaining the reason for a supported action.
     * @type {string}
     * @memberof AbstractReasonForCreation
     */
    reason: string;
    /**
     *
     * @type {LocaleString}
     * @memberof AbstractReasonForCreation
     */
    reasonLocalized: LocaleString;
}
/**
 *
 * @export
 * @interface AbstractReasonForModification
 */
export interface AbstractReasonForModification {
    /**
     * Text explaining the reason for a supported action.
     * @type {string}
     * @memberof AbstractReasonForModification
     */
    reason: string;
    /**
     *
     * @type {LocaleString}
     * @memberof AbstractReasonForModification
     */
    reasonLocalized: LocaleString;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof AbstractReasonForModification
     */
    version: number;
}
/**
 *
 * @export
 * @interface AbstractReasons
 */
export interface AbstractReasons {
    /**
     *
     * @type {Array<AbstractReason>}
     * @memberof AbstractReasons
     */
    reasons: Array<AbstractReason>;
    /**
     * True if there are more results after the current page
     * @type {boolean}
     * @memberof AbstractReasons
     */
    hasNextPage: boolean;
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof AbstractReasons
     */
    total: number;
}
/**
 *
 * @export
 * @interface AddAllowedValueToTagAction
 */
export interface AddAllowedValueToTagAction extends AbstractModificationAction {
    /**
     * Use value 'AddAllowedValueToTag', because you want to add an allowed value to a tag
     * @type {string}
     * @memberof AddAllowedValueToTagAction
     */
    action: AddAllowedValueToTagAction.ActionEnum;
    /**
     *
     * @type {string}
     * @memberof AddAllowedValueToTagAction
     */
    allowedValue: string;
}

/**
 * @export
 * @namespace AddAllowedValueToTagAction
 */
export namespace AddAllowedValueToTagAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        AddAllowedValueToTag = 'AddAllowedValueToTag'
    }
}
/**
 *
 * @export
 * @interface AddChannelAction
 */
export interface AddChannelAction {
    /**
     *
     * @type {string}
     * @memberof AddChannelAction
     */
    name: AddChannelAction.NameEnum;
    /**
     *
     * @type {EmailNotificationChannelForCreation}
     * @memberof AddChannelAction
     */
    channel: EmailNotificationChannelForCreation;
    /**
     *
     * @type {number}
     * @memberof AddChannelAction
     */
    version: number;
}

/**
 * @export
 * @namespace AddChannelAction
 */
export namespace AddChannelAction {
    /**
     * @export
     * @enum {string}
     */
    export enum NameEnum {
        ADDCHANNEL = 'ADD_CHANNEL'
    }
}
/**
 *
 * @export
 * @interface AddItemReturnToItemReturnJob
 */
export interface AddItemReturnToItemReturnJob {
    /**
     *
     * @type {ItemReturnForCreation}
     * @memberof AddItemReturnToItemReturnJob
     */
    itemReturnForCreation: ItemReturnForCreation;
    /**
     * Version of the itemReturnJob the itemReturn gets added to
     * @type {number}
     * @memberof AddItemReturnToItemReturnJob
     */
    itemReturnJobVersion: number;
}
/**
 *
 * @export
 * @interface AddLineItemToPackingTargetContainerAction
 */
export interface AddLineItemToPackingTargetContainerAction extends AbstractModificationAction {
    /**
     * Use AddLineItemToPackingTargetContainer to add a line item to an existing packing container
     * @type {string}
     * @memberof AddLineItemToPackingTargetContainerAction
     */
    action: AddLineItemToPackingTargetContainerAction.ActionEnum;
    /**
     *
     * @type {PackingTargetContainerLineItemForCreation}
     * @memberof AddLineItemToPackingTargetContainerAction
     */
    lineItem: PackingTargetContainerLineItemForCreation;
}

/**
 * @export
 * @namespace AddLineItemToPackingTargetContainerAction
 */
export namespace AddLineItemToPackingTargetContainerAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        AddLineItemToPackingTargetContainer = 'AddLineItemToPackingTargetContainer'
    }
}
/**
 *
 * @export
 * @interface AddRefuseReasonParameter
 */
export interface AddRefuseReasonParameter {
    /**
     *
     * @type {number}
     * @memberof AddRefuseReasonParameter
     */
    handoverConfigurationVersion: number;
    /**
     *
     * @type {AvailableRefuseReasonForCreation}
     * @memberof AddRefuseReasonParameter
     */
    availableRefuseReasonForCreation: AvailableRefuseReasonForCreation;
}
/**
 *
 * @export
 * @interface AddRemoteConfigurationScopeParameter
 */
export interface AddRemoteConfigurationScopeParameter {
    /**
     *
     * @type {RemoteConfigurationScopeForCreation}
     * @memberof AddRemoteConfigurationScopeParameter
     */
    scope: RemoteConfigurationScopeForCreation;
    /**
     *
     * @type {number}
     * @memberof AddRemoteConfigurationScopeParameter
     */
    remoteConfigVersion: number;
}
/**
 *
 * @export
 * @interface AddTagsToProcessAction
 */
export interface AddTagsToProcessAction extends AbstractModificationAction {
    /**
     * Use value 'AddTagsToProcess', because you want to modify a process
     * @type {string}
     * @memberof AddTagsToProcessAction
     */
    action: AddTagsToProcessAction.ActionEnum;
    /**
     *
     * @type {Array<TagReference>}
     * @memberof AddTagsToProcessAction
     */
    tags?: Array<TagReference>;
}

/**
 * @export
 * @namespace AddTagsToProcessAction
 */
export namespace AddTagsToProcessAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        AddTagsToProcess = 'AddTagsToProcess'
    }
}
/**
 *
 * @export
 * @interface AdditionalInformation
 */
export interface AdditionalInformation extends AdditionalInformationForCreation {
    /**
     *
     * @type {string}
     * @memberof AdditionalInformation
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof AdditionalInformation
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof AdditionalInformation
     */
    description?: string;
}
/**
 *
 * @export
 * @interface AdditionalInformationForCreation
 */
export interface AdditionalInformationForCreation {
    /**
     *
     * @type {LocaleString}
     * @memberof AdditionalInformationForCreation
     */
    nameLocalized: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof AdditionalInformationForCreation
     */
    descriptionLocalized?: LocaleString;
    /**
     *
     * @type {AdditionalInformationValueType}
     * @memberof AdditionalInformationForCreation
     */
    valueType: AdditionalInformationValueType;
    /**
     *
     * @type {boolean}
     * @memberof AdditionalInformationForCreation
     */
    isMandatory?: boolean;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum AdditionalInformationValueType {
    STRING = 'STRING',
    BOOLEAN = 'BOOLEAN',
    NUMBER = 'NUMBER',
    NOVALUE = 'NOVALUE',
    INPUTMULTILINESTRING = 'INPUT_MULTILINE_STRING'
}
/**
 *
 * @export
 * @interface Address
 */
export interface Address {
    /**
     *
     * @type {string}
     * @memberof Address
     */
    additionalAddressInfo?: string;
    /**
     *
     * @type {string}
     * @memberof Address
     */
    city: string;
    /**
     * A two-digit country code as per ISO 3166-1 alpha-2
     * @type {string}
     * @memberof Address
     */
    country: string;
    /**
     *
     * @type {string}
     * @memberof Address
     */
    province?: string;
    /**
     * Attributes that can be added to the address. These attributes cannot be used within fulfillment processes, but it could be useful to have the informations carried here.
     * @type {any}
     * @memberof Address
     */
    customAttributes?: any;
    /**
     *
     * @type {string}
     * @memberof Address
     */
    houseNumber?: string;
    /**
     *
     * @type {Array<AddressPhoneNumbers>}
     * @memberof Address
     */
    phoneNumbers?: Array<AddressPhoneNumbers>;
    /**
     *
     * @type {string}
     * @memberof Address
     */
    postalCode: string;
    /**
     *
     * @type {string}
     * @memberof Address
     */
    street: string;
}
/**
 *
 * @export
 * @interface AddressPhoneNumbers
 */
export interface AddressPhoneNumbers {
    /**
     * Attributes that can be added to the phonenumber. These attributes cannot be used within fulfillment processes, but it could be useful to have the informations carried here.
     * @type {any}
     * @memberof AddressPhoneNumbers
     */
    customAttributes?: any;
    /**
     * Can be used to give a description for the number, like \"private\", \"business number\", etc.
     * @type {string}
     * @memberof AddressPhoneNumbers
     */
    label?: string;
    /**
     *
     * @type {string}
     * @memberof AddressPhoneNumbers
     */
    type: AddressPhoneNumbers.TypeEnum;
    /**
     * The number itself. We do not enforce any format (yet).
     * @type {string}
     * @memberof AddressPhoneNumbers
     */
    value: string;
}

/**
 * @export
 * @namespace AddressPhoneNumbers
 */
export namespace AddressPhoneNumbers {
    /**
     * @export
     * @enum {string}
     */
    export enum TypeEnum {
        MOBILE = 'MOBILE',
        PHONE = 'PHONE'
    }
}
/**
 * Type of this address, used e.g. for communication with the carrier. Use POSTAL_ADDRESS for the address where the order should be shipped to, INVOICE_ADDRESS for the address where the invoice is sent to and PARCEL_LOCKER if a parcel locker is used for this order.
 * @export
 * @enum {string}
 */
export enum AddressType {
    POSTALADDRESS = 'POSTAL_ADDRESS',
    PARCELLOCKER = 'PARCEL_LOCKER',
    INVOICEADDRESS = 'INVOICE_ADDRESS'
}
/**
 *
 * @export
 * @interface AlternativeReturnAddressConfiguration
 */
export interface AlternativeReturnAddressConfiguration {
    /**
     *
     * @type {Array<AlternativeReturnAddressPerTag>}
     * @memberof AlternativeReturnAddressConfiguration
     */
    alternativeReturnAddressPerTag: Array<AlternativeReturnAddressPerTag>;
}
/**
 *
 * @export
 * @interface AlternativeReturnAddressPerTag
 */
export interface AlternativeReturnAddressPerTag {
    /**
     * needs to be an existing tag id
     * @type {string}
     * @memberof AlternativeReturnAddressPerTag
     */
    tagRef: string;
    /**
     *
     * @type {Array<string>}
     * @memberof AlternativeReturnAddressPerTag
     */
    matchingValues: Array<string>;
    /**
     *
     * @type {FacilityAddress}
     * @memberof AlternativeReturnAddressPerTag
     */
    alternativeReturnAddress: FacilityAddress;
}
/**
 *
 * @export
 * @interface AngelCarrierCredentials
 */
export interface AngelCarrierCredentials extends AbstractCarrierCredentials {
    /**
     * Angel username
     * @type {string}
     * @memberof AngelCarrierCredentials
     */
    username: string;
    /**
     * angel password
     * @type {string}
     * @memberof AngelCarrierCredentials
     */
    password: string;
    /**
     * X-Auth-Token for callbacks from Angel
     * @type {string}
     * @memberof AngelCarrierCredentials
     */
    authToken?: string;
}
/**
 *
 * @export
 * @interface AngelFacilityCarrierConfiguration
 */
export interface AngelFacilityCarrierConfiguration extends AbstractFacilityCarrierConfiguration {
    /**
     * The id of the Pickup Location
     * @type {string}
     * @memberof AngelFacilityCarrierConfiguration
     */
    pickupLocationId?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum AnnounceItemReturnActionEnum {
    AnnounceItemReturn = 'AnnounceItemReturn'
}
/**
 *
 * @export
 * @interface AnnounceItemReturnActionParameter
 */
export interface AnnounceItemReturnActionParameter {
    /**
     *
     * @type {AnnounceItemReturnActionEnum}
     * @memberof AnnounceItemReturnActionParameter
     */
    name: AnnounceItemReturnActionEnum;
    /**
     * Version of the entity to be changed
     * @type {number}
     * @memberof AnnounceItemReturnActionParameter
     */
    itemReturnJobVersion: number;
}
/**
 *
 * @export
 */
export type ApiError = Array<ErrorInner>
/**
 *
 * @export
 * @interface ArticleAttributeItem
 */
export interface ArticleAttributeItem {
    /**
     * This category is used by OCFF to customize implemented processes. Categorized attributes are used by various processes and tools throughout our platform. For a complete list of possible categories and the correct use of those please refer to the documentation. Default value: miscellaneous
     * @type {string}
     * @memberof ArticleAttributeItem
     */
    category?: ArticleAttributeItem.CategoryEnum;
    /**
     * Providing the key %%subtitle%% (see example) here will cause the value to appear for example in the App directly under the title. With all other attributes also the key will be displayed in the  clients.
     * @type {string}
     * @memberof ArticleAttributeItem
     */
    key: string;
    /**
     * The translations for the key of the attribute. This can be only filled with a descriptive category. Excluding for %%subtitle%%
     * @type {LocaleString}
     * @memberof ArticleAttributeItem
     */
    keyLocalized?: LocaleString;
    /**
     * This value gives the priority in the respective attribute category. The lower the value the higher is the priority, e.g. priority 1 is higher than priority 10. Attributes that have the highest priority might be selected for display in different articles of OCFF. Default Value is 1001. For details please contact the product owners.
     * @type {number}
     * @memberof ArticleAttributeItem
     */
    priority?: number;
    /**
     *
     * @type {string}
     * @memberof ArticleAttributeItem
     */
    value: string;
    /**
     * The translations for the key of the attribute. This can be only filled with a descriptive category
     * @type {LocaleString}
     * @memberof ArticleAttributeItem
     */
    valueLocalized?: LocaleString;
}

/**
 * @export
 * @namespace ArticleAttributeItem
 */
export namespace ArticleAttributeItem {
    /**
     * @export
     * @enum {string}
     */
    export enum CategoryEnum {
        Descriptive = 'descriptive',
        Miscellaneous = 'miscellaneous',
        PickingSequence = 'pickingSequence'
    }
}
/**
 *
 * @export
 * @interface ArticleAvailability
 */
export interface ArticleAvailability {
    /**
     *
     * @type {string}
     * @memberof ArticleAvailability
     */
    tenantArticleId: string;
    /**
     *
     * @type {number}
     * @memberof ArticleAvailability
     */
    availableStock: number;
    /**
     *
     * @type {string}
     * @memberof ArticleAvailability
     */
    outOfStockBehaviour?: ArticleAvailability.OutOfStockBehaviourEnum;
    /**
     *
     * @type {AvailabilityTimeframe}
     * @memberof ArticleAvailability
     */
    availabilityTimeframe?: AvailabilityTimeframe;
}

/**
 * @export
 * @namespace ArticleAvailability
 */
export namespace ArticleAvailability {
    /**
     * @export
     * @enum {string}
     */
    export enum OutOfStockBehaviourEnum {
        BACKORDER = 'BACKORDER'
    }
}
/**
 *
 * @export
 * @interface ArticleItem
 */
export interface ArticleItem {
    /**
     *
     * @type {string}
     * @memberof ArticleItem
     */
    tenantArticleRef: string;
    /**
     *
     * @type {number}
     * @memberof ArticleItem
     */
    quantity: number;
}
/**
 *
 * @export
 * @interface ArticlePrice
 */
export interface ArticlePrice {
    /**
     * Price value for a given currency per unit
     * @type {number}
     * @memberof ArticlePrice
     */
    pricePerUnit: number;
    /**
     * The currency of the price as an ISO 4217 code.
     * @type {CurrencyCode}
     * @memberof ArticlePrice
     */
    currency: CurrencyCode;
}
/**
 *
 * @export
 * @interface ArticleStockForecast
 */
export interface ArticleStockForecast {
    /**
     *
     * @type {string}
     * @memberof ArticleStockForecast
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof ArticleStockForecast
     */
    tenantArticleId: string;
    /**
     *
     * @type {Date}
     * @memberof ArticleStockForecast
     */
    created: Date;
    /**
     *
     * @type {Date}
     * @memberof ArticleStockForecast
     */
    lastModified: Date;
    /**
     *
     * @type {Date}
     * @memberof ArticleStockForecast
     */
    sourceDate: Date;
    /**
     *
     * @type {Date}
     * @memberof ArticleStockForecast
     */
    targetDate: Date;
    /**
     *
     * @type {Date}
     * @memberof ArticleStockForecast
     */
    loadTime: Date;
    /**
     *
     * @type {number}
     * @memberof ArticleStockForecast
     */
    cumulated: number;
    /**
     *
     * @type {Array<number>}
     * @memberof ArticleStockForecast
     */
    cumulatedLowerBounds: Array<number>;
    /**
     *
     * @type {Array<number>}
     * @memberof ArticleStockForecast
     */
    cumulatedUpperBounds: Array<number>;
    /**
     *
     * @type {Array<number>}
     * @memberof ArticleStockForecast
     */
    lowerBounds: Array<number>;
    /**
     *
     * @type {Array<number>}
     * @memberof ArticleStockForecast
     */
    upperBounds: Array<number>;
    /**
     *
     * @type {string}
     * @memberof ArticleStockForecast
     */
    period: ArticleStockForecast.PeriodEnum;
    /**
     *
     * @type {number}
     * @memberof ArticleStockForecast
     */
    point: number;
}

/**
 * @export
 * @namespace ArticleStockForecast
 */
export namespace ArticleStockForecast {
    /**
     * @export
     * @enum {string}
     */
    export enum PeriodEnum {
        DAILY = 'DAILY'
    }
}
/**
 *
 * @export
 * @interface ArtifactMetadataItem
 */
export interface ArtifactMetadataItem {
    /**
     * Date of the build of the artifact
     * @type {Date}
     * @memberof ArtifactMetadataItem
     */
    buildDate: Date;
    /**
     *
     * @type {ArtifactMetadataItemDownload}
     * @memberof ArtifactMetadataItem
     */
    download: ArtifactMetadataItemDownload;
    /**
     * Version Code of the artifact
     * @type {number}
     * @memberof ArtifactMetadataItem
     */
    versionCode: number;
    /**
     * Version Name of the artifact
     * @type {string}
     * @memberof ArtifactMetadataItem
     */
    versionName: string;
}
/**
 *
 * @export
 * @interface ArtifactMetadataItemDownload
 */
export interface ArtifactMetadataItemDownload {
    /**
     * Expiration date of the download link
     * @type {Date}
     * @memberof ArtifactMetadataItemDownload
     */
    expiration?: Date;
    /**
     * URL for the download of the artifact
     * @type {string}
     * @memberof ArtifactMetadataItemDownload
     */
    url?: string;
}
/**
 *
 * @export
 * @interface ArtifactMetadataItems
 */
export interface ArtifactMetadataItems {
    /**
     *
     * @type {Array<ArtifactMetadataItem>}
     * @memberof ArtifactMetadataItems
     */
    artifacts: Array<ArtifactMetadataItem>;
    /**
     * Platform name for which the artifact list is generated
     * @type {string}
     * @memberof ArtifactMetadataItems
     */
    platform: string;
}
/**
 *
 * @export
 * @interface AssignFacilityToProcessAction
 */
export interface AssignFacilityToProcessAction extends AbstractModificationAction {
    /**
     * Use value to manually assign a facility to a process
     * @type {string}
     * @memberof AssignFacilityToProcessAction
     */
    action: AssignFacilityToProcessAction.ActionEnum;
    /**
     *
     * @type {string}
     * @memberof AssignFacilityToProcessAction
     */
    facilityRef: string;
    /**
     *
     * @type {string}
     * @memberof AssignFacilityToProcessAction
     */
    rerouteDescriptionId?: string;
}

/**
 * @export
 * @namespace AssignFacilityToProcessAction
 */
export namespace AssignFacilityToProcessAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        AssignFacilityToProcess = 'AssignFacilityToProcess'
    }
}
/**
 *
 * @export
 * @interface AssignedGroup
 */
export interface AssignedGroup {
    /**
     *
     * @type {string}
     * @memberof AssignedGroup
     */
    group: string;
    /**
     *
     * @type {Array<string>}
     * @memberof AssignedGroup
     */
    facilityRefs: Array<string>;
}
/**
 *
 * @export
 * @interface AssignmentItem
 */
export interface AssignmentItem {
    /**
     *
     * @type {string}
     * @memberof AssignmentItem
     */
    tenantArticleId: string;
    /**
     *
     * @type {string}
     * @memberof AssignmentItem
     */
    articleTitle?: string;
    /**
     *
     * @type {number}
     * @memberof AssignmentItem
     */
    quantity: number;
}
/**
 *
 * @export
 * @interface AuthenticationProvider
 */
export interface AuthenticationProvider {
    /**
     *
     * @type {AuthenticationProviderType}
     * @memberof AuthenticationProvider
     */
    type: AuthenticationProviderType;
    /**
     *
     * @type {string}
     * @memberof AuthenticationProvider
     */
    id?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum AuthenticationProviderType {
    EMAILPASSWORD = 'EMAIL_PASSWORD',
    OIDC = 'OIDC'
}
/**
 *
 * @export
 * @interface AvailabilityAllocation
 */
export interface AvailabilityAllocation {
    /**
     *
     * @type {string}
     * @memberof AvailabilityAllocation
     */
    facilityRef: string;
    /**
     *
     * @type {number}
     * @memberof AvailabilityAllocation
     */
    initialStockQuantity: number;
    /**
     *
     * @type {string}
     * @memberof AvailabilityAllocation
     */
    groupRef: string;
    /**
     *
     * @type {string}
     * @memberof AvailabilityAllocation
     */
    channelRef: string;
    /**
     *
     * @type {string}
     * @memberof AvailabilityAllocation
     */
    id: string;
    /**
     *
     * @type {number}
     * @memberof AvailabilityAllocation
     */
    version: number;
    /**
     *
     * @type {Date}
     * @memberof AvailabilityAllocation
     */
    created: Date;
    /**
     *
     * @type {Date}
     * @memberof AvailabilityAllocation
     */
    lastModified: Date;
}
/**
 *
 * @export
 * @interface AvailabilityAllocationForCreationUnderGroup
 */
export interface AvailabilityAllocationForCreationUnderGroup {
    /**
     *
     * @type {string}
     * @memberof AvailabilityAllocationForCreationUnderGroup
     */
    facilityRef: string;
    /**
     *
     * @type {number}
     * @memberof AvailabilityAllocationForCreationUnderGroup
     */
    initialStockQuantity: number;
}
/**
 *
 * @export
 * @interface AvailabilityAllocationForReplacement
 */
export interface AvailabilityAllocationForReplacement {
    /**
     *
     * @type {number}
     * @memberof AvailabilityAllocationForReplacement
     */
    version: number;
    /**
     *
     * @type {number}
     * @memberof AvailabilityAllocationForReplacement
     */
    initialStockQuantity: number;
    /**
     *
     * @type {string}
     * @memberof AvailabilityAllocationForReplacement
     */
    groupId?: string;
}
/**
 *
 * @export
 * @interface AvailabilityAllocationGroup
 */
export interface AvailabilityAllocationGroup {
    /**
     *
     * @type {Array<string>}
     * @memberof AvailabilityAllocationGroup
     */
    tenantArticleIds: Array<string>;
    /**
     *
     * @type {boolean}
     * @memberof AvailabilityAllocationGroup
     */
    active: boolean;
    /**
     *
     * @type {AvailabilityAllocationPeriod}
     * @memberof AvailabilityAllocationGroup
     */
    activePeriod?: AvailabilityAllocationPeriod;
    /**
     *
     * @type {string}
     * @memberof AvailabilityAllocationGroup
     */
    channelRef: string;
    /**
     *
     * @type {string}
     * @memberof AvailabilityAllocationGroup
     */
    id: string;
    /**
     *
     * @type {number}
     * @memberof AvailabilityAllocationGroup
     */
    version: number;
    /**
     *
     * @type {Date}
     * @memberof AvailabilityAllocationGroup
     */
    created: Date;
    /**
     *
     * @type {Date}
     * @memberof AvailabilityAllocationGroup
     */
    lastModified: Date;
}
/**
 *
 * @export
 * @interface AvailabilityAllocationGroupForCreationUnderChannel
 */
export interface AvailabilityAllocationGroupForCreationUnderChannel {
    /**
     *
     * @type {Array<string>}
     * @memberof AvailabilityAllocationGroupForCreationUnderChannel
     */
    tenantArticleIds: Array<string>;
    /**
     *
     * @type {boolean}
     * @memberof AvailabilityAllocationGroupForCreationUnderChannel
     */
    active: boolean;
    /**
     *
     * @type {AvailabilityAllocationPeriod}
     * @memberof AvailabilityAllocationGroupForCreationUnderChannel
     */
    activePeriod?: AvailabilityAllocationPeriod;
}
/**
 *
 * @export
 * @interface AvailabilityAllocationGroupForReplacement
 */
export interface AvailabilityAllocationGroupForReplacement {
    /**
     *
     * @type {number}
     * @memberof AvailabilityAllocationGroupForReplacement
     */
    version: number;
    /**
     *
     * @type {boolean}
     * @memberof AvailabilityAllocationGroupForReplacement
     */
    active: boolean;
    /**
     *
     * @type {AvailabilityAllocationPeriod}
     * @memberof AvailabilityAllocationGroupForReplacement
     */
    activePeriod?: AvailabilityAllocationPeriod;
}
/**
 *
 * @export
 * @interface AvailabilityAllocationGroupPaginatedResult
 */
export interface AvailabilityAllocationGroupPaginatedResult {
    /**
     *
     * @type {number}
     * @memberof AvailabilityAllocationGroupPaginatedResult
     */
    total: number;
    /**
     *
     * @type {Array<AvailabilityAllocationGroup>}
     * @memberof AvailabilityAllocationGroupPaginatedResult
     */
    groups: Array<AvailabilityAllocationGroup>;
}
/**
 *
 * @export
 * @interface AvailabilityAllocationPaginatedResult
 */
export interface AvailabilityAllocationPaginatedResult {
    /**
     *
     * @type {number}
     * @memberof AvailabilityAllocationPaginatedResult
     */
    total: number;
    /**
     *
     * @type {Array<AvailabilityChannel>}
     * @memberof AvailabilityAllocationPaginatedResult
     */
    allocations: Array<AvailabilityChannel>;
}
/**
 *
 * @export
 * @interface AvailabilityAllocationPeriod
 */
export interface AvailabilityAllocationPeriod {
    /**
     *
     * @type {Date}
     * @memberof AvailabilityAllocationPeriod
     */
    start?: Date;
    /**
     *
     * @type {Date}
     * @memberof AvailabilityAllocationPeriod
     */
    end?: Date;
}
/**
 *
 * @export
 * @interface AvailabilityChannel
 */
export interface AvailabilityChannel {
    /**
     *
     * @type {string}
     * @memberof AvailabilityChannel
     */
    name: string;
    /**
     *
     * @type {string}
     * @memberof AvailabilityChannel
     */
    strategy: AvailabilityChannel.StrategyEnum;
    /**
     *
     * @type {number}
     * @memberof AvailabilityChannel
     */
    version: number;
    /**
     *
     * @type {string}
     * @memberof AvailabilityChannel
     */
    id: string;
    /**
     *
     * @type {Date}
     * @memberof AvailabilityChannel
     */
    created: Date;
    /**
     *
     * @type {Date}
     * @memberof AvailabilityChannel
     */
    lastModified: Date;
}

/**
 * @export
 * @namespace AvailabilityChannel
 */
export namespace AvailabilityChannel {
    /**
     * @export
     * @enum {string}
     */
    export enum StrategyEnum {
        REGULAR = 'REGULAR',
        IRONRESERVE = 'IRON_RESERVE',
        RESTRICT = 'RESTRICT'
    }
}
/**
 *
 * @export
 * @interface AvailabilityChannelForCreation
 */
export interface AvailabilityChannelForCreation {
    /**
     *
     * @type {string}
     * @memberof AvailabilityChannelForCreation
     */
    name: string;
    /**
     *
     * @type {string}
     * @memberof AvailabilityChannelForCreation
     */
    strategy: AvailabilityChannelForCreation.StrategyEnum;
}

/**
 * @export
 * @namespace AvailabilityChannelForCreation
 */
export namespace AvailabilityChannelForCreation {
    /**
     * @export
     * @enum {string}
     */
    export enum StrategyEnum {
        REGULAR = 'REGULAR',
        IRONRESERVE = 'IRON_RESERVE',
        RESTRICT = 'RESTRICT'
    }
}
/**
 *
 * @export
 * @interface AvailabilityChannelForReplacement
 */
export interface AvailabilityChannelForReplacement {
    /**
     *
     * @type {string}
     * @memberof AvailabilityChannelForReplacement
     */
    name: string;
    /**
     *
     * @type {string}
     * @memberof AvailabilityChannelForReplacement
     */
    strategy: AvailabilityChannelForReplacement.StrategyEnum;
    /**
     *
     * @type {number}
     * @memberof AvailabilityChannelForReplacement
     */
    version: number;
}

/**
 * @export
 * @namespace AvailabilityChannelForReplacement
 */
export namespace AvailabilityChannelForReplacement {
    /**
     * @export
     * @enum {string}
     */
    export enum StrategyEnum {
        REGULAR = 'REGULAR',
        IRONRESERVE = 'IRON_RESERVE',
        RESTRICT = 'RESTRICT'
    }
}
/**
 *
 * @export
 * @interface AvailabilityChannelPaginatedResult
 */
export interface AvailabilityChannelPaginatedResult {
    /**
     *
     * @type {number}
     * @memberof AvailabilityChannelPaginatedResult
     */
    total: number;
    /**
     *
     * @type {Array<AvailabilityChannel>}
     * @memberof AvailabilityChannelPaginatedResult
     */
    channels: Array<AvailabilityChannel>;
}
/**
 *
 * @export
 * @interface AvailabilityDuringRerouteStock
 */
export interface AvailabilityDuringRerouteStock {
    /**
     *
     * @type {RerouteReason}
     * @memberof AvailabilityDuringRerouteStock
     */
    rerouteReason?: RerouteReason;
    /**
     *
     * @type {number}
     * @memberof AvailabilityDuringRerouteStock
     */
    pickedQuantity?: number;
}
/**
 *
 * @export
 * @interface AvailabilityDuringRouting
 */
export interface AvailabilityDuringRouting {
    /**
     *
     * @type {string}
     * @memberof AvailabilityDuringRouting
     */
    tenantArticleId: string;
    /**
     *
     * @type {string}
     * @memberof AvailabilityDuringRouting
     */
    articleTitle?: string;
    /**
     *
     * @type {number}
     * @memberof AvailabilityDuringRouting
     */
    requestedQuantity: number;
    /**
     *
     * @type {AvailabilityDuringRoutingStock}
     * @memberof AvailabilityDuringRouting
     */
    stockInformation: AvailabilityDuringRoutingStock;
    /**
     *
     * @type {AvailabilityDuringRerouteStock}
     * @memberof AvailabilityDuringRouting
     */
    rerouteInformation?: AvailabilityDuringRerouteStock;
    /**
     *
     * @type {AvailabilityDuringRoutingStock}
     * @memberof AvailabilityDuringRouting
     */
    stockInformationPostRerouteAdjustment?: AvailabilityDuringRoutingStock;
    /**
     *
     * @type {Array<BundleInformation>}
     * @memberof AvailabilityDuringRouting
     */
    bundleInformation?: Array<BundleInformation>;
}
/**
 *
 * @export
 * @interface AvailabilityDuringRoutingStock
 */
export interface AvailabilityDuringRoutingStock {
    /**
     *
     * @type {number}
     * @memberof AvailabilityDuringRoutingStock
     */
    stock: number;
    /**
     *
     * @type {number}
     * @memberof AvailabilityDuringRoutingStock
     */
    stockConsideringOfflineStock: number;
    /**
     *
     * @type {number}
     * @memberof AvailabilityDuringRoutingStock
     */
    reserved: number;
    /**
     *
     * @type {number}
     * @memberof AvailabilityDuringRoutingStock
     */
    available: number;
}
/**
 *
 * @export
 * @interface AvailabilityTimeframe
 */
export interface AvailabilityTimeframe {
    /**
     *
     * @type {Date}
     * @memberof AvailabilityTimeframe
     */
    start?: Date;
}
/**
 *
 * @export
 * @interface AvailableItemCondition
 */
export interface AvailableItemCondition {
    /**
     *
     * @type {LocaleString}
     * @memberof AvailableItemCondition
     */
    conditionLocalized?: LocaleString;
}
/**
 *
 * @export
 * @interface AvailableRefuseReasonForCreation
 */
export interface AvailableRefuseReasonForCreation {
    /**
     *
     * @type {boolean}
     * @memberof AvailableRefuseReasonForCreation
     */
    active: boolean;
    /**
     *
     * @type {LocaleString}
     * @memberof AvailableRefuseReasonForCreation
     */
    refusedReasonLocalized: LocaleString;
}
/**
 *
 * @export
 * @interface AvailableRefuseReasonForUpdate
 */
export interface AvailableRefuseReasonForUpdate {
    /**
     *
     * @type {boolean}
     * @memberof AvailableRefuseReasonForUpdate
     */
    active: boolean;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof AvailableRefuseReasonForUpdate
     */
    version: number;
    /**
     *
     * @type {LocaleString}
     * @memberof AvailableRefuseReasonForUpdate
     */
    refusedReasonLocalized: LocaleString;
}
/**
 *
 * @export
 * @interface AvailableRefusedReason
 */
export interface AvailableRefusedReason {
    /**
     *
     * @type {boolean}
     * @memberof AvailableRefusedReason
     */
    active: boolean;
    /**
     *
     * @type {LocaleString}
     * @memberof AvailableRefusedReason
     */
    refusedReasonLocalized: LocaleString;
    /**
     * translated refusedReason selected from refusedReasonLocalized
     * @type {string}
     * @memberof AvailableRefusedReason
     */
    refusedReason?: string;
}
/**
 *
 * @export
 * @interface AvailableReturnReason
 */
export interface AvailableReturnReason {
    /**
     *
     * @type {LocaleString}
     * @memberof AvailableReturnReason
     */
    reasonLocalized: LocaleString;
}
/**
 * The base for the calculation of the available until date. If it can't be resolved into a valid date (i.e. missing expiry value), an undefined \"availableUntil\" is the result
 * @export
 * @enum {string}
 */
export enum AvailableUntilCalculationBase {
    EXPIRY = 'EXPIRY',
    CREATION = 'CREATION'
}
/**
 *
 * @export
 * @interface AvailableUntilDefinition
 */
export interface AvailableUntilDefinition {
    /**
     *
     * @type {AvailableUntilCalculationBase}
     * @memberof AvailableUntilDefinition
     */
    calculationBase: AvailableUntilCalculationBase;
    /**
     * Moves the calculated date by the given period, defined in ISO-8601 duration notation. Use negative values to move the date backwards. Example: \"-P30D\" places the \"availableUntil\" value 30 days before the calculated date.
     * @type {string}
     * @memberof AvailableUntilDefinition
     */
    modifier?: string;
}
/**
 * Can this tenant use the backoffice for picking?
 * @export
 * @interface BackofficePickingConfiguration
 */
export interface BackofficePickingConfiguration {
    /**
     *
     * @type {boolean}
     * @memberof BackofficePickingConfiguration
     */
    active: boolean;
}
/**
 *
 * @export
 * @interface Backordered
 */
export interface Backordered {
    /**
     *
     * @type {Array<DeliveryPromiseLineItem>}
     * @memberof Backordered
     */
    lineItems: Array<DeliveryPromiseLineItem>;
}
/**
 *
 * @export
 * @interface BaseDecisionDetail
 */
export interface BaseDecisionDetail {
    /**
     *
     * @type {DecisionType}
     * @memberof BaseDecisionDetail
     */
    decisionType: DecisionType;
}
/**
 *
 * @export
 * @interface BaseValidation
 */
export interface BaseValidation {
    /**
     *
     * @type {string}
     * @memberof BaseValidation
     */
    validationType: BaseValidation.ValidationTypeEnum;
}

/**
 * @export
 * @namespace BaseValidation
 */
export namespace BaseValidation {
    /**
     * @export
     * @enum {string}
     */
    export enum ValidationTypeEnum {
        STRING = 'STRING',
        FLOAT = 'FLOAT',
        INTEGER = 'INTEGER'
    }
}
/**
 *
 * @export
 * @interface BasicDeliveryPromiseShipment
 */
export interface BasicDeliveryPromiseShipment {
    /**
     *
     * @type {Array<DeliveryPromiseLineItem>}
     * @memberof BasicDeliveryPromiseShipment
     */
    lineItems: Array<DeliveryPromiseLineItem>;
    /**
     *
     * @type {BasicDeliveryPromiseShipmentFacility}
     * @memberof BasicDeliveryPromiseShipment
     */
    facility: BasicDeliveryPromiseShipmentFacility;
}
/**
 *
 * @export
 * @interface BasicDeliveryPromiseShipmentFacility
 */
export interface BasicDeliveryPromiseShipmentFacility {
    /**
     *
     * @type {string}
     * @memberof BasicDeliveryPromiseShipmentFacility
     */
    facilityRef: string;
    /**
     *
     * @type {string}
     * @memberof BasicDeliveryPromiseShipmentFacility
     */
    facilityName: string;
}
/**
 *
 * @export
 * @interface BasketItem
 */
export interface BasketItem {
    /**
     *
     * @type {string}
     * @memberof BasketItem
     */
    tenantArticleId: string;
    /**
     *
     * @type {number}
     * @memberof BasketItem
     */
    quantity: number;
}
/**
 *
 * @export
 * @interface Brand
 */
export interface Brand extends VersionedResource {
    /**
     * The name of the brand for this listing
     * @type {string}
     * @memberof Brand
     */
    name: string;
    /**
     *
     * @type {string}
     * @memberof Brand
     */
    id: string;
}
/**
 *
 * @export
 * @interface BrandForCreation
 */
export interface BrandForCreation {
    /**
     * The name of the brand for this listing
     * @type {string}
     * @memberof BrandForCreation
     */
    name: string;
}
/**
 *
 * @export
 * @interface Branding
 */
export interface Branding {
    /**
     * The logo URL for the tenant
     * @type {string}
     * @memberof Branding
     */
    logoUrl: string;
    /**
     * The hexcode representation of the desired primary color.
     * @type {string}
     * @memberof Branding
     */
    primaryColor: string;
}
/**
 *
 * @export
 * @interface BringCarrierConfiguration
 */
export interface BringCarrierConfiguration extends CarrierConfiguration {
    /**
     * Bring Carrier customer number.
     * @type {string}
     * @memberof BringCarrierConfiguration
     */
    customerId: string;
    /**
     * Bring Carrier support phone number.
     * @type {string}
     * @memberof BringCarrierConfiguration
     */
    supportPhoneNumber: string;
    /**
     * Product that will be used for the shipment booking
     * @type {string}
     * @memberof BringCarrierConfiguration
     */
    shipmentProduct?: string;
    /**
     * Product that will be used for return
     * @type {string}
     * @memberof BringCarrierConfiguration
     */
    returnProduct?: string;
    /**
     *
     * @type {string}
     * @memberof BringCarrierConfiguration
     */
    trackAndTraceUrl?: string;
    /**
     *
     * @type {string}
     * @memberof BringCarrierConfiguration
     */
    webhookFftHost?: string;
}
/**
 *
 * @export
 * @interface BringCarrierCredentials
 */
export interface BringCarrierCredentials extends AbstractCarrierCredentials {
    /**
     * Internal API Uid to communicate with the CEP Api
     * @type {string}
     * @memberof BringCarrierCredentials
     */
    apiUid: string;
    /**
     * Internal API Key to communicate with the CEP Api
     * @type {string}
     * @memberof BringCarrierCredentials
     */
    apiKey: string;
    /**
     * Url of the requesting client, can be a static value
     * @type {string}
     * @memberof BringCarrierCredentials
     */
    clientUrl: string;
    /**
     * Identifier for Track&Trace Webhook
     * @type {string}
     * @memberof BringCarrierCredentials
     */
    authToken?: string;
}
/**
 *
 * @export
 * @interface BringFacilityCarrierConfiguration
 */
export interface BringFacilityCarrierConfiguration extends AbstractFacilityCarrierConfiguration {
    /**
     *
     * @type {string}
     * @memberof BringFacilityCarrierConfiguration
     */
    trackAndTraceUrl?: string;
    /**
     *
     * @type {string}
     * @memberof BringFacilityCarrierConfiguration
     */
    webhookFftHost?: string;
}
/**
 *
 * @export
 * @interface BulkOperationError
 */
export interface BulkOperationError {
    /**
     *
     * @type {string}
     * @memberof BulkOperationError
     */
    type: BulkOperationError.TypeEnum;
    /**
     *
     * @type {string}
     * @memberof BulkOperationError
     */
    message: string;
}

/**
 * @export
 * @namespace BulkOperationError
 */
export namespace BulkOperationError {
    /**
     * @export
     * @enum {string}
     */
    export enum TypeEnum {
        VALIDATION = 'VALIDATION',
        UNKNOWN = 'UNKNOWN'
    }
}
/**
 *
 * @export
 * @enum {string}
 */
export enum BulkOperationResultStatus {
    UPDATED = 'UPDATED',
    CREATED = 'CREATED',
    FAILED = 'FAILED'
}
/**
 *
 * @export
 * @interface BundleInformation
 */
export interface BundleInformation {
    /**
     *
     * @type {string}
     * @memberof BundleInformation
     */
    customServiceNodeId: string;
    /**
     *
     * @type {number}
     * @memberof BundleInformation
     */
    requestedQuantity: number;
}
/**
 *
 * @export
 * @interface ByTrait
 */
export interface ByTrait {
    /**
     *
     * @type {number}
     * @memberof ByTrait
     */
    PICKABLE: number;
    /**
     *
     * @type {number}
     * @memberof ByTrait
     */
    ACCESSIBLE: number;
}
/**
 *
 * @export
 * @interface CallbackHeader
 */
export interface CallbackHeader {
    /**
     * This is the key of the header. e.g.: `Authorization`
     * @type {string}
     * @memberof CallbackHeader
     */
    key: string;
    /**
     * This is the value for the header. e.g.: `Basic dXNlcm5hbWU6cGFzc3dvcmQ=`
     * @type {string}
     * @memberof CallbackHeader
     */
    value: string;
}
/**
 * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />@deprecated Use api/handoverjobs/:id/actions instead
 * @export
 * @interface CancelHandoverjobAction
 */
export interface CancelHandoverjobAction extends AbstractModificationAction {
    /**
     * Use value 'CancelHandoverjob', because you want to cancel a handover job
     * @type {string}
     * @memberof CancelHandoverjobAction
     */
    action: CancelHandoverjobAction.ActionEnum;
    /**
     *
     * @type {HandoverJobCancelReason}
     * @memberof CancelHandoverjobAction
     */
    handoverJobCancelReason: HandoverJobCancelReason;
}

/**
 * @export
 * @namespace CancelHandoverjobAction
 */
export namespace CancelHandoverjobAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        CancelHandoverjob = 'CancelHandoverjob'
    }
}
/**
 * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />@deprecated Use api/pickruns/:id/actions instead
 * @export
 * @interface CancelPickRunAction
 */
export interface CancelPickRunAction extends AbstractModificationAction {
    /**
     * Use value 'CancelPickRun', because you want to cancel a pickrun
     * @type {string}
     * @memberof CancelPickRunAction
     */
    action: CancelPickRunAction.ActionEnum;
}

/**
 * @export
 * @namespace CancelPickRunAction
 */
export namespace CancelPickRunAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        CancelPickRun = 'CancelPickRun'
    }
}
/**
 *
 * @export
 * @interface CancelationReason
 */
export interface CancelationReason extends AbstractReason {
    /**
     *
     * @type {string}
     * @memberof CancelationReason
     */
    action: CancelationReason.ActionEnum;
}

/**
 * @export
 * @namespace CancelationReason
 */
export namespace CancelationReason {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        CANCELATION = 'CANCELATION'
    }
}
/**
 *
 * @export
 * @interface CancelationReasonForCreation
 */
export interface CancelationReasonForCreation extends AbstractReasonForCreation {
}
/**
 *
 * @export
 * @interface CancelationReasonForModification
 */
export interface CancelationReasonForModification extends AbstractReasonForModification {
}
/**
 *
 * @export
 * @interface CancelationReasons
 */
export interface CancelationReasons extends AbstractReasons {
    /**
     *
     * @type {Array<CancelationReason>}
     * @memberof CancelationReasons
     */
    reasons: Array<CancelationReason>;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum CapabilityStatus {
    Enabled = 'enabled',
    Inactive = 'inactive',
    Disabled = 'disabled'
}
/**
 *
 * @export
 * @interface CapacityPlanningTimeframeConfiguration
 */
export interface CapacityPlanningTimeframeConfiguration extends VersionedResource {
    /**
     * The range in days per facility which defines how many days in the future the capacity of the facility can be planned
     * @type {number}
     * @memberof CapacityPlanningTimeframeConfiguration
     */
    days: number;
    /**
     *
     * @type {string}
     * @memberof CapacityPlanningTimeframeConfiguration
     */
    id?: string;
}
/**
 *
 * @export
 * @interface Carrier
 */
export interface Carrier extends CarrierForCreation {
    /**
     * The date this entity was created at the platform. This value is generated by the service.
     * @type {Date}
     * @memberof Carrier
     */
    created?: Date;
    /**
     * The date this entity was modified last. This value is generated by the service.
     * @type {Date}
     * @memberof Carrier
     */
    lastModified?: Date;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof Carrier
     */
    version: number;
    /**
     * The id of the carrier
     * @type {string}
     * @memberof Carrier
     */
    id: string;
    /**
     *
     * @type {CarrierDeliveryType}
     * @memberof Carrier
     */
    deliveryType?: CarrierDeliveryType;
    /**
     *
     * @type {CarrierLifecycle}
     * @memberof Carrier
     */
    lifecycle?: CarrierLifecycle;
    /**
     *
     * @type {Array<ParcelLabelClassification>}
     * @memberof Carrier
     */
    parcelLabelClassifications?: Array<ParcelLabelClassification>;
}
/**
 *
 * @export
 * @interface CarrierConfiguration
 */
export interface CarrierConfiguration extends VersionedResource {
    /**
     *
     * @type {string}
     * @memberof CarrierConfiguration
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof CarrierConfiguration
     */
    carrierRef: string;
    /**
     * When enabled, a return label will be created by creating a shipping label
     * @type {boolean}
     * @memberof CarrierConfiguration
     */
    returnLabel: boolean;
    /**
     * It is an amount of percentage for packaging weight which will be added to the calculated shipping weight
     * @type {number}
     * @memberof CarrierConfiguration
     */
    additionalWeightInPercent?: number;
    /**
     * Indicates if the content of a parcel must be weighed before ordering a label
     * @type {boolean}
     * @memberof CarrierConfiguration
     */
    mustBeWeighed?: boolean;
    /**
     * EmailAddress used to receive track and trace information when no other emailaddress was provided
     * @type {string}
     * @memberof CarrierConfiguration
     */
    fallBackTrackAndTraceEmail?: string;
    /**
     *
     * @type {Array<NonDeliveryDaysPerCountryAndProvince>}
     * @memberof CarrierConfiguration
     */
    nonDeliveryDaysPerCountryAndProvince?: Array<NonDeliveryDaysPerCountryAndProvince>;
    /**
     *
     * @type {Array<CarrierCountryServiceMapping>}
     * @memberof CarrierConfiguration
     */
    countryServiceMappings?: Array<CarrierCountryServiceMapping>;
    /**
     *
     * @type {string}
     * @memberof CarrierConfiguration
     */
    serviceUrl?: string;
}
/**
 *
 * @export
 * @interface CarrierCountryServiceMapping
 */
export interface CarrierCountryServiceMapping {
    /**
     * unique identifier for a countryServiceMapping
     * @type {string}
     * @memberof CarrierCountryServiceMapping
     */
    id: string;
    /**
     *
     * @type {RegionInformation}
     * @memberof CarrierCountryServiceMapping
     */
    source: RegionInformation;
    /**
     * The destination regions this mapping should be applied to.
     * @type {Array<RegionInformation>}
     * @memberof CarrierCountryServiceMapping
     */
    destinations: Array<RegionInformation>;
    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />@deprecated Use source instead.
     * @type {string}
     * @memberof CarrierCountryServiceMapping
     */
    sourceCountry?: string;
    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />@deprecated Use destination instead.
     * @type {Array<CountryCode>}
     * @memberof CarrierCountryServiceMapping
     */
    destinationCountries?: Array<CountryCode>;
    /**
     *
     * @type {Array<MandatoryShippingAttribute>}
     * @memberof CarrierCountryServiceMapping
     */
    mandatoryShippingAttributes?: Array<MandatoryShippingAttribute>;
    /**
     *
     * @type {Array<MandatoryShippingItemAttribute>}
     * @memberof CarrierCountryServiceMapping
     */
    mandatoryShippingItemAttributes?: Array<MandatoryShippingItemAttribute>;
    /**
     *
     * @type {string}
     * @memberof CarrierCountryServiceMapping
     */
    product?: string;
    /**
     *
     * @type {CarrierProductCategory}
     * @memberof CarrierCountryServiceMapping
     */
    carrierProductCategory?: CarrierProductCategory;
    /**
     *
     * @type {CarrierTransitTime}
     * @memberof CarrierCountryServiceMapping
     */
    transitTime?: CarrierTransitTime;
    /**
     *
     * @type {Array<DeliveryCost>}
     * @memberof CarrierCountryServiceMapping
     */
    deliveryCosts?: Array<DeliveryCost>;
}
/**
 *
 * @export
 * @interface CarrierCountryServiceMappingForCreation
 */
export interface CarrierCountryServiceMappingForCreation {
    /**
     * The version of the carrier configuration to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof CarrierCountryServiceMappingForCreation
     */
    carrierConfigurationVersion: number;
    /**
     *
     * @type {RegionInformation}
     * @memberof CarrierCountryServiceMappingForCreation
     */
    source: RegionInformation;
    /**
     * The destination regions this mapping should be applied to.
     * @type {Array<RegionInformation>}
     * @memberof CarrierCountryServiceMappingForCreation
     */
    destinations: Array<RegionInformation>;
    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />@deprecated Use source instead.
     * @type {string}
     * @memberof CarrierCountryServiceMappingForCreation
     */
    sourceCountry?: string;
    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />@deprecated Use destination instead.
     * @type {Array<CountryCode>}
     * @memberof CarrierCountryServiceMappingForCreation
     */
    destinationCountries?: Array<CountryCode>;
    /**
     *
     * @type {Array<MandatoryShippingAttribute>}
     * @memberof CarrierCountryServiceMappingForCreation
     */
    mandatoryShippingAttributes?: Array<MandatoryShippingAttribute>;
    /**
     *
     * @type {Array<MandatoryShippingItemAttribute>}
     * @memberof CarrierCountryServiceMappingForCreation
     */
    mandatoryShippingItemAttributes?: Array<MandatoryShippingItemAttribute>;
    /**
     *
     * @type {string}
     * @memberof CarrierCountryServiceMappingForCreation
     */
    product?: string;
    /**
     *
     * @type {CarrierProductCategory}
     * @memberof CarrierCountryServiceMappingForCreation
     */
    carrierProductCategory?: CarrierProductCategory;
    /**
     *
     * @type {CarrierTransitTime}
     * @memberof CarrierCountryServiceMappingForCreation
     */
    transitTime?: CarrierTransitTime;
    /**
     *
     * @type {Array<DeliveryCost>}
     * @memberof CarrierCountryServiceMappingForCreation
     */
    deliveryCosts?: Array<DeliveryCost>;
}
/**
 *
 * @export
 * @interface CarrierCountryServiceMappingForUpdate
 */
export interface CarrierCountryServiceMappingForUpdate {
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof CarrierCountryServiceMappingForUpdate
     */
    carrierConfigurationVersion: number;
    /**
     *
     * @type {RegionInformation}
     * @memberof CarrierCountryServiceMappingForUpdate
     */
    source?: RegionInformation;
    /**
     * The destination regions this mapping should be applied to.
     * @type {Array<RegionInformation>}
     * @memberof CarrierCountryServiceMappingForUpdate
     */
    destinations?: Array<RegionInformation>;
    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />@deprecated Use source instead.
     * @type {string}
     * @memberof CarrierCountryServiceMappingForUpdate
     */
    sourceCountry?: string;
    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />@deprecated Use destination instead.
     * @type {Array<CountryCode>}
     * @memberof CarrierCountryServiceMappingForUpdate
     */
    destinationCountries?: Array<CountryCode>;
    /**
     *
     * @type {Array<MandatoryShippingAttribute>}
     * @memberof CarrierCountryServiceMappingForUpdate
     */
    mandatoryShippingAttributes?: Array<MandatoryShippingAttribute>;
    /**
     *
     * @type {Array<MandatoryShippingItemAttribute>}
     * @memberof CarrierCountryServiceMappingForUpdate
     */
    mandatoryShippingItemAttributes?: Array<MandatoryShippingItemAttribute>;
    /**
     *
     * @type {string}
     * @memberof CarrierCountryServiceMappingForUpdate
     */
    product?: string;
    /**
     *
     * @type {CarrierProductCategory}
     * @memberof CarrierCountryServiceMappingForUpdate
     */
    carrierProductCategory?: CarrierProductCategory;
    /**
     *
     * @type {CarrierTransitTime}
     * @memberof CarrierCountryServiceMappingForUpdate
     */
    transitTime?: CarrierTransitTime;
    /**
     *
     * @type {Array<DeliveryCost>}
     * @memberof CarrierCountryServiceMappingForUpdate
     */
    deliveryCosts?: Array<DeliveryCost>;
}
/**
 *
 * @export
 * @interface CarrierCutoffConfiguration
 */
export interface CarrierCutoffConfiguration {
    /**
     *
     * @type {string}
     * @memberof CarrierCutoffConfiguration
     */
    time: string;
    /**
     *
     * @type {number}
     * @memberof CarrierCutoffConfiguration
     */
    capacity?: number;
}
/**
 *
 * @export
 * @interface CarrierCutoffTimes
 */
export interface CarrierCutoffTimes {
    /**
     *
     * @type {Array<CarrierCutoffTimesWeekDay>}
     * @memberof CarrierCutoffTimes
     */
    weekdays: Array<CarrierCutoffTimesWeekDay>;
    /**
     *
     * @type {Array<CarrierCutoffTimesOverwrite>}
     * @memberof CarrierCutoffTimes
     */
    overwrites: Array<CarrierCutoffTimesOverwrite>;
}
/**
 *
 * @export
 * @interface CarrierCutoffTimesOverwrite
 */
export interface CarrierCutoffTimesOverwrite {
    /**
     *
     * @type {string}
     * @memberof CarrierCutoffTimesOverwrite
     */
    date: string;
    /**
     *
     * @type {Array<CarrierCutoffConfiguration>}
     * @memberof CarrierCutoffTimesOverwrite
     */
    cutoffConfigurations: Array<CarrierCutoffConfiguration>;
}
/**
 *
 * @export
 * @interface CarrierCutoffTimesWeekDay
 */
export interface CarrierCutoffTimesWeekDay {
    /**
     *
     * @type {WeekDay}
     * @memberof CarrierCutoffTimesWeekDay
     */
    day: WeekDay;
    /**
     *
     * @type {Array<CarrierCutoffConfiguration>}
     * @memberof CarrierCutoffTimesWeekDay
     */
    cutoffConfigurations: Array<CarrierCutoffConfiguration>;
}
/**
 * Provided delivery of this CEP. Default: DELIVERY
 * @export
 * @enum {string}
 */
export enum CarrierDeliveryType {
    SAMEDAY = 'SAMEDAY',
    DELIVERY = 'DELIVERY'
}
/**
 *
 * @export
 * @interface CarrierForCreation
 */
export interface CarrierForCreation {
    /**
     *
     * @type {AbstractCarrierCredentials}
     * @memberof CarrierForCreation
     */
    credentials?: AbstractCarrierCredentials;
    /**
     * References the KEP. Currently allowed values are DHL_V2, DPD_CH, ANGEL, GLS, FEDEX, POSTNL, BRING, UPS, POST_NORD, DHL_EXPRESS, CUSTOM and to distinct between multiple custom carriers one can use CUSTOM_ combined with a unique name.
     * @type {string}
     * @memberof CarrierForCreation
     */
    key: string;
    /**
     *
     * @type {string}
     * @memberof CarrierForCreation
     */
    logoUrl?: string;
    /**
     * This is the well known name for a supported CEP partner. Can be adapted to the clients needs.
     * @type {string}
     * @memberof CarrierForCreation
     */
    name: string;
    /**
     *
     * @type {CarrierStatus}
     * @memberof CarrierForCreation
     */
    status?: CarrierStatus;
    /**
     * Default weight for a parcel in gram
     * @type {number}
     * @memberof CarrierForCreation
     */
    defaultParcelWeightInGram?: number;
    /**
     *
     * @type {Array<ParcelLabelClassificationForCreation>}
     * @memberof CarrierForCreation
     */
    parcelLabelClassifications?: Array<ParcelLabelClassificationForCreation>;
    /**
     * Setting to enable the Client to ask for the parcel product value while ordering a label. This information is mandatory for sending parcels between different countries (customs declaration)
     * @type {boolean}
     * @memberof CarrierForCreation
     */
    productValueNeeded?: boolean;
}
/**
 *
 * @export
 * @interface CarrierIdConfigurationBody
 */
export interface CarrierIdConfigurationBody {
}
/**
 * Used to determine if a carrier is available for configuration. GA carriers are generally available and are covered by our SLA. BETA carriers are available, but subject to change and not covered by SLA. ALPHA carriers are not implemented completely, yet. Default: GA
 * @export
 * @enum {string}
 */
export enum CarrierLifecycle {
    GA = 'GA',
    BETA = 'BETA',
    ALPHA = 'ALPHA'
}
/**
 *
 * @export
 * @interface CarrierPatchActions
 */
export interface CarrierPatchActions {
    /**
     *
     * @type {Array<ModifyCarrierAction>}
     * @memberof CarrierPatchActions
     */
    actions: Array<ModifyCarrierAction>;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof CarrierPatchActions
     */
    version: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum CarrierProductCategory {
    STANDARD = 'STANDARD',
    EXPRESS = 'EXPRESS',
    VALUE = 'VALUE',
    FORWARDING = 'FORWARDING'
}
/**
 * Services which should be booked from carrier
 * @export
 * @enum {string}
 */
export enum CarrierServices {
    SIGNATURE = 'SIGNATURE'
}
/**
 * It is taken into consideration for all carriers. Default: INACTIVE
 * @export
 * @enum {string}
 */
export enum CarrierStatus {
    ACTIVE = 'ACTIVE',
    INACTIVE = 'INACTIVE'
}
/**
 *
 * @export
 * @interface CarrierTransitTime
 */
export interface CarrierTransitTime {
    /**
     * Minimum days a carrier needs for transit
     * @type {number}
     * @memberof CarrierTransitTime
     */
    minTransitDays: number;
    /**
     * Maximum days a carrier needs for transit
     * @type {number}
     * @memberof CarrierTransitTime
     */
    maxTransitDays: number;
}
/**
 *
 * @export
 * @interface ChannelStockAvailability
 */
export interface ChannelStockAvailability {
    /**
     *
     * @type {string}
     * @memberof ChannelStockAvailability
     */
    channelRef: string;
    /**
     *
     * @type {number}
     * @memberof ChannelStockAvailability
     */
    availableForPicking: number;
    /**
     *
     * @type {number}
     * @memberof ChannelStockAvailability
     */
    availableOnStock: number;
}
/**
 *
 * @export
 * @interface CheckoutOptionsAvailability
 */
export interface CheckoutOptionsAvailability {
    /**
     *
     * @type {string}
     * @memberof CheckoutOptionsAvailability
     */
    tenantArticleId: string;
    /**
     *
     * @type {number}
     * @memberof CheckoutOptionsAvailability
     */
    available: number;
    /**
     *
     * @type {Date}
     * @memberof CheckoutOptionsAvailability
     */
    preOrderReleaseDate?: Date;
    /**
     *
     * @type {boolean}
     * @memberof CheckoutOptionsAvailability
     */
    isBackOrderable: boolean;
}
/**
 *
 * @export
 * @interface CheckoutOptionsConsumerAddress
 */
export interface CheckoutOptionsConsumerAddress {
    /**
     *
     * @type {string}
     * @memberof CheckoutOptionsConsumerAddress
     */
    city?: string;
    /**
     * A two-digit country code as per ISO 3166-1 alpha-2
     * @type {string}
     * @memberof CheckoutOptionsConsumerAddress
     */
    country: string;
    /**
     *
     * @type {string}
     * @memberof CheckoutOptionsConsumerAddress
     */
    province?: string;
    /**
     *
     * @type {string}
     * @memberof CheckoutOptionsConsumerAddress
     */
    houseNumber?: string;
    /**
     *
     * @type {string}
     * @memberof CheckoutOptionsConsumerAddress
     */
    postalCode?: string;
    /**
     *
     * @type {string}
     * @memberof CheckoutOptionsConsumerAddress
     */
    street?: string;
}
/**
 *
 * @export
 * @interface CheckoutOptionsCustomServices
 */
export interface CheckoutOptionsCustomServices {
    /**
     *
     * @type {string}
     * @memberof CheckoutOptionsCustomServices
     */
    customServiceRef: string;
    /**
     *
     * @type {string}
     * @memberof CheckoutOptionsCustomServices
     */
    name: string;
}
/**
 *
 * @export
 * @interface CheckoutOptionsDeliveryEarliestRequest
 */
export interface CheckoutOptionsDeliveryEarliestRequest {
    /**
     * The date from which to search for the earliest potential delivery date. Defaults to \"now\" (timestamp of the request)
     * @type {Date}
     * @memberof CheckoutOptionsDeliveryEarliestRequest
     */
    earliestDeliveryDate?: Date;
    /**
     *
     * @type {Array<string>}
     * @memberof CheckoutOptionsDeliveryEarliestRequest
     */
    tenantArticleIds: Array<string>;
    /**
     *
     * @type {CheckoutOptionsConsumerAddress}
     * @memberof CheckoutOptionsDeliveryEarliestRequest
     */
    consumerAddress?: CheckoutOptionsConsumerAddress;
}
/**
 *
 * @export
 * @interface CheckoutOptionsDeliveryEarliestResponse
 */
export interface CheckoutOptionsDeliveryEarliestResponse {
    /**
     * The results of the corresponding request containing information, if present, on when the items can supposingly be delivered earliest. Please note: When it was not possible to calculate the delivery information for a requested tenantArticleId there is no entry here.
     * @type {Array<CheckoutOptionsDeliveryEarliestResponseItem>}
     * @memberof CheckoutOptionsDeliveryEarliestResponse
     */
    checkoutOptions: Array<CheckoutOptionsDeliveryEarliestResponseItem>;
}
/**
 *
 * @export
 * @interface CheckoutOptionsDeliveryEarliestResponseItem
 */
export interface CheckoutOptionsDeliveryEarliestResponseItem {
    /**
     *
     * @type {string}
     * @memberof CheckoutOptionsDeliveryEarliestResponseItem
     */
    tenantArticleId: string;
    /**
     *
     * @type {Date}
     * @memberof CheckoutOptionsDeliveryEarliestResponseItem
     */
    earliestPredictedDeliveryDate?: Date;
    /**
     * List of available carriers.
     * @type {Array<CheckoutOptionsDeliveryEarliestResponseItemAvailableCarrier>}
     * @memberof CheckoutOptionsDeliveryEarliestResponseItem
     */
    availableCarriers?: Array<CheckoutOptionsDeliveryEarliestResponseItemAvailableCarrier>;
}
/**
 *
 * @export
 * @interface CheckoutOptionsDeliveryEarliestResponseItemAvailableCarrier
 */
export interface CheckoutOptionsDeliveryEarliestResponseItemAvailableCarrier {
    /**
     *
     * @type {string}
     * @memberof CheckoutOptionsDeliveryEarliestResponseItemAvailableCarrier
     */
    name?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof CheckoutOptionsDeliveryEarliestResponseItemAvailableCarrier
     */
    nonDeliveryDays?: Array<string>;
}
/**
 *
 * @export
 * @interface CheckoutOptionsDeliveryPreferences
 */
export interface CheckoutOptionsDeliveryPreferences {
    /**
     * DELIVERY: The parcel will reach the recipient according to the cycle time of the carrier, typically 1-3 days when shipping nationaly. EXPRESS: The parcel will reach the recipient using an express service level.
     * @type {string}
     * @memberof CheckoutOptionsDeliveryPreferences
     */
    serviceLevel?: CheckoutOptionsDeliveryPreferences.ServiceLevelEnum;
    /**
     *
     * @type {Array<string>}
     * @memberof CheckoutOptionsDeliveryPreferences
     */
    preferredCarriers?: Array<string>;
    /**
     *
     * @type {CheckoutOptionsDeliveryPreferencesPreferredCarriersWithProduct}
     * @memberof CheckoutOptionsDeliveryPreferences
     */
    preferredCarriersWithProduct?: CheckoutOptionsDeliveryPreferencesPreferredCarriersWithProduct;
}

/**
 * @export
 * @namespace CheckoutOptionsDeliveryPreferences
 */
export namespace CheckoutOptionsDeliveryPreferences {
    /**
     * @export
     * @enum {string}
     */
    export enum ServiceLevelEnum {
        DELIVERY = 'DELIVERY',
        EXPRESS = 'EXPRESS'
    }
}
/**
 *
 * @export
 * @interface CheckoutOptionsDeliveryPreferencesPreferredCarriersWithProduct
 */
export interface CheckoutOptionsDeliveryPreferencesPreferredCarriersWithProduct {
    /**
     *
     * @type {string}
     * @memberof CheckoutOptionsDeliveryPreferencesPreferredCarriersWithProduct
     */
    carrierKey?: string;
    /**
     *
     * @type {string}
     * @memberof CheckoutOptionsDeliveryPreferencesPreferredCarriersWithProduct
     */
    carrierProduct?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof CheckoutOptionsDeliveryPreferencesPreferredCarriersWithProduct
     */
    carrierServices?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof CheckoutOptionsDeliveryPreferencesPreferredCarriersWithProduct
     */
    carrierProductCategory?: string;
}
/**
 *
 * @export
 * @interface CheckoutOptionsDeliveryTimePeriodRequest
 */
export interface CheckoutOptionsDeliveryTimePeriodRequest {
    /**
     * The start of the evaluated time period. Defaults to \"now\" (timestamp of the request)
     * @type {Date}
     * @memberof CheckoutOptionsDeliveryTimePeriodRequest
     */
    startDate?: Date;
    /**
     * The end of the evaluated time period. Default is the start date + 60 days. Please note that the maximum time period can not exceed 60 days.
     * @type {Date}
     * @memberof CheckoutOptionsDeliveryTimePeriodRequest
     */
    endDate?: Date;
    /**
     * Items, that are considered to be delivered together.
     * @type {Array<BasketItem>}
     * @memberof CheckoutOptionsDeliveryTimePeriodRequest
     */
    basket: Array<BasketItem>;
    /**
     *
     * @type {CheckoutOptionsConsumerAddress}
     * @memberof CheckoutOptionsDeliveryTimePeriodRequest
     */
    consumerAddress?: CheckoutOptionsConsumerAddress;
    /**
     *
     * @type {CheckoutOptionsDeliveryPreferences}
     * @memberof CheckoutOptionsDeliveryTimePeriodRequest
     */
    deliveryPreferences?: CheckoutOptionsDeliveryPreferences;
}
/**
 *
 * @export
 * @interface CheckoutOptionsDeliveryTimePeriodResponse
 */
export interface CheckoutOptionsDeliveryTimePeriodResponse {
    /**
     *
     * @type {Array<CheckoutOptionsDeliveryTimePeriodResponseItem>}
     * @memberof CheckoutOptionsDeliveryTimePeriodResponse
     */
    checkoutOptions: Array<CheckoutOptionsDeliveryTimePeriodResponseItem>;
}
/**
 *
 * @export
 * @interface CheckoutOptionsDeliveryTimePeriodResponseItem
 */
export interface CheckoutOptionsDeliveryTimePeriodResponseItem {
    /**
     *
     * @type {string}
     * @memberof CheckoutOptionsDeliveryTimePeriodResponseItem
     */
    overallStatus: CheckoutOptionsDeliveryTimePeriodResponseItem.OverallStatusEnum;
    /**
     *
     * @type {Date}
     * @memberof CheckoutOptionsDeliveryTimePeriodResponseItem
     */
    date: Date;
    /**
     *
     * @type {Array<CheckoutOptionsDeliveryEarliestResponseItemAvailableCarrier>}
     * @memberof CheckoutOptionsDeliveryTimePeriodResponseItem
     */
    availableCarriers?: Array<CheckoutOptionsDeliveryEarliestResponseItemAvailableCarrier>;
}

/**
 * @export
 * @namespace CheckoutOptionsDeliveryTimePeriodResponseItem
 */
export namespace CheckoutOptionsDeliveryTimePeriodResponseItem {
    /**
     * @export
     * @enum {string}
     */
    export enum OverallStatusEnum {
        ALL = 'ALL',
        PARTIAL = 'PARTIAL',
        NONE = 'NONE'
    }
}
/**
 *
 * @export
 * @interface CheckoutOptionsDeliveryTimePointRequest
 */
export interface CheckoutOptionsDeliveryTimePointRequest {
    /**
     * The desired delivery date. (timestamp of the request)
     * @type {Date}
     * @memberof CheckoutOptionsDeliveryTimePointRequest
     */
    desiredDeliveryDate: Date;
    /**
     *
     * @type {Array<string>}
     * @memberof CheckoutOptionsDeliveryTimePointRequest
     */
    tenantArticleIds: Array<string>;
    /**
     * Pair of facilityRef and latestPickingStart values
     * @type {Array<FacilityRefLatestPickingStartPair>}
     * @memberof CheckoutOptionsDeliveryTimePointRequest
     */
    facilities: Array<FacilityRefLatestPickingStartPair>;
}
/**
 *
 * @export
 * @interface CheckoutOptionsDeliveryTimePointResponse
 */
export interface CheckoutOptionsDeliveryTimePointResponse {
    /**
     *
     * @type {Array<CheckoutOptionsDeliveryTimePointResponseItem>}
     * @memberof CheckoutOptionsDeliveryTimePointResponse
     */
    items: Array<CheckoutOptionsDeliveryTimePointResponseItem>;
}
/**
 *
 * @export
 * @interface CheckoutOptionsDeliveryTimePointResponseItem
 */
export interface CheckoutOptionsDeliveryTimePointResponseItem {
    /**
     *
     * @type {string}
     * @memberof CheckoutOptionsDeliveryTimePointResponseItem
     */
    tenantArticleId: string;
    /**
     *
     * @type {number}
     * @memberof CheckoutOptionsDeliveryTimePointResponseItem
     */
    available: number;
    /**
     *
     * @type {string}
     * @memberof CheckoutOptionsDeliveryTimePointResponseItem
     */
    facilityRef: string;
}
/**
 *
 * @export
 * @interface CheckoutOptionsFacilityForCNC
 */
export interface CheckoutOptionsFacilityForCNC {
    /**
     *
     * @type {string}
     * @memberof CheckoutOptionsFacilityForCNC
     */
    facilityRef: string;
    /**
     *
     * @type {string}
     * @memberof CheckoutOptionsFacilityForCNC
     */
    name: string;
    /**
     *
     * @type {FacilityAddress}
     * @memberof CheckoutOptionsFacilityForCNC
     */
    address: FacilityAddress;
    /**
     *
     * @type {Array<ClosingDay>}
     * @memberof CheckoutOptionsFacilityForCNC
     */
    closingDays: Array<ClosingDay>;
    /**
     *
     * @type {PickingTimes}
     * @memberof CheckoutOptionsFacilityForCNC
     */
    pickingTimes: PickingTimes;
    /**
     *
     * @type {Array<CheckoutOptionsAvailability>}
     * @memberof CheckoutOptionsFacilityForCNC
     */
    availabilities: Array<CheckoutOptionsAvailability>;
    /**
     *
     * @type {Array<CheckoutOptionsCustomServices>}
     * @memberof CheckoutOptionsFacilityForCNC
     */
    customServices: Array<CheckoutOptionsCustomServices>;
    /**
     *
     * @type {Date}
     * @memberof CheckoutOptionsFacilityForCNC
     */
    targetTime: Date;
}
/**
 *
 * @export
 * @interface CheckoutOptionsFacilityForSFS
 */
export interface CheckoutOptionsFacilityForSFS {
    /**
     *
     * @type {string}
     * @memberof CheckoutOptionsFacilityForSFS
     */
    facilityRef: string;
    /**
     *
     * @type {string}
     * @memberof CheckoutOptionsFacilityForSFS
     */
    name: string;
    /**
     *
     * @type {Array<CheckoutOptionsAvailability>}
     * @memberof CheckoutOptionsFacilityForSFS
     */
    availabilities: Array<CheckoutOptionsAvailability>;
    /**
     *
     * @type {Array<PromiseCarrier>}
     * @memberof CheckoutOptionsFacilityForSFS
     */
    deliveryOptions: Array<PromiseCarrier>;
    /**
     *
     * @type {Array<CheckoutOptionsCustomServices>}
     * @memberof CheckoutOptionsFacilityForSFS
     */
    customServices: Array<CheckoutOptionsCustomServices>;
}
/**
 *
 * @export
 * @interface CheckoutOptionsInput
 */
export interface CheckoutOptionsInput {
    /**
     *
     * @type {CheckoutOptionsConsumerAddress}
     * @memberof CheckoutOptionsInput
     */
    consumerAddress?: CheckoutOptionsConsumerAddress;
    /**
     *
     * @type {DeliveryPreferences}
     * @memberof CheckoutOptionsInput
     */
    deliveryPreferences: DeliveryPreferences;
    /**
     *
     * @type {Array<OrderLineItemForCreation>}
     * @memberof CheckoutOptionsInput
     */
    orderLineItems: Array<OrderLineItemForCreation>;
    /**
     *
     * @type {Array<TagReference>}
     * @memberof CheckoutOptionsInput
     */
    tags?: Array<TagReference>;
    /**
     *
     * @type {Array<CustomServiceReference>}
     * @memberof CheckoutOptionsInput
     */
    customServices?: Array<CustomServiceReference>;
    /**
     *
     * @type {GeoFence}
     * @memberof CheckoutOptionsInput
     */
    geoFence?: GeoFence;
    /**
     *
     * @type {boolean}
     * @memberof CheckoutOptionsInput
     */
    filterDuplicates?: boolean;
}
/**
 *
 * @export
 * @interface ClickAndCollectRerouteConfiguration
 */
export interface ClickAndCollectRerouteConfiguration {
    /**
     *
     * @type {boolean}
     * @memberof ClickAndCollectRerouteConfiguration
     */
    active: boolean;
    /**
     *
     * @type {RerouteType}
     * @memberof ClickAndCollectRerouteConfiguration
     */
    rerouteType?: RerouteType;
}
/**
 * At this day the facility is closed and does not do picking
 * @export
 * @interface ClosingDay
 */
export interface ClosingDay {
    /**
     * The day at which the Facility is closed
     * @type {Date}
     * @memberof ClosingDay
     */
    date: Date;
    /**
     * The reason why the Facility is closed on this day
     * @type {string}
     * @memberof ClosingDay
     */
    reason: string;
    /**
     *
     * @type {string}
     * @memberof ClosingDay
     */
    recurrence: ClosingDay.RecurrenceEnum;
}

/**
 * @export
 * @namespace ClosingDay
 */
export namespace ClosingDay {
    /**
     * @export
     * @enum {string}
     */
    export enum RecurrenceEnum {
        YEARLY = 'YEARLY',
        NONRECURRING = 'NONRECURRING'
    }
}
/**
 *
 * @export
 * @interface CollectDelivery
 */
export interface CollectDelivery {
    /**
     * Reference to the facility where the consumer expects to collect the items
     * @type {string}
     * @memberof CollectDelivery
     */
    facilityRef: string;
    /**
     * Indicates if the order is already paid.
     * @type {boolean}
     * @memberof CollectDelivery
     */
    paid?: boolean;
    /**
     * DEPRECATED
     * @type {Array<string>}
     * @memberof CollectDelivery
     */
    supplyingFacilities?: Array<string>;
    /**
     * References of facility that could supply contents of the order to another facility with specific configuration of its usage
     * @type {Array<SupplyingFacilityConfiguration>}
     * @memberof CollectDelivery
     */
    supplyingFacilitiesConfigurations?: Array<SupplyingFacilityConfiguration>;
    /**
     * The point in time by which the order is supposed to be provisioned.
     * @type {Date}
     * @memberof CollectDelivery
     */
    provisioningTime?: Date;
}
/**
 *
 * @export
 * @interface CompanyAddress
 */
export interface CompanyAddress {
    /**
     *
     * @type {string}
     * @memberof CompanyAddress
     */
    city: string;
    /**
     *
     * @type {string}
     * @memberof CompanyAddress
     */
    country: string;
    /**
     *
     * @type {string}
     * @memberof CompanyAddress
     */
    houseNumber?: string;
    /**
     *
     * @type {string}
     * @memberof CompanyAddress
     */
    name: string;
    /**
     *
     * @type {string}
     * @memberof CompanyAddress
     */
    postalCode: string;
    /**
     *
     * @type {string}
     * @memberof CompanyAddress
     */
    street: string;
}
/**
 *
 * @export
 * @interface ConfigurationsNotificationsBody
 */
export interface ConfigurationsNotificationsBody {
}
/**
 *
 * @export
 * @interface ConfigurationsNotificationsBody1
 */
export interface ConfigurationsNotificationsBody1 {
}
/**
 * The type of possible Apps
 * @export
 * @enum {string}
 */
export enum ConnectAppTypeEnum {
    PICKING = 'PICKING',
    INVENTORY = 'INVENTORY',
    OPERATIONSANDROID = 'OPERATIONS_ANDROID',
    OPERATIONSIOS = 'OPERATIONS_IOS'
}
/**
 * This status consolidates many of the RoutingPlanStatus and offers a more detailes explanation of what happened to the routing plan.
 * @export
 * @enum {string}
 */
export enum ConsolidatedRoutingPlanStatus {
    ROUTED = 'ROUTED',
    ROUTEDTHENREROUTED = 'ROUTED_THEN_REROUTED',
    PROCESSMANUALREROUTEDTHENROUTED = 'PROCESS_MANUAL_REROUTED_THEN_ROUTED',
    PROCESSMANUALREROUTEDTHENNOTROUTABLE = 'PROCESS_MANUAL_REROUTED_THEN_NOT_ROUTABLE',
    PROCESSMANUALREROUTEDTHENREROUTEDANDSPLIT = 'PROCESS_MANUAL_REROUTED_THEN_REROUTED_AND_SPLIT',
    ROUTINGPLANREROUTEDTHENROUTEDTOSAMEFACILITY = 'ROUTING_PLAN_REROUTED_THEN_ROUTED_TO_SAME_FACILITY',
    ROUTINGPLANSHORTPICKEDTHENROUTEDTOSAMEFACILITY = 'ROUTING_PLAN_SHORTPICKED_THEN_ROUTED_TO_SAME_FACILITY',
    ROUTINGPLANCREATEDTHENROUTING = 'ROUTING_PLAN_CREATED_THEN_ROUTING',
    ROUTINGPLANCREATEDTHENPLANNED = 'ROUTING_PLAN_CREATED_THEN_PLANNED',
    ROUTINGPLANREROUTEDTHENFAILED = 'ROUTING_PLAN_REROUTED_THEN_FAILED',
    FACILITYMANUALLYASSIGNEDTOPICKJOBTHENROUTED = 'FACILITY_MANUALLY_ASSIGNED_TO_PICKJOB_THEN_ROUTED',
    FACILITYMANUALLYASSIGNEDTOPROCESSTHENROUTED = 'FACILITY_MANUALLY_ASSIGNED_TO_PROCESS_THEN_ROUTED',
    STOCKUPDATERECEIVEDTHENREACTIVATED = 'STOCK_UPDATE_RECEIVED_THEN_REACTIVATED',
    ROUTINGPLANREROUTETIMETRIGGEREDTHENREROUTED = 'ROUTING_PLAN_REROUTE_TIMETRIGGERED_THEN_REROUTED',
    ROUTINGPLANREROUTETIMETRIGGEREDTHENREROUTEDANDSPLIT = 'ROUTING_PLAN_REROUTE_TIMETRIGGERED_THEN_REROUTED_AND_SPLIT',
    ROUTINGPLANSHORTPICKEDTHENREROUTED = 'ROUTING_PLAN_SHORTPICKED_THEN_REROUTED',
    ROUTINGPLANSHORTPICKEDTHENSPLIT = 'ROUTING_PLAN_SHORTPICKED_THEN_SPLIT',
    ROUTINGPLANSHORTPICKEDTHENREROUTEDANDSPLIT = 'ROUTING_PLAN_SHORTPICKED_THEN_REROUTED_AND_SPLIT',
    ROUTINGPLANREROUTESTOCKZEROTHENREROUTED = 'ROUTING_PLAN_REROUTE_STOCK_ZERO_THEN_REROUTED',
    ROUTINGPLANREROUTESTOCKZEROTHENREROUTEDANDSPLIT = 'ROUTING_PLAN_REROUTE_STOCK_ZERO_THEN_REROUTED_AND_SPLIT',
    ROUTINGPLANREROUTESTOCKZEROTHENREROUTEDTOSAMEFACILITY = 'ROUTING_PLAN_REROUTE_STOCK_ZERO_THEN_REROUTED_TO_SAME_FACILITY',
    PICKJOBREJECTEDTHENREROUTED = 'PICKJOB_REJECTED_THEN_REROUTED',
    PICKJOBREJECTEDTHENNOTROUTABLE = 'PICKJOB_REJECTED_THEN_NOT_ROUTABLE',
    PICKJOBREJECTEDTHENROUTEDANDSPLIT = 'PICKJOB_REJECTED_THEN_ROUTED_AND_SPLIT',
    ROUTEDANDSPLIT = 'ROUTED_AND_SPLIT',
    OBSOLETE = 'OBSOLETE',
    OBSOLETEWASROUTED = 'OBSOLETE_WAS_ROUTED',
    OBSOLETEWASSHORTPICKED = 'OBSOLETE_WAS_SHORTPICKED',
    UNKNOWN = 'UNKNOWN',
    RETRYABLE = 'RETRYABLE',
    FAILEDREROUTE = 'FAILED_REROUTE',
    ROUTEDTHENCANCELED = 'ROUTED_THEN_CANCELED',
    ROUTEDANDSPLITTHENCANCELED = 'ROUTED_AND_SPLIT_THEN_CANCELED',
    ROUTINGPLANSHORTPICKEDTHENSPLITTHENCANCELED = 'ROUTING_PLAN_SHORTPICKED_THEN_SPLIT_THEN_CANCELED',
    ROUTINGPLANSHORTPICKEDTHENREROUTEDTHENCANCELED = 'ROUTING_PLAN_SHORTPICKED_THEN_REROUTED_THEN_CANCELED',
    ROUTINGPLANSHORTPICKEDTHENREROUTEDANDSPLITTHENCANCELED = 'ROUTING_PLAN_SHORTPICKED_THEN_REROUTED_AND_SPLIT_THEN_CANCELED',
    ROUTINGPLANREROUTETIMETRIGGEREDTHENREROUTEDTHENCANCELED = 'ROUTING_PLAN_REROUTE_TIMETRIGGERED_THEN_REROUTED_THEN_CANCELED',
    ROUTINGPLANREROUTETIMETRIGGEREDTHENREROUTEDANDSPLITTHENCANCELED = 'ROUTING_PLAN_REROUTE_TIMETRIGGERED_THEN_REROUTED_AND_SPLIT_THEN_CANCELED',
    FACILITYMANUALLYASSIGNEDTOPICKJOBTHENROUTEDTHENCANCELED = 'FACILITY_MANUALLY_ASSIGNED_TO_PICKJOB_THEN_ROUTED_THEN_CANCELED',
    FACILITYMANUALLYASSIGNEDTOPROCESSTHENROUTEDTHENCANCELED = 'FACILITY_MANUALLY_ASSIGNED_TO_PROCESS_THEN_ROUTED_THEN_CANCELED',
    PROCESSMANUALREROUTEDTHENROUTEDTHENCANCELED = 'PROCESS_MANUAL_REROUTED_THEN_ROUTED_THEN_CANCELED',
    PROCESSMANUALREROUTEDTHENREROUTEDANDSPLITTHENCANCELED = 'PROCESS_MANUAL_REROUTED_THEN_REROUTED_AND_SPLIT_THEN_CANCELED',
    CANCELED = 'CANCELED',
    NOTROUTABLE = 'NOT_ROUTABLE',
    WAITING = 'WAITING',
    WAITINGANDSPLIT = 'WAITING_AND_SPLIT',
    WAITINGTHENROUTED = 'WAITING_THEN_ROUTED',
    WAITINGTHENROUTEDANDSPLIT = 'WAITING_THEN_ROUTED_AND_SPLIT',
    WAITINGTHENNOTROUTABLE = 'WAITING_THEN_NOT_ROUTABLE',
    WAITINGTHENWAITINGANDSPLIT = 'WAITING_THEN_WAITING_AND_SPLIT',
    LOCKED = 'LOCKED',
    INITIAL = 'INITIAL'
}
/**
 *
 * @export
 * @interface ConsumerAddress
 */
export interface ConsumerAddress extends Address {
    /**
     *
     * @type {string}
     * @memberof ConsumerAddress
     */
    companyName?: string;
    /**
     *
     * @type {string}
     * @memberof ConsumerAddress
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof ConsumerAddress
     */
    lastName?: string;
    /**
     *
     * @type {string}
     * @memberof ConsumerAddress
     */
    salutation?: string;
    /**
     *
     * @type {string}
     * @memberof ConsumerAddress
     */
    email?: string;
    /**
     *
     * @type {AddressType}
     * @memberof ConsumerAddress
     */
    addressType?: AddressType;
    /**
     *
     * @type {Coordinates}
     * @memberof ConsumerAddress
     */
    coordinates?: Coordinates;
}
/**
 *
 * @export
 * @interface ContainerDimensions
 */
export interface ContainerDimensions {
    /**
     * The height of the container (in cm)
     * @type {number}
     * @memberof ContainerDimensions
     */
    heightInCm?: number;
    /**
     * The length of the container (in cm)
     * @type {number}
     * @memberof ContainerDimensions
     */
    lengthInCm?: number;
    /**
     * The weight of the container (in g)
     * @type {number}
     * @memberof ContainerDimensions
     */
    weightInG?: number;
    /**
     * The width of the container (in cm)
     * @type {number}
     * @memberof ContainerDimensions
     */
    widthInCm?: number;
}
/**
 *
 * @export
 * @interface ContextReference
 */
export interface ContextReference {
    /**
     *
     * @type {string}
     * @memberof ContextReference
     */
    reference: string;
    /**
     *
     * @type {RoutingDecisionContext}
     * @memberof ContextReference
     */
    routingDecisionContext: RoutingDecisionContext;
}
/**
 * Coordinates of the WGS84 geodetic reference system in Mercator projection, as used e.g. by the Google Maps API
 * @export
 * @interface Coordinates
 */
export interface Coordinates {
    /**
     * Latitude value
     * @type {number}
     * @memberof Coordinates
     */
    lat: number;
    /**
     * Longitude value
     * @type {number}
     * @memberof Coordinates
     */
    lon: number;
}
/**
 * ISO 3166 ALPHA-2 of country
 * @export
 */
export type CountryCode = string
/**
 *
 * @export
 * @interface CountryLanguageMapping
 */
export interface CountryLanguageMapping {
    [key: string]: string;

}
/**
 * The currency code is a three-letter code that represents a currency in the ISO 4217 standard.
 * @export
 * @enum {string}
 */
export enum CurrencyCode {
    AED = 'AED',
    AFN = 'AFN',
    ALL = 'ALL',
    AMD = 'AMD',
    ANG = 'ANG',
    AOA = 'AOA',
    ARS = 'ARS',
    AUD = 'AUD',
    AWG = 'AWG',
    AZN = 'AZN',
    BAM = 'BAM',
    BBD = 'BBD',
    BDT = 'BDT',
    BGN = 'BGN',
    BHD = 'BHD',
    BIF = 'BIF',
    BMD = 'BMD',
    BND = 'BND',
    BOB = 'BOB',
    BOV = 'BOV',
    BRL = 'BRL',
    BSD = 'BSD',
    BTN = 'BTN',
    BWP = 'BWP',
    BYN = 'BYN',
    BZD = 'BZD',
    CAD = 'CAD',
    CDF = 'CDF',
    CHE = 'CHE',
    CHF = 'CHF',
    CHW = 'CHW',
    CLF = 'CLF',
    CLP = 'CLP',
    CNY = 'CNY',
    COP = 'COP',
    COU = 'COU',
    CRC = 'CRC',
    CUC = 'CUC',
    CUP = 'CUP',
    CVE = 'CVE',
    CZK = 'CZK',
    DJF = 'DJF',
    DKK = 'DKK',
    DOP = 'DOP',
    DZD = 'DZD',
    EGP = 'EGP',
    ERN = 'ERN',
    ETB = 'ETB',
    EUR = 'EUR',
    FJD = 'FJD',
    FKP = 'FKP',
    GBP = 'GBP',
    GEL = 'GEL',
    GHS = 'GHS',
    GIP = 'GIP',
    GMD = 'GMD',
    GNF = 'GNF',
    GTQ = 'GTQ',
    GYD = 'GYD',
    HKD = 'HKD',
    HNL = 'HNL',
    HTG = 'HTG',
    HUF = 'HUF',
    IDR = 'IDR',
    ILS = 'ILS',
    INR = 'INR',
    IQD = 'IQD',
    IRR = 'IRR',
    ISK = 'ISK',
    JMD = 'JMD',
    JOD = 'JOD',
    JPY = 'JPY',
    KES = 'KES',
    KGS = 'KGS',
    KHR = 'KHR',
    KMF = 'KMF',
    KPW = 'KPW',
    KRW = 'KRW',
    KWD = 'KWD',
    KYD = 'KYD',
    KZT = 'KZT',
    LAK = 'LAK',
    LBP = 'LBP',
    LKR = 'LKR',
    LRD = 'LRD',
    LSL = 'LSL',
    LYD = 'LYD',
    MAD = 'MAD',
    MDL = 'MDL',
    MGA = 'MGA',
    MKD = 'MKD',
    MMK = 'MMK',
    MNT = 'MNT',
    MOP = 'MOP',
    MRU = 'MRU',
    MUR = 'MUR',
    MVR = 'MVR',
    MWK = 'MWK',
    MXN = 'MXN',
    MXV = 'MXV',
    MYR = 'MYR',
    MZN = 'MZN',
    NAD = 'NAD',
    NGN = 'NGN',
    NIO = 'NIO',
    NOK = 'NOK',
    NPR = 'NPR',
    NZD = 'NZD',
    OMR = 'OMR',
    PAB = 'PAB',
    PEN = 'PEN',
    PGK = 'PGK',
    PHP = 'PHP',
    PKR = 'PKR',
    PLN = 'PLN',
    PYG = 'PYG',
    QAR = 'QAR',
    RON = 'RON',
    RSD = 'RSD',
    RUB = 'RUB',
    RWF = 'RWF',
    SAR = 'SAR',
    SBD = 'SBD',
    SCR = 'SCR',
    SDG = 'SDG',
    SEK = 'SEK',
    SGD = 'SGD',
    SHP = 'SHP',
    SLE = 'SLE',
    SOS = 'SOS',
    SRD = 'SRD',
    SSP = 'SSP',
    STN = 'STN',
    SVC = 'SVC',
    SYP = 'SYP',
    SZL = 'SZL',
    THB = 'THB',
    TJS = 'TJS',
    TMT = 'TMT',
    TND = 'TND',
    TOP = 'TOP',
    TRY = 'TRY',
    TTD = 'TTD',
    TWD = 'TWD',
    TZS = 'TZS',
    UAH = 'UAH',
    UGX = 'UGX',
    USD = 'USD',
    USN = 'USN',
    UYI = 'UYI',
    UYU = 'UYU',
    UYW = 'UYW',
    UZS = 'UZS',
    VED = 'VED',
    VES = 'VES',
    VND = 'VND',
    VUV = 'VUV',
    WST = 'WST',
    XAF = 'XAF',
    XAG = 'XAG',
    XAU = 'XAU',
    XBA = 'XBA',
    XBB = 'XBB',
    XBC = 'XBC',
    XBD = 'XBD',
    XCD = 'XCD',
    XDR = 'XDR',
    XOF = 'XOF',
    XPD = 'XPD',
    XPF = 'XPF',
    XPT = 'XPT',
    XSU = 'XSU',
    XTS = 'XTS',
    XUA = 'XUA',
    XXX = 'XXX',
    YER = 'YER',
    ZAR = 'ZAR',
    ZMW = 'ZMW',
    ZWL = 'ZWL'
}
/**
 *
 * @export
 * @interface CustomAttributableVersionedResource
 */
export interface CustomAttributableVersionedResource extends VersionedResource {
    /**
     * Attributes that can be added to this entity. These attributes **cannot** be used within fulfillment processes, but enable you to attach custom data from your systems to fulfillmenttools entities.
     * @type {any}
     * @memberof CustomAttributableVersionedResource
     */
    customAttributes?: any;
}
/**
 *
 * @export
 * @interface CustomAttributesResource
 */
export interface CustomAttributesResource {
    /**
     * Attributes that can be added to this entity. These attributes **cannot** be used within fulfillment processes, but enable you to attach custom data from your systems to fulfillmenttools entities.
     * @type {any}
     * @memberof CustomAttributesResource
     */
    customAttributes?: any;
}
/**
 * Include all different claims could be assigned to a user
 * @export
 * @interface CustomClaims
 */
export interface CustomClaims {
    /**
     *
     * @type {UserRoles}
     * @memberof CustomClaims
     */
    roles: UserRoles;
}
/**
 * You can supply a CUSTOM Prioritization rule. In order to successfully supply such a rule you also need to provide an evaluatable Expression in vmExpression. This expression needs to return an integer value that adds additional priority to an order.
 * @export
 * @interface CustomPrioritizationRule
 */
export interface CustomPrioritizationRule extends PrioritizationRule {
    /**
     *
     * @type {string}
     * @memberof CustomPrioritizationRule
     */
    vmExpression: string;
}
/**
 *
 * @export
 * @interface CustomService
 */
export interface CustomService extends VersionedResource {
    /**
     *
     * @type {CustomServiceStatus}
     * @memberof CustomService
     */
    status: CustomServiceStatus;
    /**
     *
     * @type {LocaleString}
     * @memberof CustomService
     */
    nameLocalized: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof CustomService
     */
    descriptionLocalized?: LocaleString;
    /**
     *
     * @type {number}
     * @memberof CustomService
     */
    executionTimeInMin?: number;
    /**
     *
     * @type {boolean}
     * @memberof CustomService
     */
    itemsReturnable?: boolean;
    /**
     *
     * @type {ItemsRequiredEnum}
     * @memberof CustomService
     */
    itemsRequired: ItemsRequiredEnum;
    /**
     *
     * @type {Array<AdditionalInformation>}
     * @memberof CustomService
     */
    additionalInformation?: Array<AdditionalInformation>;
    /**
     *
     * @type {string}
     * @memberof CustomService
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof CustomService
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof CustomService
     */
    description?: string;
}
/**
 *
 * @export
 * @interface CustomServiceDefinition
 */
export interface CustomServiceDefinition {
    /**
     * A reference to the custom service to be applied to the orderline items
     * @type {string}
     * @memberof CustomServiceDefinition
     */
    customServiceRef?: string;
    /**
     * if true all articles below this service are intrpreted as a bundle
     * @type {boolean}
     * @memberof CustomServiceDefinition
     */
    isBundled?: boolean;
    /**
     * Additional information necessary to fulfil the custom service
     * @type {Array<CustomServiceDefinitionAdditionalInformation>}
     * @memberof CustomServiceDefinition
     */
    additionalInformation?: Array<CustomServiceDefinitionAdditionalInformation>;
}
/**
 *
 * @export
 * @interface CustomServiceDefinitionAdditionalInformation
 */
export interface CustomServiceDefinitionAdditionalInformation {
    /**
     * A reference to the specific additional information of the custom service
     * @type {string}
     * @memberof CustomServiceDefinitionAdditionalInformation
     */
    additionalInformationRef: string;
    /**
     * The value of the additional information
     * @type {string | number | boolean}
     * @memberof CustomServiceDefinitionAdditionalInformation
     */
    value?: string | number | boolean;
}
/**
 *
 * @export
 * @interface CustomServiceForCreation
 */
export interface CustomServiceForCreation {
    /**
     *
     * @type {CustomServiceStatus}
     * @memberof CustomServiceForCreation
     */
    status: CustomServiceStatus;
    /**
     *
     * @type {LocaleString}
     * @memberof CustomServiceForCreation
     */
    nameLocalized: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof CustomServiceForCreation
     */
    descriptionLocalized?: LocaleString;
    /**
     *
     * @type {number}
     * @memberof CustomServiceForCreation
     */
    executionTimeInMin?: number;
    /**
     *
     * @type {boolean}
     * @memberof CustomServiceForCreation
     */
    itemsReturnable?: boolean;
    /**
     *
     * @type {ItemsRequiredEnum}
     * @memberof CustomServiceForCreation
     */
    itemsRequired: ItemsRequiredEnum;
    /**
     *
     * @type {Array<AdditionalInformationForCreation>}
     * @memberof CustomServiceForCreation
     */
    additionalInformation?: Array<AdditionalInformationForCreation>;
}
/**
 *
 * @export
 * @interface CustomServiceItem
 */
export interface CustomServiceItem extends CustomServiceItemForCreation {
    /**
     *
     * @type {string}
     * @memberof CustomServiceItem
     */
    id: string;
    /**
     *
     * @type {Array<CustomServiceItem>}
     * @memberof CustomServiceItem
     */
    customServiceItems: Array<CustomServiceItem>;
}
/**
 *
 * @export
 * @interface CustomServiceItemForCreation
 */
export interface CustomServiceItemForCreation {
    /**
     *
     * @type {CustomServiceDefinition}
     * @memberof CustomServiceItemForCreation
     */
    customServiceDefinition: CustomServiceDefinition;
    /**
     *
     * @type {Array<ArticleItem>}
     * @memberof CustomServiceItemForCreation
     */
    articleItems: Array<ArticleItem>;
    /**
     *
     * @type {Array<CustomServiceItemForCreation>}
     * @memberof CustomServiceItemForCreation
     */
    customServiceItems: Array<CustomServiceItemForCreation>;
}
/**
 *
 * @export
 * @interface CustomServicePatchActions
 */
export interface CustomServicePatchActions {
    /**
     *
     * @type {Array<ModifyCustomServiceAction>}
     * @memberof CustomServicePatchActions
     */
    actions: Array<ModifyCustomServiceAction>;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof CustomServicePatchActions
     */
    version: number;
}
/**
 *
 * @export
 * @interface CustomServiceReference
 */
export interface CustomServiceReference extends CustomServiceReferenceForCreation {
    /**
     *
     * @type {string}
     * @memberof CustomServiceReference
     */
    id: string;
    /**
     *
     * @type {Array<CustomServiceItem>}
     * @memberof CustomServiceReference
     */
    customServiceItems: Array<CustomServiceItem>;
}
/**
 *
 * @export
 * @interface CustomServiceReferenceForCreation
 */
export interface CustomServiceReferenceForCreation {
    /**
     *
     * @type {CustomServiceDefinition}
     * @memberof CustomServiceReferenceForCreation
     */
    customServiceDefinition: CustomServiceDefinition;
    /**
     *
     * @type {Array<ArticleItem>}
     * @memberof CustomServiceReferenceForCreation
     */
    articleItems: Array<ArticleItem>;
    /**
     *
     * @type {Array<CustomServiceItemForCreation>}
     * @memberof CustomServiceReferenceForCreation
     */
    customServiceItems: Array<CustomServiceItemForCreation>;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum CustomServiceStatus {
    ENABLED = 'ENABLED',
    DISABLED = 'DISABLED'
}
/**
 *
 * @export
 * @interface CutoffTime
 */
export interface CutoffTime {
    /**
     *
     * @type {number}
     * @memberof CutoffTime
     */
    hour: number;
    /**
     *
     * @type {number}
     * @memberof CutoffTime
     */
    minute: number;
}
/**
 *
 * @export
 * @interface CutoffTimeConfiguration
 */
export interface CutoffTimeConfiguration extends VersionedResource {
    /**
     *
     * @type {CutoffTime}
     * @memberof CutoffTimeConfiguration
     */
    clickAndCollect: CutoffTime;
    /**
     *
     * @type {CutoffTime}
     * @memberof CutoffTimeConfiguration
     */
    shipFromStore: CutoffTime;
    /**
     *
     * @type {string}
     * @memberof CutoffTimeConfiguration
     */
    id?: string;
}
/**
 *
 * @export
 * @interface DHLV2BusinessCredentials
 */
export interface DHLV2BusinessCredentials extends AbstractCarrierCredentials {
    /**
     * Abrechnungsnummer DHL Paket, displayed in the DHL Geschäftskundenportal under 'Vertragspositionen'
     * @type {string}
     * @memberof DHLV2BusinessCredentials
     */
    billingNumber: string;
    /**
     * Abrechnungsnummer DHL Retoure, displayed in the DHL Geschäftskundenportal under 'Vertragspositionen'
     * @type {string}
     * @memberof DHLV2BusinessCredentials
     */
    retoureBillingNumber?: string;
    /**
     * Abrechnungsnummer DHL international shipping, displayed in the DHL Geschäftskundenportal under 'Vertragspositionen'
     * @type {string}
     * @memberof DHLV2BusinessCredentials
     */
    internationalBillingNumber?: string;
    /**
     * Password you use to login to the DHL Geschäftskundenportal
     * @type {string}
     * @memberof DHLV2BusinessCredentials
     */
    dhlBusinessPassword: string;
    /**
     * Username (Benutzername) you use to login to the DHL Geschäftskundenportal
     * @type {string}
     * @memberof DHLV2BusinessCredentials
     */
    dhlBusinessUsername: string;
    /**
     * (optional) User group to use to obtain a label
     * @type {string}
     * @memberof DHLV2BusinessCredentials
     */
    dhlBusinessUsergroup?: string;
}
/**
 *
 * @export
 * @interface DHLV2CarrierCredentials
 */
export interface DHLV2CarrierCredentials extends AbstractCarrierCredentials {
    /**
     * Internal API Key to communicate with the DHL Api
     * @type {string}
     * @memberof DHLV2CarrierCredentials
     */
    apiKey: string;
    /**
     *
     * @type {DHLV2BusinessCredentials}
     * @memberof DHLV2CarrierCredentials
     */
    fallback?: DHLV2BusinessCredentials;
}
/**
 *
 * @export
 * @interface DecisionLog
 */
export interface DecisionLog extends VersionedResource {
    /**
     *
     * @type {string}
     * @memberof DecisionLog
     */
    id: string;
    /**
     *
     * @type {number}
     * @memberof DecisionLog
     */
    routingRun: number;
    /**
     *
     * @type {Array<FacilityDecision>}
     * @memberof DecisionLog
     */
    facilityDecisions: Array<FacilityDecision>;
    /**
     *
     * @type {OrderSplitDecision}
     * @memberof DecisionLog
     */
    orderSplitDecision?: OrderSplitDecision;
    /**
     *
     * @type {RoutingStatistics}
     * @memberof DecisionLog
     */
    statistics: RoutingStatistics;
    /**
     *
     * @type {RoutingResults}
     * @memberof DecisionLog
     */
    results: RoutingResults;
    /**
     *
     * @type {string}
     * @memberof DecisionLog
     */
    routingPlanRef: string;
}
/**
 *
 * @export
 * @interface DecisionLogFacilityInfo
 */
export interface DecisionLogFacilityInfo {
    /**
     *
     * @type {string}
     * @memberof DecisionLogFacilityInfo
     */
    name: string;
    /**
     *
     * @type {string}
     * @memberof DecisionLogFacilityInfo
     */
    facilityRef: string;
}
/**
 *
 * @export
 * @interface DecisionLogRef
 */
export interface DecisionLogRef {
    /**
     *
     * @type {number}
     * @memberof DecisionLogRef
     */
    routingRun?: number;
    /**
     * A reference to the finalizer decision log
     * @type {string}
     * @memberof DecisionLogRef
     */
    url: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum DecisionType {
    FENCE = 'FENCE',
    TOOLKIT = 'TOOLKIT',
    TOOLKITCOMPARISON = 'TOOLKITCOMPARISON',
    RATING = 'RATING'
}
/**
 *
 * @export
 * @interface DefaultPickingTimesConfiguration
 */
export interface DefaultPickingTimesConfiguration extends VersionedResource {
    /**
     *
     * @type {PickingTimes}
     * @memberof DefaultPickingTimesConfiguration
     */
    pickingTimes: PickingTimes;
}
/**
 *
 * @export
 * @interface DeleteRefuseReasonParameter
 */
export interface DeleteRefuseReasonParameter {
    /**
     *
     * @type {number}
     * @memberof DeleteRefuseReasonParameter
     */
    handoverConfigurationVersion: number;
}
/**
 *
 * @export
 * @interface DeliveryAddress
 */
export interface DeliveryAddress {
    /**
     *
     * @type {string}
     * @memberof DeliveryAddress
     */
    city: string;
    /**
     *
     * @type {string}
     * @memberof DeliveryAddress
     */
    companyName?: string;
    /**
     *
     * @type {string}
     * @memberof DeliveryAddress
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof DeliveryAddress
     */
    houseNumber?: string;
    /**
     *
     * @type {string}
     * @memberof DeliveryAddress
     */
    lastName?: string;
    /**
     *
     * @type {string}
     * @memberof DeliveryAddress
     */
    postalCode: string;
    /**
     *
     * @type {string}
     * @memberof DeliveryAddress
     */
    street: string;
}
/**
 *
 * @export
 * @interface DeliveryAddressWithType
 */
export interface DeliveryAddressWithType extends DeliveryAddress {
    /**
     *
     * @type {AddressType}
     * @memberof DeliveryAddressWithType
     */
    addressType: AddressType;
}
/**
 *
 * @export
 * @interface DeliveryArea
 */
export interface DeliveryArea {
    /**
     * A two-digit country code as per ISO 3166-1 alpha-2
     * @type {string}
     * @memberof DeliveryArea
     */
    country: string;
    /**
     *
     * @type {string}
     * @memberof DeliveryArea
     */
    postalCode: string;
}
/**
 *
 * @export
 * @interface DeliveryCost
 */
export interface DeliveryCost {
    /**
     * The cost of sending with a carrier
     * @type {number}
     * @memberof DeliveryCost
     */
    cost: number;
    /**
     * currency as 3 letter iso code
     * @type {string}
     * @memberof DeliveryCost
     */
    currency: string;
}
/**
 *
 * @export
 * @interface DeliveryEvent
 */
export interface DeliveryEvent {
    /**
     *
     * @type {DeliveryTarget}
     * @memberof DeliveryEvent
     */
    deliveryTarget: DeliveryTarget;
    /**
     *
     * @type {string}
     * @memberof DeliveryEvent
     */
    deliveryTrigger: DeliveryEvent.DeliveryTriggerEnum;
}

/**
 * @export
 * @namespace DeliveryEvent
 */
export namespace DeliveryEvent {
    /**
     * @export
     * @enum {string}
     */
    export enum DeliveryTriggerEnum {
        DEFAULT = 'DEFAULT'
    }
}
/**
 *
 * @export
 * @interface DeliveryEventTargetAddress
 */
export interface DeliveryEventTargetAddress {
    /**
     *
     * @type {string}
     * @memberof DeliveryEventTargetAddress
     */
    facilityRef: string;
    /**
     *
     * @type {TargetAddress}
     * @memberof DeliveryEventTargetAddress
     */
    targetAddress: TargetAddress;
    /**
     *
     * @type {DeliveryEvent}
     * @memberof DeliveryEventTargetAddress
     */
    deliveryEvent: DeliveryEvent;
}
/**
 *
 * @export
 * @interface DeliveryNote
 */
export interface DeliveryNote {
    /**
     *
     * @type {CompanyAddress}
     * @memberof DeliveryNote
     */
    companyAddress?: CompanyAddress;
    /**
     *
     * @type {DeliveryAddress}
     * @memberof DeliveryNote
     */
    deliveryAddress?: DeliveryAddress;
    /**
     * if this field is filled, the delivery address will be taken from here according to this sorting: PARCEL_LOCKER > POSTAL_ADDRESS > INVOICE_ADDRESS. Each type is only allowed once.
     * @type {Array<DeliveryAddressWithType>}
     * @memberof DeliveryNote
     */
    deliveryAddresses?: Array<DeliveryAddressWithType>;
    /**
     *
     * @type {Array<DeliveryNoteItem>}
     * @memberof DeliveryNote
     */
    items: Array<DeliveryNoteItem>;
    /**
     *
     * @type {OrderInformation}
     * @memberof DeliveryNote
     */
    orderInformation: OrderInformation;
}
/**
 *
 * @export
 * @interface DeliveryNoteConfiguration
 */
export interface DeliveryNoteConfiguration extends VersionedResource {
    /**
     *
     * @type {LocaleString}
     * @memberof DeliveryNoteConfiguration
     */
    articleIdLabel: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof DeliveryNoteConfiguration
     */
    articleTitleLabel: LocaleString;
    /**
     *
     * @type {CompanyAddress}
     * @memberof DeliveryNoteConfiguration
     */
    companyAddress?: CompanyAddress;
    /**
     *
     * @type {LocaleString}
     * @memberof DeliveryNoteConfiguration
     */
    description?: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof DeliveryNoteConfiguration
     */
    disclaimer?: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof DeliveryNoteConfiguration
     */
    headline: LocaleString;
    /**
     *
     * @type {string}
     * @memberof DeliveryNoteConfiguration
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof DeliveryNoteConfiguration
     */
    logoUrl?: string;
    /**
     *
     * @type {LocaleString}
     * @memberof DeliveryNoteConfiguration
     */
    substituteText?: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof DeliveryNoteConfiguration
     */
    orderDateLabel: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof DeliveryNoteConfiguration
     */
    orderNumberLabel: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof DeliveryNoteConfiguration
     */
    pageLabel: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof DeliveryNoteConfiguration
     */
    quantityLabel: LocaleString;
    /**
     *
     * @type {PdfBackgroundConfiguration}
     * @memberof DeliveryNoteConfiguration
     */
    pdfBackgroundConfiguration?: PdfBackgroundConfiguration;
}
/**
 *
 * @export
 * @interface DeliveryNoteConfigurationForUpsert
 */
export interface DeliveryNoteConfigurationForUpsert {
    /**
     *
     * @type {LocaleString}
     * @memberof DeliveryNoteConfigurationForUpsert
     */
    articleIdLabel: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof DeliveryNoteConfigurationForUpsert
     */
    articleTitleLabel: LocaleString;
    /**
     *
     * @type {CompanyAddress}
     * @memberof DeliveryNoteConfigurationForUpsert
     */
    companyAddress?: CompanyAddress;
    /**
     *
     * @type {LocaleString}
     * @memberof DeliveryNoteConfigurationForUpsert
     */
    description?: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof DeliveryNoteConfigurationForUpsert
     */
    disclaimer?: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof DeliveryNoteConfigurationForUpsert
     */
    headline: LocaleString;
    /**
     *
     * @type {NamedFile}
     * @memberof DeliveryNoteConfigurationForUpsert
     */
    logo?: NamedFile;
    /**
     *
     * @type {PdfBackgroundConfigurationForUpsert}
     * @memberof DeliveryNoteConfigurationForUpsert
     */
    pdfBackgroundConfiguration?: PdfBackgroundConfigurationForUpsert;
    /**
     *
     * @type {LocaleString}
     * @memberof DeliveryNoteConfigurationForUpsert
     */
    orderDateLabel: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof DeliveryNoteConfigurationForUpsert
     */
    orderNumberLabel: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof DeliveryNoteConfigurationForUpsert
     */
    pageLabel: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof DeliveryNoteConfigurationForUpsert
     */
    quantityLabel: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof DeliveryNoteConfigurationForUpsert
     */
    substituteText?: LocaleString;
    /**
     * Version field is used in the optimistic locking process. If the configuration doesn't exists, this field is ignored.
     * @type {number}
     * @memberof DeliveryNoteConfigurationForUpsert
     */
    version: number;
}
/**
 *
 * @export
 * @interface DeliveryNoteItem
 */
export interface DeliveryNoteItem {
    /**
     *
     * @type {string}
     * @memberof DeliveryNoteItem
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof DeliveryNoteItem
     */
    quantity: string;
    /**
     *
     * @type {string}
     * @memberof DeliveryNoteItem
     */
    title: string;
    /**
     * Titel of the item which is substituted through this item
     * @type {string}
     * @memberof DeliveryNoteItem
     */
    substitutes?: string;
}
/**
 *
 * @export
 * @interface DeliveryPreferences
 */
export interface DeliveryPreferences {
    /**
     *
     * @type {Array<CollectDelivery>}
     * @memberof DeliveryPreferences
     */
    collect?: Array<CollectDelivery>;
    /**
     *
     * @type {DeliveryPreferencesShipping}
     * @memberof DeliveryPreferences
     */
    shipping?: DeliveryPreferencesShipping;
    /**
     * @deprecated Use supplyingFacilities under collect
     * @type {Array<string>}
     * @memberof DeliveryPreferences
     */
    supplyingFacilities?: Array<string>;
    /**
     * At which time the result is expected.
     * @type {Date}
     * @memberof DeliveryPreferences
     */
    targetTime?: Date;
    /**
     *
     * @type {DeliveryReservationPreferences}
     * @memberof DeliveryPreferences
     */
    reservationPreferences?: DeliveryReservationPreferences;
}
/**
 *
 * @export
 * @interface DeliveryPreferencesShipping
 */
export interface DeliveryPreferencesShipping {
    /**
     *
     * @type {Array<PreferredCarrier>}
     * @memberof DeliveryPreferencesShipping
     */
    preferredCarriers?: Array<PreferredCarrier>;
    /**
     *
     * @type {Array<PreferredCarrierWithProduct>}
     * @memberof DeliveryPreferencesShipping
     */
    preferredCarriersWithProduct?: Array<PreferredCarrierWithProduct>;
    /**
     *
     * @type {Array<PreselectedFacility>}
     * @memberof DeliveryPreferencesShipping
     */
    preselectedFacilities?: Array<PreselectedFacility>;
    /**
     * DELIVERY: The parcel will reach the recipient according to the cycle time of the carrier, typically 1-3 days when shipping nationaly. SAMEDAY: The parcel will reach the recipient the same day when ordering.
     * @type {string}
     * @memberof DeliveryPreferencesShipping
     */
    serviceLevel?: DeliveryPreferencesShipping.ServiceLevelEnum;
    /**
     *
     * @type {CarrierProductCategory}
     * @memberof DeliveryPreferencesShipping
     */
    carrierProductCategory?: CarrierProductCategory;
    /**
     *
     * @type {Date}
     * @memberof DeliveryPreferencesShipping
     */
    desiredDeliveryTime?: Date;
}

/**
 * @export
 * @namespace DeliveryPreferencesShipping
 */
export namespace DeliveryPreferencesShipping {
    /**
     * @export
     * @enum {string}
     */
    export enum ServiceLevelEnum {
        DELIVERY = 'DELIVERY',
        SAMEDAY = 'SAMEDAY'
    }
}
/**
 *
 * @export
 * @interface DeliveryPromiseCollect
 */
export interface DeliveryPromiseCollect extends BasicDeliveryPromiseShipment {
    /**
     *
     * @type {Date}
     * @memberof DeliveryPromiseCollect
     */
    targetTime: Date;
}
/**
 *
 * @export
 * @interface DeliveryPromiseLineItem
 */
export interface DeliveryPromiseLineItem {
    /**
     *
     * @type {string}
     * @memberof DeliveryPromiseLineItem
     */
    tenantArticleId?: string;
    /**
     *
     * @type {string}
     * @memberof DeliveryPromiseLineItem
     */
    title?: string;
    /**
     *
     * @type {number}
     * @memberof DeliveryPromiseLineItem
     */
    quantity?: number;
    /**
     *
     * @type {number}
     * @memberof DeliveryPromiseLineItem
     */
    available?: number;
    /**
     *
     * @type {string}
     * @memberof DeliveryPromiseLineItem
     */
    outOfStockBehaviour?: DeliveryPromiseLineItem.OutOfStockBehaviourEnum;
    /**
     *
     * @type {AvailabilityTimeframe}
     * @memberof DeliveryPromiseLineItem
     */
    availabilityTimeframe?: AvailabilityTimeframe;
}

/**
 * @export
 * @namespace DeliveryPromiseLineItem
 */
export namespace DeliveryPromiseLineItem {
    /**
     * @export
     * @enum {string}
     */
    export enum OutOfStockBehaviourEnum {
        BACKORDER = 'BACKORDER'
    }
}
/**
 *
 * @export
 * @interface DeliveryPromiseShipment
 */
export interface DeliveryPromiseShipment extends BasicDeliveryPromiseShipment {
    /**
     *
     * @type {Array<PromiseCarrier>}
     * @memberof DeliveryPromiseShipment
     */
    carriers: Array<PromiseCarrier>;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum DeliveryReservationMode {
    SCHEDULED = 'SCHEDULED',
    ASAP = 'ASAP',
    ALAP = 'ALAP'
}
/**
 *
 * @export
 * @interface DeliveryReservationPreferences
 */
export interface DeliveryReservationPreferences {
    /**
     *
     * @type {DeliveryReservationMode}
     * @memberof DeliveryReservationPreferences
     */
    mode: DeliveryReservationMode;
    /**
     *
     * @type {Date}
     * @memberof DeliveryReservationPreferences
     */
    reservationTime?: Date;
}
/**
 * The destination for a delivery
 * @export
 * @enum {string}
 */
export enum DeliveryTarget {
    STORE = 'SHIP_TO_STORE',
    CUSTOMER = 'SHIP_TO_CUSTOMER'
}
/**
 *
 * @export
 * @interface DhlV2CarrierConfiguration
 */
export interface DhlV2CarrierConfiguration extends CarrierConfiguration {
    /**
     *
     * @type {FacilityAddress}
     * @memberof DhlV2CarrierConfiguration
     */
    alternativeReturnAddress?: FacilityAddress;
    /**
     *
     * @type {string}
     * @memberof DhlV2CarrierConfiguration
     */
    trackAndTraceUrl?: string;
}
/**
 *
 * @export
 * @interface DhlV2FacilityCarrierConfiguration
 */
export interface DhlV2FacilityCarrierConfiguration extends AbstractFacilityCarrierConfiguration {
    /**
     *
     * @type {FacilityAddress}
     * @memberof DhlV2FacilityCarrierConfiguration
     */
    alternativeReturnAddress?: FacilityAddress;
    /**
     *
     * @type {string}
     * @memberof DhlV2FacilityCarrierConfiguration
     */
    trackAndTraceUrl?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum DocumentCategory {
    EXTERNAL = 'EXTERNAL',
    DELIVERYNOTE = 'DELIVERYNOTE',
    RETURNNOTE = 'RETURNNOTE',
    SENDLABEL = 'SENDLABEL',
    RETURNLABEL = 'RETURNLABEL'
}
/**
 *
 * @export
 * @interface DocumentHandling
 */
export interface DocumentHandling {
    /**
     *
     * @type {DocumentHandlingSendLabel}
     * @memberof DocumentHandling
     */
    sendLabel: DocumentHandlingSendLabel;
}
/**
 *
 * @export
 * @interface DocumentHandlingSendLabel
 */
export interface DocumentHandlingSendLabel {
    /**
     *
     * @type {boolean}
     * @memberof DocumentHandlingSendLabel
     */
    enabled: boolean;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum DocumentOperations {
    PRINT = 'PRINT',
    VIEW = 'VIEW'
}
/**
 *
 * @export
 * @interface DocumentSet
 */
export interface DocumentSet extends VersionedResource {
    /**
     *
     * @type {string}
     * @memberof DocumentSet
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof DocumentSet
     */
    facilityRef?: string;
    /**
     *
     * @type {Array<PrintableDocument>}
     * @memberof DocumentSet
     */
    documents?: Array<PrintableDocument>;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum DocumentStatus {
    AVAILABLE = 'AVAILABLE',
    LOADING = 'LOADING',
    REQUESTABLE = 'REQUESTABLE',
    CANCELED = 'CANCELED',
    WAITINGFORINPUT = 'WAITING_FOR_INPUT'
}
/**
 *
 * @export
 * @enum {string}
 */
export enum DocumentType {
    PDF = 'PDF',
    PNG = 'PNG',
    JPG = 'JPG',
    GIF = 'GIF',
    JPEG = 'JPEG'
}
/**
 *
 * @export
 * @interface DomainConfiguration
 */
export interface DomainConfiguration extends VersionedResource {
    /**
     * User's default domain for authentication
     * @type {string}
     * @memberof DomainConfiguration
     */
    value: string;
    /**
     *
     * @type {string}
     * @memberof DomainConfiguration
     */
    id?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum DomainStatus {
    PENDING = 'PENDING',
    CREATED = 'CREATED',
    INPROGRESS = 'IN_PROGRESS',
    STUCK = 'STUCK',
    FINISHED = 'FINISHED',
    CANCELED = 'CANCELED',
    OBSOLETE = 'OBSOLETE'
}
/**
 * This item represent a process status change triggered by a specific domain.
 * @export
 * @interface DomainStatusHistoryItem
 */
export interface DomainStatusHistoryItem {
    /**
     * Timestamp of the moment at which the state was notified by the domain.
     * @type {Date}
     * @memberof DomainStatusHistoryItem
     */
    timestamp: Date;
    /**
     *
     * @type {DomainType}
     * @memberof DomainStatusHistoryItem
     */
    domain: DomainType;
    /**
     * The id of the domain entity that caused the status change.
     * @type {string}
     * @memberof DomainStatusHistoryItem
     */
    domainRef: string;
    /**
     *
     * @type {DomainStatus}
     * @memberof DomainStatusHistoryItem
     */
    domainEntityProcessStatus: DomainStatus;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum DomainType {
    ORDER = 'ORDER',
    ROUTINGPLAN = 'ROUTING_PLAN',
    PICKJOB = 'PICKJOB',
    PACKJOB = 'PACKJOB',
    SHIPMENT = 'SHIPMENT',
    HANDOVER = 'HANDOVER',
    RETURN = 'RETURN',
    SERVICEJOB = 'SERVICE_JOB',
    ITEMRETURNJOB = 'ITEM_RETURN_JOB'
}
/**
 *
 * @export
 * @interface DpdChCarrierConfiguration
 */
export interface DpdChCarrierConfiguration extends CarrierConfiguration {
    /**
     *
     * @type {FacilityAddress}
     * @memberof DpdChCarrierConfiguration
     */
    alternativeSendAddress?: FacilityAddress;
    /**
     *
     * @type {string}
     * @memberof DpdChCarrierConfiguration
     */
    trackAndTraceUrl?: string;
}
/**
 *
 * @export
 * @interface DpdChCarrierCredentials
 */
export interface DpdChCarrierCredentials extends AbstractCarrierCredentials {
    /**
     * Delis ID to create a DPD CH auth token
     * @type {string}
     * @memberof DpdChCarrierCredentials
     */
    delisId: string;
    /**
     * Password to create a DPD CH auth token
     * @type {string}
     * @memberof DpdChCarrierCredentials
     */
    password: string;
}
/**
 *
 * @export
 * @interface DpdChFacilityCarrierConfiguration
 */
export interface DpdChFacilityCarrierConfiguration extends AbstractFacilityCarrierConfiguration {
    /**
     *
     * @type {string}
     * @memberof DpdChFacilityCarrierConfiguration
     */
    depot?: string;
    /**
     *
     * @type {string}
     * @memberof DpdChFacilityCarrierConfiguration
     */
    trackAndTraceUrl?: string;
}
/**
 *
 * @export
 * @interface Editor
 */
export interface Editor {
    /**
     * ID of the user who edits the pickjob
     * @type {string}
     * @memberof Editor
     */
    userId?: string;
    /**
     * username of the user who edits the pickjob
     * @type {string}
     * @memberof Editor
     */
    username: string;
}
/**
 *
 * @export
 * @interface EmailNotificationChannel
 */
export interface EmailNotificationChannel {
    /**
     *
     * @type {boolean}
     * @memberof EmailNotificationChannel
     */
    enabled: boolean;
    /**
     * Supported events for triggering external notifications:        - PICK_JOB_CREATED: Available for facility scoped config and tenant wide config       - ROUTING_PLAN_NOT_ROUTABLE: Available for tenant wide config       - ROUTING_PLAN_WAITING: Available for tenant wide config
     * @type {Array<string>}
     * @memberof EmailNotificationChannel
     */
    events: Array<EmailNotificationChannel.EventsEnum>;
    /**
     *
     * @type {string}
     * @memberof EmailNotificationChannel
     */
    type: string;
    /**
     *
     * @type {string}
     * @memberof EmailNotificationChannel
     */
    id: string;
    /**
     *
     * @type {Array<EmailReceiver>}
     * @memberof EmailNotificationChannel
     */
    receiver: Array<EmailReceiver>;
}

/**
 * @export
 * @namespace EmailNotificationChannel
 */
export namespace EmailNotificationChannel {
    /**
     * @export
     * @enum {string}
     */
    export enum EventsEnum {
        PICKJOBCREATED = 'PICK_JOB_CREATED',
        ROUTINGPLANNOTROUTABLE = 'ROUTING_PLAN_NOT_ROUTABLE',
        ROUTINGPLANWAITING = 'ROUTING_PLAN_WAITING'
    }
}
/**
 *
 * @export
 * @interface EmailNotificationChannelForCreation
 */
export interface EmailNotificationChannelForCreation {
    /**
     *
     * @type {boolean}
     * @memberof EmailNotificationChannelForCreation
     */
    enabled: boolean;
    /**
     * Supported events for triggering external notifications:        - PICK_JOB_CREATED: Available for facility scoped config and tenant wide config       - ROUTING_PLAN_NOT_ROUTABLE: Available for tenant wide config       - ROUTING_PLAN_WAITING: Available for tenant wide config
     * @type {Array<string>}
     * @memberof EmailNotificationChannelForCreation
     */
    events: Array<EmailNotificationChannelForCreation.EventsEnum>;
    /**
     *
     * @type {string}
     * @memberof EmailNotificationChannelForCreation
     */
    type: string;
    /**
     *
     * @type {Array<EmailReceiver>}
     * @memberof EmailNotificationChannelForCreation
     */
    receiver: Array<EmailReceiver>;
}

/**
 * @export
 * @namespace EmailNotificationChannelForCreation
 */
export namespace EmailNotificationChannelForCreation {
    /**
     * @export
     * @enum {string}
     */
    export enum EventsEnum {
        PICKJOBCREATED = 'PICK_JOB_CREATED',
        ROUTINGPLANNOTROUTABLE = 'ROUTING_PLAN_NOT_ROUTABLE',
        ROUTINGPLANWAITING = 'ROUTING_PLAN_WAITING'
    }
}
/**
 *
 * @export
 * @interface EmailReceiver
 */
export interface EmailReceiver {
    /**
     *
     * @type {string}
     * @memberof EmailReceiver
     */
    email: string;
    /**
     *
     * @type {SupportedLocale}
     * @memberof EmailReceiver
     */
    language: SupportedLocale;
}
/**
 *
 * @export
 * @interface Entity
 */
export interface Entity extends VersionedResource {
    /**
     * The id of the entity.
     * @type {string}
     * @memberof Entity
     */
    id: string;
}
/**
 *
 * @export
 * @interface ErrorInner
 */
export interface ErrorInner {
    /**
     *
     * @type {string}
     * @memberof ErrorInner
     */
    description?: string;
    /**
     * The version provided within an invalid request.
     * @type {number}
     * @memberof ErrorInner
     */
    requestVersion?: number;
    /**
     *
     * @type {string}
     * @memberof ErrorInner
     */
    summary: string;
    /**
     *
     * @type {number}
     * @memberof ErrorInner
     */
    version?: number;
}
/**
 *
 * @export
 * @interface EstimatedDeliveryTime
 */
export interface EstimatedDeliveryTime {
    /**
     * Minimum total delivery time in days
     * @type {number}
     * @memberof EstimatedDeliveryTime
     */
    minDeliveryDays: number;
    /**
     * Maximum total delivery time in days
     * @type {number}
     * @memberof EstimatedDeliveryTime
     */
    maxDeliveryDays: number;
}
/**
 *
 * @export
 * @interface ExpectedLineItem
 */
export interface ExpectedLineItem extends OrderLineItem {
    /**
     *
     * @type {string}
     * @memberof ExpectedLineItem
     */
    transferId: string;
    /**
     *
     * @type {string}
     * @memberof ExpectedLineItem
     */
    facilityRef: string;
}
/**
 *
 * @export
 * @interface ExpectedPickLineItem
 */
export interface ExpectedPickLineItem extends ExpectedPickLineItemForCreation {
    /**
     * The id of this lineItem. It is generated during creation automatically and suits as the primary identifier of the described entity.
     * @type {string}
     * @memberof ExpectedPickLineItem
     */
    id: string;
}
/**
 *
 * @export
 * @interface ExpectedPickLineItemForCreation
 */
export interface ExpectedPickLineItemForCreation extends PickLineItemForCreation {
    /**
     *
     * @type {string}
     * @memberof ExpectedPickLineItemForCreation
     */
    transferId: string;
}
/**
 *
 * @export
 * @interface ExpiryConfiguration
 */
export interface ExpiryConfiguration extends VersionedResource {
    /**
     *
     * @type {number}
     * @memberof ExpiryConfiguration
     */
    provisioningTimeOffsetInMinutes: number;
}
/**
 *
 * @export
 * @interface ExpiryEntity
 */
export interface ExpiryEntity {
    /**
     * Generated identifier of this entity
     * @type {string}
     * @memberof ExpiryEntity
     */
    id: string;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof ExpiryEntity
     */
    version: number;
    /**
     * The date this entity was created at the platform. This value is generated by the service.
     * @type {Date}
     * @memberof ExpiryEntity
     */
    created: Date;
    /**
     * The date this entity was modified last. This value is generated by the service.
     * @type {Date}
     * @memberof ExpiryEntity
     */
    lastModified: Date;
    /**
     * Reference to the Process of this Entity
     * @type {string}
     * @memberof ExpiryEntity
     */
    processRef: string;
    /**
     * Planned time where this entity should be provided or handed over to the customer
     * @type {Date}
     * @memberof ExpiryEntity
     */
    provisioningTime: Date;
    /**
     * Time where the connected process expires, if not fulfilled
     * @type {Date}
     * @memberof ExpiryEntity
     */
    expiryTime: Date;
    /**
     *
     * @type {ExpiryEntityStatus}
     * @memberof ExpiryEntity
     */
    status: ExpiryEntityStatus;
}
/**
 *
 * @export
 * @interface ExpiryEntityFilter
 */
export interface ExpiryEntityFilter {
    /**
     * process of the entity you want to load
     * @type {string}
     * @memberof ExpiryEntityFilter
     */
    processRef?: string;
    /**
     *
     * @type {ExpiryEntityStatus}
     * @memberof ExpiryEntityFilter
     */
    status?: ExpiryEntityStatus;
    /**
     * start date range for expiryTime
     * @type {any}
     * @memberof ExpiryEntityFilter
     */
    startDate?: any;
    /**
     * end date range for expiryTime
     * @type {any}
     * @memberof ExpiryEntityFilter
     */
    endDate?: any;
}
/**
 *
 * @export
 * @interface ExpiryEntityForCreation
 */
export interface ExpiryEntityForCreation {
    /**
     * Reference to the Process for which this expiry entity will be created
     * @type {string}
     * @memberof ExpiryEntityForCreation
     */
    processRef: string;
    /**
     * Planned time where this entity should be provided or handed over to the customer
     * @type {Date}
     * @memberof ExpiryEntityForCreation
     */
    provisioningTime: Date;
    /**
     *
     * @type {ExpiryEntityStatus}
     * @memberof ExpiryEntityForCreation
     */
    status: ExpiryEntityStatus;
}
/**
 *
 * @export
 * @interface ExpiryEntityForUpdate
 */
export interface ExpiryEntityForUpdate {
    /**
     * version of the entity you want to alter
     * @type {number}
     * @memberof ExpiryEntityForUpdate
     */
    version: number;
    /**
     * Planned time where this entity should be provided or handed over to the customer
     * @type {Date}
     * @memberof ExpiryEntityForUpdate
     */
    provisioningTime?: Date;
    /**
     *
     * @type {ExpiryEntityStatus}
     * @memberof ExpiryEntityForUpdate
     */
    status?: ExpiryEntityStatus;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ExpiryEntityStatus {
    ACTIVE = 'ACTIVE',
    INACTIVE = 'INACTIVE'
}
/**
 *
 * @export
 * @interface ExternalAction
 */
export interface ExternalAction extends ExternalActionForReplacement {
    /**
     * The date this entity was created at the platform. This value is generated by the service.
     * @type {Date}
     * @memberof ExternalAction
     */
    created?: Date;
    /**
     * The date this entity was modified last. This value is generated by the service.
     * @type {Date}
     * @memberof ExternalAction
     */
    lastModified?: Date;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof ExternalAction
     */
    version: number;
    /**
     * The id of this external action. It is generated during creation automatically and suits as the primary identifier of the described entity.
     * @type {string}
     * @memberof ExternalAction
     */
    id: string;
    /**
     * Id of the global process related to this entity.
     * @type {string}
     * @memberof ExternalAction
     */
    processRef: string;
    /**
     * The name of this external action.
     * @type {string}
     * @memberof ExternalAction
     */
    name: string;
}
/**
 *
 * @export
 * @interface ExternalActionForCreation
 */
export interface ExternalActionForCreation {
    /**
     * Id of the global process related to this entity.
     * @type {string}
     * @memberof ExternalActionForCreation
     */
    processRef: string;
    /**
     *
     * @type {LocaleString}
     * @memberof ExternalActionForCreation
     */
    nameLocalized: LocaleString;
    /**
     *
     * @type {Array<string>}
     * @memberof ExternalActionForCreation
     */
    groups: Array<string>;
    /**
     *
     * @type {ExternalFormActionDefinition | ExternalLinkActionDefinition}
     * @memberof ExternalActionForCreation
     */
    action: ExternalFormActionDefinition | ExternalLinkActionDefinition;
}
/**
 *
 * @export
 * @interface ExternalActionForReplacement
 */
export interface ExternalActionForReplacement {
    /**
     *
     * @type {number}
     * @memberof ExternalActionForReplacement
     */
    version: number;
    /**
     *
     * @type {LocaleString}
     * @memberof ExternalActionForReplacement
     */
    nameLocalized: LocaleString;
    /**
     *
     * @type {Array<string>}
     * @memberof ExternalActionForReplacement
     */
    groups: Array<string>;
    /**
     *
     * @type {ExternalFormActionDefinition | ExternalLinkActionDefinition}
     * @memberof ExternalActionForReplacement
     */
    action: ExternalFormActionDefinition | ExternalLinkActionDefinition;
}
/**
 *
 * @export
 * @interface ExternalActionLog
 */
export interface ExternalActionLog extends ExternalActionLogForCreation {
    /**
     *
     * @type {string}
     * @memberof ExternalActionLog
     */
    id: string;
    /**
     * Id of the refered external action.
     * @type {string}
     * @memberof ExternalActionLog
     */
    externalActionRef: string;
    /**
     *
     * @type {Editor}
     * @memberof ExternalActionLog
     */
    editor: Editor;
    /**
     * The date this action has been executed
     * @type {Date}
     * @memberof ExternalActionLog
     */
    created: Date;
}
/**
 *
 * @export
 * @interface ExternalActionLogForCreation
 */
export interface ExternalActionLogForCreation {
    /**
     *
     * @type {boolean}
     * @memberof ExternalActionLogForCreation
     */
    requiresAnonymization: boolean;
    /**
     *
     * @type {ExternalLinkActionLogPayload | ExternalFormActionLogPayload}
     * @memberof ExternalActionLogForCreation
     */
    actionPayload: ExternalLinkActionLogPayload | ExternalFormActionLogPayload;
}
/**
 *
 * @export
 * @interface ExternalActionLogs
 */
export interface ExternalActionLogs {
    /**
     *
     * @type {Array<ExternalActionLog>}
     * @memberof ExternalActionLogs
     */
    externalActionLogs: Array<ExternalActionLog>;
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof ExternalActionLogs
     */
    total: number;
}
/**
 * The type of an external action
 * @export
 * @enum {string}
 */
export enum ExternalActionType {
    BLANKLINK = 'BLANK_LINK',
    FORM = 'FORM'
}
/**
 *
 * @export
 * @interface ExternalActions
 */
export interface ExternalActions {
    /**
     *
     * @type {Array<ExternalAction>}
     * @memberof ExternalActions
     */
    externalActions: Array<ExternalAction>;
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof ExternalActions
     */
    total: number;
}
/**
 *
 * @export
 * @interface ExternalDocument
 */
export interface ExternalDocument extends VersionedResource {
    /**
     *
     * @type {DocumentType}
     * @memberof ExternalDocument
     */
    type: DocumentType;
    /**
     *
     * @type {Section}
     * @memberof ExternalDocument
     */
    section: Section;
    /**
     *
     * @type {string}
     * @memberof ExternalDocument
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof ExternalDocument
     */
    path?: string;
    /**
     *
     * @type {string}
     * @memberof ExternalDocument
     */
    id: string;
    /**
     *
     * @type {number}
     * @memberof ExternalDocument
     */
    priority?: number;
}
/**
 *
 * @export
 * @interface ExternalDocumentContentForUpdate
 */
export interface ExternalDocumentContentForUpdate {
    /**
     *
     * @type {NamedFile}
     * @memberof ExternalDocumentContentForUpdate
     */
    file: NamedFile;
    /**
     * Version of documentSet to which this document belongs.
     * @type {number}
     * @memberof ExternalDocumentContentForUpdate
     */
    documentSetVersion: number;
}
/**
 *
 * @export
 * @interface ExternalDocumentForCreation
 */
export interface ExternalDocumentForCreation {
    /**
     *
     * @type {DocumentType}
     * @memberof ExternalDocumentForCreation
     */
    type: DocumentType;
    /**
     *
     * @type {Section}
     * @memberof ExternalDocumentForCreation
     */
    section: Section;
    /**
     *
     * @type {NamedFile}
     * @memberof ExternalDocumentForCreation
     */
    file?: NamedFile;
    /**
     *
     * @type {number}
     * @memberof ExternalDocumentForCreation
     */
    priority?: number;
}
/**
 *
 * @export
 * @interface ExternalDocumentForUpdate
 */
export interface ExternalDocumentForUpdate extends VersionedResource {
    /**
     *
     * @type {NamedFile}
     * @memberof ExternalDocumentForUpdate
     */
    file: NamedFile;
}
/**
 *
 * @export
 * @interface ExternalDocumentInSectionForCreation
 */
export interface ExternalDocumentInSectionForCreation {
    /**
     *
     * @type {DocumentType}
     * @memberof ExternalDocumentInSectionForCreation
     */
    type: DocumentType;
    /**
     *
     * @type {NamedFile}
     * @memberof ExternalDocumentInSectionForCreation
     */
    file?: NamedFile;
    /**
     *
     * @type {number}
     * @memberof ExternalDocumentInSectionForCreation
     */
    priority?: number;
}
/**
 *
 * @export
 * @interface ExternalFormActionButton
 */
export interface ExternalFormActionButton {
    /**
     *
     * @type {LocaleString}
     * @memberof ExternalFormActionButton
     */
    labelLocalized: LocaleString;
    /**
     *
     * @type {string}
     * @memberof ExternalFormActionButton
     */
    label?: string;
}
/**
 *
 * @export
 * @interface ExternalFormActionDefinition
 */
export interface ExternalFormActionDefinition {
    /**
     *
     * @type {ExternalActionType}
     * @memberof ExternalFormActionDefinition
     */
    type: ExternalActionType;
    /**
     *
     * @type {Array<ExternalFormActionElement | ExternalFormActionInputElement>}
     * @memberof ExternalFormActionDefinition
     */
    elements: Array<ExternalFormActionElement | ExternalFormActionInputElement>;
    /**
     *
     * @type {ExternalFormActionButton}
     * @memberof ExternalFormActionDefinition
     */
    success: ExternalFormActionButton;
    /**
     *
     * @type {ExternalFormActionButton}
     * @memberof ExternalFormActionDefinition
     */
    cancel?: ExternalFormActionButton;
}
/**
 *
 * @export
 * @interface ExternalFormActionElement
 */
export interface ExternalFormActionElement {
    /**
     * it is only allowed to set a style for elementType TEXT
     * @type {string}
     * @memberof ExternalFormActionElement
     */
    style?: ExternalFormActionElement.StyleEnum;
    /**
     *
     * @type {LocaleString}
     * @memberof ExternalFormActionElement
     */
    titleLocalized: LocaleString;
    /**
     *
     * @type {string}
     * @memberof ExternalFormActionElement
     */
    title?: string;
    /**
     *
     * @type {ExternalFormActionElementType}
     * @memberof ExternalFormActionElement
     */
    elementType: ExternalFormActionElementType;
}

/**
 * @export
 * @namespace ExternalFormActionElement
 */
export namespace ExternalFormActionElement {
    /**
     * @export
     * @enum {string}
     */
    export enum StyleEnum {
        BODY = 'BODY',
        INFO = 'INFO',
        WARN = 'WARN',
        ERROR = 'ERROR'
    }
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ExternalFormActionElementType {
    TEXTINPUT = 'TEXT_INPUT',
    HEADLINE = 'HEADLINE',
    SUBHEADLINE = 'SUBHEADLINE',
    TEXT = 'TEXT'
}
/**
 *
 * @export
 * @interface ExternalFormActionInputElement
 */
export interface ExternalFormActionInputElement {
    /**
     *
     * @type {string}
     * @memberof ExternalFormActionInputElement
     */
    elementId: string;
    /**
     *
     * @type {boolean}
     * @memberof ExternalFormActionInputElement
     */
    isMandatory?: boolean;
    /**
     *
     * @type {StringValidation | IntegerValidation | FloatValidation}
     * @memberof ExternalFormActionInputElement
     */
    validation?: StringValidation | IntegerValidation | FloatValidation;
    /**
     *
     * @type {string}
     * @memberof ExternalFormActionInputElement
     */
    style?: ExternalFormActionInputElement.StyleEnum;
    /**
     *
     * @type {LocaleString}
     * @memberof ExternalFormActionInputElement
     */
    titleLocalized: LocaleString;
    /**
     *
     * @type {string}
     * @memberof ExternalFormActionInputElement
     */
    title?: string;
    /**
     *
     * @type {ExternalFormActionElementType}
     * @memberof ExternalFormActionInputElement
     */
    elementType: ExternalFormActionElementType;
}

/**
 * @export
 * @namespace ExternalFormActionInputElement
 */
export namespace ExternalFormActionInputElement {
    /**
     * @export
     * @enum {string}
     */
    export enum StyleEnum {
        BODY = 'BODY',
        INFO = 'INFO',
        WARN = 'WARN',
        ERROR = 'ERROR'
    }
}
/**
 *
 * @export
 * @interface ExternalFormActionLogPayload
 */
export interface ExternalFormActionLogPayload {
    /**
     *
     * @type {Array<ExternalFormActionLogPayloadElement>}
     * @memberof ExternalFormActionLogPayload
     */
    elements: Array<ExternalFormActionLogPayloadElement>;
}
/**
 *
 * @export
 * @interface ExternalFormActionLogPayloadElement
 */
export interface ExternalFormActionLogPayloadElement {
    /**
     *
     * @type {string}
     * @memberof ExternalFormActionLogPayloadElement
     */
    elementId: string;
    /**
     *
     * @type {string}
     * @memberof ExternalFormActionLogPayloadElement
     */
    value: string;
}
/**
 *
 * @export
 * @interface ExternalLinkActionDefinition
 */
export interface ExternalLinkActionDefinition {
    /**
     *
     * @type {ExternalActionType}
     * @memberof ExternalLinkActionDefinition
     */
    type: ExternalActionType;
    /**
     *
     * @type {string}
     * @memberof ExternalLinkActionDefinition
     */
    linkUrl: string;
}
/**
 *
 * @export
 * @interface ExternalLinkActionLogPayload
 */
export interface ExternalLinkActionLogPayload {
    /**
     * The date when this link was opened.
     * @type {Date}
     * @memberof ExternalLinkActionLogPayload
     */
    linkOpenedAt: Date;
}
/**
 *
 * @export
 * @interface ExternalPrintableDocumentForCreation
 */
export interface ExternalPrintableDocumentForCreation {
    /**
     *
     * @type {DocumentType}
     * @memberof ExternalPrintableDocumentForCreation
     */
    type: DocumentType;
    /**
     *
     * @type {NamedFile}
     * @memberof ExternalPrintableDocumentForCreation
     */
    file?: NamedFile;
    /**
     *
     * @type {number}
     * @memberof ExternalPrintableDocumentForCreation
     */
    priority?: number;
    /**
     * Offered operations for this document
     * @type {Array<DocumentOperations>}
     * @memberof ExternalPrintableDocumentForCreation
     */
    operations?: Array<DocumentOperations>;
}
/**
 *
 * @export
 * @interface Facility
 */
export interface Facility extends FacilityForCreation {
    /**
     * The date this entity was created at the platform. This value is generated by the service.
     * @type {Date}
     * @memberof Facility
     */
    created?: Date;
    /**
     * The date this entity was modified last. This value is generated by the service.
     * @type {Date}
     * @memberof Facility
     */
    lastModified?: Date;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof Facility
     */
    version: number;
    /**
     *
     * @type {FacilityAddress}
     * @memberof Facility
     */
    address: FacilityAddress;
    /**
     *
     * @type {Array<LinkedConfiguration>}
     * @memberof Facility
     */
    configs?: Array<LinkedConfiguration>;
    /**
     * The id of this facility. It is generated during creation automatically and suits as the primary identifier of the described entity.
     * @type {string}
     * @memberof Facility
     */
    id: string;
    /**
     *
     * @type {FacilityStatus}
     * @memberof Facility
     */
    status: FacilityStatus;
}

/**
 * @export
 * @namespace Facility
 */
export namespace Facility {
}
/**
 *
 * @export
 * @interface FacilityActionsParameter
 */
export interface FacilityActionsParameter {
}
/**
 *
 * @export
 * @interface FacilityAddress
 */
export interface FacilityAddress extends FacilityAddressForCreation {
    /**
     *
     * @type {TimeZone}
     * @memberof FacilityAddress
     */
    resolvedTimeZone?: TimeZone;
}
/**
 *
 * @export
 * @interface FacilityAddressForCreation
 */
export interface FacilityAddressForCreation extends Address {
    /**
     *
     * @type {string}
     * @memberof FacilityAddressForCreation
     */
    companyName: string;
    /**
     *
     * @type {Array<FacilityAddressForCreationEmailAddresses>}
     * @memberof FacilityAddressForCreation
     */
    emailAddresses?: Array<FacilityAddressForCreationEmailAddresses>;
    /**
     *
     * @type {Coordinates}
     * @memberof FacilityAddressForCreation
     */
    resolvedCoordinates?: Coordinates;
}
/**
 *
 * @export
 * @interface FacilityAddressForCreationEmailAddresses
 */
export interface FacilityAddressForCreationEmailAddresses {
    /**
     * Human readable information who is the recipient for emails sent to this address.
     * @type {string}
     * @memberof FacilityAddressForCreationEmailAddresses
     */
    recipient?: string;
    /**
     *
     * @type {string}
     * @memberof FacilityAddressForCreationEmailAddresses
     */
    value: string;
}
/**
 *
 * @export
 * @interface FacilityCarrierConnection
 */
export interface FacilityCarrierConnection extends VersionedResource {
    /**
     *
     * @type {string}
     * @memberof FacilityCarrierConnection
     */
    id: string;
    /**
     * The id of the facility reference.
     * @type {string}
     * @memberof FacilityCarrierConnection
     */
    facilityRef: string;
    /**
     * ID that references the configured carrier.
     * @type {string}
     * @memberof FacilityCarrierConnection
     */
    carrierRef: string;
    /**
     *
     * @type {CarrierDeliveryType}
     * @memberof FacilityCarrierConnection
     */
    deliveryType?: CarrierDeliveryType;
    /**
     *
     * @type {string}
     * @memberof FacilityCarrierConnection
     */
    key: string;
    /**
     * Facility specific configuration for this carrier
     * @type {GlsFacilityCarrierConfiguration | AngelFacilityCarrierConfiguration | PostNLFacilityCarrierConfiguration | DpdChFacilityCarrierConfiguration | DhlV2FacilityCarrierConfiguration | VceFacilityCarrierConfiguration | BringFacilityCarrierConfiguration | FedExFacilityCarrierConfiguration}
     * @memberof FacilityCarrierConnection
     */
    configuration?: GlsFacilityCarrierConfiguration | AngelFacilityCarrierConfiguration | PostNLFacilityCarrierConfiguration | DpdChFacilityCarrierConfiguration | DhlV2FacilityCarrierConfiguration | VceFacilityCarrierConfiguration | BringFacilityCarrierConfiguration | FedExFacilityCarrierConfiguration;
    /**
     * Facility specific credentials for this carrier
     * @type {DHLV2BusinessCredentials | DpdChCarrierCredentials | PostNLCarrierCredentials | VceCarrierCredentials}
     * @memberof FacilityCarrierConnection
     */
    credentials?: DHLV2BusinessCredentials | DpdChCarrierCredentials | PostNLCarrierCredentials | VceCarrierCredentials;
    /**
     *
     * @type {CutoffTime}
     * @memberof FacilityCarrierConnection
     */
    cutoffTime?: CutoffTime;
    /**
     *
     * @type {CarrierCutoffTimes}
     * @memberof FacilityCarrierConnection
     */
    cutoffTimes: CarrierCutoffTimes;
    /**
     *
     * @type {Array<DeliveryArea>}
     * @memberof FacilityCarrierConnection
     */
    deliveryAreas?: Array<DeliveryArea>;
    /**
     * This is the well known name for a supported CEP partner. Can be adapted to the clients needs.
     * @type {string}
     * @memberof FacilityCarrierConnection
     */
    name?: string;
    /**
     *
     * @type {CarrierStatus}
     * @memberof FacilityCarrierConnection
     */
    status: CarrierStatus;
    /**
     *
     * @type {Array<ParcelLabelClassification>}
     * @memberof FacilityCarrierConnection
     */
    parcelLabelClassifications?: Array<ParcelLabelClassification>;
    /**
     *
     * @type {Array<TagReference>}
     * @memberof FacilityCarrierConnection
     */
    tags?: Array<TagReference>;
    /**
     *
     * @type {Array<DeliveryTarget>}
     * @memberof FacilityCarrierConnection
     */
    validDeliveryTargets?: Array<DeliveryTarget>;
}
/**
 *
 * @export
 * @interface FacilityCarrierConnectionForCreation
 */
export interface FacilityCarrierConnectionForCreation {
    /**
     * Facility specific credentials for this carrier
     * @type {DHLV2BusinessCredentials | DpdChCarrierCredentials | PostNLCarrierCredentials | VceCarrierCredentials}
     * @memberof FacilityCarrierConnectionForCreation
     */
    credentials?: DHLV2BusinessCredentials | DpdChCarrierCredentials | PostNLCarrierCredentials | VceCarrierCredentials;
    /**
     * Facility specific configuration for this carrier
     * @type {GlsFacilityCarrierConfiguration | AngelFacilityCarrierConfiguration | PostNLFacilityCarrierConfiguration | DpdChFacilityCarrierConfiguration | DhlV2FacilityCarrierConfiguration | VceFacilityCarrierConfiguration | BringFacilityCarrierConfiguration | FedExFacilityCarrierConfiguration}
     * @memberof FacilityCarrierConnectionForCreation
     */
    configuration?: GlsFacilityCarrierConfiguration | AngelFacilityCarrierConfiguration | PostNLFacilityCarrierConfiguration | DpdChFacilityCarrierConfiguration | DhlV2FacilityCarrierConfiguration | VceFacilityCarrierConfiguration | BringFacilityCarrierConfiguration | FedExFacilityCarrierConfiguration;
    /**
     *
     * @type {CutoffTime}
     * @memberof FacilityCarrierConnectionForCreation
     */
    cutoffTime?: CutoffTime;
    /**
     *
     * @type {CarrierCutoffTimes}
     * @memberof FacilityCarrierConnectionForCreation
     */
    cutoffTimes?: CarrierCutoffTimes;
    /**
     *
     * @type {Array<DeliveryArea>}
     * @memberof FacilityCarrierConnectionForCreation
     */
    deliveryAreas?: Array<DeliveryArea>;
    /**
     * This is the well known name for a supported CEP partner. Can be adapted to the clients needs.
     * @type {string}
     * @memberof FacilityCarrierConnectionForCreation
     */
    name?: string;
    /**
     *
     * @type {CarrierStatus}
     * @memberof FacilityCarrierConnectionForCreation
     */
    status?: CarrierStatus;
    /**
     *
     * @type {Array<ParcelLabelClassificationForCreation>}
     * @memberof FacilityCarrierConnectionForCreation
     */
    parcelLabelClassifications?: Array<ParcelLabelClassificationForCreation>;
    /**
     *
     * @type {Array<TagReference>}
     * @memberof FacilityCarrierConnectionForCreation
     */
    tags?: Array<TagReference>;
    /**
     *
     * @type {Array<DeliveryTarget>}
     * @memberof FacilityCarrierConnectionForCreation
     */
    validDeliveryTargets?: Array<DeliveryTarget>;
}
/**
 *
 * @export
 * @interface FacilityCarrierConnectionForModification
 */
export interface FacilityCarrierConnectionForModification {
    /**
     * Facility specific credentials for this carrier
     * @type {DHLV2BusinessCredentials | DpdChCarrierCredentials | PostNLCarrierCredentials | VceCarrierCredentials}
     * @memberof FacilityCarrierConnectionForModification
     */
    credentials?: DHLV2BusinessCredentials | DpdChCarrierCredentials | PostNLCarrierCredentials | VceCarrierCredentials;
    /**
     * Facility specific configuration for this carrier
     * @type {GlsFacilityCarrierConfiguration | AngelFacilityCarrierConfiguration | PostNLFacilityCarrierConfiguration | DpdChFacilityCarrierConfiguration | DhlV2FacilityCarrierConfiguration | VceFacilityCarrierConfiguration | BringFacilityCarrierConfiguration | FedExFacilityCarrierConfiguration}
     * @memberof FacilityCarrierConnectionForModification
     */
    configuration?: GlsFacilityCarrierConfiguration | AngelFacilityCarrierConfiguration | PostNLFacilityCarrierConfiguration | DpdChFacilityCarrierConfiguration | DhlV2FacilityCarrierConfiguration | VceFacilityCarrierConfiguration | BringFacilityCarrierConfiguration | FedExFacilityCarrierConfiguration;
    /**
     *
     * @type {CutoffTime}
     * @memberof FacilityCarrierConnectionForModification
     */
    cutoffTime?: CutoffTime;
    /**
     *
     * @type {CarrierCutoffTimes}
     * @memberof FacilityCarrierConnectionForModification
     */
    cutoffTimes?: CarrierCutoffTimes;
    /**
     *
     * @type {Array<DeliveryArea>}
     * @memberof FacilityCarrierConnectionForModification
     */
    deliveryAreas?: Array<DeliveryArea>;
    /**
     * This is the well known name for a supported CEP partner. Can be adapted to the clients needs.
     * @type {string}
     * @memberof FacilityCarrierConnectionForModification
     */
    name?: string;
    /**
     *
     * @type {CarrierStatus}
     * @memberof FacilityCarrierConnectionForModification
     */
    status?: CarrierStatus;
    /**
     *
     * @type {Array<ParcelLabelClassificationForCreation>}
     * @memberof FacilityCarrierConnectionForModification
     */
    parcelLabelClassifications?: Array<ParcelLabelClassificationForCreation>;
    /**
     *
     * @type {Array<TagReference>}
     * @memberof FacilityCarrierConnectionForModification
     */
    tags?: Array<TagReference>;
    /**
     *
     * @type {number}
     * @memberof FacilityCarrierConnectionForModification
     */
    version: number;
    /**
     *
     * @type {Array<DeliveryTarget>}
     * @memberof FacilityCarrierConnectionForModification
     */
    validDeliveryTargets?: Array<DeliveryTarget>;
}
/**
 *
 * @export
 * @interface FacilityCreatedWebHookEvent
 */
export interface FacilityCreatedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {Facility}
     * @memberof FacilityCreatedWebHookEvent
     */
    payload: Facility;
}
/**
 *
 * @export
 * @interface FacilityCustomServiceConnection
 */
export interface FacilityCustomServiceConnection extends VersionedResource {
    /**
     *
     * @type {string}
     * @memberof FacilityCustomServiceConnection
     */
    id: string;
    /**
     *
     * @type {FacilityCustomServiceConnectionStatus}
     * @memberof FacilityCustomServiceConnection
     */
    status: FacilityCustomServiceConnectionStatus;
    /**
     *
     * @type {string}
     * @memberof FacilityCustomServiceConnection
     */
    facilityRef: string;
    /**
     *
     * @type {string}
     * @memberof FacilityCustomServiceConnection
     */
    customServiceRef: string;
    /**
     *
     * @type {number}
     * @memberof FacilityCustomServiceConnection
     */
    executionTimeInMin?: number;
}
/**
 *
 * @export
 * @interface FacilityCustomServiceConnectionForCreation
 */
export interface FacilityCustomServiceConnectionForCreation {
    /**
     * Time in minutes the custom service takes to be executed
     * @type {number}
     * @memberof FacilityCustomServiceConnectionForCreation
     */
    executionTimeInMin?: number;
    /**
     *
     * @type {FacilityCustomServiceConnectionStatus}
     * @memberof FacilityCustomServiceConnectionForCreation
     */
    status: FacilityCustomServiceConnectionStatus;
}
/**
 *
 * @export
 * @interface FacilityCustomServiceConnectionForUpdate
 */
export interface FacilityCustomServiceConnectionForUpdate {
    /**
     *
     * @type {FacilityCustomServiceConnectionStatus}
     * @memberof FacilityCustomServiceConnectionForUpdate
     */
    status?: FacilityCustomServiceConnectionStatus;
    /**
     * Time in minutes the custom service takes to be executed
     * @type {number}
     * @memberof FacilityCustomServiceConnectionForUpdate
     */
    executionTimeInMin?: number;
    /**
     * Version of the documentSet you want to update a document of
     * @type {number}
     * @memberof FacilityCustomServiceConnectionForUpdate
     */
    version: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum FacilityCustomServiceConnectionStatus {
    ACTIVE = 'ACTIVE',
    INACTIVE = 'INACTIVE'
}
/**
 *
 * @export
 * @interface FacilityDecision
 */
export interface FacilityDecision {
    /**
     *
     * @type {DecisionLogFacilityInfo}
     * @memberof FacilityDecision
     */
    facility: DecisionLogFacilityInfo;
    /**
     *
     * @type {Array<OrderFenceDecision>}
     * @memberof FacilityDecision
     */
    orderFences: Array<OrderFenceDecision>;
    /**
     *
     * @type {Array<OrderLineItemFenceDecisions>}
     * @memberof FacilityDecision
     */
    orderLineItemFences: Array<OrderLineItemFenceDecisions>;
    /**
     *
     * @type {Array<OrderRatingDecision>}
     * @memberof FacilityDecision
     */
    orderRatings: Array<OrderRatingDecision>;
    /**
     *
     * @type {Array<AvailabilityDuringRouting>}
     * @memberof FacilityDecision
     */
    availabilities: Array<AvailabilityDuringRouting>;
    /**
     *
     * @type {number}
     * @memberof FacilityDecision
     */
    totalPenalty?: number;
    /**
     *
     * @type {number}
     * @memberof FacilityDecision
     */
    rank?: number;
    /**
     *
     * @type {boolean}
     * @memberof FacilityDecision
     */
    isBestRated?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof FacilityDecision
     */
    isBestAvailable?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof FacilityDecision
     */
    isBestReassignmentCandidate?: boolean;
}
/**
 *
 * @export
 * @interface FacilityDeletedWebHookEvent
 */
export interface FacilityDeletedWebHookEvent extends WebHookEvent {
    /**
     * The id of the deleted facility
     * @type {string}
     * @memberof FacilityDeletedWebHookEvent
     */
    payload: string;
}
/**
 *
 * @export
 * @interface FacilityForCreation
 */
export interface FacilityForCreation {
    /**
     *
     * @type {FacilityAddressForCreation}
     * @memberof FacilityForCreation
     */
    address: FacilityAddressForCreation;
    /**
     * Days of the year where the facility is closed and doesn't allows picking
     * @type {Array<ClosingDay>}
     * @memberof FacilityForCreation
     */
    closingDays?: Array<ClosingDay>;
    /**
     *
     * @type {FacilityForCreationContact}
     * @memberof FacilityForCreation
     */
    contact?: FacilityForCreationContact;
    /**
     * Attributes that can be added to the facility. These attributes cannot be used within fulfillment processes, but it could be useful to have the informations carried here.
     * @type {any}
     * @memberof FacilityForCreation
     */
    customAttributes?: any;
    /**
     * Duration in minutes until an order is processed
     * @type {number}
     * @memberof FacilityForCreation
     */
    fulfillmentProcessBuffer?: number;
    /**
     *
     * @type {string}
     * @memberof FacilityForCreation
     */
    locationType?: FacilityForCreation.LocationTypeEnum;
    /**
     *
     * @type {string}
     * @memberof FacilityForCreation
     */
    name: string;
    /**
     * The range in days per facility which defines how many days in the future the capacity of the facility can be planned
     * @type {number}
     * @memberof FacilityForCreation
     */
    capacityPlanningTimeframe?: number;
    /**
     *
     * @type {PickingTimes}
     * @memberof FacilityForCreation
     */
    pickingTimes?: PickingTimes;
    /**
     * Picking Methods supported by this facility.
     * @type {Array<PickingMethodEnum>}
     * @memberof FacilityForCreation
     */
    pickingMethods?: Array<PickingMethodEnum>;
    /**
     *
     * @type {ScanningRuleConfiguration}
     * @memberof FacilityForCreation
     */
    scanningRule?: ScanningRuleConfiguration;
    /**
     *
     * @type {Array<FacilityForCreationServices>}
     * @memberof FacilityForCreation
     */
    services?: Array<FacilityForCreationServices>;
    /**
     *
     * @type {FacilityStatus}
     * @memberof FacilityForCreation
     */
    status?: FacilityStatus;
    /**
     * The id of the facility in the tenants own system
     * @type {string}
     * @memberof FacilityForCreation
     */
    tenantFacilityId?: string;
    /**
     * Indicates that configured capacity limits for picking times are considered
     * @type {boolean}
     * @memberof FacilityForCreation
     */
    capacityEnabled?: boolean;
    /**
     *
     * @type {Array<TagReference>}
     * @memberof FacilityForCreation
     */
    tags?: Array<TagReference>;
}

/**
 * @export
 * @namespace FacilityForCreation
 */
export namespace FacilityForCreation {
    /**
     * @export
     * @enum {string}
     */
    export enum LocationTypeEnum {
        STORE = 'STORE',
        WAREHOUSE = 'WAREHOUSE',
        EXTERNAL = 'EXTERNAL'
    }
}
/**
 *
 * @export
 * @interface FacilityForCreationContact
 */
export interface FacilityForCreationContact {
    /**
     * Attributes that can be added to the contact. These attributes cannot be used within fulfillment processes, but it could be useful to have the informations carried here.
     * @type {any}
     * @memberof FacilityForCreationContact
     */
    customAttributes?: any;
    /**
     *
     * @type {string}
     * @memberof FacilityForCreationContact
     */
    firstName: string;
    /**
     *
     * @type {string}
     * @memberof FacilityForCreationContact
     */
    lastName: string;
    /**
     *
     * @type {string}
     * @memberof FacilityForCreationContact
     */
    roleDescription?: string;
}
/**
 *
 * @export
 * @interface FacilityForCreationServices
 */
export interface FacilityForCreationServices {
    /**
     *
     * @type {FacilityServiceType}
     * @memberof FacilityForCreationServices
     */
    type: FacilityServiceType;
}
/**
 * Attribute to order a facility list
 * @export
 * @enum {string}
 */
export enum FacilityOrderBy {
    NAME = 'NAME',
    CREATED = 'CREATED',
    POSTALCODEASC = 'POSTAL_CODE_ASC'
}
/**
 *
 * @export
 * @interface FacilityPatchActions
 */
export interface FacilityPatchActions {
    /**
     *
     * @type {Array<ModifyFacilityAction>}
     * @memberof FacilityPatchActions
     */
    actions: Array<ModifyFacilityAction>;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof FacilityPatchActions
     */
    version: number;
}
/**
 *
 * @export
 * @interface FacilityRefLatestPickingStartPair
 */
export interface FacilityRefLatestPickingStartPair {
    /**
     *
     * @type {string}
     * @memberof FacilityRefLatestPickingStartPair
     */
    facilityRef: string;
    /**
     *
     * @type {Date}
     * @memberof FacilityRefLatestPickingStartPair
     */
    latestPickingStart: Date;
}
/**
 * The description of the service this facility offers.
 * @export
 * @enum {string}
 */
export enum FacilityServiceType {
    SHIPFROMSTORE = 'SHIP_FROM_STORE',
    PICKUP = 'PICKUP'
}
/**
 * The state of the facility. ONLINE means that this facility can process new orders and pickjobs, SUSPENDED means it cannot get new orders but is able to fulfill the current workload and OFFLINE means that it cannot fulfill any new or existing orders. Processes already running might be rescheduled to another facility depending on the preferences.
 * @export
 * @enum {string}
 */
export enum FacilityStatus {
    ONLINE = 'ONLINE',
    SUSPENDED = 'SUSPENDED',
    OFFLINE = 'OFFLINE'
}
/**
 *
 * @export
 * @interface FacilityStock
 */
export interface FacilityStock {
    /**
     *
     * @type {number}
     * @memberof FacilityStock
     */
    available: number;
    /**
     *
     * @type {number}
     * @memberof FacilityStock
     */
    reserved: number;
    /**
     *
     * @type {number}
     * @memberof FacilityStock
     */
    value: number;
    /**
     *
     * @type {string}
     * @memberof FacilityStock
     */
    tenantArticleId: string;
    /**
     *
     * @type {string}
     * @memberof FacilityStock
     */
    facilityRef: string;
    /**
     *
     * @type {string}
     * @memberof FacilityStock
     */
    id: string;
}
/**
 *
 * @export
 * @interface FacilityStockBulkOperation
 */
export interface FacilityStockBulkOperation {
    /**
     *
     * @type {string}
     * @memberof FacilityStockBulkOperation
     */
    tenantArticleId: string;
    /**
     *
     * @type {number}
     * @memberof FacilityStockBulkOperation
     */
    value: number;
}
/**
 *
 * @export
 * @interface FacilityStockBulkOperations
 */
export interface FacilityStockBulkOperations {
    /**
     *
     * @type {Array<FacilityStockBulkOperation>}
     * @memberof FacilityStockBulkOperations
     */
    operations: Array<FacilityStockBulkOperation>;
}
/**
 *
 * @export
 * @interface FacilityStockBulkResult
 */
export interface FacilityStockBulkResult {
    /**
     *
     * @type {string}
     * @memberof FacilityStockBulkResult
     */
    tenantArticleId: string;
    /**
     *
     * @type {string}
     * @memberof FacilityStockBulkResult
     */
    facilityRef: string;
    /**
     *
     * @type {string}
     * @memberof FacilityStockBulkResult
     */
    status: FacilityStockBulkResult.StatusEnum;
    /**
     *
     * @type {BulkOperationError}
     * @memberof FacilityStockBulkResult
     */
    error?: BulkOperationError;
}

/**
 * @export
 * @namespace FacilityStockBulkResult
 */
export namespace FacilityStockBulkResult {
    /**
     * @export
     * @enum {string}
     */
    export enum StatusEnum {
        UPDATED = 'UPDATED',
        CREATED = 'CREATED',
        FAILED = 'FAILED'
    }
}
/**
 *
 * @export
 * @interface FacilityStockConfiguration
 */
export interface FacilityStockConfiguration extends VersionedResource {
    /**
     *
     * @type {string}
     * @memberof FacilityStockConfiguration
     */
    id: string;
    /**
     *
     * @type {FacilityStockConfigurationListingReactivationAfter}
     * @memberof FacilityStockConfiguration
     */
    listingReactivationAfter: FacilityStockConfigurationListingReactivationAfter;
    /**
     *
     * @type {FacilityStockConfigurationRetainedOfflineStock}
     * @memberof FacilityStockConfiguration
     */
    retainedOfflineStock: FacilityStockConfigurationRetainedOfflineStock;
    /**
     *
     * @type {FacilityStockConfigurationShortpick}
     * @memberof FacilityStockConfiguration
     */
    shortpick: FacilityStockConfigurationShortpick;
}
/**
 *
 * @export
 * @interface FacilityStockConfigurationListingReactivationAfter
 */
export interface FacilityStockConfigurationListingReactivationAfter {
    /**
     * The disabling of listings is enabled or disabled.
     * @type {boolean}
     * @memberof FacilityStockConfigurationListingReactivationAfter
     */
    active?: boolean;
    /**
     * Time in hours that has to pass for a deactivated listing (e.g. due to manual deactivation or as a result of a shortpick ) to be become active again.
     * @type {number}
     * @memberof FacilityStockConfigurationListingReactivationAfter
     */
    value?: number;
}
/**
 *
 * @export
 * @interface FacilityStockConfigurationRetainedOfflineStock
 */
export interface FacilityStockConfigurationRetainedOfflineStock {
    /**
     * The retained Offline Stock is enabled or disabled.
     * @type {boolean}
     * @memberof FacilityStockConfigurationRetainedOfflineStock
     */
    active?: boolean;
    /**
     * The overall percentage of stock that should be reserved to offline clients.
     * @type {number}
     * @memberof FacilityStockConfigurationRetainedOfflineStock
     */
    value?: number;
}
/**
 *
 * @export
 * @interface FacilityStockConfigurationShortpick
 */
export interface FacilityStockConfigurationShortpick {
    /**
     * Inventory adjustment in the case of insufficient order picking
     * @type {boolean}
     * @memberof FacilityStockConfigurationShortpick
     */
    active: boolean;
}
/**
 *
 * @export
 * @interface FacilityStockDistribution
 */
export interface FacilityStockDistribution {
    /**
     *
     * @type {number}
     * @memberof FacilityStockDistribution
     */
    reserved: number;
    /**
     *
     * @type {number}
     * @memberof FacilityStockDistribution
     */
    totalAmount: number;
    /**
     * This field is deprecated and replaced by new availability concepts. Please see https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/global-inventory/availability for more information.
     * @type {number}
     * @memberof FacilityStockDistribution
     */
    available: number;
    /**
     *
     * @type {number}
     * @memberof FacilityStockDistribution
     */
    safetyStock: number;
    /**
     *
     * @type {ByTrait}
     * @memberof FacilityStockDistribution
     */
    byTrait: ByTrait;
    /**
     *
     * @type {number}
     * @memberof FacilityStockDistribution
     */
    availableForPicking: number;
    /**
     * This field is deprecated and replaced by new availability concepts. Please see https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/global-inventory/availability for more information.
     * @type {number}
     * @memberof FacilityStockDistribution
     */
    availableToPromise: number;
    /**
     * This field is deprecated and replaced by new availability concepts. Please see https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/global-inventory/availability for more information.
     * @type {number}
     * @memberof FacilityStockDistribution
     */
    readyToPick: number;
    /**
     *
     * @type {number}
     * @memberof FacilityStockDistribution
     */
    availableOnStock: number;
    /**
     *
     * @type {number}
     * @memberof FacilityStockDistribution
     */
    stockOnHand: number;
    /**
     *
     * @type {Array<ChannelStockAvailability>}
     * @memberof FacilityStockDistribution
     */
    channelAdjusted?: Array<ChannelStockAvailability>;
    /**
     *
     * @type {string}
     * @memberof FacilityStockDistribution
     */
    facilityId: string;
    /**
     *
     * @type {string}
     * @memberof FacilityStockDistribution
     */
    facilityName: string;
    /**
     *
     * @type {Array<FacilityServiceType>}
     * @memberof FacilityStockDistribution
     */
    facilityServiceTypes?: Array<FacilityServiceType>;
    /**
     *
     * @type {FacilityStatus}
     * @memberof FacilityStockDistribution
     */
    facilityStatus?: FacilityStatus;
    /**
     *
     * @type {number}
     * @memberof FacilityStockDistribution
     */
    price: number;
}
/**
 *
 * @export
 * @interface FacilityUpdatedWebHookEvent
 */
export interface FacilityUpdatedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {Facility}
     * @memberof FacilityUpdatedWebHookEvent
     */
    payload: Facility;
}
/**
 *
 * @export
 * @interface FallbackFacilityConfiguration
 */
export interface FallbackFacilityConfiguration {
    /**
     *
     * @type {Array<string>}
     * @memberof FallbackFacilityConfiguration
     */
    facilityRefs: Array<string>;
    /**
     *
     * @type {boolean}
     * @memberof FallbackFacilityConfiguration
     */
    active: boolean;
    /**
     * Default amount of time in ISO 8601 duration format after which a not routable routingplan is routed to a configured fallback facility.
     * @type {string}
     * @memberof FallbackFacilityConfiguration
     */
    fallbackAfterTime: string;
}
/**
 *
 * @export
 * @interface FallbackFacilityConfigurationForPatch
 */
export interface FallbackFacilityConfigurationForPatch {
    /**
     *
     * @type {Array<string>}
     * @memberof FallbackFacilityConfigurationForPatch
     */
    facilityRefs?: Array<string>;
    /**
     *
     * @type {boolean}
     * @memberof FallbackFacilityConfigurationForPatch
     */
    active?: boolean;
    /**
     * Default amount of time in ISO 8601 duration format after which a not routable routingplan is routed to a configured fallback facility.
     * @type {string}
     * @memberof FallbackFacilityConfigurationForPatch
     */
    fallbackAfterTime?: string;
}
/**
 *
 * @export
 * @interface Feature
 */
export interface Feature extends VersionedResource {
    /**
     *
     * @type {string}
     * @memberof Feature
     */
    name: string;
    /**
     *
     * @type {FeatureStatus}
     * @memberof Feature
     */
    status: FeatureStatus;
}
/**
 *
 * @export
 * @interface FeaturePatchActions
 */
export interface FeaturePatchActions {
    /**
     *
     * @type {Array<ModifyFeatureAction>}
     * @memberof FeaturePatchActions
     */
    actions: Array<ModifyFeatureAction>;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof FeaturePatchActions
     */
    version: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum FeatureStatus {
    Enabled = 'enabled',
    Inactive = 'inactive',
    Disabled = 'disabled'
}
/**
 *
 * @export
 * @interface Features
 */
export interface Features {
    /**
     *
     * @type {Array<Feature>}
     * @memberof Features
     */
    features?: Array<Feature>;
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof Features
     */
    total?: number;
}
/**
 *
 * @export
 * @interface FedExFacilityCarrierConfiguration
 */
export interface FedExFacilityCarrierConfiguration extends AbstractFacilityCarrierConfiguration {
    /**
     *
     * @type {string}
     * @memberof FedExFacilityCarrierConfiguration
     */
    trackAndTraceUrl?: string;
}
/**
 *
 * @export
 * @interface FedexCarrierConfiguration
 */
export interface FedexCarrierConfiguration extends CarrierConfiguration {
    /**
     * Indicates if the economy services of fedex should be used.
     * @type {boolean}
     * @memberof FedexCarrierConfiguration
     */
    useEconomyService: boolean;
    /**
     * Default value of shipped goods
     * @type {number}
     * @memberof FedexCarrierConfiguration
     */
    defaultPriceValue: number;
    /**
     * default currency of shipped goods as 3 letter iso code
     * @type {string}
     * @memberof FedexCarrierConfiguration
     */
    defaultPriceCurrency: string;
    /**
     * A two-digit country code as per ISO 3166-1 alpha-2
     * @type {string}
     * @memberof FedexCarrierConfiguration
     */
    defaultManufactureCountry: string;
    /**
     * Describes the shipped goods
     * @type {string}
     * @memberof FedexCarrierConfiguration
     */
    defaultCommodityDescription: string;
    /**
     *
     * @type {string}
     * @memberof FedexCarrierConfiguration
     */
    trackAndTraceUrl?: string;
}
/**
 *
 * @export
 * @interface FedexCarrierCredentials
 */
export interface FedexCarrierCredentials extends AbstractCarrierCredentials {
    /**
     * Your fedex accountnumber
     * @type {string}
     * @memberof FedexCarrierCredentials
     */
    accountNumber: string;
    /**
     * Internal API Key to communicate with the CEP Api
     * @type {string}
     * @memberof FedexCarrierCredentials
     */
    apiKey: string;
    /**
     * Internal API Key to communicate with the CEP Api
     * @type {string}
     * @memberof FedexCarrierCredentials
     */
    secretKey: string;
}
/**
 *
 * @export
 * @interface Fence
 */
export interface Fence {
    /**
     *
     * @type {boolean}
     * @memberof Fence
     */
    active: boolean;
    /**
     *
     * @type {string}
     * @memberof Fence
     */
    description?: string;
    /**
     * This value identifies this very instance of the fence. It is set autmatically by the server when the configuration is updated.
     * @type {string}
     * @memberof Fence
     */
    id: string;
    /**
     *
     * @type {FenceImplementation}
     * @memberof Fence
     */
    implementation: FenceImplementation;
    /**
     *
     * @type {string}
     * @memberof Fence
     */
    name?: string;
    /**
     *
     * @type {Array<FenceMode>}
     * @memberof Fence
     */
    supportedModes?: Array<FenceMode>;
    /**
     *
     * @type {FenceMode}
     * @memberof Fence
     */
    activeMode?: FenceMode;
}
/**
 * <i>This part of the API is currently under development. That means that this endpoint, model, etc. can contain breaking changes and / or might not be available at all times in your API instance. It could disappear also without warning. Thus it currently does not fall under our SLA regulations. For details on this topic please check our <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i>
 * @export
 * @enum {string}
 */
export enum FenceImplementation {
    FACILITYBUSINESSTYPE = 'FACILITY-BUSINESSTYPE',
    STOCKAVAILABILITY = 'STOCK-AVAILABILITY',
    FACILITYCARRIERAVAILABILITY = 'FACILITY-CARRIERAVAILABILITY',
    FACILITYCOUNTRY = 'FACILITY-COUNTRY',
    FACILITYPICKINGTIMECAPACITY = 'FACILITY-PICKING-TIME-CAPACITY',
    PRESELECTEDFACILITY = 'PRESELECTED-FACILITY',
    SAMEDAYPOSSIBLE = 'SAMEDAY-POSSIBLE',
    AVOIDZEROSTOCK = 'AVOID-ZERO-STOCK'
}
/**
 *
 * @export
 * @enum {string}
 */
export enum FenceMode {
    Static = 'static',
    Reactive = 'reactive'
}
/**
 *
 * @export
 * @enum {string}
 */
export enum FenceResultStatus {
    FAILED = 'FAILED',
    PASSED = 'PASSED',
    REACTIVEPASSINGPOSSIBLE = 'REACTIVE_PASSING_POSSIBLE'
}
/**
 *
 * @export
 * @interface FenceStatistic
 */
export interface FenceStatistic {
    /**
     *
     * @type {string}
     * @memberof FenceStatistic
     */
    name: string;
    /**
     *
     * @type {number}
     * @memberof FenceStatistic
     */
    rejectedAmount: number;
    /**
     *
     * @type {number}
     * @memberof FenceStatistic
     */
    passedAmount: number;
    /**
     *
     * @type {number}
     * @memberof FenceStatistic
     */
    passedPercentage: number;
    /**
     * Duration in Milliseconds
     * @type {number}
     * @memberof FenceStatistic
     */
    durationMs: number;
}
/**
 *
 * @export
 * @interface FilterEntity
 */
export interface FilterEntity {
    /**
     *
     * @type {string}
     * @memberof FilterEntity
     */
    id: string;
    /**
     *
     * @type {SupportedFilterEntityTypesEnum}
     * @memberof FilterEntity
     */
    type: SupportedFilterEntityTypesEnum;
    /**
     *
     * @type {string}
     * @memberof FilterEntity
     */
    value?: string;
    /**
     *
     * @type {LocaleString}
     * @memberof FilterEntity
     */
    valueLocalized: LocaleString;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum FinishItemReturnActionEnum {
    FinishItemReturn = 'FinishItemReturn'
}
/**
 *
 * @export
 * @interface FinishItemReturnActionParameter
 */
export interface FinishItemReturnActionParameter {
    /**
     *
     * @type {FinishItemReturnActionEnum}
     * @memberof FinishItemReturnActionParameter
     */
    name: FinishItemReturnActionEnum;
    /**
     * Version of the entity to be changed
     * @type {number}
     * @memberof FinishItemReturnActionParameter
     */
    itemReturnJobVersion: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum FinishItemReturnJobActionEnum {
    FinishItemReturnJob = 'FinishItemReturnJob'
}
/**
 *
 * @export
 * @interface FinishItemReturnJobActionParameter
 */
export interface FinishItemReturnJobActionParameter {
    /**
     *
     * @type {FinishItemReturnJobActionEnum}
     * @memberof FinishItemReturnJobActionParameter
     */
    name: FinishItemReturnJobActionEnum;
    /**
     * Version of the entity to be changed
     * @type {number}
     * @memberof FinishItemReturnJobActionParameter
     */
    version: number;
}
/**
 * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />@deprecated Use api/pickruns/:id/actions instead
 * @export
 * @interface FinishPickRunAction
 */
export interface FinishPickRunAction extends AbstractModificationAction {
    /**
     * Use value 'FinishPickRun', because you want to finish a pickrun
     * @type {string}
     * @memberof FinishPickRunAction
     */
    action: FinishPickRunAction.ActionEnum;
}

/**
 * @export
 * @namespace FinishPickRunAction
 */
export namespace FinishPickRunAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        FinishPickRun = 'FinishPickRun'
    }
}
/**
 * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />Configuration of fixed count split.
 * @export
 * @interface FixedCountConfiguration
 */
export interface FixedCountConfiguration {
    /**
     * This setting defines how often an order split might be performed to fulfill the order.
     * @type {number}
     * @memberof FixedCountConfiguration
     */
    maxSplitCount: number;
}
/**
 *
 * @export
 * @interface FloatValidation
 */
export interface FloatValidation extends BaseValidation {
    /**
     *
     * @type {number}
     * @memberof FloatValidation
     */
    minValue?: number;
    /**
     *
     * @type {number}
     * @memberof FloatValidation
     */
    maxValue?: number;
}

/**
 * @export
 * @namespace FloatValidation
 */
export namespace FloatValidation {
}
/**
 * The response to a fulfillability request.
 * @export
 * @interface Fulfillability
 */
export interface Fulfillability {
    /**
     *
     * @type {FulfillabilityCollect}
     * @memberof Fulfillability
     */
    collect?: FulfillabilityCollect;
    /**
     *
     * @type {FulfillabilityShipping}
     * @memberof Fulfillability
     */
    shipping?: FulfillabilityShipping;
}
/**
 * Provides the paramters you are interested in. You must supply at least the articles you are interested in
 * @export
 * @interface FulfillabilityClickAndCollectQuery
 */
export interface FulfillabilityClickAndCollectQuery {
    /**
     *
     * @type {GeoFence}
     * @memberof FulfillabilityClickAndCollectQuery
     */
    geoFence?: GeoFence;
    /**
     *
     * @type {Array<string>}
     * @memberof FulfillabilityClickAndCollectQuery
     */
    facilityRefs?: Array<string>;
    /**
     *
     * @type {DeliveryPreferences}
     * @memberof FulfillabilityClickAndCollectQuery
     */
    deliveryPreferences?: DeliveryPreferences;
    /**
     * A two-digit country code as per ISO 3166-1 alpha-2
     * @type {string}
     * @memberof FulfillabilityClickAndCollectQuery
     */
    deliveryCountry?: string;
    /**
     *
     * @type {string}
     * @memberof FulfillabilityClickAndCollectQuery
     */
    deliveryPostalCode?: string;
    /**
     *
     * @type {Array<FulfillabilityShipFromStoreQueryArticles>}
     * @memberof FulfillabilityClickAndCollectQuery
     */
    articles: Array<FulfillabilityShipFromStoreQueryArticles>;
}
/**
 *
 * @export
 * @interface FulfillabilityCollect
 */
export interface FulfillabilityCollect {
    /**
     *
     * @type {Array<FulfillabilityFacility>}
     * @memberof FulfillabilityCollect
     */
    facilities?: Array<FulfillabilityFacility>;
}
/**
 *
 * @export
 * @interface FulfillabilityDetail
 */
export interface FulfillabilityDetail {
    /**
     *
     * @type {string}
     * @memberof FulfillabilityDetail
     */
    facilityRef: string;
    /**
     *
     * @type {string}
     * @memberof FulfillabilityDetail
     */
    tenantFacilityId?: string;
    /**
     *
     * @type {string}
     * @memberof FulfillabilityDetail
     */
    facilityName: string;
    /**
     *
     * @type {Array<ClosingDay>}
     * @memberof FulfillabilityDetail
     */
    closingDays?: Array<ClosingDay>;
    /**
     *
     * @type {PickingTimes}
     * @memberof FulfillabilityDetail
     */
    pickingTimes?: PickingTimes;
    /**
     *
     * @type {FacilityAddress}
     * @memberof FulfillabilityDetail
     */
    address: FacilityAddress;
    /**
     *
     * @type {Date}
     * @memberof FulfillabilityDetail
     */
    targetTime?: Date;
    /**
     *
     * @type {Array<ArticleAvailability>}
     * @memberof FulfillabilityDetail
     */
    articleAvailabilities: Array<ArticleAvailability>;
}
/**
 *
 * @export
 * @interface FulfillabilityFacility
 */
export interface FulfillabilityFacility extends StrippedFacility {
}
/**
 *
 * @export
 * @interface FulfillabilityItemsConstraintValue
 */
export interface FulfillabilityItemsConstraintValue {
    /**
     * The shortened description of an article, that would be part of the order.
     * @type {Array<FulfillabilityItemsConstraintValueItems>}
     * @memberof FulfillabilityItemsConstraintValue
     */
    items: Array<FulfillabilityItemsConstraintValueItems>;
    /**
     * The mode this constraint is evaluated in. ITEMS_COMPLETE means, that all the items in the desired quantities have to be listed in a resulting facility.
     * @type {string}
     * @memberof FulfillabilityItemsConstraintValue
     */
    mode: FulfillabilityItemsConstraintValue.ModeEnum;
}

/**
 * @export
 * @namespace FulfillabilityItemsConstraintValue
 */
export namespace FulfillabilityItemsConstraintValue {
    /**
     * @export
     * @enum {string}
     */
    export enum ModeEnum {
        ITEMSCOMPLETE = 'ITEMS_COMPLETE'
    }
}
/**
 *
 * @export
 * @interface FulfillabilityItemsConstraintValueItems
 */
export interface FulfillabilityItemsConstraintValueItems {
    /**
     * The required amount
     * @type {number}
     * @memberof FulfillabilityItemsConstraintValueItems
     */
    amount?: number;
    /**
     * The article ID, that is used in corresponding listings.
     * @type {string}
     * @memberof FulfillabilityItemsConstraintValueItems
     */
    tenantArticleId?: string;
}
/**
 * Provides the paramters you are interested in. You must supply at least either the shipping or the collect attribute as the description of the last mile expectation.
 * @export
 * @interface FulfillabilityQuery
 */
export interface FulfillabilityQuery {
    /**
     *
     * @type {FulfillabilityQueryCollect}
     * @memberof FulfillabilityQuery
     */
    collect?: FulfillabilityQueryCollect;
    /**
     * Constraints can be used to further cut down the list of resulting facilities. Important: ALL of the given constraints will be matched against the resulting list of facilities!
     * @type {Array<AbstractFulfillabilityConstraintType>}
     * @memberof FulfillabilityQuery
     */
    constraints?: Array<AbstractFulfillabilityConstraintType>;
    /**
     * The point in time when the order estimated to be supplied to fulfillmenttools platform, e.g. calling this endpoint during checkout, you would most likely put the timestamp for 'now' in here.
     * @type {Date}
     * @memberof FulfillabilityQuery
     */
    estimatedOrderDate: Date;
    /**
     *
     * @type {FulfillabilityQueryShipping}
     * @memberof FulfillabilityQuery
     */
    shipping?: FulfillabilityQueryShipping;
}
/**
 * The geofence (a gps coordinate and a radius around that coordinate) for considered facilities to collect the goods.
 * @export
 * @interface FulfillabilityQueryCollect
 */
export interface FulfillabilityQueryCollect {
    /**
     *
     * @type {GeoFence}
     * @memberof FulfillabilityQueryCollect
     */
    geoFence: GeoFence;
}
/**
 * You want information about the shipping possibility - more detailed parameters  can be described here.
 * @export
 * @interface FulfillabilityQueryShipping
 */
export interface FulfillabilityQueryShipping {
    /**
     * The kind of servicelevel you want to query as being part of the consumer expectation of delivery
     * @type {Array<CarrierDeliveryType>}
     * @memberof FulfillabilityQueryShipping
     */
    serviceLevels: Array<CarrierDeliveryType>;
    /**
     *
     * @type {StrippedShippingTargetAddress}
     * @memberof FulfillabilityQueryShipping
     */
    targetAddress: StrippedShippingTargetAddress;
}
/**
 *
 * @export
 * @interface FulfillabilityResult
 */
export interface FulfillabilityResult {
    /**
     *
     * @type {Array<FulfillabilityDetail>}
     * @memberof FulfillabilityResult
     */
    fulfillability?: Array<FulfillabilityDetail>;
}
/**
 * Provides the paramters you are interested in. You must supply at least the articles you are interested in
 * @export
 * @interface FulfillabilityShipFromStoreQuery
 */
export interface FulfillabilityShipFromStoreQuery {
    /**
     *
     * @type {GeoFence}
     * @memberof FulfillabilityShipFromStoreQuery
     */
    geoFence?: GeoFence;
    /**
     *
     * @type {Array<string>}
     * @memberof FulfillabilityShipFromStoreQuery
     */
    facilityRefs?: Array<string>;
    /**
     *
     * @type {Array<FulfillabilityShipFromStoreQueryArticles>}
     * @memberof FulfillabilityShipFromStoreQuery
     */
    articles: Array<FulfillabilityShipFromStoreQueryArticles>;
    /**
     *
     * @type {DeliveryPreferences}
     * @memberof FulfillabilityShipFromStoreQuery
     */
    deliveryPreferences?: DeliveryPreferences;
    /**
     * A two-digit country code as per ISO 3166-1 alpha-2
     * @type {string}
     * @memberof FulfillabilityShipFromStoreQuery
     */
    deliveryCountry?: string;
    /**
     *
     * @type {string}
     * @memberof FulfillabilityShipFromStoreQuery
     */
    deliveryPostalCode?: string;
}
/**
 *
 * @export
 * @interface FulfillabilityShipFromStoreQueryArticles
 */
export interface FulfillabilityShipFromStoreQueryArticles {
    /**
     *
     * @type {string}
     * @memberof FulfillabilityShipFromStoreQueryArticles
     */
    tenantArticleId: string;
    /**
     *
     * @type {number}
     * @memberof FulfillabilityShipFromStoreQueryArticles
     */
    quantity?: number;
}
/**
 * Results for the fulfillment of a shipping order for the parameters provided in the query
 * @export
 * @interface FulfillabilityShipping
 */
export interface FulfillabilityShipping {
    /**
     *
     * @type {FulfillabilityShippingDELIVERY}
     * @memberof FulfillabilityShipping
     */
    DELIVERY?: FulfillabilityShippingDELIVERY;
    /**
     *
     * @type {FulfillabilityShippingSAMEDAY}
     * @memberof FulfillabilityShipping
     */
    SAMEDAY?: FulfillabilityShippingSAMEDAY;
}
/**
 * Depicts wether the servicelevel DELIVERY is available.
 * @export
 * @interface FulfillabilityShippingDELIVERY
 */
export interface FulfillabilityShippingDELIVERY {
    /**
     * Depicts wether the servicelevel DELIVERY is available
     * @type {boolean}
     * @memberof FulfillabilityShippingDELIVERY
     */
    available: boolean;
}
/**
 * This service level means, that the consumer expects a package the same day.
 * @export
 * @interface FulfillabilityShippingSAMEDAY
 */
export interface FulfillabilityShippingSAMEDAY {
    /**
     * Depicts wether the servicelevel SAMEDAY is available
     * @type {boolean}
     * @memberof FulfillabilityShippingSAMEDAY
     */
    available: boolean;
    /**
     * This information is most likely valid until this date (there are circumstances when this information becomes stale earlier).
     * @type {Date}
     * @memberof FulfillabilityShippingSAMEDAY
     */
    validUntil?: Date;
}
/**
 *
 * @export
 * @interface FulfillmentProcessBufferConfiguration
 */
export interface FulfillmentProcessBufferConfiguration extends VersionedResource {
    /**
     * Duration in minutes until an order is processed
     * @type {number}
     * @memberof FulfillmentProcessBufferConfiguration
     */
    minutes: number;
    /**
     *
     * @type {string}
     * @memberof FulfillmentProcessBufferConfiguration
     */
    id?: string;
}
/**
 *
 * @export
 * @interface GLSCarrierCredentials
 */
export interface GLSCarrierCredentials extends AbstractCarrierCredentials {
    /**
     * GLS username
     * @type {string}
     * @memberof GLSCarrierCredentials
     */
    username: string;
    /**
     * GLS password
     * @type {string}
     * @memberof GLSCarrierCredentials
     */
    password: string;
    /**
     * GLS Track And Trace username
     * @type {string}
     * @memberof GLSCarrierCredentials
     */
    trackAndTraceUsername: string;
    /**
     * GLS Track And Trace password
     * @type {string}
     * @memberof GLSCarrierCredentials
     */
    trackAndTracePassword: string;
}
/**
 *
 * @export
 * @interface GdprConfiguration
 */
export interface GdprConfiguration extends VersionedResource {
    /**
     * Number of days after that anonymization is triggered.
     * @type {number}
     * @memberof GdprConfiguration
     */
    retentionTime: number;
    /**
     * Number of days since anonymization until deletion is triggered
     * @type {number}
     * @memberof GdprConfiguration
     */
    deletionTimeAfterRetention?: number;
    /**
     *
     * @type {number}
     * @memberof GdprConfiguration
     */
    version: number;
    /**
     *
     * @type {string}
     * @memberof GdprConfiguration
     */
    id?: string;
}
/**
 * Center (described with lon and lat attributes) and a circular geofence (described as radius around the center)
 * @export
 * @interface GeoFence
 */
export interface GeoFence {
    /**
     * The latitude of the center, provided as decimal coordinate
     * @type {number}
     * @memberof GeoFence
     */
    lat: number;
    /**
     * The longitude of the center, provided as decimal coordinate
     * @type {number}
     * @memberof GeoFence
     */
    lon: number;
    /**
     * Radius around the center in kilometers (km, max. 100)
     * @type {number}
     * @memberof GeoFence
     */
    radius: number;
}
/**
 * Allows reroutes to be triggered manually via api.
 * @export
 * @interface GlobalManualRerouteConfiguration
 */
export interface GlobalManualRerouteConfiguration {
    /**
     *
     * @type {boolean}
     * @memberof GlobalManualRerouteConfiguration
     */
    active: boolean;
}
/**
 * Global configuration for routing
 * @export
 * @interface GlobalRoutingConfiguration
 */
export interface GlobalRoutingConfiguration {
    /**
     *
     * @type {GlobalManualRerouteConfiguration}
     * @memberof GlobalRoutingConfiguration
     */
    manualReroute?: GlobalManualRerouteConfiguration;
    /**
     * Default price which is used if no price exists in order or listings
     * @type {number}
     * @memberof GlobalRoutingConfiguration
     */
    defaultPrice: number;
    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />@deprecated Default amount of hours after which a routing plan is marked not routable. This field is deprecated in favour of stopRoutingAttemptsAfterTime
     * @type {number}
     * @memberof GlobalRoutingConfiguration
     */
    routingTimeout?: number;
    /**
     * Default amount of time in ISO 8601 duration format after which a routing plan is marked not routable. The duration need to be a multiple of 60 seconds.
     * @type {string}
     * @memberof GlobalRoutingConfiguration
     */
    stopRoutingAttemptsAfterTime?: string;
    /**
     *
     * @type {FallbackFacilityConfiguration}
     * @memberof GlobalRoutingConfiguration
     */
    fallbackFacilityConfiguration?: FallbackFacilityConfiguration;
}
/**
 *
 * @export
 * @interface GlsCarrierConfiguration
 */
export interface GlsCarrierConfiguration extends CarrierConfiguration {
    /**
     *
     * @type {string}
     * @memberof GlsCarrierConfiguration
     */
    alternativeSendAddressLocationId?: string;
    /**
     *
     * @type {string}
     * @memberof GlsCarrierConfiguration
     */
    alternativeReturnAddressLocationId?: string;
    /**
     *
     * @type {string}
     * @memberof GlsCarrierConfiguration
     */
    trackAndTraceUrl?: string;
    /**
     *
     * @type {string}
     * @memberof GlsCarrierConfiguration
     */
    trackAndTraceWsdlUrl?: string;
}
/**
 *
 * @export
 * @interface GlsFacilityCarrierConfiguration
 */
export interface GlsFacilityCarrierConfiguration extends AbstractFacilityCarrierConfiguration {
    /**
     *
     * @type {string}
     * @memberof GlsFacilityCarrierConfiguration
     */
    contactId?: string;
    /**
     *
     * @type {string}
     * @memberof GlsFacilityCarrierConfiguration
     */
    returnContactId?: string;
    /**
     *
     * @type {string}
     * @memberof GlsFacilityCarrierConfiguration
     */
    trackAndTraceUrl?: string;
    /**
     *
     * @type {string}
     * @memberof GlsFacilityCarrierConfiguration
     */
    trackAndTraceWsdlUrl?: string;
}
/**
 *
 * @export
 * @interface HandoverConfiguration
 */
export interface HandoverConfiguration extends VersionedResource {
    /**
     *
     * @type {Array<AvailableRefusedReason>}
     * @memberof HandoverConfiguration
     */
    availableRefusedReasons?: Array<AvailableRefusedReason>;
}
/**
 *
 * @export
 * @interface HandoverConfigurationForCreate
 */
export interface HandoverConfigurationForCreate {
    /**
     *
     * @type {number}
     * @memberof HandoverConfigurationForCreate
     */
    version: number;
    /**
     *
     * @type {Array<AvailableRefuseReasonForCreation>}
     * @memberof HandoverConfigurationForCreate
     */
    availableRefusedReasons?: Array<AvailableRefuseReasonForCreation>;
}
/**
 *
 * @export
 * @interface HandoverJobActionsParameter
 */
export interface HandoverJobActionsParameter {
}
/**
 *
 * @export
 * @enum {string}
 */
export enum HandoverJobCancelActionEnum {
    CANCEL = 'CANCEL'
}
/**
 *
 * @export
 * @interface HandoverJobCancelActionParameter
 */
export interface HandoverJobCancelActionParameter {
    /**
     *
     * @type {HandoverJobCancelActionEnum}
     * @memberof HandoverJobCancelActionParameter
     */
    name: HandoverJobCancelActionEnum;
    /**
     * Version of the entity to be changed
     * @type {number}
     * @memberof HandoverJobCancelActionParameter
     */
    version: number;
    /**
     *
     * @type {HandoverJobCancelActionParameterPayload}
     * @memberof HandoverJobCancelActionParameter
     */
    payload: HandoverJobCancelActionParameterPayload;
}
/**
 *
 * @export
 * @interface HandoverJobCancelActionParameterPayload
 */
export interface HandoverJobCancelActionParameterPayload {
    /**
     *
     * @type {HandoverJobCancelReason}
     * @memberof HandoverJobCancelActionParameterPayload
     */
    handoverJobCancelReason: HandoverJobCancelReason;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum HandoverJobCancelReason {
    CONSUMERNOSHOW = 'CONSUMER_NO_SHOW',
    CONSUMERREJECTS = 'CONSUMER_REJECTS',
    ORDERCANCELED = 'ORDER_CANCELED'
}
/**
 *
 * @export
 * @interface HandoverJobCanceledWebHookEvent
 */
export interface HandoverJobCanceledWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {Handoverjob}
     * @memberof HandoverJobCanceledWebHookEvent
     */
    payload: Handoverjob;
}
/**
 *
 * @export
 * @interface HandoverJobCreatedWebHookEvent
 */
export interface HandoverJobCreatedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {Handoverjob}
     * @memberof HandoverJobCreatedWebHookEvent
     */
    payload: Handoverjob;
}
/**
 *
 * @export
 * @interface HandoverJobHandedOverWebHookEvent
 */
export interface HandoverJobHandedOverWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {Handoverjob}
     * @memberof HandoverJobHandedOverWebHookEvent
     */
    payload: Handoverjob;
}
/**
 * STATUS_TARGET_TIME_LAST_MODIFIED_DATE is deprecated
 * @export
 * @enum {string}
 */
export enum HandoverJobOrderBy {
    STATUSTARGETTIMELASTMODIFIEDDATE = 'STATUS_TARGET_TIME_LAST_MODIFIED_DATE',
    TARGETTIMEASC = 'TARGET_TIME_ASC'
}
/**
 *
 * @export
 * @interface HandoverJobRevertedWebHookEvent
 */
export interface HandoverJobRevertedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {Handoverjob}
     * @memberof HandoverJobRevertedWebHookEvent
     */
    payload: Handoverjob;
}
/**
 *
 * @export
 * @interface HandoverJobTagConfiguration
 */
export interface HandoverJobTagConfiguration extends VersionedResource {
    /**
     * All entries with a match in their matchingValues will be combined when determining what documents belong to an entity
     * @type {Array<OfferedDocumentPerTag>}
     * @memberof HandoverJobTagConfiguration
     */
    offeredDocumentsPerTag: Array<OfferedDocumentPerTag>;
    /**
     * This configuration is a fallback and applies only if none of the entries in offeredDocumentsPerTag can be applied
     * @type {Array<OfferedDocument>}
     * @memberof HandoverJobTagConfiguration
     */
    offeredDocumentsByDefault: Array<OfferedDocument>;
    /**
     *
     * @type {StickerConfiguration}
     * @memberof HandoverJobTagConfiguration
     */
    stickerConfiguration?: StickerConfiguration;
}
/**
 *
 * @export
 * @interface HandoverLineItem
 */
export interface HandoverLineItem {
    /**
     *
     * @type {HandoverLineItemArticle}
     * @memberof HandoverLineItem
     */
    article: HandoverLineItemArticle;
    /**
     * quantity of the specific item that has been provided for handover
     * @type {number}
     * @memberof HandoverLineItem
     */
    quantity: number;
    /**
     * quantity of the specific item that has been handed over
     * @type {number}
     * @memberof HandoverLineItem
     */
    handedOverQuantity: number;
    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @type {Array<HandoverSubstituteLineItem>}
     * @memberof HandoverLineItem
     */
    substituteLineItems?: Array<HandoverSubstituteLineItem>;
    /**
     *
     * @type {Array<TagReference>}
     * @memberof HandoverLineItem
     */
    tags?: Array<TagReference>;
    /**
     *
     * @type {Array<Sticker>}
     * @memberof HandoverLineItem
     */
    stickers?: Array<Sticker>;
}
/**
 *
 * @export
 * @interface HandoverLineItemArticle
 */
export interface HandoverLineItemArticle extends AbstractArticle {
    /**
     *
     * @type {Array<ArticleAttributeItem>}
     * @memberof HandoverLineItemArticle
     */
    attributes?: Array<ArticleAttributeItem>;
}
/**
 *
 * @export
 * @interface HandoverSubstituteLineItem
 */
export interface HandoverSubstituteLineItem extends SubstituteLineItem {
    /**
     * quantity of the specific item to substitute the original line item that has been provided for handover
     * @type {number}
     * @memberof HandoverSubstituteLineItem
     */
    quantity: number;
    /**
     * quantity of the specific item to substitute the original line item that has been handed over
     * @type {number}
     * @memberof HandoverSubstituteLineItem
     */
    handedOverQuantity?: number;
}
/**
 *
 * @export
 * @interface Handoverjob
 */
export interface Handoverjob extends VersionedResource {
    /**
     * The URL to the carrier logo
     * @type {string}
     * @memberof Handoverjob
     */
    carrierLogoUrl?: string;
    /**
     *
     * @type {string}
     * @memberof Handoverjob
     */
    carrierRef?: string;
    /**
     * Tracking number for the created shipment
     * @type {string}
     * @memberof Handoverjob
     */
    carrierTrackingNumber?: string;
    /**
     *
     * @type {string}
     * @memberof Handoverjob
     */
    channel: Handoverjob.ChannelEnum;
    /**
     * Attributes that can be added to the handover job. These attributes cannot be used within fulfillment processes, but it could be useful to have the informations carried here.
     * @type {any}
     * @memberof Handoverjob
     */
    customAttributes?: any;
    /**
     * The id of the facility reference.
     * @type {string}
     * @memberof Handoverjob
     */
    facilityRef: string;
    /**
     *
     * @type {Array<HandoverLineItem>}
     * @memberof Handoverjob
     */
    handoverJobLineItems?: Array<HandoverLineItem>;
    /**
     * Reference to array of load unit Refs
     * @type {Array<string>}
     * @memberof Handoverjob
     */
    loadUnitRefs?: Array<string>;
    /**
     * The date this order was created at the supplying system.
     * @type {Date}
     * @memberof Handoverjob
     */
    orderDate: Date;
    /**
     * The reference to the parcel.
     * @type {string}
     * @memberof Handoverjob
     */
    parcelRef?: string;
    /**
     * The reference to the pickjob for which the handoverjob is assigned to
     * @type {string}
     * @memberof Handoverjob
     */
    pickJobRef?: string;
    /**
     * Id of the global process related to this entity. For example used for starting the GDPR process and others.
     * @type {string}
     * @memberof Handoverjob
     */
    processId?: string;
    /**
     *
     * @type {string}
     * @memberof Handoverjob
     */
    operativeProcessRef?: string;
    /**
     * The reference to the shipment belonging to the handoverjob
     * @type {string}
     * @memberof Handoverjob
     */
    shipmentRef?: string;
    /**
     * The short identifier of the shipment.
     * @type {string}
     * @memberof Handoverjob
     */
    shortIdentifier?: string;
    /**
     *
     * @type {HandoverjobStatus}
     * @memberof Handoverjob
     */
    status: HandoverjobStatus;
    /**
     * The time the handoverjob is expected to be picked up at the facility.
     * @type {Date}
     * @memberof Handoverjob
     */
    targetTime: Date;
    /**
     * Field can be used as a reference number in foreign systems, for example as a reference to the source system's identifier for this order.
     * @type {string}
     * @memberof Handoverjob
     */
    tenantOrderId?: string;
    /**
     * Indicates if the order is already paid
     * @type {boolean}
     * @memberof Handoverjob
     */
    paid?: boolean;
    /**
     * Tags can only be set when there is no process related with this handoverJob. Setting processId and tags will lead to an validationError.
     * @type {Array<TagReference>}
     * @memberof Handoverjob
     */
    tags?: Array<TagReference>;
    /**
     *
     * @type {Array<Sticker>}
     * @memberof Handoverjob
     */
    stickers?: Array<Sticker>;
    /**
     *
     * @type {HandoverJobCancelReason}
     * @memberof Handoverjob
     */
    cancelReason?: HandoverJobCancelReason;
    /**
     *
     * @type {ConsumerAddress}
     * @memberof Handoverjob
     */
    invoiceAddress?: ConsumerAddress;
    /**
     *
     * @type {ConsumerAddress}
     * @memberof Handoverjob
     */
    recipientAddress?: ConsumerAddress;
    /**
     * An information to identify the recipient
     * @type {string}
     * @memberof Handoverjob
     */
    fullIdentifier?: string;
    /**
     *
     * @type {Array<OperativeTransfer>}
     * @memberof Handoverjob
     */
    transfers?: Array<OperativeTransfer>;
    /**
     * Indicates if gdpr related data was anonymized
     * @type {boolean}
     * @memberof Handoverjob
     */
    anonymized?: boolean;
    /**
     * The id of this handoverjob. It is generated during creation automatically and suits as the primary identifier of the described entity.
     * @type {string}
     * @memberof Handoverjob
     */
    id: string;
    /**
     *
     * @type {Array<PrintableDocument>}
     * @memberof Handoverjob
     */
    documents?: Array<PrintableDocument>;
    /**
     * Reference to the documents collection from this entity
     * @type {string}
     * @memberof Handoverjob
     */
    documentsRef?: string;
    /**
     * Key of the carrier that is used for this entity
     * @type {string}
     * @memberof Handoverjob
     */
    carrierKey?: string;
}

/**
 * @export
 * @namespace Handoverjob
 */
export namespace Handoverjob {
    /**
     * @export
     * @enum {string}
     */
    export enum ChannelEnum {
        DELIVERY = 'DELIVERY',
        COLLECT = 'COLLECT'
    }
}
/**
 *
 * @export
 * @interface HandoverjobForCreation
 */
export interface HandoverjobForCreation {
    /**
     * The URL to the carrier logo
     * @type {string}
     * @memberof HandoverjobForCreation
     */
    carrierLogoUrl?: string;
    /**
     *
     * @type {string}
     * @memberof HandoverjobForCreation
     */
    carrierRef?: string;
    /**
     * Tracking number for the created shipment
     * @type {string}
     * @memberof HandoverjobForCreation
     */
    carrierTrackingNumber?: string;
    /**
     *
     * @type {string}
     * @memberof HandoverjobForCreation
     */
    channel: HandoverjobForCreation.ChannelEnum;
    /**
     * Attributes that can be added to the handover job. These attributes cannot be used within fulfillment processes, but it could be useful to have the informations carried here.
     * @type {any}
     * @memberof HandoverjobForCreation
     */
    customAttributes?: any;
    /**
     * The id of the facility reference.
     * @type {string}
     * @memberof HandoverjobForCreation
     */
    facilityRef: string;
    /**
     *
     * @type {Array<HandoverLineItem>}
     * @memberof HandoverjobForCreation
     */
    handoverJobLineItems?: Array<HandoverLineItem>;
    /**
     * Reference to array of load unit Refs
     * @type {Array<string>}
     * @memberof HandoverjobForCreation
     */
    loadUnitRefs?: Array<string>;
    /**
     * The date this order was created at the supplying system.
     * @type {Date}
     * @memberof HandoverjobForCreation
     */
    orderDate: Date;
    /**
     * The reference to the parcel.
     * @type {string}
     * @memberof HandoverjobForCreation
     */
    parcelRef?: string;
    /**
     * The reference to the pickjob for which the handoverjob is assigned to
     * @type {string}
     * @memberof HandoverjobForCreation
     */
    pickJobRef?: string;
    /**
     * Id of the global process related to this entity. For example used for starting the GDPR process and others.
     * @type {string}
     * @memberof HandoverjobForCreation
     */
    processId?: string;
    /**
     *
     * @type {string}
     * @memberof HandoverjobForCreation
     */
    operativeProcessRef?: string;
    /**
     * The reference to the shipment belonging to the handoverjob
     * @type {string}
     * @memberof HandoverjobForCreation
     */
    shipmentRef?: string;
    /**
     * The short identifier of the shipment.
     * @type {string}
     * @memberof HandoverjobForCreation
     */
    shortIdentifier?: string;
    /**
     *
     * @type {HandoverjobStatus}
     * @memberof HandoverjobForCreation
     */
    status?: HandoverjobStatus;
    /**
     * The time the handoverjob is expected to be picked up at the facility.
     * @type {Date}
     * @memberof HandoverjobForCreation
     */
    targetTime: Date;
    /**
     * Field can be used as a reference number in foreign systems, for example as a reference to the source system's identifier for this order.
     * @type {string}
     * @memberof HandoverjobForCreation
     */
    tenantOrderId?: string;
    /**
     * Indicates if the order is already paid
     * @type {boolean}
     * @memberof HandoverjobForCreation
     */
    paid?: boolean;
    /**
     * Tags can only be set when there is no process related with this handoverJob. Setting processId and tags will lead to an validationError.
     * @type {Array<TagReference>}
     * @memberof HandoverjobForCreation
     */
    tags?: Array<TagReference>;
    /**
     *
     * @type {Array<Sticker>}
     * @memberof HandoverjobForCreation
     */
    stickers?: Array<Sticker>;
    /**
     *
     * @type {HandoverJobCancelReason}
     * @memberof HandoverjobForCreation
     */
    cancelReason?: HandoverJobCancelReason;
    /**
     *
     * @type {ConsumerAddress}
     * @memberof HandoverjobForCreation
     */
    invoiceAddress?: ConsumerAddress;
    /**
     *
     * @type {ConsumerAddress}
     * @memberof HandoverjobForCreation
     */
    recipientAddress?: ConsumerAddress;
    /**
     * An information to identify the recipient
     * @type {string}
     * @memberof HandoverjobForCreation
     */
    fullIdentifier?: string;
    /**
     *
     * @type {Array<OperativeTransfer>}
     * @memberof HandoverjobForCreation
     */
    transfers?: Array<OperativeTransfer>;
}

/**
 * @export
 * @namespace HandoverjobForCreation
 */
export namespace HandoverjobForCreation {
    /**
     * @export
     * @enum {string}
     */
    export enum ChannelEnum {
        DELIVERY = 'DELIVERY',
        COLLECT = 'COLLECT'
    }
}
/**
 *
 * @export
 * @interface HandoverjobPatchActions
 */
export interface HandoverjobPatchActions {
    /**
     *
     * @type {Array<ModifyHandoverjobAction | CancelHandoverjobAction>}
     * @memberof HandoverjobPatchActions
     */
    actions: Array<ModifyHandoverjobAction | CancelHandoverjobAction>;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof HandoverjobPatchActions
     */
    version: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum HandoverjobStatus {
    OPEN = 'OPEN',
    HANDEDOVER = 'HANDED_OVER',
    OBSOLETE = 'OBSOLETE',
    CANCELED = 'CANCELED'
}
/**
 *
 * @export
 * @interface HealthDependencyStatus
 */
export interface HealthDependencyStatus {
    /**
     * Name of the component that is checked to be healthy
     * @type {string}
     * @memberof HealthDependencyStatus
     */
    name: string;
    /**
     *
     * @type {HealthStatus}
     * @memberof HealthDependencyStatus
     */
    status: HealthStatus;
}
/**
 *
 * @export
 * @interface HealthResult
 */
export interface HealthResult {
    /**
     *
     * @type {HealthStatus}
     * @memberof HealthResult
     */
    status: HealthStatus;
    /**
     *
     * @type {Array<HealthDependencyStatus>}
     * @memberof HealthResult
     */
    dependencies: Array<HealthDependencyStatus>;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum HealthStatus {
    UP = 'UP',
    DOWN = 'DOWN'
}
/**
 *
 * @export
 * @interface InboundAttachment
 */
export interface InboundAttachment {
    /**
     *
     * @type {string}
     * @memberof InboundAttachment
     */
    id: string;
    /**
     *
     * @type {number}
     * @memberof InboundAttachment
     */
    version: number;
    /**
     *
     * @type {Date}
     * @memberof InboundAttachment
     */
    created?: Date;
    /**
     *
     * @type {Date}
     * @memberof InboundAttachment
     */
    lastModified?: Date;
}
/**
 *
 * @export
 * @interface InboundAttachmentForCreation
 */
export interface InboundAttachmentForCreation {
    /**
     * File name of attachment
     * @type {string}
     * @memberof InboundAttachmentForCreation
     */
    fileName: string;
    /**
     * Base64 encoded attachment file
     * @type {string}
     * @memberof InboundAttachmentForCreation
     */
    content: string;
}
/**
 *
 * @export
 * @interface InboundAttachmentLink
 */
export interface InboundAttachmentLink {
    /**
     *
     * @type {string}
     * @memberof InboundAttachmentLink
     */
    inboundAttachmentRef: string;
}
/**
 *
 * @export
 * @interface InboundDeliveryFinishedPayload
 */
export interface InboundDeliveryFinishedPayload {
    /**
     *
     * @type {string}
     * @memberof InboundDeliveryFinishedPayload
     */
    inboundProcessRef: string;
    /**
     *
     * @type {string}
     * @memberof InboundDeliveryFinishedPayload
     */
    tenantInboundProcessRef?: string;
    /**
     *
     * @type {InboundProcessPurchaseOrder}
     * @memberof InboundDeliveryFinishedPayload
     */
    purchaseOrder?: InboundProcessPurchaseOrder;
    /**
     *
     * @type {string}
     * @memberof InboundDeliveryFinishedPayload
     */
    facilityRef: string;
    /**
     *
     * @type {string}
     * @memberof InboundDeliveryFinishedPayload
     */
    status: InboundDeliveryFinishedPayload.StatusEnum;
    /**
     *
     * @type {boolean}
     * @memberof InboundDeliveryFinishedPayload
     */
    onHold: boolean;
    /**
     *
     * @type {Array<InboundReceipt>}
     * @memberof InboundDeliveryFinishedPayload
     */
    receipts: Array<InboundReceipt>;
}

/**
 * @export
 * @namespace InboundDeliveryFinishedPayload
 */
export namespace InboundDeliveryFinishedPayload {
    /**
     * @export
     * @enum {string}
     */
    export enum StatusEnum {
        OPEN = 'OPEN',
        PARTIALDELIVERY = 'PARTIAL_DELIVERY',
        ONHOLD = 'ON_HOLD',
        CLOSED = 'CLOSED'
    }
}
/**
 *
 * @export
 * @interface InboundDeliveryFinishedWebHookEvent
 */
export interface InboundDeliveryFinishedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {InboundDeliveryFinishedPayload}
     * @memberof InboundDeliveryFinishedWebHookEvent
     */
    payload: InboundDeliveryFinishedPayload;
}
/**
 *
 * @export
 * @interface InboundDeliveryOnHoldPayload
 */
export interface InboundDeliveryOnHoldPayload {
    /**
     *
     * @type {string}
     * @memberof InboundDeliveryOnHoldPayload
     */
    inboundProcessRef: string;
    /**
     *
     * @type {string}
     * @memberof InboundDeliveryOnHoldPayload
     */
    tenantInboundProcessRef?: string;
    /**
     *
     * @type {InboundProcessPurchaseOrder}
     * @memberof InboundDeliveryOnHoldPayload
     */
    purchaseOrder?: InboundProcessPurchaseOrder;
    /**
     *
     * @type {string}
     * @memberof InboundDeliveryOnHoldPayload
     */
    facilityRef: string;
    /**
     *
     * @type {string}
     * @memberof InboundDeliveryOnHoldPayload
     */
    status: InboundDeliveryOnHoldPayload.StatusEnum;
    /**
     *
     * @type {boolean}
     * @memberof InboundDeliveryOnHoldPayload
     */
    onHold: boolean;
}

/**
 * @export
 * @namespace InboundDeliveryOnHoldPayload
 */
export namespace InboundDeliveryOnHoldPayload {
    /**
     * @export
     * @enum {string}
     */
    export enum StatusEnum {
        OPEN = 'OPEN',
        PARTIALDELIVERY = 'PARTIAL_DELIVERY',
        ONHOLD = 'ON_HOLD',
        CLOSED = 'CLOSED'
    }
}
/**
 *
 * @export
 * @interface InboundDeliveryOnHoldWebHookEvent
 */
export interface InboundDeliveryOnHoldWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {InboundDeliveryOnHoldPayload}
     * @memberof InboundDeliveryOnHoldWebHookEvent
     */
    payload: InboundDeliveryOnHoldPayload;
}
/**
 *
 * @export
 * @interface InboundDeliveryReceivedPayload
 */
export interface InboundDeliveryReceivedPayload {
    /**
     *
     * @type {string}
     * @memberof InboundDeliveryReceivedPayload
     */
    inboundProcessRef: string;
    /**
     *
     * @type {string}
     * @memberof InboundDeliveryReceivedPayload
     */
    tenantInboundProcessRef?: string;
    /**
     *
     * @type {InboundProcessPurchaseOrder}
     * @memberof InboundDeliveryReceivedPayload
     */
    purchaseOrder?: InboundProcessPurchaseOrder;
    /**
     *
     * @type {string}
     * @memberof InboundDeliveryReceivedPayload
     */
    facilityRef: string;
    /**
     *
     * @type {string}
     * @memberof InboundDeliveryReceivedPayload
     */
    status: InboundDeliveryReceivedPayload.StatusEnum;
    /**
     *
     * @type {boolean}
     * @memberof InboundDeliveryReceivedPayload
     */
    onHold: boolean;
    /**
     *
     * @type {InboundReceipt}
     * @memberof InboundDeliveryReceivedPayload
     */
    receipt: InboundReceipt;
}

/**
 * @export
 * @namespace InboundDeliveryReceivedPayload
 */
export namespace InboundDeliveryReceivedPayload {
    /**
     * @export
     * @enum {string}
     */
    export enum StatusEnum {
        OPEN = 'OPEN',
        PARTIALDELIVERY = 'PARTIAL_DELIVERY',
        ONHOLD = 'ON_HOLD',
        CLOSED = 'CLOSED'
    }
}
/**
 *
 * @export
 * @interface InboundDeliveryReceivedWebHookEvent
 */
export interface InboundDeliveryReceivedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {InboundDeliveryReceivedPayload}
     * @memberof InboundDeliveryReceivedWebHookEvent
     */
    payload: InboundDeliveryReceivedPayload;
}
/**
 *
 * @export
 * @interface InboundDeliveryReleasedPayload
 */
export interface InboundDeliveryReleasedPayload {
    /**
     *
     * @type {string}
     * @memberof InboundDeliveryReleasedPayload
     */
    inboundProcessRef: string;
    /**
     *
     * @type {string}
     * @memberof InboundDeliveryReleasedPayload
     */
    tenantInboundProcessRef?: string;
    /**
     *
     * @type {InboundProcessPurchaseOrder}
     * @memberof InboundDeliveryReleasedPayload
     */
    purchaseOrder?: InboundProcessPurchaseOrder;
    /**
     *
     * @type {string}
     * @memberof InboundDeliveryReleasedPayload
     */
    facilityRef: string;
    /**
     *
     * @type {string}
     * @memberof InboundDeliveryReleasedPayload
     */
    status: InboundDeliveryReleasedPayload.StatusEnum;
    /**
     *
     * @type {boolean}
     * @memberof InboundDeliveryReleasedPayload
     */
    onHold: boolean;
}

/**
 * @export
 * @namespace InboundDeliveryReleasedPayload
 */
export namespace InboundDeliveryReleasedPayload {
    /**
     * @export
     * @enum {string}
     */
    export enum StatusEnum {
        OPEN = 'OPEN',
        PARTIALDELIVERY = 'PARTIAL_DELIVERY',
        ONHOLD = 'ON_HOLD',
        CLOSED = 'CLOSED'
    }
}
/**
 *
 * @export
 * @interface InboundDeliveryReleasedWebHookEvent
 */
export interface InboundDeliveryReleasedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {InboundDeliveryReleasedPayload}
     * @memberof InboundDeliveryReleasedWebHookEvent
     */
    payload: InboundDeliveryReleasedPayload;
}
/**
 *
 * @export
 * @interface InboundLineItem
 */
export interface InboundLineItem {
    /**
     *
     * @type {string}
     * @memberof InboundLineItem
     */
    tenantArticleId: string;
    /**
     *
     * @type {Quantity}
     * @memberof InboundLineItem
     */
    quantity: Quantity;
    /**
     *
     * @type {StockPropertyPreset}
     * @memberof InboundLineItem
     */
    stockProperties?: StockPropertyPreset;
}
/**
 *
 * @export
 * @interface InboundProcess
 */
export interface InboundProcess {
    /**
     *
     * @type {string}
     * @memberof InboundProcess
     */
    id: string;
    /**
     *
     * @type {number}
     * @memberof InboundProcess
     */
    version: number;
    /**
     *
     * @type {Date}
     * @memberof InboundProcess
     */
    created: Date;
    /**
     *
     * @type {Date}
     * @memberof InboundProcess
     */
    lastModified: Date;
    /**
     *
     * @type {string}
     * @memberof InboundProcess
     */
    tenantInboundProcessId?: string;
    /**
     *
     * @type {string}
     * @memberof InboundProcess
     */
    facilityRef: string;
    /**
     *
     * @type {string}
     * @memberof InboundProcess
     */
    status: InboundProcess.StatusEnum;
    /**
     *
     * @type {boolean}
     * @memberof InboundProcess
     */
    onHold: boolean;
    /**
     *
     * @type {Array<Date>}
     * @memberof InboundProcess
     */
    inboundDate: Array<Date>;
    /**
     *
     * @type {Array<InboundProcessOrigin>}
     * @memberof InboundProcess
     */
    origin: Array<InboundProcessOrigin>;
    /**
     *
     * @type {Array<string>}
     * @memberof InboundProcess
     */
    scannableCodes: Array<string>;
    /**
     *
     * @type {boolean}
     * @memberof InboundProcess
     */
    anonymized: boolean;
    /**
     *
     * @type {InboundProcessPurchaseOrder}
     * @memberof InboundProcess
     */
    purchaseOrder?: InboundProcessPurchaseOrder;
    /**
     *
     * @type {Array<InboundReceipt>}
     * @memberof InboundProcess
     */
    receipts: Array<InboundReceipt>;
    /**
     * Attributes that can be added to this entity. These attributes **cannot** be used within fulfillment processes, but enable you to attach custom data from your systems to fulfillmenttools entities.
     * @type {any}
     * @memberof InboundProcess
     */
    customAttributes?: any;
}

/**
 * @export
 * @namespace InboundProcess
 */
export namespace InboundProcess {
    /**
     * @export
     * @enum {string}
     */
    export enum StatusEnum {
        OPEN = 'OPEN',
        PARTIALDELIVERY = 'PARTIAL_DELIVERY',
        ONHOLD = 'ON_HOLD',
        CLOSED = 'CLOSED'
    }
}
/**
 *
 * @export
 * @interface InboundProcessForCreation
 */
export interface InboundProcessForCreation {
    /**
     *
     * @type {string}
     * @memberof InboundProcessForCreation
     */
    tenantInboundProcessId?: string;
    /**
     *
     * @type {string}
     * @memberof InboundProcessForCreation
     */
    facilityRef: string;
    /**
     *
     * @type {Array<InboundReceiptForCreation>}
     * @memberof InboundProcessForCreation
     */
    receipts?: Array<InboundReceiptForCreation>;
    /**
     *
     * @type {boolean}
     * @memberof InboundProcessForCreation
     */
    onHold?: boolean;
    /**
     *
     * @type {InboundProcessPurchaseOrderForCreation}
     * @memberof InboundProcessForCreation
     */
    purchaseOrder?: InboundProcessPurchaseOrderForCreation;
    /**
     *
     * @type {Array<string>}
     * @memberof InboundProcessForCreation
     */
    scannableCodes?: Array<string>;
    /**
     * Attributes that can be added to this entity. These attributes **cannot** be used within fulfillment processes, but enable you to attach custom data from your systems to fulfillmenttools entities.
     * @type {any}
     * @memberof InboundProcessForCreation
     */
    customAttributes?: any;
}
/**
 *
 * @export
 * @interface InboundProcessForPatch
 */
export interface InboundProcessForPatch {
    /**
     *
     * @type {boolean}
     * @memberof InboundProcessForPatch
     */
    onHold?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof InboundProcessForPatch
     */
    scannableCodes?: Array<string>;
    /**
     * Attributes that can be added to this entity. These attributes **cannot** be used within fulfillment processes, but enable you to attach custom data from your systems to fulfillmenttools entities.
     * @type {any}
     * @memberof InboundProcessForPatch
     */
    customAttributes?: any;
    /**
     *
     * @type {number}
     * @memberof InboundProcessForPatch
     */
    version: number;
}
/**
 *
 * @export
 * @interface InboundProcessOrigin
 */
export interface InboundProcessOrigin {
    /**
     *
     * @type {string}
     * @memberof InboundProcessOrigin
     */
    name?: string;
}
/**
 *
 * @export
 * @interface InboundProcessPaginatedResult
 */
export interface InboundProcessPaginatedResult {
    /**
     *
     * @type {number}
     * @memberof InboundProcessPaginatedResult
     */
    total: number;
    /**
     *
     * @type {Array<StrippedInboundProcess>}
     * @memberof InboundProcessPaginatedResult
     */
    inboundProcesses: Array<StrippedInboundProcess>;
}
/**
 *
 * @export
 * @interface InboundProcessPurchaseOrder
 */
export interface InboundProcessPurchaseOrder {
    /**
     *
     * @type {string}
     * @memberof InboundProcessPurchaseOrder
     */
    id: string;
    /**
     *
     * @type {Date}
     * @memberof InboundProcessPurchaseOrder
     */
    created: Date;
    /**
     *
     * @type {Date}
     * @memberof InboundProcessPurchaseOrder
     */
    lastModified: Date;
    /**
     *
     * @type {Date}
     * @memberof InboundProcessPurchaseOrder
     */
    orderDate: Date;
    /**
     *
     * @type {RequestedDate}
     * @memberof InboundProcessPurchaseOrder
     */
    requestedDate: RequestedDate;
    /**
     *
     * @type {Array<InboundLineItem>}
     * @memberof InboundProcessPurchaseOrder
     */
    requestedItems: Array<InboundLineItem>;
    /**
     *
     * @type {string}
     * @memberof InboundProcessPurchaseOrder
     */
    status: InboundProcessPurchaseOrder.StatusEnum;
    /**
     *
     * @type {boolean}
     * @memberof InboundProcessPurchaseOrder
     */
    cancelled: boolean;
    /**
     *
     * @type {InboundProcessPurchaseOrderSupplier}
     * @memberof InboundProcessPurchaseOrder
     */
    supplier?: InboundProcessPurchaseOrderSupplier;
    /**
     *
     * @type {InboundProcessPurchaseOrderTransfer}
     * @memberof InboundProcessPurchaseOrder
     */
    transfer?: InboundProcessPurchaseOrderTransfer;
    /**
     * Attributes that can be added to this entity. These attributes **cannot** be used within fulfillment processes, but enable you to attach custom data from your systems to fulfillmenttools entities.
     * @type {any}
     * @memberof InboundProcessPurchaseOrder
     */
    customAttributes?: any;
}

/**
 * @export
 * @namespace InboundProcessPurchaseOrder
 */
export namespace InboundProcessPurchaseOrder {
    /**
     * @export
     * @enum {string}
     */
    export enum StatusEnum {
        OPEN = 'OPEN'
    }
}
/**
 *
 * @export
 * @interface InboundProcessPurchaseOrderForCreation
 */
export interface InboundProcessPurchaseOrderForCreation {
    /**
     *
     * @type {Date}
     * @memberof InboundProcessPurchaseOrderForCreation
     */
    orderDate: Date;
    /**
     *
     * @type {InputRequestedDate}
     * @memberof InboundProcessPurchaseOrderForCreation
     */
    requestedDate: InputRequestedDate;
    /**
     *
     * @type {Array<InboundLineItem>}
     * @memberof InboundProcessPurchaseOrderForCreation
     */
    requestedItems: Array<InboundLineItem>;
    /**
     *
     * @type {string}
     * @memberof InboundProcessPurchaseOrderForCreation
     */
    status?: InboundProcessPurchaseOrderForCreation.StatusEnum;
    /**
     *
     * @type {boolean}
     * @memberof InboundProcessPurchaseOrderForCreation
     */
    cancelled?: boolean;
    /**
     *
     * @type {InboundProcessPurchaseOrderSupplier}
     * @memberof InboundProcessPurchaseOrderForCreation
     */
    supplier?: InboundProcessPurchaseOrderSupplier;
    /**
     * Attributes that can be added to this entity. These attributes **cannot** be used within fulfillment processes, but enable you to attach custom data from your systems to fulfillmenttools entities.
     * @type {any}
     * @memberof InboundProcessPurchaseOrderForCreation
     */
    customAttributes?: any;
}

/**
 * @export
 * @namespace InboundProcessPurchaseOrderForCreation
 */
export namespace InboundProcessPurchaseOrderForCreation {
    /**
     * @export
     * @enum {string}
     */
    export enum StatusEnum {
        OPEN = 'OPEN'
    }
}
/**
 *
 * @export
 * @interface InboundProcessPurchaseOrderForUpsert
 */
export interface InboundProcessPurchaseOrderForUpsert {
    /**
     *
     * @type {Date}
     * @memberof InboundProcessPurchaseOrderForUpsert
     */
    orderDate: Date;
    /**
     *
     * @type {InputRequestedDate}
     * @memberof InboundProcessPurchaseOrderForUpsert
     */
    requestedDate: InputRequestedDate;
    /**
     *
     * @type {Array<InboundLineItem>}
     * @memberof InboundProcessPurchaseOrderForUpsert
     */
    requestedItems: Array<InboundLineItem>;
    /**
     *
     * @type {string}
     * @memberof InboundProcessPurchaseOrderForUpsert
     */
    status?: InboundProcessPurchaseOrderForUpsert.StatusEnum;
    /**
     *
     * @type {boolean}
     * @memberof InboundProcessPurchaseOrderForUpsert
     */
    cancelled?: boolean;
    /**
     *
     * @type {InboundProcessPurchaseOrderSupplier}
     * @memberof InboundProcessPurchaseOrderForUpsert
     */
    supplier?: InboundProcessPurchaseOrderSupplier;
    /**
     * Attributes that can be added to this entity. These attributes **cannot** be used within fulfillment processes, but enable you to attach custom data from your systems to fulfillmenttools entities.
     * @type {any}
     * @memberof InboundProcessPurchaseOrderForUpsert
     */
    customAttributes?: any;
    /**
     *
     * @type {number}
     * @memberof InboundProcessPurchaseOrderForUpsert
     */
    version: number;
}

/**
 * @export
 * @namespace InboundProcessPurchaseOrderForUpsert
 */
export namespace InboundProcessPurchaseOrderForUpsert {
    /**
     * @export
     * @enum {string}
     */
    export enum StatusEnum {
        OPEN = 'OPEN'
    }
}
/**
 *
 * @export
 * @interface InboundProcessPurchaseOrderSupplier
 */
export interface InboundProcessPurchaseOrderSupplier {
    /**
     *
     * @type {string}
     * @memberof InboundProcessPurchaseOrderSupplier
     */
    name?: string;
}
/**
 *
 * @export
 * @interface InboundProcessPurchaseOrderTransfer
 */
export interface InboundProcessPurchaseOrderTransfer {
    /**
     *
     * @type {string}
     * @memberof InboundProcessPurchaseOrderTransfer
     */
    id: string;
}
/**
 *
 * @export
 * @interface InboundReceipt
 */
export interface InboundReceipt {
    /**
     *
     * @type {string}
     * @memberof InboundReceipt
     */
    asnRef?: string;
    /**
     *
     * @type {Date}
     * @memberof InboundReceipt
     */
    receivedDate: Date;
    /**
     *
     * @type {Array<InboundReceiptLineItem>}
     * @memberof InboundReceipt
     */
    receivedItems: Array<InboundReceiptLineItem>;
    /**
     *
     * @type {Array<InboundReceiptComment>}
     * @memberof InboundReceipt
     */
    comments: Array<InboundReceiptComment>;
    /**
     *
     * @type {string}
     * @memberof InboundReceipt
     */
    status?: InboundReceipt.StatusEnum;
    /**
     * Attributes that can be added to this entity. These attributes **cannot** be used within fulfillment processes, but enable you to attach custom data from your systems to fulfillmenttools entities.
     * @type {any}
     * @memberof InboundReceipt
     */
    customAttributes?: any;
    /**
     *
     * @type {string}
     * @memberof InboundReceipt
     */
    id: string;
}

/**
 * @export
 * @namespace InboundReceipt
 */
export namespace InboundReceipt {
    /**
     * @export
     * @enum {string}
     */
    export enum StatusEnum {
        INPROGRESS = 'IN_PROGRESS',
        FINISHED = 'FINISHED'
    }
}
/**
 *
 * @export
 * @interface InboundReceiptComment
 */
export interface InboundReceiptComment {
    /**
     *
     * @type {string}
     * @memberof InboundReceiptComment
     */
    userRef?: string;
    /**
     *
     * @type {string}
     * @memberof InboundReceiptComment
     */
    content: string;
    /**
     *
     * @type {Array<InboundAttachmentLink>}
     * @memberof InboundReceiptComment
     */
    attachments?: Array<InboundAttachmentLink>;
}
/**
 *
 * @export
 * @interface InboundReceiptForCreation
 */
export interface InboundReceiptForCreation {
    /**
     *
     * @type {string}
     * @memberof InboundReceiptForCreation
     */
    asnRef?: string;
    /**
     *
     * @type {Date}
     * @memberof InboundReceiptForCreation
     */
    receivedDate: Date;
    /**
     *
     * @type {Array<InboundReceiptLineItem>}
     * @memberof InboundReceiptForCreation
     */
    receivedItems: Array<InboundReceiptLineItem>;
    /**
     *
     * @type {Array<InboundReceiptComment>}
     * @memberof InboundReceiptForCreation
     */
    comments: Array<InboundReceiptComment>;
    /**
     *
     * @type {string}
     * @memberof InboundReceiptForCreation
     */
    status?: InboundReceiptForCreation.StatusEnum;
    /**
     * Attributes that can be added to this entity. These attributes **cannot** be used within fulfillment processes, but enable you to attach custom data from your systems to fulfillmenttools entities.
     * @type {any}
     * @memberof InboundReceiptForCreation
     */
    customAttributes?: any;
}

/**
 * @export
 * @namespace InboundReceiptForCreation
 */
export namespace InboundReceiptForCreation {
    /**
     * @export
     * @enum {string}
     */
    export enum StatusEnum {
        INPROGRESS = 'IN_PROGRESS',
        FINISHED = 'FINISHED'
    }
}
/**
 *
 * @export
 * @interface InboundReceiptForPatch
 */
export interface InboundReceiptForPatch {
    /**
     *
     * @type {string}
     * @memberof InboundReceiptForPatch
     */
    asnRef?: string;
    /**
     *
     * @type {Array<InboundReceiptComment>}
     * @memberof InboundReceiptForPatch
     */
    comments?: Array<InboundReceiptComment>;
    /**
     *
     * @type {Date}
     * @memberof InboundReceiptForPatch
     */
    receivedDate?: Date;
    /**
     *
     * @type {Array<InboundReceiptLineItem>}
     * @memberof InboundReceiptForPatch
     */
    receivedItems?: Array<InboundReceiptLineItem>;
    /**
     *
     * @type {string}
     * @memberof InboundReceiptForPatch
     */
    status?: InboundReceiptForPatch.StatusEnum;
    /**
     *
     * @type {number}
     * @memberof InboundReceiptForPatch
     */
    version: number;
    /**
     * Attributes that can be added to this entity. These attributes **cannot** be used within fulfillment processes, but enable you to attach custom data from your systems to fulfillmenttools entities.
     * @type {any}
     * @memberof InboundReceiptForPatch
     */
    customAttributes?: any;
}

/**
 * @export
 * @namespace InboundReceiptForPatch
 */
export namespace InboundReceiptForPatch {
    /**
     * @export
     * @enum {string}
     */
    export enum StatusEnum {
        INPROGRESS = 'IN_PROGRESS',
        FINISHED = 'FINISHED'
    }
}
/**
 *
 * @export
 * @interface InboundReceiptForUpdate
 */
export interface InboundReceiptForUpdate {
    /**
     *
     * @type {string}
     * @memberof InboundReceiptForUpdate
     */
    asnRef?: string;
    /**
     *
     * @type {Date}
     * @memberof InboundReceiptForUpdate
     */
    receivedDate: Date;
    /**
     *
     * @type {Array<InboundReceiptLineItem>}
     * @memberof InboundReceiptForUpdate
     */
    receivedItems: Array<InboundReceiptLineItem>;
    /**
     *
     * @type {Array<InboundReceiptComment>}
     * @memberof InboundReceiptForUpdate
     */
    comments: Array<InboundReceiptComment>;
    /**
     *
     * @type {string}
     * @memberof InboundReceiptForUpdate
     */
    status?: InboundReceiptForUpdate.StatusEnum;
    /**
     * Attributes that can be added to this entity. These attributes **cannot** be used within fulfillment processes, but enable you to attach custom data from your systems to fulfillmenttools entities.
     * @type {any}
     * @memberof InboundReceiptForUpdate
     */
    customAttributes?: any;
    /**
     *
     * @type {number}
     * @memberof InboundReceiptForUpdate
     */
    version: number;
}

/**
 * @export
 * @namespace InboundReceiptForUpdate
 */
export namespace InboundReceiptForUpdate {
    /**
     * @export
     * @enum {string}
     */
    export enum StatusEnum {
        INPROGRESS = 'IN_PROGRESS',
        FINISHED = 'FINISHED'
    }
}
/**
 *
 * @export
 * @interface InboundReceiptJob
 */
export interface InboundReceiptJob {
    /**
     *
     * @type {string}
     * @memberof InboundReceiptJob
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof InboundReceiptJob
     */
    facilityRef: string;
    /**
     *
     * @type {string}
     * @memberof InboundReceiptJob
     */
    inboundProcessRef: string;
    /**
     *
     * @type {string}
     * @memberof InboundReceiptJob
     */
    originReadableName?: string;
    /**
     *
     * @type {string}
     * @memberof InboundReceiptJob
     */
    originReadableId?: string;
    /**
     *
     * @type {string}
     * @memberof InboundReceiptJob
     */
    status: InboundReceiptJob.StatusEnum;
    /**
     *
     * @type {RequestedDate}
     * @memberof InboundReceiptJob
     */
    expectedDate: RequestedDate;
    /**
     *
     * @type {InboundLineItem}
     * @memberof InboundReceiptJob
     */
    items: InboundLineItem;
    /**
     *
     * @type {InboundReceiptJobOrigin}
     * @memberof InboundReceiptJob
     */
    origin: InboundReceiptJobOrigin;
}

/**
 * @export
 * @namespace InboundReceiptJob
 */
export namespace InboundReceiptJob {
    /**
     * @export
     * @enum {string}
     */
    export enum StatusEnum {
        OPEN = 'OPEN',
        PARTIALDELIVERY = 'PARTIAL_DELIVERY',
        ONHOLD = 'ON_HOLD',
        CLOSED = 'CLOSED'
    }
}
/**
 *
 * @export
 * @interface InboundReceiptJobOrigin
 */
export interface InboundReceiptJobOrigin {
    /**
     *
     * @type {string}
     * @memberof InboundReceiptJobOrigin
     */
    name?: string;
}
/**
 *
 * @export
 * @interface InboundReceiptJobPaginatedResult
 */
export interface InboundReceiptJobPaginatedResult {
    /**
     *
     * @type {number}
     * @memberof InboundReceiptJobPaginatedResult
     */
    total: number;
    /**
     *
     * @type {Array<InboundReceiptJob>}
     * @memberof InboundReceiptJobPaginatedResult
     */
    inboundReceiptJobs: Array<InboundReceiptJob>;
}
/**
 *
 * @export
 * @interface InboundReceiptLineItem
 */
export interface InboundReceiptLineItem {
    /**
     *
     * @type {string}
     * @memberof InboundReceiptLineItem
     */
    tenantArticleId: string;
    /**
     *
     * @type {Quantity}
     * @memberof InboundReceiptLineItem
     */
    acceptedQuantity: Quantity;
    /**
     *
     * @type {Quantity}
     * @memberof InboundReceiptLineItem
     */
    rejectedQuantity: Quantity;
    /**
     *
     * @type {Array<InboundReceiptComment>}
     * @memberof InboundReceiptLineItem
     */
    comments: Array<InboundReceiptComment>;
    /**
     *
     * @type {string}
     * @memberof InboundReceiptLineItem
     */
    storageLocationRef?: string;
    /**
     *
     * @type {StockPropertyPreset}
     * @memberof InboundReceiptLineItem
     */
    stockProperties?: StockPropertyPreset;
}
/**
 *
 * @export
 * @interface InheritedServiceJobLineItem
 */
export interface InheritedServiceJobLineItem {
    /**
     *
     * @type {string}
     * @memberof InheritedServiceJobLineItem
     */
    id: string;
    /**
     * Quantity of the items
     * @type {number}
     * @memberof InheritedServiceJobLineItem
     */
    quantity: number;
    /**
     *
     * @type {Array<string>}
     * @memberof InheritedServiceJobLineItem
     */
    scannableCodes?: Array<string>;
    /**
     *
     * @type {ServiceJobLineItemArticle}
     * @memberof InheritedServiceJobLineItem
     */
    article: ServiceJobLineItemArticle;
    /**
     *
     * @type {string}
     * @memberof InheritedServiceJobLineItem
     */
    serviceJobRef: string;
}
/**
 *
 * @export
 * @interface InlineResponse200
 */
export interface InlineResponse200 {
}
/**
 *
 * @export
 * @interface InlineResponse2001
 */
export interface InlineResponse2001 {
}
/**
 *
 * @export
 * @interface InputRequestedDate
 */
export interface InputRequestedDate {
    /**
     *
     * @type {string}
     * @memberof InputRequestedDate
     */
    type: InputRequestedDate.TypeEnum;
    /**
     *
     * @type {Date}
     * @memberof InputRequestedDate
     */
    value?: Date;
}

/**
 * @export
 * @namespace InputRequestedDate
 */
export namespace InputRequestedDate {
    /**
     * @export
     * @enum {string}
     */
    export enum TypeEnum {
        ASAP = 'ASAP',
        TIMEPOINT = 'TIME_POINT'
    }
}
/**
 *
 * @export
 * @interface IntegerValidation
 */
export interface IntegerValidation extends BaseValidation {
    /**
     *
     * @type {number}
     * @memberof IntegerValidation
     */
    minValue?: number;
    /**
     *
     * @type {number}
     * @memberof IntegerValidation
     */
    maxValue?: number;
}

/**
 * @export
 * @namespace IntegerValidation
 */
export namespace IntegerValidation {
}
/**
 *
 * @export
 * @interface InventoryArticle
 */
export interface InventoryArticle {
    /**
     *
     * @type {Array<ListingAttributeItem>}
     * @memberof InventoryArticle
     */
    attributes?: Array<ListingAttributeItem>;
    /**
     *
     * @type {string}
     * @memberof InventoryArticle
     */
    imageUrl: string;
    /**
     *
     * @type {string}
     * @memberof InventoryArticle
     */
    tenantArticleId: string;
    /**
     *
     * @type {string}
     * @memberof InventoryArticle
     */
    title: string;
    /**
     *
     * @type {LocaleString}
     * @memberof InventoryArticle
     */
    titleLocalized?: LocaleString;
}
/**
 *
 * @export
 * @interface InventoryArticlePaginatedResult
 */
export interface InventoryArticlePaginatedResult {
    /**
     *
     * @type {number}
     * @memberof InventoryArticlePaginatedResult
     */
    total: number;
    /**
     *
     * @type {Array<InventoryArticle>}
     * @memberof InventoryArticlePaginatedResult
     */
    articles: Array<InventoryArticle>;
}
/**
 *
 * @export
 * @interface InventoryConfiguration
 */
export interface InventoryConfiguration {
    /**
     *
     * @type {number}
     * @memberof InventoryConfiguration
     */
    version: number;
    /**
     *
     * @type {boolean}
     * @memberof InventoryConfiguration
     */
    enableStorageLocationOverview: boolean;
    /**
     *
     * @type {boolean}
     * @memberof InventoryConfiguration
     */
    isMixedStorage?: boolean;
}
/**
 *
 * @export
 * @interface InventoryConfigurationForPatch
 */
export interface InventoryConfigurationForPatch {
    /**
     *
     * @type {number}
     * @memberof InventoryConfigurationForPatch
     */
    version: number;
    /**
     *
     * @type {boolean}
     * @memberof InventoryConfigurationForPatch
     */
    enableStorageLocationOverview?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof InventoryConfigurationForPatch
     */
    isMixedStorage?: boolean;
}
/**
 *
 * @export
 * @interface InventoryFacilityConfiguration
 */
export interface InventoryFacilityConfiguration {
    /**
     *
     * @type {string}
     * @memberof InventoryFacilityConfiguration
     */
    id: string;
    /**
     *
     * @type {number}
     * @memberof InventoryFacilityConfiguration
     */
    version: number;
    /**
     *
     * @type {boolean}
     * @memberof InventoryFacilityConfiguration
     */
    isMixedStorage?: boolean;
    /**
     *
     * @type {string}
     * @memberof InventoryFacilityConfiguration
     */
    facilityRef: string;
    /**
     *
     * @type {OutboundStockConfiguration}
     * @memberof InventoryFacilityConfiguration
     */
    outboundStockConfiguration?: OutboundStockConfiguration;
}
/**
 *
 * @export
 * @interface InventoryFacilityConfigurationForPatch
 */
export interface InventoryFacilityConfigurationForPatch {
    /**
     *
     * @type {number}
     * @memberof InventoryFacilityConfigurationForPatch
     */
    version: number;
    /**
     *
     * @type {boolean}
     * @memberof InventoryFacilityConfigurationForPatch
     */
    isMixedStorage?: boolean;
    /**
     *
     * @type {OutboundStockConfiguration}
     * @memberof InventoryFacilityConfigurationForPatch
     */
    outboundStockConfiguration?: OutboundStockConfiguration;
}
/**
 *
 * @export
 * @interface InventoryFacilityStockChangedWebHookEvent
 */
export interface InventoryFacilityStockChangedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {Array<InventoryFacilityStockShape>}
     * @memberof InventoryFacilityStockChangedWebHookEvent
     */
    payload: Array<InventoryFacilityStockShape>;
}
/**
 *
 * @export
 * @interface InventoryFacilityStockDeltaShape
 */
export interface InventoryFacilityStockDeltaShape {
    /**
     *
     * @type {number}
     * @memberof InventoryFacilityStockDeltaShape
     */
    totalAmount: number;
    /**
     *
     * @type {number}
     * @memberof InventoryFacilityStockDeltaShape
     */
    reserved: number;
    /**
     *
     * @type {number}
     * @memberof InventoryFacilityStockDeltaShape
     */
    safetyStock: number;
    /**
     *
     * @type {number}
     * @memberof InventoryFacilityStockDeltaShape
     */
    available: number;
    /**
     *
     * @type {InventoryFacilityStockShapeByTrait}
     * @memberof InventoryFacilityStockDeltaShape
     */
    byTrait: InventoryFacilityStockShapeByTrait;
    /**
     *
     * @type {number}
     * @memberof InventoryFacilityStockDeltaShape
     */
    availableToPromise: number;
    /**
     *
     * @type {number}
     * @memberof InventoryFacilityStockDeltaShape
     */
    readyToPick: number;
    /**
     *
     * @type {number}
     * @memberof InventoryFacilityStockDeltaShape
     */
    availableForPicking: number;
    /**
     *
     * @type {number}
     * @memberof InventoryFacilityStockDeltaShape
     */
    stockCount: number;
    /**
     *
     * @type {number}
     * @memberof InventoryFacilityStockDeltaShape
     */
    availableOnStock: number;
    /**
     *
     * @type {number}
     * @memberof InventoryFacilityStockDeltaShape
     */
    stockOnHand: number;
}
/**
 *
 * @export
 * @interface InventoryFacilityStockShape
 */
export interface InventoryFacilityStockShape {
    /**
     *
     * @type {string}
     * @memberof InventoryFacilityStockShape
     */
    facilityRef: string;
    /**
     *
     * @type {string}
     * @memberof InventoryFacilityStockShape
     */
    tenantArticleId: string;
    /**
     *
     * @type {number}
     * @memberof InventoryFacilityStockShape
     */
    totalAmount: number;
    /**
     *
     * @type {number}
     * @memberof InventoryFacilityStockShape
     */
    reserved: number;
    /**
     *
     * @type {number}
     * @memberof InventoryFacilityStockShape
     */
    safetyStock: number;
    /**
     * This field is deprecated and replaced by new availability concepts. Please see https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/global-inventory/availability for more information.
     * @type {number}
     * @memberof InventoryFacilityStockShape
     */
    available: number;
    /**
     *
     * @type {InventoryFacilityStockShapeByTrait}
     * @memberof InventoryFacilityStockShape
     */
    byTrait: InventoryFacilityStockShapeByTrait;
    /**
     *
     * @type {string}
     * @memberof InventoryFacilityStockShape
     */
    changeReason: InventoryFacilityStockShape.ChangeReasonEnum;
    /**
     * This field is deprecated and replaced by new availability concepts. Please see https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/global-inventory/availability for more information.
     * @type {number}
     * @memberof InventoryFacilityStockShape
     */
    availableToPromise: number;
    /**
     * This field is deprecated and replaced by new availability concepts. Please see https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/global-inventory/availability for more information.
     * @type {number}
     * @memberof InventoryFacilityStockShape
     */
    readyToPick: number;
    /**
     *
     * @type {number}
     * @memberof InventoryFacilityStockShape
     */
    availableForPicking: number;
    /**
     *
     * @type {InventoryFacilityStockDeltaShape}
     * @memberof InventoryFacilityStockShape
     */
    delta: InventoryFacilityStockDeltaShape;
    /**
     *
     * @type {Array<InventoryFacilityStockStaleReason>}
     * @memberof InventoryFacilityStockShape
     */
    staleReasons: Array<InventoryFacilityStockStaleReason>;
    /**
     *
     * @type {number}
     * @memberof InventoryFacilityStockShape
     */
    stockOnHand: number;
    /**
     *
     * @type {number}
     * @memberof InventoryFacilityStockShape
     */
    availableOnStock: number;
}

/**
 * @export
 * @namespace InventoryFacilityStockShape
 */
export namespace InventoryFacilityStockShape {
    /**
     * @export
     * @enum {string}
     */
    export enum ChangeReasonEnum {
        UNKNOWN = 'UNKNOWN'
    }
}
/**
 *
 * @export
 * @interface InventoryFacilityStockShapeByTrait
 */
export interface InventoryFacilityStockShapeByTrait {
    /**
     *
     * @type {number}
     * @memberof InventoryFacilityStockShapeByTrait
     */
    PICKABLE: number;
    /**
     *
     * @type {number}
     * @memberof InventoryFacilityStockShapeByTrait
     */
    ACCESSIBLE: number;
}
/**
 *
 * @export
 * @interface InventoryFacilityStockStaleReason
 */
export interface InventoryFacilityStockStaleReason {
    /**
     *
     * @type {Date}
     * @memberof InventoryFacilityStockStaleReason
     */
    timestamp: Date;
    /**
     *
     * @type {Array<string>}
     * @memberof InventoryFacilityStockStaleReason
     */
    reasons: Array<string>;
}
/**
 *
 * @export
 * @interface ItemReturn
 */
export interface ItemReturn {
    /**
     *
     * @type {string}
     * @memberof ItemReturn
     */
    id: string;
    /**
     * The date this entity was created at the platform. This value is generated by the service.
     * @type {Date}
     * @memberof ItemReturn
     */
    created?: Date;
    /**
     * The date this entity was modified last. This value is generated by the service.
     * @type {Date}
     * @memberof ItemReturn
     */
    lastModified?: Date;
    /**
     *
     * @type {string}
     * @memberof ItemReturn
     */
    returnFacilityRef: string;
    /**
     *
     * @type {ItemReturnStatus}
     * @memberof ItemReturn
     */
    status: ItemReturnStatus;
    /**
     *
     * @type {string}
     * @memberof ItemReturn
     */
    tenantOrderId?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof ItemReturn
     */
    scannableCodes?: Array<string>;
    /**
     *
     * @type {Array<ItemReturnLineItem>}
     * @memberof ItemReturn
     */
    returnedLineItems: Array<ItemReturnLineItem>;
}
/**
 *
 * @export
 * @interface ItemReturnActionsParameter
 */
export interface ItemReturnActionsParameter {
}
/**
 *
 * @export
 * @interface ItemReturnForCreation
 */
export interface ItemReturnForCreation {
    /**
     *
     * @type {ItemReturnStatus}
     * @memberof ItemReturnForCreation
     */
    status: ItemReturnStatus;
    /**
     *
     * @type {string}
     * @memberof ItemReturnForCreation
     */
    returnFacilityRef: string;
    /**
     *
     * @type {string}
     * @memberof ItemReturnForCreation
     */
    tenantOrderId?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof ItemReturnForCreation
     */
    scannableCodes?: Array<string>;
    /**
     *
     * @type {Array<ItemReturnLineItemForCreation>}
     * @memberof ItemReturnForCreation
     */
    returnedLineItems: Array<ItemReturnLineItemForCreation>;
}
/**
 *
 * @export
 * @interface ItemReturnJob
 */
export interface ItemReturnJob extends VersionedResource {
    /**
     *
     * @type {string}
     * @memberof ItemReturnJob
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof ItemReturnJob
     */
    processRef: string;
    /**
     *
     * @type {Array<string>}
     * @memberof ItemReturnJob
     */
    originFacilityRefs: Array<string>;
    /**
     *
     * @type {ItemReturnJobStatus}
     * @memberof ItemReturnJob
     */
    status: ItemReturnJobStatus;
    /**
     *
     * @type {string}
     * @memberof ItemReturnJob
     */
    tenantOrderId?: string;
    /**
     *
     * @type {Array<ConsumerAddress>}
     * @memberof ItemReturnJob
     */
    consumerAddresses: Array<ConsumerAddress>;
    /**
     *
     * @type {Array<string>}
     * @memberof ItemReturnJob
     */
    scannableCodes?: Array<string>;
    /**
     * A short identifier that helps assigning a item return job to a customer. This is automatically created during creation.
     * @type {string}
     * @memberof ItemReturnJob
     */
    shortId?: string;
    /**
     *
     * @type {Array<ItemReturnJobLineItem>}
     * @memberof ItemReturnJob
     */
    returnableLineItems: Array<ItemReturnJobLineItem>;
    /**
     *
     * @type {Array<ItemReturn>}
     * @memberof ItemReturnJob
     */
    itemReturns: Array<ItemReturn>;
    /**
     * Indicates if gdpr related data was anonymized
     * @type {boolean}
     * @memberof ItemReturnJob
     */
    anonymized?: boolean;
}
/**
 *
 * @export
 * @interface ItemReturnJobActionsParameter
 */
export interface ItemReturnJobActionsParameter {
}
/**
 *
 * @export
 * @interface ItemReturnJobForCreation
 */
export interface ItemReturnJobForCreation {
    /**
     *
     * @type {string}
     * @memberof ItemReturnJobForCreation
     */
    processRef?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof ItemReturnJobForCreation
     */
    originFacilityRefs: Array<string>;
    /**
     *
     * @type {ItemReturnJobStatus}
     * @memberof ItemReturnJobForCreation
     */
    status: ItemReturnJobStatus;
    /**
     *
     * @type {string}
     * @memberof ItemReturnJobForCreation
     */
    tenantOrderId?: string;
    /**
     *
     * @type {Array<ConsumerAddress>}
     * @memberof ItemReturnJobForCreation
     */
    consumerAddresses: Array<ConsumerAddress>;
    /**
     *
     * @type {Array<string>}
     * @memberof ItemReturnJobForCreation
     */
    scannableCodes?: Array<string>;
    /**
     * A short identifier that helps assigning a item return job to a customer. This is automatically created during creation.
     * @type {string}
     * @memberof ItemReturnJobForCreation
     */
    shortId?: string;
    /**
     *
     * @type {Array<ItemReturnJobLineItemForCreation>}
     * @memberof ItemReturnJobForCreation
     */
    returnableLineItems: Array<ItemReturnJobLineItemForCreation>;
}
/**
 *
 * @export
 * @interface ItemReturnJobLineItem
 */
export interface ItemReturnJobLineItem extends ItemReturnJobLineItemForCreation {
    /**
     *
     * @type {string}
     * @memberof ItemReturnJobLineItem
     */
    id: string;
    /**
     *
     * @type {number}
     * @memberof ItemReturnJobLineItem
     */
    returned: number;
    /**
     *
     * @type {number}
     * @memberof ItemReturnJobLineItem
     */
    returnable: number;
}
/**
 *
 * @export
 * @interface ItemReturnJobLineItemArticle
 */
export interface ItemReturnJobLineItemArticle extends AbstractArticle {
    /**
     *
     * @type {Array<ArticleAttributeItem>}
     * @memberof ItemReturnJobLineItemArticle
     */
    attributes?: Array<ArticleAttributeItem>;
    /**
     *
     * @type {Array<ArticlePrice>}
     * @memberof ItemReturnJobLineItemArticle
     */
    prices?: Array<ArticlePrice>;
}
/**
 *
 * @export
 * @interface ItemReturnJobLineItemForCreation
 */
export interface ItemReturnJobLineItemForCreation {
    /**
     *
     * @type {ItemReturnJobLineItemArticle}
     * @memberof ItemReturnJobLineItemForCreation
     */
    article: ItemReturnJobLineItemArticle;
    /**
     *
     * @type {number}
     * @memberof ItemReturnJobLineItemForCreation
     */
    delivered: number;
    /**
     *
     * @type {Array<string>}
     * @memberof ItemReturnJobLineItemForCreation
     */
    scannableCodes?: Array<string>;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ItemReturnJobStatus {
    OPEN = 'OPEN',
    INPROGRESS = 'IN_PROGRESS',
    FINISHED = 'FINISHED'
}
/**
 *
 * @export
 * @interface ItemReturnJobWithSearchPaths
 */
export interface ItemReturnJobWithSearchPaths extends ItemReturnJob {
    /**
     *
     * @type {Array<string>}
     * @memberof ItemReturnJobWithSearchPaths
     */
    searchPaths?: Array<string>;
}
/**
 *
 * @export
 * @interface ItemReturnJobs
 */
export interface ItemReturnJobs {
    /**
     *
     * @type {Array<ItemReturnJobWithSearchPaths>}
     * @memberof ItemReturnJobs
     */
    itemReturnJobsWithSearchPaths?: Array<ItemReturnJobWithSearchPaths>;
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof ItemReturnJobs
     */
    total?: number;
}
/**
 *
 * @export
 * @interface ItemReturnLineItem
 */
export interface ItemReturnLineItem extends ItemReturnLineItemForCreation {
    /**
     *
     * @type {string}
     * @memberof ItemReturnLineItem
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof ItemReturnLineItem
     */
    itemCondition?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof ItemReturnLineItem
     */
    itemReturnJobLineItemRefs: Array<string>;
    /**
     *
     * @type {Array<ItemReturnLineItemReason>}
     * @memberof ItemReturnLineItem
     */
    reasons?: Array<ItemReturnLineItemReason>;
    /**
     *
     * @type {ReturnedLineItemRefund}
     * @memberof ItemReturnLineItem
     */
    refund?: ReturnedLineItemRefund;
}
/**
 *
 * @export
 * @interface ItemReturnLineItemForCreation
 */
export interface ItemReturnLineItemForCreation {
    /**
     *
     * @type {LocaleString}
     * @memberof ItemReturnLineItemForCreation
     */
    itemConditionLocalized?: LocaleString;
    /**
     *
     * @type {string}
     * @memberof ItemReturnLineItemForCreation
     */
    itemConditionComment?: string;
    /**
     *
     * @type {string}
     * @memberof ItemReturnLineItemForCreation
     */
    tenantArticleId: string;
    /**
     *
     * @type {Array<string>}
     * @memberof ItemReturnLineItemForCreation
     */
    scannedCodes?: Array<string>;
    /**
     *
     * @type {ItemReturnLineItemStatus}
     * @memberof ItemReturnLineItemForCreation
     */
    status: ItemReturnLineItemStatus;
    /**
     *
     * @type {Array<ItemReturnLineItemReason>}
     * @memberof ItemReturnLineItemForCreation
     */
    reasons?: Array<ItemReturnLineItemReason>;
}
/**
 *
 * @export
 * @interface ItemReturnLineItemForUpdate
 */
export interface ItemReturnLineItemForUpdate {
    /**
     *
     * @type {ItemReturnLineItemStatus}
     * @memberof ItemReturnLineItemForUpdate
     */
    status?: ItemReturnLineItemStatus;
    /**
     *
     * @type {ReturnedLineItemRefund}
     * @memberof ItemReturnLineItemForUpdate
     */
    refund?: ReturnedLineItemRefund;
    /**
     * version of the overlaying itemReturnJob
     * @type {number}
     * @memberof ItemReturnLineItemForUpdate
     */
    itemReturnJobVersion: number;
}
/**
 *
 * @export
 * @interface ItemReturnLineItemReason
 */
export interface ItemReturnLineItemReason {
    /**
     * Translated reasonLocalized
     * @type {string}
     * @memberof ItemReturnLineItemReason
     */
    reason?: string;
    /**
     *
     * @type {LocaleString}
     * @memberof ItemReturnLineItemReason
     */
    reasonLocalized: LocaleString;
    /**
     *
     * @type {string}
     * @memberof ItemReturnLineItemReason
     */
    comment?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ItemReturnLineItemStatus {
    OPEN = 'OPEN',
    INPROGRESS = 'IN_PROGRESS',
    WAITINGFORINPUT = 'WAITING_FOR_INPUT',
    REJECTED = 'REJECTED',
    ACCEPTED = 'ACCEPTED'
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ItemReturnStatus {
    ANNOUNCED = 'ANNOUNCED',
    OPEN = 'OPEN',
    INPROGRESS = 'IN_PROGRESS',
    PAUSED = 'PAUSED',
    FINISHED = 'FINISHED',
    WAITINGFORINPUT = 'WAITING_FOR_INPUT'
}
/**
 *
 * @export
 * @interface ItemReturns
 */
export interface ItemReturns {
    /**
     *
     * @type {Array<ItemReturnsWithSearchPaths>}
     * @memberof ItemReturns
     */
    itemReturns: Array<ItemReturnsWithSearchPaths>;
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof ItemReturns
     */
    totalCount: number;
}
/**
 *
 * @export
 * @interface ItemReturnsWithSearchPaths
 */
export interface ItemReturnsWithSearchPaths extends ItemReturn {
    /**
     *
     * @type {Array<string>}
     * @memberof ItemReturnsWithSearchPaths
     */
    searchPaths: Array<string>;
}
/**
 *
 * @export
 * @interface ItemsFulfillabilityConstraintType
 */
export interface ItemsFulfillabilityConstraintType extends AbstractFulfillabilityConstraintType {
    /**
     *
     * @type {string}
     * @memberof ItemsFulfillabilityConstraintType
     */
    type?: ItemsFulfillabilityConstraintType.TypeEnum;
    /**
     *
     * @type {FulfillabilityItemsConstraintValue}
     * @memberof ItemsFulfillabilityConstraintType
     */
    value?: FulfillabilityItemsConstraintValue;
}

/**
 * @export
 * @namespace ItemsFulfillabilityConstraintType
 */
export namespace ItemsFulfillabilityConstraintType {
    /**
     * @export
     * @enum {string}
     */
    export enum TypeEnum {
        ITEMS = 'ITEMS'
    }
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ItemsRequiredEnum {
    MANDATORY = 'MANDATORY',
    NONE = 'NONE'
}
/**
 * An object holding the last DomainStatus of a given entity and its corresponding domain.
 * @export
 * @interface LastDomainEntityStatusItem
 */
export interface LastDomainEntityStatusItem {
    /**
     *
     * @type {DomainType}
     * @memberof LastDomainEntityStatusItem
     */
    domain: DomainType;
    /**
     *
     * @type {DomainStatus}
     * @memberof LastDomainEntityStatusItem
     */
    status: DomainStatus;
    /**
     * The entity id
     * @type {string}
     * @memberof LastDomainEntityStatusItem
     */
    entityId: string;
}
/**
 *
 * @export
 * @interface LinkedConfiguration
 */
export interface LinkedConfiguration {
    /**
     *
     * @type {string}
     * @memberof LinkedConfiguration
     */
    ref?: string;
    /**
     *
     * @type {string}
     * @memberof LinkedConfiguration
     */
    rel?: string;
}
/**
 *
 * @export
 * @interface LinkedServiceJobs
 */
export interface LinkedServiceJobs extends VersionedResource {
    /**
     *
     * @type {string}
     * @memberof LinkedServiceJobs
     */
    id: string;
    /**
     * ProcessRef of the added ServiceJobs. All Service Jobs need to be part of the same process
     * @type {string}
     * @memberof LinkedServiceJobs
     */
    processRef: string;
    /**
     * Id linked Facility from the includes service jobs
     * @type {string}
     * @memberof LinkedServiceJobs
     */
    facilityRef: string;
    /**
     *
     * @type {Date}
     * @memberof LinkedServiceJobs
     */
    targetTime: Date;
    /**
     * searchable field of all included service job link ids
     * @type {Array<string>}
     * @memberof LinkedServiceJobs
     */
    includedServiceJobLinkIds: Array<string>;
    /**
     * searchable field of all included service job ids
     * @type {Array<string>}
     * @memberof LinkedServiceJobs
     */
    includedServiceJobRefs: Array<string>;
    /**
     *
     * @type {LinkedServiceJobsStatus}
     * @memberof LinkedServiceJobs
     */
    status: LinkedServiceJobsStatus;
    /**
     *
     * @type {Array<ServiceJobLink>}
     * @memberof LinkedServiceJobs
     */
    serviceJobLinks: Array<ServiceJobLink>;
    /**
     *
     * @type {string}
     * @memberof LinkedServiceJobs
     */
    operativeProcessRef?: string;
    /**
     * Full identifier of the service job. Using the full name of the customer when created from an order.
     * @type {string}
     * @memberof LinkedServiceJobs
     */
    fullIdentifier?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LinkedServiceJobsFilterChannel {
    COLLECT = 'COLLECT',
    SHIPPING = 'SHIPPING'
}
/**
 *
 * @export
 * @interface LinkedServiceJobsForCreation
 */
export interface LinkedServiceJobsForCreation {
    /**
     *
     * @type {Array<ServiceJobLinkForCreation>}
     * @memberof LinkedServiceJobsForCreation
     */
    serviceJobLinks: Array<ServiceJobLinkForCreation>;
    /**
     *
     * @type {string}
     * @memberof LinkedServiceJobsForCreation
     */
    operativeProcessRef?: string;
    /**
     * Full identifier of the service job. Using the full name of the customer when created from an order.
     * @type {string}
     * @memberof LinkedServiceJobsForCreation
     */
    fullIdentifier?: string;
    /**
     *
     * @type {LinkedServiceJobsStatus}
     * @memberof LinkedServiceJobsForCreation
     */
    status?: LinkedServiceJobsStatus;
}
/**
 * Attribute to order linked service jobs by
 * @export
 * @enum {string}
 */
export enum LinkedServiceJobsOrderBy {
    LASTMODIFIEDASC = 'LAST_MODIFIED_ASC',
    LASTMODIFIEDDESC = 'LAST_MODIFIED_DESC',
    TARGETTIMEASC = 'TARGET_TIME_ASC',
    TARGETTIMEDESC = 'TARGET_TIME_DESC'
}
/**
 *
 * @export
 * @interface LinkedServiceJobsPaginatedResult
 */
export interface LinkedServiceJobsPaginatedResult {
    /**
     *
     * @type {any}
     * @memberof LinkedServiceJobsPaginatedResult
     */
    total: any;
    /**
     *
     * @type {Array<LinkedServiceJobsWithSearchPaths>}
     * @memberof LinkedServiceJobsPaginatedResult
     */
    linkedServiceJobs: Array<LinkedServiceJobsWithSearchPaths>;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LinkedServiceJobsStatus {
    OPEN = 'OPEN',
    INPROGRESS = 'IN_PROGRESS',
    FINISHED = 'FINISHED',
    CANCELLED = 'CANCELLED',
    OBSOLETE = 'OBSOLETE',
    NOTREADY = 'NOT_READY'
}
/**
 *
 * @export
 * @interface LinkedServiceJobsWithSearchPaths
 */
export interface LinkedServiceJobsWithSearchPaths extends LinkedServiceJobs {
    /**
     *
     * @type {Array<string>}
     * @memberof LinkedServiceJobsWithSearchPaths
     */
    searchPaths: Array<string>;
}
/**
 *
 * @export
 * @interface Listing
 */
export interface Listing extends ListingForCreation {
    /**
     * The date this entity was created at the platform. This value is generated by the service.
     * @type {Date}
     * @memberof Listing
     */
    created?: Date;
    /**
     * The date this entity was modified last. This value is generated by the service.
     * @type {Date}
     * @memberof Listing
     */
    lastModified?: Date;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof Listing
     */
    version: number;
    /**
     *
     * @type {StockInformation}
     * @memberof Listing
     */
    stockinformation?: StockInformation;
    /**
     * This is a reference to a facility
     * @type {string}
     * @memberof Listing
     */
    facilityId: string;
    /**
     *
     * @type {string}
     * @memberof Listing
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof Listing
     */
    status: Listing.StatusEnum;
    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />@deprecated This field is deprecated since 11th of September 2023. Use /api/stocks endpoints instead.
     * @type {Array<PartialStock>}
     * @memberof Listing
     */
    partialStocks?: Array<PartialStock>;
    /**
     *
     * @type {Array<string>}
     * @memberof Listing
     */
    scannableCodes?: Array<string>;
}

/**
 * @export
 * @namespace Listing
 */
export namespace Listing {
    /**
     * @export
     * @enum {string}
     */
    export enum StatusEnum {
        ACTIVE = 'ACTIVE',
        INACTIVE = 'INACTIVE'
    }
}
/**
 *
 * @export
 * @interface ListingAttributeItem
 */
export interface ListingAttributeItem extends ArticleAttributeItem {
    /**
     *
     * @type {LocaleString}
     * @memberof ListingAttributeItem
     */
    keyLocalized?: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof ListingAttributeItem
     */
    valueLocalized?: LocaleString;
}

/**
 * @export
 * @namespace ListingAttributeItem
 */
export namespace ListingAttributeItem {
}
/**
 *
 * @export
 * @interface ListingBulkOperationResult
 */
export interface ListingBulkOperationResult {
    /**
     *
     * @type {Listing}
     * @memberof ListingBulkOperationResult
     */
    listing: Listing;
    /**
     *
     * @type {BulkOperationResultStatus}
     * @memberof ListingBulkOperationResult
     */
    status: BulkOperationResultStatus;
}
/**
 *
 * @export
 * @interface ListingForCreation
 */
export interface ListingForCreation {
    /**
     *
     * @type {Array<ListingAttributeItem>}
     * @memberof ListingForCreation
     */
    attributes?: Array<ListingAttributeItem>;
    /**
     * A web link to a picture of this article. Please make sure that no authentication is required to fetch the image!
     * @type {string}
     * @memberof ListingForCreation
     */
    imageUrl?: string;
    /**
     *
     * @type {number}
     * @memberof ListingForCreation
     */
    price?: number;
    /**
     *
     * @type {StockInformationForCreation}
     * @memberof ListingForCreation
     */
    stockinformation?: StockInformationForCreation;
    /**
     * This is a reference to an article Id
     * @type {string}
     * @memberof ListingForCreation
     */
    tenantArticleId: string;
    /**
     * a title describing the article
     * @type {string}
     * @memberof ListingForCreation
     */
    title: string;
    /**
     *
     * @type {LocaleString}
     * @memberof ListingForCreation
     */
    titleLocalized?: LocaleString;
    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />@deprecated This field is deprecated since 11th of September 2023. Use /api/stocks endpoints instead.
     * @type {Array<PartialStockForCreation>}
     * @memberof ListingForCreation
     */
    partialStocks?: Array<PartialStockForCreation>;
    /**
     *
     * @type {number}
     * @memberof ListingForCreation
     */
    weight?: number;
    /**
     *
     * @type {ScanningRuleConfiguration}
     * @memberof ListingForCreation
     */
    scanningRule?: ScanningRuleConfiguration;
    /**
     *
     * @type {Array<string>}
     * @memberof ListingForCreation
     */
    scannableCodes?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof ListingForCreation
     */
    outOfStockBehaviour?: ListingForCreation.OutOfStockBehaviourEnum;
    /**
     *
     * @type {AvailabilityTimeframe}
     * @memberof ListingForCreation
     */
    availabilityTimeframe?: AvailabilityTimeframe;
    /**
     *
     * @type {Array<TagReference>}
     * @memberof ListingForCreation
     */
    tags?: Array<TagReference>;
    /**
     * Identifier for items unit of measurement.
     * @type {string}
     * @memberof ListingForCreation
     */
    measurementUnitKey?: string;
    /**
     * The currency of the price as an ISO 4217 code. Attention - Routing currently does not convert between different currencies. Don't use multiple currencies when using price ratings in order routing.
     * @type {CurrencyCode}
     * @memberof ListingForCreation
     */
    currency?: CurrencyCode;
    /**
     *
     * @type {{ [key: string]: StockPropertyDefinition; }}
     * @memberof ListingForCreation
     */
    stockProperties?: { [key: string]: StockPropertyDefinition; };
    /**
     *
     * @type {AvailableUntilDefinition}
     * @memberof ListingForCreation
     */
    stockAvailableUntil?: AvailableUntilDefinition;
    /**
     *
     * @type {ListingLegal}
     * @memberof ListingForCreation
     */
    legal?: ListingLegal;
    /**
     * Attributes that can be added to the listing. These attributes **cannot** be used within fulfillment processes, but enable you to attach custom data from your systems to fulfillmenttools entities.
     * @type {any}
     * @memberof ListingForCreation
     */
    customAttributes?: any;
}

/**
 * @export
 * @namespace ListingForCreation
 */
export namespace ListingForCreation {
    /**
     * @export
     * @enum {string}
     */
    export enum OutOfStockBehaviourEnum {
        BACKORDER = 'BACKORDER'
    }
}
/**
 *
 * @export
 * @interface ListingForReplacement
 */
export interface ListingForReplacement extends ListingForCreation {
    /**
     *
     * @type {number}
     * @memberof ListingForReplacement
     */
    version?: number;
    /**
     *
     * @type {string}
     * @memberof ListingForReplacement
     */
    status?: ListingForReplacement.StatusEnum;
}

/**
 * @export
 * @namespace ListingForReplacement
 */
export namespace ListingForReplacement {
    /**
     * @export
     * @enum {string}
     */
    export enum StatusEnum {
        ACTIVE = 'ACTIVE',
        INACTIVE = 'INACTIVE'
    }
}
/**
 *
 * @export
 * @interface ListingLegal
 */
export interface ListingLegal {
    /**
     *
     * @type {string}
     * @memberof ListingLegal
     */
    hsCode?: string;
}
/**
 *
 * @export
 * @interface ListingPatchActions
 */
export interface ListingPatchActions {
    /**
     *
     * @type {Array<ModifyListingAction>}
     * @memberof ListingPatchActions
     */
    actions: Array<ModifyListingAction>;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof ListingPatchActions
     */
    version: number;
}
/**
 *
 * @export
 * @interface ListingsForCreation
 */
export interface ListingsForCreation {
    /**
     *
     * @type {Array<ListingForCreation>}
     * @memberof ListingsForCreation
     */
    listings: Array<ListingForCreation>;
}
/**
 *
 * @export
 * @interface ListingsForReplacement
 */
export interface ListingsForReplacement {
    /**
     *
     * @type {Array<ListingForReplacement>}
     * @memberof ListingsForReplacement
     */
    listings: Array<ListingForReplacement>;
}
/**
 *
 * @export
 * @interface LoadUnit
 */
export interface LoadUnit extends VersionedResource {
    /**
     *
     * @type {Array<string>}
     * @memberof LoadUnit
     */
    codes?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof LoadUnit
     */
    loadUnitTypeRef: string;
    /**
     *
     * @type {Array<LoadUnitLineItem>}
     * @memberof LoadUnit
     */
    loadUnitLineItems?: Array<LoadUnitLineItem>;
    /**
     *
     * @type {Array<string>}
     * @memberof LoadUnit
     */
    pickJobRefs: Array<string>;
    /**
     * Attributes that can be added to the LoadUnit. These attributes cannot be used within fulfillment processes, but it could be useful to have the informations carried here.
     * @type {any}
     * @memberof LoadUnit
     */
    customAttributes?: any;
    /**
     *
     * @type {LoadUnitDimensions}
     * @memberof LoadUnit
     */
    dimensions?: LoadUnitDimensions;
    /**
     * Maximal weight in gramm(gr) the loadunit can handle.
     * @type {number}
     * @memberof LoadUnit
     */
    weightLimitInG?: number;
    /**
     *
     * @type {string}
     * @memberof LoadUnit
     */
    description?: string;
    /**
     *
     * @type {LocaleString}
     * @memberof LoadUnit
     */
    descriptionLocalized?: LocaleString;
    /**
     * The id of the facility reference. The given ID has to be present in the system. But it is not updatable via PUT request
     * @type {string}
     * @memberof LoadUnit
     */
    facilityRef: string;
    /**
     *
     * @type {string}
     * @memberof LoadUnit
     */
    iconUrl?: string;
    /**
     *
     * @type {string}
     * @memberof LoadUnit
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof LoadUnit
     */
    name?: string;
    /**
     *
     * @type {LocaleString}
     * @memberof LoadUnit
     */
    nameLocalized: LocaleString;
}
/**
 * Who do the load units need to be assigned in pickJob (SingleOrderPick) and pickRun (MultiOrderPick)
 * @export
 * @interface LoadUnitAssignmentConfiguration
 */
export interface LoadUnitAssignmentConfiguration {
    /**
     *
     * @type {LoadUnitAssignmentType}
     * @memberof LoadUnitAssignmentConfiguration
     */
    pickJob: LoadUnitAssignmentType;
    /**
     *
     * @type {LoadUnitAssignmentType}
     * @memberof LoadUnitAssignmentConfiguration
     */
    pickRun: LoadUnitAssignmentType;
}
/**
 * Where do the load unit needs to be assigned?
 * @export
 * @enum {string}
 */
export enum LoadUnitAssignmentType {
    INACTIVE = 'INACTIVE',
    ATSTART = 'AT_START',
    ATEND = 'AT_END',
    DURINGPICKING = 'DURING_PICKING'
}
/**
 *
 * @export
 * @interface LoadUnitConfiguration
 */
export interface LoadUnitConfiguration extends VersionedResource {
    /**
     * Max creatable count of load units per load unit type
     * @type {number}
     * @memberof LoadUnitConfiguration
     */
    maxCount?: number;
}
/**
 *
 * @export
 * @interface LoadUnitDimensions
 */
export interface LoadUnitDimensions {
    /**
     * The height of the container (in cm)
     * @type {number}
     * @memberof LoadUnitDimensions
     */
    heightInCm?: number;
    /**
     * The length of the container (in cm)
     * @type {number}
     * @memberof LoadUnitDimensions
     */
    lengthInCm?: number;
    /**
     * The weight of the container (in g)
     * @type {number}
     * @memberof LoadUnitDimensions
     */
    weightInG?: number;
    /**
     * The width of the container (in cm)
     * @type {number}
     * @memberof LoadUnitDimensions
     */
    widthInCm?: number;
}
/**
 *
 * @export
 * @interface LoadUnitForCreation
 */
export interface LoadUnitForCreation {
    /**
     *
     * @type {Array<string>}
     * @memberof LoadUnitForCreation
     */
    codes?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof LoadUnitForCreation
     */
    loadUnitTypeRef: string;
    /**
     *
     * @type {Array<LoadUnitLineItemForCreation>}
     * @memberof LoadUnitForCreation
     */
    loadUnitLineItems?: Array<LoadUnitLineItemForCreation>;
    /**
     *
     * @type {Array<string>}
     * @memberof LoadUnitForCreation
     */
    pickJobRefs: Array<string>;
    /**
     * Attributes that can be added to the LoadUnit. These attributes cannot be used within fulfillment processes, but it could be useful to have the informations carried here.
     * @type {any}
     * @memberof LoadUnitForCreation
     */
    customAttributes?: any;
}
/**
 *
 * @export
 * @interface LoadUnitLineItem
 */
export interface LoadUnitLineItem extends LoadUnitLineItemForCreation {
    /**
     *
     * @type {string}
     * @memberof LoadUnitLineItem
     */
    id: string;
}
/**
 *
 * @export
 * @interface LoadUnitLineItemForCreation
 */
export interface LoadUnitLineItemForCreation {
    /**
     *
     * @type {PickLineItemArticle}
     * @memberof LoadUnitLineItemForCreation
     */
    article: PickLineItemArticle;
    /**
     * Attributes that can be added to the orderline. These attributes cannot be used within fulfillment processes, but it could be useful to have the informations carried here.
     * @type {any}
     * @memberof LoadUnitLineItemForCreation
     */
    customAttributes?: any;
    /**
     * Identifier for items unit of measurement.
     * @type {string}
     * @memberof LoadUnitLineItemForCreation
     */
    measurementUnitKey?: string;
    /**
     * quantity of the specific article that has been ordered
     * @type {number}
     * @memberof LoadUnitLineItemForCreation
     */
    quantity?: number;
    /**
     *
     * @type {Array<string>}
     * @memberof LoadUnitLineItemForCreation
     */
    scannableCodes?: Array<string>;
}
/**
 *
 * @export
 * @interface LoadUnitPatchActions
 */
export interface LoadUnitPatchActions {
    /**
     *
     * @type {Array<ReplaceLoadUnitLineItemsAction>}
     * @memberof LoadUnitPatchActions
     */
    actions: Array<ReplaceLoadUnitLineItemsAction>;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof LoadUnitPatchActions
     */
    version: number;
}
/**
 *
 * @export
 * @interface LoadUnitType
 */
export interface LoadUnitType extends VersionedResource {
    /**
     *
     * @type {LoadUnitDimensions}
     * @memberof LoadUnitType
     */
    dimensions?: LoadUnitDimensions;
    /**
     * Maximal weight in gramm(gr) the loadunit can handle.
     * @type {number}
     * @memberof LoadUnitType
     */
    weightLimitInG?: number;
    /**
     *
     * @type {string}
     * @memberof LoadUnitType
     */
    description?: string;
    /**
     *
     * @type {LocaleString}
     * @memberof LoadUnitType
     */
    descriptionLocalized?: LocaleString;
    /**
     *
     * @type {string}
     * @memberof LoadUnitType
     */
    iconUrl?: string;
    /**
     *
     * @type {string}
     * @memberof LoadUnitType
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof LoadUnitType
     */
    name?: string;
    /**
     *
     * @type {LocaleString}
     * @memberof LoadUnitType
     */
    nameLocalized: LocaleString;
    /**
     * This value gives the priority in the respective loadUnitType. The lower the value the higher is the priority, e.g. priority 1 is higher than priority 10. The priority can be used to order loadUnityTypes.
     * @type {number}
     * @memberof LoadUnitType
     */
    priority?: number;
}
/**
 *
 * @export
 * @interface LoadUnitTypeForCreation
 */
export interface LoadUnitTypeForCreation {
    /**
     *
     * @type {LoadUnitDimensions}
     * @memberof LoadUnitTypeForCreation
     */
    dimensions?: LoadUnitDimensions;
    /**
     * Maximal weight in gramm(gr) the loadunit can handle.
     * @type {number}
     * @memberof LoadUnitTypeForCreation
     */
    weightLimitInG?: number;
    /**
     *
     * @type {LocaleString}
     * @memberof LoadUnitTypeForCreation
     */
    descriptionLocalized?: LocaleString;
    /**
     *
     * @type {NamedFile}
     * @memberof LoadUnitTypeForCreation
     */
    icon?: NamedFile;
    /**
     *
     * @type {LocaleString}
     * @memberof LoadUnitTypeForCreation
     */
    nameLocalized: LocaleString;
    /**
     * This value gives the priority in the respective loadUnitType. The lower the value the higher is the priority, e.g. priority 1 is higher than priority 10. The priority can be used to order loadUnityTypes.
     * @type {number}
     * @memberof LoadUnitTypeForCreation
     */
    priority?: number;
}
/**
 *
 * @export
 * @interface LoadUnitTypePatchActions
 */
export interface LoadUnitTypePatchActions {
    /**
     *
     * @type {Array<ModifyLoadUnitTypeAction>}
     * @memberof LoadUnitTypePatchActions
     */
    actions: Array<ModifyLoadUnitTypeAction>;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof LoadUnitTypePatchActions
     */
    version: number;
}
/**
 *
 * @export
 */
export type LoadUnitTypes = Array<LoadUnitType>
/**
 *
 * @export
 * @interface LoadUnits
 */
export interface LoadUnits {
    /**
     *
     * @type {Array<LoadUnit>}
     * @memberof LoadUnits
     */
    loadUnits?: Array<LoadUnit>;
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof LoadUnits
     */
    total?: number;
}
/**
 *
 * @export
 * @interface LoadUnitsForCreation
 */
export interface LoadUnitsForCreation {
    /**
     *
     * @type {Array<LoadUnitForCreation>}
     * @memberof LoadUnitsForCreation
     */
    loadUnits: Array<LoadUnitForCreation>;
}
/**
 *
 * @export
 * @interface LoadunitsLoadUnitIdBody
 */
export interface LoadunitsLoadUnitIdBody {
}
/**
 *
 * @export
 * @interface LocaleConfiguration
 */
export interface LocaleConfiguration extends VersionedResource {
    /**
     *
     * @type {SupportedLocale}
     * @memberof LocaleConfiguration
     */
    locale: SupportedLocale;
    /**
     *
     * @type {CountryLanguageMapping}
     * @memberof LocaleConfiguration
     */
    countryLanguageMapping?: CountryLanguageMapping;
    /**
     *
     * @type {string}
     * @memberof LocaleConfiguration
     */
    id?: string;
}
/**
 * Provides Localized values. The key is the locale, the value is the translation. See https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/localization#fallback-language-mechanism
 * @export
 * @interface LocaleString
 */
export interface LocaleString {
    [key: string]: string;

}
/**
 *
 * @export
 * @interface LocalizedAvailableItemCondition
 */
export interface LocalizedAvailableItemCondition {
    /**
     * translated conditionsLocalized
     * @type {string}
     * @memberof LocalizedAvailableItemCondition
     */
    condition: string;
    /**
     *
     * @type {LocaleString}
     * @memberof LocalizedAvailableItemCondition
     */
    conditionLocalized: LocaleString;
}
/**
 *
 * @export
 * @interface LocalizedAvailableReturnReason
 */
export interface LocalizedAvailableReturnReason extends AvailableReturnReason {
    /**
     * translated reasonLocalized
     * @type {string}
     * @memberof LocalizedAvailableReturnReason
     */
    reason: string;
}
/**
 *
 * @export
 * @interface LocalizedReturnConfiguration
 */
export interface LocalizedReturnConfiguration extends VersionedResource {
    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Enable or disable legacy returns. Use returnTypeConfiguration instead
     * @type {boolean}
     * @memberof LocalizedReturnConfiguration
     */
    active: boolean;
    /**
     *
     * @type {ReturnTypeConfiguration}
     * @memberof LocalizedReturnConfiguration
     */
    returnTypeConfiguration?: ReturnTypeConfiguration;
    /**
     *
     * @type {Array<LocalizedAvailableItemCondition>}
     * @memberof LocalizedReturnConfiguration
     */
    availableItemConditions?: Array<LocalizedAvailableItemCondition>;
    /**
     *
     * @type {Array<LocalizedAvailableReturnReason>}
     * @memberof LocalizedReturnConfiguration
     */
    availableReturnReasons?: Array<LocalizedAvailableReturnReason>;
}
/**
 *
 * @export
 * @interface Location
 */
export interface Location {
    /**
     * The id of the location
     * @type {string}
     * @memberof Location
     */
    locationRef?: string;
    /**
     * Represents barcodes that may be scanned at this location
     * @type {Array<string>}
     * @memberof Location
     */
    scannableCodes?: Array<string>;
}
/**
 *
 * @export
 * @interface MandatoryShippingAttribute
 */
export interface MandatoryShippingAttribute {
    /**
     *
     * @type {string}
     * @memberof MandatoryShippingAttribute
     */
    referencedField?: MandatoryShippingAttribute.ReferencedFieldEnum;
    /**
     *
     * @type {string}
     * @memberof MandatoryShippingAttribute
     */
    dataType?: MandatoryShippingAttribute.DataTypeEnum;
    /**
     *
     * @type {string}
     * @memberof MandatoryShippingAttribute
     */
    description?: string;
    /**
     *
     * @type {LocaleString}
     * @memberof MandatoryShippingAttribute
     */
    descriptionLocalized?: LocaleString;
}

/**
 * @export
 * @namespace MandatoryShippingAttribute
 */
export namespace MandatoryShippingAttribute {
    /**
     * @export
     * @enum {string}
     */
    export enum ReferencedFieldEnum {
        DimensionsWeight = 'dimensions.weight',
        ProductValue = 'productValue',
        PickUpInformationStartTime = 'pickUpInformation.startTime',
        PickUpInformationEndTime = 'pickUpInformation.endTime'
    }
    /**
     * @export
     * @enum {string}
     */
    export enum DataTypeEnum {
        Number = 'Number',
        String = 'String',
        Date = 'Date'
    }
}
/**
 *
 * @export
 * @interface MandatoryShippingItemAttribute
 */
export interface MandatoryShippingItemAttribute {
    /**
     * Deprecated: quantity, this field is now mandatory in the item
     * @type {string}
     * @memberof MandatoryShippingItemAttribute
     */
    referencedField?: MandatoryShippingItemAttribute.ReferencedFieldEnum;
    /**
     *
     * @type {string}
     * @memberof MandatoryShippingItemAttribute
     */
    dataType?: MandatoryShippingItemAttribute.DataTypeEnum;
    /**
     *
     * @type {string}
     * @memberof MandatoryShippingItemAttribute
     */
    description?: string;
    /**
     *
     * @type {LocaleString}
     * @memberof MandatoryShippingItemAttribute
     */
    descriptionLocalized?: LocaleString;
}

/**
 * @export
 * @namespace MandatoryShippingItemAttribute
 */
export namespace MandatoryShippingItemAttribute {
    /**
     * @export
     * @enum {string}
     */
    export enum ReferencedFieldEnum {
        Description = 'description',
        WeightInGram = 'weightInGram',
        Quantity = 'quantity',
        ParcelItemValueValue = 'parcelItemValue.value',
        ParcelItemValueCurrency = 'parcelItemValue.currency',
        CountryOfManufacture = 'countryOfManufacture',
        TenantArticleId = 'tenantArticleId'
    }
    /**
     * @export
     * @enum {string}
     */
    export enum DataTypeEnum {
        Number = 'Number',
        String = 'String',
        Date = 'Date'
    }
}
/**
 * @deprecated This config property is deprecated since 26/02/24. Use GlobalManualRerouteConfiguration instead.
 * @export
 * @interface ManualRerouteConfiguration
 */
export interface ManualRerouteConfiguration extends VersionedResource {
    /**
     *
     * @type {boolean}
     * @memberof ManualRerouteConfiguration
     */
    active: boolean;
    /**
     *
     * @type {string}
     * @memberof ManualRerouteConfiguration
     */
    id?: string;
}
/**
 *
 * @export
 * @interface MeasurementUnit
 */
export interface MeasurementUnit extends MeasurementUnitForCreation {
    /**
     * The date this entity was created at the platform. This value is generated by the service.
     * @type {Date}
     * @memberof MeasurementUnit
     */
    created?: Date;
    /**
     * The date this entity was modified last. This value is generated by the service.
     * @type {Date}
     * @memberof MeasurementUnit
     */
    lastModified?: Date;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof MeasurementUnit
     */
    version: number;
    /**
     * Translated abbreviation of the measurement unit
     * @type {string}
     * @memberof MeasurementUnit
     */
    abbreviation?: string;
    /**
     *
     * @type {string}
     * @memberof MeasurementUnit
     */
    id: string;
    /**
     * Translated name of the measurement unit
     * @type {string}
     * @memberof MeasurementUnit
     */
    name?: string;
}
/**
 *
 * @export
 * @interface MeasurementUnitForCreation
 */
export interface MeasurementUnitForCreation {
    /**
     * Abbreviation of the unit. Maximum 4 chars long.
     * @type {LocaleString}
     * @memberof MeasurementUnitForCreation
     */
    abbreviationLocalized: LocaleString;
    /**
     * Descriptor for the measurement unit
     * @type {string}
     * @memberof MeasurementUnitForCreation
     */
    key: string;
    /**
     *
     * @type {LocaleString}
     * @memberof MeasurementUnitForCreation
     */
    nameLocalized: LocaleString;
    /**
     * Indicates that the given unit need to be measured.
     * @type {boolean}
     * @memberof MeasurementUnitForCreation
     */
    requiresMeasurement?: boolean;
}
/**
 *
 * @export
 * @interface MeasurementUnits
 */
export interface MeasurementUnits {
    /**
     *
     * @type {Array<MeasurementUnit>}
     * @memberof MeasurementUnits
     */
    measurementUnits?: Array<MeasurementUnit>;
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof MeasurementUnits
     */
    total?: number;
}
/**
 *
 * @export
 * @interface MeasurementValidation
 */
export interface MeasurementValidation {
    /**
     * Allowed soft short pick deviation tolerance.
     * @type {number}
     * @memberof MeasurementValidation
     */
    shortPickSoftTolerancePercentage?: number;
    /**
     * Allowed hard short pick deviation tolerance.
     * @type {number}
     * @memberof MeasurementValidation
     */
    shortPickHardTolerancePercentage?: number;
    /**
     * Allowed soft over pick deviation tolerance.
     * @type {number}
     * @memberof MeasurementValidation
     */
    overPickSoftTolerancePercentage?: number;
    /**
     * Allowed hard over pick deviation tolerance.
     * @type {number}
     * @memberof MeasurementValidation
     */
    overPickHardTolerancePercentage?: number;
}
/**
 *
 * @export
 * @interface ModifyAddress
 */
export interface ModifyAddress {
    /**
     *
     * @type {string}
     * @memberof ModifyAddress
     */
    additionalAddressInfo?: string;
    /**
     *
     * @type {string}
     * @memberof ModifyAddress
     */
    city?: string;
    /**
     * A two-digit country code as per ISO 3166-1 alpha-2
     * @type {string}
     * @memberof ModifyAddress
     */
    country?: string;
    /**
     *
     * @type {string}
     * @memberof ModifyAddress
     */
    province?: string;
    /**
     * Attributes that can be added to the address. These attributes cannot be used within fulfillment processes, but it could be useful to have the informations carried here.
     * @type {any}
     * @memberof ModifyAddress
     */
    customAttributes?: any;
    /**
     *
     * @type {string}
     * @memberof ModifyAddress
     */
    houseNumber?: string;
    /**
     *
     * @type {Array<ModifyAddressPhoneNumbers>}
     * @memberof ModifyAddress
     */
    phoneNumbers?: Array<ModifyAddressPhoneNumbers>;
    /**
     *
     * @type {string}
     * @memberof ModifyAddress
     */
    postalCode?: string;
    /**
     *
     * @type {string}
     * @memberof ModifyAddress
     */
    street?: string;
    /**
     *
     * @type {Coordinates}
     * @memberof ModifyAddress
     */
    resolvedCoordinates?: Coordinates;
}
/**
 *
 * @export
 * @interface ModifyAddressPhoneNumbers
 */
export interface ModifyAddressPhoneNumbers {
    /**
     * Attributes that can be added to the phonenumber. These attributes cannot be used within fulfillment processes, but it could be useful to have the informations carried here.
     * @type {any}
     * @memberof ModifyAddressPhoneNumbers
     */
    customAttributes?: any;
    /**
     * Can be used to give a description for the number, like \"private\", \"business number\", etc.
     * @type {string}
     * @memberof ModifyAddressPhoneNumbers
     */
    label?: string;
    /**
     *
     * @type {string}
     * @memberof ModifyAddressPhoneNumbers
     */
    type?: ModifyAddressPhoneNumbers.TypeEnum;
    /**
     * The number itself. We do not enforce any format (yet).
     * @type {string}
     * @memberof ModifyAddressPhoneNumbers
     */
    value?: string;
}

/**
 * @export
 * @namespace ModifyAddressPhoneNumbers
 */
export namespace ModifyAddressPhoneNumbers {
    /**
     * @export
     * @enum {string}
     */
    export enum TypeEnum {
        MOBILE = 'MOBILE',
        PHONE = 'PHONE'
    }
}
/**
 *
 * @export
 * @interface ModifyAngelCarrierCredentials
 */
export interface ModifyAngelCarrierCredentials extends AbstractModifyCarrierCredentials {
    /**
     * Your Angel username
     * @type {string}
     * @memberof ModifyAngelCarrierCredentials
     */
    username?: string;
    /**
     * Your password for Angel carrier
     * @type {string}
     * @memberof ModifyAngelCarrierCredentials
     */
    password?: string;
    /**
     * X-Auth-Token for callbacks from Angel
     * @type {string}
     * @memberof ModifyAngelCarrierCredentials
     */
    authToken?: string;
    /**
     * Use value 'ANGEL' in order to provide ANGEL credentials
     * @type {string}
     * @memberof ModifyAngelCarrierCredentials
     */
    key: string;
}
/**
 *
 * @export
 * @interface ModifyBringCarrierCredentials
 */
export interface ModifyBringCarrierCredentials extends AbstractModifyCarrierCredentials {
    /**
     * Internal API Uid to communicate with the CEP Api
     * @type {string}
     * @memberof ModifyBringCarrierCredentials
     */
    apiUid?: string;
    /**
     * Internal API Key to communicate with the CEP Api
     * @type {string}
     * @memberof ModifyBringCarrierCredentials
     */
    apiKey?: string;
    /**
     * Url of the requesting client, can be a static value
     * @type {string}
     * @memberof ModifyBringCarrierCredentials
     */
    clientUrl?: string;
    /**
     * Identifier for Track&Trace Webhook
     * @type {string}
     * @memberof ModifyBringCarrierCredentials
     */
    authToken?: string;
    /**
     * Use value 'BRING' in order to provide BRING credentials
     * @type {string}
     * @memberof ModifyBringCarrierCredentials
     */
    key: string;
}
/**
 *
 * @export
 * @interface ModifyCarrierAction
 */
export interface ModifyCarrierAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyCarrierAction', because you want to modify a carrier
     * @type {string}
     * @memberof ModifyCarrierAction
     */
    action: ModifyCarrierAction.ActionEnum;
    /**
     * Default weight for a parcel in gram
     * @type {number}
     * @memberof ModifyCarrierAction
     */
    defaultParcelWeightInGram?: number;
    /**
     *
     * @type {Array<ParcelLabelClassificationForCreation>}
     * @memberof ModifyCarrierAction
     */
    parcelLabelClassifications?: Array<ParcelLabelClassificationForCreation>;
    /**
     *
     * @type {AbstractModifyCarrierCredentials}
     * @memberof ModifyCarrierAction
     */
    credentials?: AbstractModifyCarrierCredentials;
    /**
     *
     * @type {CarrierDeliveryType}
     * @memberof ModifyCarrierAction
     */
    deliveryType?: CarrierDeliveryType;
    /**
     *
     * @type {CarrierLifecycle}
     * @memberof ModifyCarrierAction
     */
    lifecycle?: CarrierLifecycle;
    /**
     *
     * @type {string}
     * @memberof ModifyCarrierAction
     */
    logoUrl?: string;
    /**
     * This is the well known name for a supported CEP partner. Can be adapted to the clients needs.
     * @type {string}
     * @memberof ModifyCarrierAction
     */
    name?: string;
    /**
     *
     * @type {CarrierStatus}
     * @memberof ModifyCarrierAction
     */
    status?: CarrierStatus;
    /**
     * Setting to enable the Client to ask for the parcel product value while ordering a label. This information is mandatory for sending parcels between different countries (customs declaration)
     * @type {boolean}
     * @memberof ModifyCarrierAction
     */
    productValueNeeded?: boolean;
}

/**
 * @export
 * @namespace ModifyCarrierAction
 */
export namespace ModifyCarrierAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyCarrier = 'ModifyCarrier'
    }
}
/**
 *
 * @export
 * @interface ModifyCustomServiceAction
 */
export interface ModifyCustomServiceAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyCustomService', because you want to modify a custom service
     * @type {string}
     * @memberof ModifyCustomServiceAction
     */
    action: ModifyCustomServiceAction.ActionEnum;
    /**
     *
     * @type {CustomServiceStatus}
     * @memberof ModifyCustomServiceAction
     */
    status?: CustomServiceStatus;
    /**
     *
     * @type {LocaleString}
     * @memberof ModifyCustomServiceAction
     */
    nameLocalized?: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof ModifyCustomServiceAction
     */
    descriptionLocalized?: LocaleString;
    /**
     * Time in minutes the custom service takes to be executed
     * @type {number}
     * @memberof ModifyCustomServiceAction
     */
    executionTimeInMin?: number;
    /**
     * Indicates if the items of the custom service are returnable after the custom service has been executed
     * @type {boolean}
     * @memberof ModifyCustomServiceAction
     */
    itemsReturnable?: boolean;
    /**
     *
     * @type {ItemsRequiredEnum}
     * @memberof ModifyCustomServiceAction
     */
    itemsRequired?: ItemsRequiredEnum;
}

/**
 * @export
 * @namespace ModifyCustomServiceAction
 */
export namespace ModifyCustomServiceAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyCustomService = 'ModifyCustomService'
    }
}
/**
 *
 * @export
 * @interface ModifyDHLV2CarrierCredentials
 */
export interface ModifyDHLV2CarrierCredentials extends AbstractModifyCarrierCredentials {
    /**
     * Internal API Key to communicate with the DHL Api
     * @type {string}
     * @memberof ModifyDHLV2CarrierCredentials
     */
    apiKey: string;
    /**
     *
     * @type {DHLV2BusinessCredentials}
     * @memberof ModifyDHLV2CarrierCredentials
     */
    fallback?: DHLV2BusinessCredentials;
}
/**
 *
 * @export
 * @interface ModifyDpdChCarrierCredentials
 */
export interface ModifyDpdChCarrierCredentials extends AbstractModifyCarrierCredentials {
    /**
     * Delis ID to create a DPD CH auth token.
     * @type {string}
     * @memberof ModifyDpdChCarrierCredentials
     */
    delisId?: string;
    /**
     * Use value 'DPD_CH' in order to provide DPD credentials
     * @type {string}
     * @memberof ModifyDpdChCarrierCredentials
     */
    key: string;
    /**
     * Password to create a DPD CH auth token.
     * @type {string}
     * @memberof ModifyDpdChCarrierCredentials
     */
    password?: string;
}
/**
 *
 * @export
 * @interface ModifyFacilityAction
 */
export interface ModifyFacilityAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyFacility', because you want to modify a facility
     * @type {string}
     * @memberof ModifyFacilityAction
     */
    action: ModifyFacilityAction.ActionEnum;
    /**
     *
     * @type {ModifyFacilityAddress}
     * @memberof ModifyFacilityAction
     */
    address?: ModifyFacilityAddress;
    /**
     * Days of the year where the facility is closed and doesn't allows picking
     * @type {Array<ClosingDay>}
     * @memberof ModifyFacilityAction
     */
    closingDays?: Array<ClosingDay>;
    /**
     *
     * @type {FacilityForCreationContact}
     * @memberof ModifyFacilityAction
     */
    contact?: FacilityForCreationContact;
    /**
     * Attributes that can be added to the facility. These attributes cannot be used within fulfillment processes, but it could be useful to have the informations carried here.
     * @type {any}
     * @memberof ModifyFacilityAction
     */
    customAttributes?: any;
    /**
     * Duration in minutes until an order is processed
     * @type {number}
     * @memberof ModifyFacilityAction
     */
    fulfillmentProcessBuffer?: number;
    /**
     *
     * @type {string}
     * @memberof ModifyFacilityAction
     */
    locationType?: ModifyFacilityAction.LocationTypeEnum;
    /**
     *
     * @type {string}
     * @memberof ModifyFacilityAction
     */
    name?: string;
    /**
     * The range in days per facility which defines how many days in the future the capacity of the facility can be planned
     * @type {number}
     * @memberof ModifyFacilityAction
     */
    capacityPlanningTimeframe?: number;
    /**
     *
     * @type {PickingTimes}
     * @memberof ModifyFacilityAction
     */
    pickingTimes?: PickingTimes;
    /**
     * Picking Methods supported by this facility.
     * @type {Array<PickingMethodEnum>}
     * @memberof ModifyFacilityAction
     */
    pickingMethods?: Array<PickingMethodEnum>;
    /**
     *
     * @type {ScanningRuleConfiguration}
     * @memberof ModifyFacilityAction
     */
    scanningRule?: ScanningRuleConfiguration;
    /**
     *
     * @type {Array<ModifyFacilityActionServices>}
     * @memberof ModifyFacilityAction
     */
    services?: Array<ModifyFacilityActionServices>;
    /**
     * The state of the facility. ONLINE means that this facility can process new orders and pickjobs, SUSPENDED means it cannot get new orders but is able to fulfill the current workload and OFFLINE means that it cannot fulfill any new or existing orders. Processes already running might be rescheduled to another facility depending on the preferences.
     * @type {string}
     * @memberof ModifyFacilityAction
     */
    status?: ModifyFacilityAction.StatusEnum;
    /**
     * The id of the facility in the tenants own system
     * @type {string}
     * @memberof ModifyFacilityAction
     */
    tenantFacilityId?: string;
    /**
     *
     * @type {boolean}
     * @memberof ModifyFacilityAction
     */
    capacityEnabled?: boolean;
    /**
     *
     * @type {Array<TagReference>}
     * @memberof ModifyFacilityAction
     */
    tags?: Array<TagReference>;
}

/**
 * @export
 * @namespace ModifyFacilityAction
 */
export namespace ModifyFacilityAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyFacility = 'ModifyFacility'
    }
    /**
     * @export
     * @enum {string}
     */
    export enum LocationTypeEnum {
        STORE = 'STORE',
        WAREHOUSE = 'WAREHOUSE',
        EXTERNAL = 'EXTERNAL'
    }
    /**
     * @export
     * @enum {string}
     */
    export enum StatusEnum {
        ONLINE = 'ONLINE',
        SUSPENDED = 'SUSPENDED',
        OFFLINE = 'OFFLINE'
    }
}
/**
 *
 * @export
 * @interface ModifyFacilityActionServices
 */
export interface ModifyFacilityActionServices {
    /**
     * The description of the service this facility offers.
     * @type {string}
     * @memberof ModifyFacilityActionServices
     */
    type: ModifyFacilityActionServices.TypeEnum;
}

/**
 * @export
 * @namespace ModifyFacilityActionServices
 */
export namespace ModifyFacilityActionServices {
    /**
     * @export
     * @enum {string}
     */
    export enum TypeEnum {
        SHIPFROMSTORE = 'SHIP_FROM_STORE',
        PICKUP = 'PICKUP'
    }
}
/**
 *
 * @export
 * @interface ModifyFacilityAddress
 */
export interface ModifyFacilityAddress extends ModifyAddress {
    /**
     *
     * @type {string}
     * @memberof ModifyFacilityAddress
     */
    companyName?: string;
    /**
     *
     * @type {Array<ModifyFacilityAddressEmailAddresses>}
     * @memberof ModifyFacilityAddress
     */
    emailAddresses?: Array<ModifyFacilityAddressEmailAddresses>;
}
/**
 *
 * @export
 * @interface ModifyFacilityAddressEmailAddresses
 */
export interface ModifyFacilityAddressEmailAddresses {
    /**
     * Human readable information who is the recipient for emails sent to this address.
     * @type {string}
     * @memberof ModifyFacilityAddressEmailAddresses
     */
    recipient?: string;
    /**
     *
     * @type {string}
     * @memberof ModifyFacilityAddressEmailAddresses
     */
    value: string;
}
/**
 *
 * @export
 * @interface ModifyFeatureAction
 */
export interface ModifyFeatureAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyFeature', because you want to modify a Feature
     * @type {string}
     * @memberof ModifyFeatureAction
     */
    action: ModifyFeatureAction.ActionEnum;
    /**
     *
     * @type {FeatureStatus}
     * @memberof ModifyFeatureAction
     */
    status: FeatureStatus;
}

/**
 * @export
 * @namespace ModifyFeatureAction
 */
export namespace ModifyFeatureAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyFeature = 'ModifyFeature'
    }
}
/**
 *
 * @export
 * @interface ModifyFedexCarrierCredentials
 */
export interface ModifyFedexCarrierCredentials extends AbstractModifyCarrierCredentials {
    /**
     * Your fedex accountnumber
     * @type {string}
     * @memberof ModifyFedexCarrierCredentials
     */
    accountNumber?: string;
    /**
     * Internal API Key to communicate with the CEP Api
     * @type {string}
     * @memberof ModifyFedexCarrierCredentials
     */
    apiKey?: string;
    /**
     * Internal API Key to communicate with the CEP Api
     * @type {string}
     * @memberof ModifyFedexCarrierCredentials
     */
    secretKey?: string;
    /**
     * Use value 'FEDEX' in order to provide FEDEX credentials
     * @type {string}
     * @memberof ModifyFedexCarrierCredentials
     */
    key: string;
}
/**
 *
 * @export
 * @interface ModifyFenceAction
 */
export interface ModifyFenceAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyFence', because you want to modify a fence.
     * @type {string}
     * @memberof ModifyFenceAction
     */
    action: ModifyFenceAction.ActionEnum;
    /**
     *
     * @type {boolean}
     * @memberof ModifyFenceAction
     */
    active?: boolean;
    /**
     *
     * @type {string}
     * @memberof ModifyFenceAction
     */
    id: string;
    /**
     *
     * @type {FenceMode}
     * @memberof ModifyFenceAction
     */
    activeMode?: FenceMode;
}

/**
 * @export
 * @namespace ModifyFenceAction
 */
export namespace ModifyFenceAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyFence = 'ModifyFence'
    }
}
/**
 *
 * @export
 * @interface ModifyGLSCarrierCredentials
 */
export interface ModifyGLSCarrierCredentials extends AbstractModifyCarrierCredentials {
    /**
     * Your Angel username
     * @type {string}
     * @memberof ModifyGLSCarrierCredentials
     */
    username?: string;
    /**
     * Your password for Angel carrier
     * @type {string}
     * @memberof ModifyGLSCarrierCredentials
     */
    password?: string;
    /**
     * GLS Track And Trace username
     * @type {string}
     * @memberof ModifyGLSCarrierCredentials
     */
    trackAndTraceUsername?: string;
    /**
     * GLS Track And Trace password
     * @type {string}
     * @memberof ModifyGLSCarrierCredentials
     */
    trackAndTracePassword?: string;
    /**
     * Use value 'GLS' in order to provide GLS credentials
     * @type {string}
     * @memberof ModifyGLSCarrierCredentials
     */
    key: string;
}
/**
 *
 * @export
 * @interface ModifyGlobalRoutingConfigurationAction
 */
export interface ModifyGlobalRoutingConfigurationAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyGlobalRoutingConfiguration', because you want to modify global routing configuration.
     * @type {string}
     * @memberof ModifyGlobalRoutingConfigurationAction
     */
    action: ModifyGlobalRoutingConfigurationAction.ActionEnum;
    /**
     * Default price which is used if no price exists in order or listings
     * @type {number}
     * @memberof ModifyGlobalRoutingConfigurationAction
     */
    defaultPrice?: number;
    /**
     *
     * @type {GlobalManualRerouteConfiguration}
     * @memberof ModifyGlobalRoutingConfigurationAction
     */
    manualRerouteConfiguration?: GlobalManualRerouteConfiguration;
    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />@deprecated Default amount of hours after which a routing plan is marked not routable. This field is deprecated in favour of stopRoutingAttemptsAfterTime
     * @type {number}
     * @memberof ModifyGlobalRoutingConfigurationAction
     */
    routingTimeout?: number;
    /**
     * Default amount of time in ISO 8601 duration format after which a routing plan is marked not routable. The duration need to be a multiple of 60 seconds.
     * @type {string}
     * @memberof ModifyGlobalRoutingConfigurationAction
     */
    stopRoutingAttemptsAfterTime?: string;
    /**
     *
     * @type {FallbackFacilityConfigurationForPatch}
     * @memberof ModifyGlobalRoutingConfigurationAction
     */
    fallbackFacilityConfiguration?: FallbackFacilityConfigurationForPatch;
}

/**
 * @export
 * @namespace ModifyGlobalRoutingConfigurationAction
 */
export namespace ModifyGlobalRoutingConfigurationAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyGlobalRoutingConfiguration = 'ModifyGlobalRoutingConfiguration'
    }
}
/**
 *
 * @export
 * @interface ModifyHandoverjobAction
 */
export interface ModifyHandoverjobAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyHandoverjob', because you want to modify a handoverjob
     * @type {string}
     * @memberof ModifyHandoverjobAction
     */
    action: ModifyHandoverjobAction.ActionEnum;
    /**
     * Attributes that can be added to the handoverJob. These attributes cannot be used within fulfillment processes, but it could be useful to have the informations carried here.
     * @type {any}
     * @memberof ModifyHandoverjobAction
     */
    customAttributes?: any;
    /**
     *
     * @type {HandoverjobStatus}
     * @memberof ModifyHandoverjobAction
     */
    status?: HandoverjobStatus;
}

/**
 * @export
 * @namespace ModifyHandoverjobAction
 */
export namespace ModifyHandoverjobAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyHandoverjob = 'ModifyHandoverjob'
    }
}
/**
 *
 * @export
 * @interface ModifyListingAction
 */
export interface ModifyListingAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyListing', because you want to modify a listing
     * @type {string}
     * @memberof ModifyListingAction
     */
    action: ModifyListingAction.ActionEnum;
    /**
     * The attributes of this listing
     * @type {Array<ListingAttributeItem>}
     * @memberof ModifyListingAction
     */
    attributes?: Array<ListingAttributeItem>;
    /**
     * A web link to a picture of this article. Please make sure that no authentication is required to fetch the image!
     * @type {string}
     * @memberof ModifyListingAction
     */
    imageUrl?: string;
    /**
     *
     * @type {number}
     * @memberof ModifyListingAction
     */
    price?: number;
    /**
     * The currency of the price as an ISO 4217 code. Attention - Routing currently does not convert between different currencies. Don't use multiple currencies when using price ratings in order routing.
     * @type {CurrencyCode}
     * @memberof ModifyListingAction
     */
    currency?: CurrencyCode;
    /**
     * The status indicates if a listing is available or not
     * @type {string}
     * @memberof ModifyListingAction
     */
    status?: ModifyListingAction.StatusEnum;
    /**
     *
     * @type {StockInformationForCreation}
     * @memberof ModifyListingAction
     */
    stockinformation?: StockInformationForCreation;
    /**
     * a subtitle describing the article
     * @type {string}
     * @memberof ModifyListingAction
     */
    subtitle?: string;
    /**
     * a title describing the article
     * @type {string}
     * @memberof ModifyListingAction
     */
    title?: string;
    /**
     *
     * @type {LocaleString}
     * @memberof ModifyListingAction
     */
    titleLocalized?: LocaleString;
    /**
     *
     * @type {Array<TagReference>}
     * @memberof ModifyListingAction
     */
    tags?: Array<TagReference>;
    /**
     *
     * @type {ScanningRuleConfiguration}
     * @memberof ModifyListingAction
     */
    scanningRule?: ScanningRuleConfiguration;
    /**
     *
     * @type {Array<string>}
     * @memberof ModifyListingAction
     */
    scannableCodes?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof ModifyListingAction
     */
    weight?: number;
    /**
     *
     * @type {string}
     * @memberof ModifyListingAction
     */
    outOfStockBehaviour?: ModifyListingAction.OutOfStockBehaviourEnum;
    /**
     *
     * @type {AvailabilityTimeframe}
     * @memberof ModifyListingAction
     */
    availabilityTimeframe?: AvailabilityTimeframe;
    /**
     *
     * @type {string}
     * @memberof ModifyListingAction
     */
    measurementUnitKey?: string;
    /**
     *
     * @type {{ [key: string]: StockPropertyDefinition; }}
     * @memberof ModifyListingAction
     */
    stockProperties?: { [key: string]: StockPropertyDefinition; };
    /**
     *
     * @type {AvailableUntilDefinition}
     * @memberof ModifyListingAction
     */
    stockAvailableUntil?: AvailableUntilDefinition;
    /**
     *
     * @type {ListingLegal}
     * @memberof ModifyListingAction
     */
    legal?: ListingLegal;
    /**
     * Attributes that can be added to the listing. These attributes **cannot** be used within fulfillment processes, but enable you to attach custom data from your systems to fulfillmenttools entities.
     * @type {any}
     * @memberof ModifyListingAction
     */
    customAttributes?: any;
}

/**
 * @export
 * @namespace ModifyListingAction
 */
export namespace ModifyListingAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyListing = 'ModifyListing'
    }
    /**
     * @export
     * @enum {string}
     */
    export enum StatusEnum {
        ACTIVE = 'ACTIVE',
        INACTIVE = 'INACTIVE'
    }
    /**
     * @export
     * @enum {string}
     */
    export enum OutOfStockBehaviourEnum {
        BACKORDER = 'BACKORDER'
    }
}
/**
 *
 * @export
 * @interface ModifyListingReactivationAfterAction
 */
export interface ModifyListingReactivationAfterAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyListingReactivationAfter', if you want to modify the listingReactivationAfter of a facility
     * @type {string}
     * @memberof ModifyListingReactivationAfterAction
     */
    action: ModifyListingReactivationAfterAction.ActionEnum;
    /**
     *
     * @type {FacilityStockConfigurationListingReactivationAfter}
     * @memberof ModifyListingReactivationAfterAction
     */
    listingReactivationAfter?: FacilityStockConfigurationListingReactivationAfter;
}

/**
 * @export
 * @namespace ModifyListingReactivationAfterAction
 */
export namespace ModifyListingReactivationAfterAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyListingReactivationAfter = 'ModifyListingReactivationAfter'
    }
}
/**
 *
 * @export
 * @interface ModifyLoadUnitTypeAction
 */
export interface ModifyLoadUnitTypeAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyLoadUnitType', because you want to modify a LoadUnitType
     * @type {string}
     * @memberof ModifyLoadUnitTypeAction
     */
    action: ModifyLoadUnitTypeAction.ActionEnum;
    /**
     *
     * @type {LocaleString}
     * @memberof ModifyLoadUnitTypeAction
     */
    descriptionLocalized?: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof ModifyLoadUnitTypeAction
     */
    nameLocalized?: LocaleString;
    /**
     * This value gives the priority in the respective loadUnitType. The lower the value the higher is the priority, e.g. priority 1 is higher than priority 10. The priority can be used to order loadUnityTypes.
     * @type {number}
     * @memberof ModifyLoadUnitTypeAction
     */
    priority?: number;
    /**
     *
     * @type {LoadUnitDimensions}
     * @memberof ModifyLoadUnitTypeAction
     */
    dimensions?: LoadUnitDimensions;
    /**
     * Maximal weight in gramm(gr) the loadunit can handle.
     * @type {number}
     * @memberof ModifyLoadUnitTypeAction
     */
    weightLimitInG?: number;
}

/**
 * @export
 * @namespace ModifyLoadUnitTypeAction
 */
export namespace ModifyLoadUnitTypeAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyLoadUnitType = 'ModifyLoadUnitType'
    }
}
/**
 *
 * @export
 * @interface ModifyOrderSplitAction
 */
export interface ModifyOrderSplitAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyOrderSplit', because you want to modify the configuration for the an order split.
     * @type {string}
     * @memberof ModifyOrderSplitAction
     */
    action: ModifyOrderSplitAction.ActionEnum;
    /**
     *
     * @type {boolean}
     * @memberof ModifyOrderSplitAction
     */
    active?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof ModifyOrderSplitAction
     */
    shouldUseWaitingRoomForPreBackOrderItems?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof ModifyOrderSplitAction
     */
    activeForSameDay?: boolean;
    /**
     *
     * @type {FixedCountConfiguration}
     * @memberof ModifyOrderSplitAction
     */
    fixedCountConfiguration?: FixedCountConfiguration;
    /**
     *
     * @type {OrderSplitType}
     * @memberof ModifyOrderSplitAction
     */
    orderSplitType?: OrderSplitType;
}

/**
 * @export
 * @namespace ModifyOrderSplitAction
 */
export namespace ModifyOrderSplitAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyOrderSplit = 'ModifyOrderSplit'
    }
}
/**
 *
 * @export
 * @interface ModifyPackJobAction
 */
export interface ModifyPackJobAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyPackJob', because you want to modify a packjob
     * @type {string}
     * @memberof ModifyPackJobAction
     */
    action: ModifyPackJobAction.ActionEnum;
    /**
     *
     * @type {PackJobStatus}
     * @memberof ModifyPackJobAction
     */
    status?: PackJobStatus;
}

/**
 * @export
 * @namespace ModifyPackJobAction
 */
export namespace ModifyPackJobAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyPackJob = 'ModifyPackJob'
    }
}
/**
 *
 * @export
 * @interface ModifyPackLineItemAction
 */
export interface ModifyPackLineItemAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyPackLineItem', because you want to modify a packjobs lineItem
     * @type {string}
     * @memberof ModifyPackLineItemAction
     */
    action: ModifyPackLineItemAction.ActionEnum;
    /**
     * references the id of the packLineItem of a packJob
     * @type {string}
     * @memberof ModifyPackLineItemAction
     */
    id: string;
    /**
     * The amount of articles that were packed for this packline. Can't be more than picked before.
     * @type {number}
     * @memberof ModifyPackLineItemAction
     */
    packed?: number;
}

/**
 * @export
 * @namespace ModifyPackLineItemAction
 */
export namespace ModifyPackLineItemAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyPackLineItem = 'ModifyPackLineItem'
    }
}
/**
 *
 * @export
 * @interface ModifyPackingContainerTypeAction
 */
export interface ModifyPackingContainerTypeAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyPackingContainerType', because you want to modify a PackingContainerType
     * @type {string}
     * @memberof ModifyPackingContainerTypeAction
     */
    action: ModifyPackingContainerTypeAction.ActionEnum;
    /**
     *
     * @type {LocaleString}
     * @memberof ModifyPackingContainerTypeAction
     */
    descriptionLocalized?: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof ModifyPackingContainerTypeAction
     */
    nameLocalized?: LocaleString;
    /**
     * This value gives the priority in the respective packingContainerType. The lower the value the higher is the priority, e.g. priority 1 is higher than priority 10. The priority can be used to order PackingContainerTypes.
     * @type {number}
     * @memberof ModifyPackingContainerTypeAction
     */
    priority?: number;
    /**
     *
     * @type {ContainerDimensions}
     * @memberof ModifyPackingContainerTypeAction
     */
    dimensions?: ContainerDimensions;
    /**
     * Maximal weight in gramm(gr) the container can be loaded with.
     * @type {number}
     * @memberof ModifyPackingContainerTypeAction
     */
    weightLimitInG?: number;
}

/**
 * @export
 * @namespace ModifyPackingContainerTypeAction
 */
export namespace ModifyPackingContainerTypeAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyPackingContainerType = 'ModifyPackingContainerType'
    }
}
/**
 *
 * @export
 * @interface ModifyPackingContainerTypeIconAction
 */
export interface ModifyPackingContainerTypeIconAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyPackingContainerTypeIcon', because you want to modify a PackingContainerTypes icon
     * @type {string}
     * @memberof ModifyPackingContainerTypeIconAction
     */
    action: ModifyPackingContainerTypeIconAction.ActionEnum;
    /**
     * Content of the icon as base64 string
     * @type {string}
     * @memberof ModifyPackingContainerTypeIconAction
     */
    content: string;
    /**
     * icons filename
     * @type {string}
     * @memberof ModifyPackingContainerTypeIconAction
     */
    name: string;
}

/**
 * @export
 * @namespace ModifyPackingContainerTypeIconAction
 */
export namespace ModifyPackingContainerTypeIconAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyPackingContainerTypeIcon = 'ModifyPackingContainerTypeIcon'
    }
}
/**
 *
 * @export
 * @interface ModifyParcelAction
 */
export interface ModifyParcelAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyParcel', because you want to modify a Parcel
     * @type {string}
     * @memberof ModifyParcelAction
     */
    action: ModifyParcelAction.ActionEnum;
    /**
     *
     * @type {ParcelStatus}
     * @memberof ModifyParcelAction
     */
    status?: ParcelStatus;
    /**
     *
     * @type {ParcelResult}
     * @memberof ModifyParcelAction
     */
    result?: ParcelResult;
    /**
     *
     * @type {any}
     * @memberof ModifyParcelAction
     */
    customAttributes?: any;
    /**
     * Only changable on status OPEN or FAILED of the existing Parcel
     * @type {string}
     * @memberof ModifyParcelAction
     */
    carrierProduct?: string;
    /**
     *
     * @type {ParcelServices}
     * @memberof ModifyParcelAction
     */
    services?: ParcelServices;
}

/**
 * @export
 * @namespace ModifyParcelAction
 */
export namespace ModifyParcelAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyParcel = 'ModifyParcel'
    }
}
/**
 *
 * @export
 * @interface ModifyParcelLoadUnitsAction
 */
export interface ModifyParcelLoadUnitsAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyParcelLoadUnit', because you want to modify loadunitRefs in Parcel
     * @type {string}
     * @memberof ModifyParcelLoadUnitsAction
     */
    action: ModifyParcelLoadUnitsAction.ActionEnum;
    /**
     *
     * @type {Array<string>}
     * @memberof ModifyParcelLoadUnitsAction
     */
    loadUnitRefs: Array<string>;
}

/**
 * @export
 * @namespace ModifyParcelLoadUnitsAction
 */
export namespace ModifyParcelLoadUnitsAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyParcelLoadUnit = 'ModifyParcelLoadUnit'
    }
}
/**
 *
 * @export
 * @interface ModifyPartialStockAction
 */
export interface ModifyPartialStockAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyPartialStock', because you want to modify a partial stock
     * @type {string}
     * @memberof ModifyPartialStockAction
     */
    action: ModifyPartialStockAction.ActionEnum;
    /**
     *
     * @type {Array<PartialStockForCreation>}
     * @memberof ModifyPartialStockAction
     */
    partialStocks?: Array<PartialStockForCreation>;
}

/**
 * @export
 * @namespace ModifyPartialStockAction
 */
export namespace ModifyPartialStockAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyPartialStock = 'ModifyPartialStock'
    }
}
/**
 *
 * @export
 * @interface ModifyPickJobAction
 */
export interface ModifyPickJobAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyPickJob', because you want to modify a pickjob
     * @type {string}
     * @memberof ModifyPickJobAction
     */
    action: ModifyPickJobAction.ActionEnum;
    /**
     * Preferred way of picking a given pickJob.
     * @type {Array<PickingMethodEnum>}
     * @memberof ModifyPickJobAction
     */
    preferredPickingMethods?: Array<PickingMethodEnum>;
    /**
     *
     * @type {PaymentInformation}
     * @memberof ModifyPickJobAction
     */
    paymentInformation?: PaymentInformation;
    /**
     * Attributes that can be added to the pickJob. These attributes cannot be used within fulfillment processes, but it could be useful to have the informations carried here.
     * @type {any}
     * @memberof ModifyPickJobAction
     */
    customAttributes?: any;
    /**
     *
     * @type {PickJobStatusUnprotected}
     * @memberof ModifyPickJobAction
     */
    status?: PickJobStatusUnprotected;
}

/**
 * @export
 * @namespace ModifyPickJobAction
 */
export namespace ModifyPickJobAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyPickJob = 'ModifyPickJob'
    }
}
/**
 *
 * @export
 * @interface ModifyPickJobLastEditorAction
 */
export interface ModifyPickJobLastEditorAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyPickJobLastEditorAction' to set the last editor to your user and therefor take over the pickjob.
     * @type {string}
     * @memberof ModifyPickJobLastEditorAction
     */
    action: ModifyPickJobLastEditorAction.ActionEnum;
}

/**
 * @export
 * @namespace ModifyPickJobLastEditorAction
 */
export namespace ModifyPickJobLastEditorAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyPickJobLastEditor = 'ModifyPickJobLastEditor'
    }
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ModifyPickJobLineItemsActionEnum {
    MODIFYPICKJOBLINEITEMS = 'MODIFY_PICK_JOB_LINE_ITEMS'
}
/**
 *
 * @export
 * @interface ModifyPickLineItemAction
 */
export interface ModifyPickLineItemAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyPickLineItem', because you want to modify a pick line item
     * @type {string}
     * @memberof ModifyPickLineItemAction
     */
    action: ModifyPickLineItemAction.ActionEnum;
    /**
     * The id of this lineItem. It is generated during creation automatically and suits as the primary identifier of the described entity.
     * @type {string}
     * @memberof ModifyPickLineItemAction
     */
    id: string;
    /**
     * The amount of articles that were picked for this pickline.
     * @type {number}
     * @memberof ModifyPickLineItemAction
     */
    picked?: number;
    /**
     * Date when the line has been picked.
     * @type {Date}
     * @memberof ModifyPickLineItemAction
     */
    pickedAt?: Date;
    /**
     * Attributes that can be added to the pick ine item. These attributes cannot be used within fulfillment processes, but it could be useful to have the informations carried here.
     * @type {any}
     * @memberof ModifyPickLineItemAction
     */
    customAttributes?: any;
    /**
     *
     * @type {boolean}
     * @memberof ModifyPickLineItemAction
     */
    stockEmptied?: boolean;
    /**
     *
     * @type {Array<Sticker>}
     * @memberof ModifyPickLineItemAction
     */
    stickers?: Array<Sticker>;
    /**
     *
     * @type {Array<PickJobLineItemPartialStockLocationForUpdate>}
     * @memberof ModifyPickLineItemAction
     */
    partialStockLocations?: Array<PickJobLineItemPartialStockLocationForUpdate>;
    /**
     * Scanned Codes of the given picked line item
     * @type {Array<PickLineItemScannedCode>}
     * @memberof ModifyPickLineItemAction
     */
    scannedCodes?: Array<PickLineItemScannedCode>;
    /**
     *
     * @type {PickLineItemStatus}
     * @memberof ModifyPickLineItemAction
     */
    status?: PickLineItemStatus;
    /**
     *
     * @type {number}
     * @memberof ModifyPickLineItemAction
     */
    secondaryPicked?: number;
    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @type {Array<SubstituteLineItemForCreation>}
     * @memberof ModifyPickLineItemAction
     */
    substituteLineItems?: Array<SubstituteLineItemForCreation>;
    /**
     *
     * @type {LocaleString}
     * @memberof ModifyPickLineItemAction
     */
    shortPickReasonLocalized?: LocaleString;
}

/**
 * @export
 * @namespace ModifyPickLineItemAction
 */
export namespace ModifyPickLineItemAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyPickLineItem = 'ModifyPickLineItem'
    }
}
/**
 *
 * @export
 * @interface ModifyPickLineItemsActionParameter
 */
export interface ModifyPickLineItemsActionParameter {
    /**
     *
     * @type {ModifyPickJobLineItemsActionEnum}
     * @memberof ModifyPickLineItemsActionParameter
     */
    name: ModifyPickJobLineItemsActionEnum;
    /**
     * Version of the entity to be changed
     * @type {number}
     * @memberof ModifyPickLineItemsActionParameter
     */
    version: number;
    /**
     *
     * @type {Array<PickLineItemUpdate>}
     * @memberof ModifyPickLineItemsActionParameter
     */
    pickJobLineItemUpdates: Array<PickLineItemUpdate>;
}
/**
 *
 * @export
 * @interface ModifyPickRunLineItemAction
 */
export interface ModifyPickRunLineItemAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyPickRunLineItem', because you want to modify a pick line item
     * @type {string}
     * @memberof ModifyPickRunLineItemAction
     */
    action: ModifyPickRunLineItemAction.ActionEnum;
    /**
     * The id of this lineItem. It is generated during creation automatically and suits as the primary identifier of the described entity.
     * @type {string}
     * @memberof ModifyPickRunLineItemAction
     */
    id: string;
    /**
     * The amount of articles that were picked for this pickline.
     * @type {number}
     * @memberof ModifyPickRunLineItemAction
     */
    picked?: number;
    /**
     *
     * @type {PickLineItemStatus}
     * @memberof ModifyPickRunLineItemAction
     */
    status?: PickLineItemStatus;
    /**
     *
     * @type {Array<PickJobLineItemPartialStockLocationForUpdate>}
     * @memberof ModifyPickRunLineItemAction
     */
    partialStockLocations?: Array<PickJobLineItemPartialStockLocationForUpdate>;
}

/**
 * @export
 * @namespace ModifyPickRunLineItemAction
 */
export namespace ModifyPickRunLineItemAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyPickRunLineItem = 'ModifyPickRunLineItem'
    }
}
/**
 *
 * @export
 * @interface ModifyPostNLCarrierCredentials
 */
export interface ModifyPostNLCarrierCredentials extends AbstractModifyCarrierCredentials {
    /**
     * Key to access the postNl api.
     * @type {string}
     * @memberof ModifyPostNLCarrierCredentials
     */
    apiKey?: string;
    /**
     * Use value 'POSTNL' in order to provide POSTNL credentials
     * @type {string}
     * @memberof ModifyPostNLCarrierCredentials
     */
    key: string;
}
/**
 *
 * @export
 * @interface ModifyPrioritizationAction
 */
export interface ModifyPrioritizationAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyPrioritization', because you want to modify prioritization.
     * @type {string}
     * @memberof ModifyPrioritizationAction
     */
    action: ModifyPrioritizationAction.ActionEnum;
    /**
     *
     * @type {boolean}
     * @memberof ModifyPrioritizationAction
     */
    active?: boolean;
    /**
     *
     * @type {string}
     * @memberof ModifyPrioritizationAction
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof ModifyPrioritizationAction
     */
    name?: string;
}

/**
 * @export
 * @namespace ModifyPrioritizationAction
 */
export namespace ModifyPrioritizationAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyPrioritization = 'ModifyPrioritization'
    }
}
/**
 *
 * @export
 * @interface ModifyRatingAction
 */
export interface ModifyRatingAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyRating', because you want to modify a rating.
     * @type {string}
     * @memberof ModifyRatingAction
     */
    action: ModifyRatingAction.ActionEnum;
    /**
     *
     * @type {boolean}
     * @memberof ModifyRatingAction
     */
    active?: boolean;
    /**
     *
     * @type {string}
     * @memberof ModifyRatingAction
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof ModifyRatingAction
     */
    id: string;
    /**
     *
     * @type {number}
     * @memberof ModifyRatingAction
     */
    maxPenalty?: number;
    /**
     *
     * @type {string}
     * @memberof ModifyRatingAction
     */
    name?: string;
}

/**
 * @export
 * @namespace ModifyRatingAction
 */
export namespace ModifyRatingAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyRating = 'ModifyRating'
    }
}
/**
 *
 * @export
 * @interface ModifyRestowItemAction
 */
export interface ModifyRestowItemAction {
    /**
     * Use value 'ModifyRestowItem', because you want to modify a restow item
     * @type {string}
     * @memberof ModifyRestowItemAction
     */
    action: ModifyRestowItemAction.ActionEnum;
    /**
     * Indicates if the restowItem has been restowed
     * @type {boolean}
     * @memberof ModifyRestowItemAction
     */
    restowed: boolean;
    /**
     *
     * @type {Location}
     * @memberof ModifyRestowItemAction
     */
    location?: Location;
}

/**
 * @export
 * @namespace ModifyRestowItemAction
 */
export namespace ModifyRestowItemAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyRestowItem = 'ModifyRestowItem'
    }
}
/**
 *
 * @export
 * @interface ModifyRetainedOfflineStockAction
 */
export interface ModifyRetainedOfflineStockAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyRetainedOfflineStock', if you want to modify the retained offline stocks of a facility
     * @type {string}
     * @memberof ModifyRetainedOfflineStockAction
     */
    action: ModifyRetainedOfflineStockAction.ActionEnum;
    /**
     * The retained Offline Stock is enabled or disabled.
     * @type {boolean}
     * @memberof ModifyRetainedOfflineStockAction
     */
    active?: boolean;
    /**
     * The overall percentage of stock that should be reserved to offline clients.
     * @type {number}
     * @memberof ModifyRetainedOfflineStockAction
     */
    value?: number;
}

/**
 * @export
 * @namespace ModifyRetainedOfflineStockAction
 */
export namespace ModifyRetainedOfflineStockAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyRetainedOfflineStock = 'ModifyRetainedOfflineStock'
    }
}
/**
 *
 * @export
 * @interface ModifyReturnAction
 */
export interface ModifyReturnAction extends AbstractModificationAction {
    /**
     *
     * @type {string}
     * @memberof ModifyReturnAction
     */
    action: ModifyReturnAction.ActionEnum;
    /**
     *
     * @type {ReturnStatus}
     * @memberof ModifyReturnAction
     */
    status?: ReturnStatus;
}

/**
 * @export
 * @namespace ModifyReturnAction
 */
export namespace ModifyReturnAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyReturn = 'ModifyReturn'
    }
}
/**
 *
 * @export
 * @interface ModifyReturnLineItemAction
 */
export interface ModifyReturnLineItemAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyReturnLineItem', because you want to modify a return line item
     * @type {string}
     * @memberof ModifyReturnLineItemAction
     */
    action: ModifyReturnLineItemAction.ActionEnum;
    /**
     * Id of the return line item you want to update
     * @type {string}
     * @memberof ModifyReturnLineItemAction
     */
    id: string;
    /**
     *
     * @type {Returned}
     * @memberof ModifyReturnLineItemAction
     */
    returned: Returned;
    /**
     *
     * @type {ReturnLineStatus}
     * @memberof ModifyReturnLineItemAction
     */
    status?: ReturnLineStatus;
}

/**
 * @export
 * @namespace ModifyReturnLineItemAction
 */
export namespace ModifyReturnLineItemAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyReturnLineItem = 'ModifyReturnLineItem'
    }
}
/**
 *
 * @export
 * @interface ModifyRoutingPlanAction
 */
export interface ModifyRoutingPlanAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyRoutingPlan', because you want to modify a routing plan
     * @type {string}
     * @memberof ModifyRoutingPlanAction
     */
    action: ModifyRoutingPlanAction.ActionEnum;
    /**
     * The id of the facility reference. The given ID has to be present in the system.
     * @type {string}
     * @memberof ModifyRoutingPlanAction
     */
    facilityRef?: string;
    /**
     *
     * @type {RoutingPlanStatus}
     * @memberof ModifyRoutingPlanAction
     */
    status?: RoutingPlanStatus;
}

/**
 * @export
 * @namespace ModifyRoutingPlanAction
 */
export namespace ModifyRoutingPlanAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyRoutingPlan = 'ModifyRoutingPlan'
    }
}
/**
 *
 * @export
 * @interface ModifyShipmentAction
 */
export interface ModifyShipmentAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyShipment', because you want to modify a shipment
     * @type {string}
     * @memberof ModifyShipmentAction
     */
    action: ModifyShipmentAction.ActionEnum;
    /**
     * The reference to the carrier for which the shipment is assigned to
     * @type {string}
     * @memberof ModifyShipmentAction
     */
    carrierRef?: string;
    /**
     * Desired product of given carrier to choose when ordering a label
     * @type {string}
     * @memberof ModifyShipmentAction
     */
    carrierProduct?: string;
    /**
     * The reference to the pickjob for which the shipment is assigned to
     * @type {string}
     * @memberof ModifyShipmentAction
     */
    pickJobRef?: string;
    /**
     *
     * @type {PaymentInformation}
     * @memberof ModifyShipmentAction
     */
    paymentInformation?: PaymentInformation;
    /**
     *
     * @type {ShipmentStatus}
     * @memberof ModifyShipmentAction
     */
    status?: ShipmentStatus;
    /**
     *
     * @type {ConsumerAddress}
     * @memberof ModifyShipmentAction
     */
    targetAddress?: ConsumerAddress;
}

/**
 * @export
 * @namespace ModifyShipmentAction
 */
export namespace ModifyShipmentAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyShipment = 'ModifyShipment'
    }
}
/**
 *
 * @export
 * @interface ModifyShortpickAction
 */
export interface ModifyShortpickAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyShortpick', if you want to modify the ModifyShortPick of a facility
     * @type {string}
     * @memberof ModifyShortpickAction
     */
    action: ModifyShortpickAction.ActionEnum;
    /**
     * Inventory adjustment in the case of insufficient order picking
     * @type {boolean}
     * @memberof ModifyShortpickAction
     */
    active?: boolean;
}

/**
 * @export
 * @namespace ModifyShortpickAction
 */
export namespace ModifyShortpickAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyShortpick = 'ModifyShortpick'
    }
}
/**
 *
 * @export
 * @interface ModifyStorageLocationAction
 */
export interface ModifyStorageLocationAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyStorageLocation', because you want to modify a storage location
     * @type {string}
     * @memberof ModifyStorageLocationAction
     */
    action: ModifyStorageLocationAction.ActionEnum;
    /**
     * The name of this storage location
     * @type {string}
     * @memberof ModifyStorageLocationAction
     */
    name?: string;
    /**
     * The internal tenant id for this location
     * @type {string}
     * @memberof ModifyStorageLocationAction
     */
    tenantLocationId?: string;
    /**
     *
     * @type {StorageLocationType}
     * @memberof ModifyStorageLocationAction
     */
    type?: StorageLocationType;
    /**
     * The traits of this storage location. Do not use this to write traits, use traitConfig instead.
     * @type {Array<StorageLocationTrait>}
     * @memberof ModifyStorageLocationAction
     */
    traits?: Array<StorageLocationTrait>;
    /**
     *
     * @type {StorageLocationTraitConfig}
     * @memberof ModifyStorageLocationAction
     */
    traitConfig?: StorageLocationTraitConfig;
    /**
     * Barcodes representing this storage location
     * @type {Array<string>}
     * @memberof ModifyStorageLocationAction
     */
    scannableCodes?: Array<string>;
    /**
     * The Sequence item/s of this location
     * @type {Array<StorageLocationSequenceItem>}
     * @memberof ModifyStorageLocationAction
     */
    runningSequences?: Array<StorageLocationSequenceItem>;
    /**
     * The id of the Zone to which this storage location belongs.
     * @type {string}
     * @memberof ModifyStorageLocationAction
     */
    zoneRef?: string;
    /**
     * A free text information about this storage location, max length 1024
     * @type {string}
     * @memberof ModifyStorageLocationAction
     */
    information?: string;
    /**
     * Attributes that can be added to the storage location. These attributes cannot be used within fulfillment processes, but it could be useful to have the informations carried here.
     * @type {any}
     * @memberof ModifyStorageLocationAction
     */
    customAttributes?: any;
}

/**
 * @export
 * @namespace ModifyStorageLocationAction
 */
export namespace ModifyStorageLocationAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyStorageLocation = 'ModifyStorageLocation'
    }
}
/**
 *
 * @export
 * @interface ModifyTimingModeAction
 */
export interface ModifyTimingModeAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyTimingMode', because you want to modify a timing mode.
     * @type {string}
     * @memberof ModifyTimingModeAction
     */
    action: ModifyTimingModeAction.ActionEnum;
    /**
     *
     * @type {RoutingConfigurationTiming}
     * @memberof ModifyTimingModeAction
     */
    timingMode?: RoutingConfigurationTiming;
}

/**
 * @export
 * @namespace ModifyTimingModeAction
 */
export namespace ModifyTimingModeAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyTimingMode = 'ModifyTimingMode'
    }
}
/**
 *
 * @export
 * @interface ModifyUserAction
 */
export interface ModifyUserAction extends AbstractModificationAction {
    /**
     * Use value 'ModifyUser', because you want to modify a user
     * @type {string}
     * @memberof ModifyUserAction
     */
    action: ModifyUserAction.ActionEnum;
    /**
     *
     * @type {string}
     * @memberof ModifyUserAction
     */
    firstname?: string;
    /**
     *
     * @type {string}
     * @memberof ModifyUserAction
     */
    lastname?: string;
    /**
     *
     * @type {SupportedLocale}
     * @memberof ModifyUserAction
     */
    locale?: SupportedLocale;
    /**
     *
     * @type {string}
     * @memberof ModifyUserAction
     */
    password?: string;
    /**
     *
     * @type {UserRoles}
     * @memberof ModifyUserAction
     */
    roles?: UserRoles;
    /**
     *
     * @type {Array<UserAssignedFacilityForCreation>}
     * @memberof ModifyUserAction
     */
    assignedFacilities?: Array<UserAssignedFacilityForCreation>;
    /**
     * Attributes that can be added to the user. These attributes **cannot** be used within fulfillment processes, but enable you to attach custom data from your systems to fulfillmenttools entities.
     * @type {any}
     * @memberof ModifyUserAction
     */
    customAttributes?: any;
}

/**
 * @export
 * @namespace ModifyUserAction
 */
export namespace ModifyUserAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ModifyUser = 'ModifyUser'
    }
}
/**
 *
 * @export
 * @interface MoveStockToLocationOptions
 */
export interface MoveStockToLocationOptions {
    /**
     *
     * @type {boolean}
     * @memberof MoveStockToLocationOptions
     */
    deleteFromStockIfZero?: boolean;
}
/**
 *
 * @export
 * @interface NamedFile
 */
export interface NamedFile {
    /**
     * File content base64 encoded
     * @type {string}
     * @memberof NamedFile
     */
    content: string;
    /**
     * File name with extension
     * @type {string}
     * @memberof NamedFile
     */
    name: string;
}
/**
 *
 * @export
 * @interface NeedsPacking
 */
export interface NeedsPacking {
    /**
     *
     * @type {boolean}
     * @memberof NeedsPacking
     */
    needsPacking: boolean;
}
/**
 *
 * @export
 * @interface NonDeliveryDays
 */
export interface NonDeliveryDays {
    /**
     *
     * @type {NonDeliveryType}
     * @memberof NonDeliveryDays
     */
    nonDeliveryType?: NonDeliveryType;
    /**
     *
     * @type {Date}
     * @memberof NonDeliveryDays
     */
    nonDeliveryDay: Date;
}
/**
 *
 * @export
 * @interface NonDeliveryDaysPerCountryAndProvince
 */
export interface NonDeliveryDaysPerCountryAndProvince {
    /**
     *
     * @type {string}
     * @memberof NonDeliveryDaysPerCountryAndProvince
     */
    country: string;
    /**
     *
     * @type {Array<NonDeliveryDays>}
     * @memberof NonDeliveryDaysPerCountryAndProvince
     */
    nonDeliveryDays: Array<NonDeliveryDays>;
    /**
     *
     * @type {Array<WeekDay>}
     * @memberof NonDeliveryDaysPerCountryAndProvince
     */
    recurringNonDeliveryWeekdays: Array<WeekDay>;
    /**
     *
     * @type {Array<NonDeliveryDaysPerProvince>}
     * @memberof NonDeliveryDaysPerCountryAndProvince
     */
    nonDeliveryDaysPerProvince: Array<NonDeliveryDaysPerProvince>;
}
/**
 *
 * @export
 * @interface NonDeliveryDaysPerProvince
 */
export interface NonDeliveryDaysPerProvince {
    /**
     *
     * @type {string}
     * @memberof NonDeliveryDaysPerProvince
     */
    province: string;
    /**
     *
     * @type {Array<NonDeliveryDays>}
     * @memberof NonDeliveryDaysPerProvince
     */
    nonDeliveryDays: Array<NonDeliveryDays>;
    /**
     *
     * @type {Array<WeekDay>}
     * @memberof NonDeliveryDaysPerProvince
     */
    recurringNonDeliveryWeekdays: Array<WeekDay>;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum NonDeliveryType {
    SINGLE = 'SINGLE',
    RECURRING = 'RECURRING'
}
/**
 *
 * @export
 * @interface NotificationCenterConfig
 */
export interface NotificationCenterConfig {
    /**
     *
     * @type {number}
     * @memberof NotificationCenterConfig
     */
    version: number;
    /**
     *
     * @type {Date}
     * @memberof NotificationCenterConfig
     */
    created: Date;
    /**
     *
     * @type {Date}
     * @memberof NotificationCenterConfig
     */
    lastModified: Date;
    /**
     *
     * @type {Array<EmailNotificationChannel>}
     * @memberof NotificationCenterConfig
     */
    channels: Array<EmailNotificationChannel>;
}
/**
 *
 * @export
 * @interface NotificationCenterConfigForCreation
 */
export interface NotificationCenterConfigForCreation {
    /**
     *
     * @type {Array<EmailNotificationChannelForCreation>}
     * @memberof NotificationCenterConfigForCreation
     */
    channels: Array<EmailNotificationChannelForCreation>;
}
/**
 *
 * @export
 * @interface NotificationCenterConfigForUpdate
 */
export interface NotificationCenterConfigForUpdate {
    /**
     *
     * @type {Array<EmailNotificationChannelForCreation>}
     * @memberof NotificationCenterConfigForUpdate
     */
    channels: Array<EmailNotificationChannelForCreation>;
    /**
     *
     * @type {number}
     * @memberof NotificationCenterConfigForUpdate
     */
    version: number;
}
/**
 *
 * @export
 * @interface NotificationsActionsBody
 */
export interface NotificationsActionsBody {
}
/**
 *
 * @export
 * @interface NotificationsActionsBody1
 */
export interface NotificationsActionsBody1 {
}
/**
 *
 * @export
 * @interface OfferedDocument
 */
export interface OfferedDocument {
    /**
     *
     * @type {DocumentCategory}
     * @memberof OfferedDocument
     */
    documentCategory: DocumentCategory;
}
/**
 *
 * @export
 * @interface OfferedDocumentPerTag
 */
export interface OfferedDocumentPerTag {
    /**
     *
     * @type {string}
     * @memberof OfferedDocumentPerTag
     */
    tagRef: string;
    /**
     *
     * @type {Array<string>}
     * @memberof OfferedDocumentPerTag
     */
    matchingValues: Array<string>;
    /**
     *
     * @type {Array<OfferedDocument>}
     * @memberof OfferedDocumentPerTag
     */
    offeredDocuments: Array<OfferedDocument>;
}
/**
 *
 * @export
 * @interface OfferedScanningRuleByTag
 */
export interface OfferedScanningRuleByTag {
    /**
     *
     * @type {string}
     * @memberof OfferedScanningRuleByTag
     */
    tagRef: string;
    /**
     *
     * @type {Array<string>}
     * @memberof OfferedScanningRuleByTag
     */
    matchingValues: Array<string>;
    /**
     *
     * @type {PickingScanningConfigurationEnum}
     * @memberof OfferedScanningRuleByTag
     */
    scanningType: PickingScanningConfigurationEnum;
}
/**
 *
 * @export
 * @interface OfferedStickersByTag
 */
export interface OfferedStickersByTag {
    /**
     *
     * @type {string}
     * @memberof OfferedStickersByTag
     */
    tagRef: string;
    /**
     *
     * @type {Array<string>}
     * @memberof OfferedStickersByTag
     */
    matchingValues: Array<string>;
    /**
     *
     * @type {Array<Sticker>}
     * @memberof OfferedStickersByTag
     */
    stickers: Array<Sticker>;
}
/**
 *
 * @export
 * @interface OidcProviderCustomParameter
 */
export interface OidcProviderCustomParameter {
    /**
     *
     * @type {string}
     * @memberof OidcProviderCustomParameter
     */
    key: string;
    /**
     *
     * @type {string}
     * @memberof OidcProviderCustomParameter
     */
    value: string;
}
/**
 *
 * @export
 * @interface OidcProviderForCreation
 */
export interface OidcProviderForCreation {
    /**
     *
     * @type {string}
     * @memberof OidcProviderForCreation
     */
    name: string;
    /**
     *
     * @type {OidcProviderStatus}
     * @memberof OidcProviderForCreation
     */
    status: OidcProviderStatus;
    /**
     *
     * @type {string}
     * @memberof OidcProviderForCreation
     */
    issuer: string;
    /**
     *
     * @type {string}
     * @memberof OidcProviderForCreation
     */
    clientId: string;
    /**
     *
     * @type {Array<OidcProviderCustomParameter>}
     * @memberof OidcProviderForCreation
     */
    customParameters: Array<OidcProviderCustomParameter>;
    /**
     *
     * @type {string}
     * @memberof OidcProviderForCreation
     */
    clientSecret: string;
    /**
     *
     * @type {Array<AssignedGroup>}
     * @memberof OidcProviderForCreation
     */
    assignedGroups: Array<AssignedGroup>;
}
/**
 *
 * @export
 * @interface OidcProviderForUpdate
 */
export interface OidcProviderForUpdate extends OidcProviderForCreation {
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof OidcProviderForUpdate
     */
    version: number;
}
/**
 * Status of Provider
 * @export
 * @enum {string}
 */
export enum OidcProviderStatus {
    ACTIVE = 'ACTIVE',
    INACTIVE = 'INACTIVE'
}
/**
 *
 * @export
 * @interface OidcProviders
 */
export interface OidcProviders {
    /**
     *
     * @type {Array<StrippedOidcProvider>}
     * @memberof OidcProviders
     */
    providers: Array<StrippedOidcProvider>;
    /**
     *
     * @type {number}
     * @memberof OidcProviders
     */
    total: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum OpenItemReturnActionEnum {
    OpenItemReturn = 'OpenItemReturn'
}
/**
 *
 * @export
 * @interface OpenItemReturnActionParameter
 */
export interface OpenItemReturnActionParameter {
    /**
     *
     * @type {OpenItemReturnActionEnum}
     * @memberof OpenItemReturnActionParameter
     */
    name: OpenItemReturnActionEnum;
    /**
     * Version of the entity to be changed
     * @type {number}
     * @memberof OpenItemReturnActionParameter
     */
    itemReturnJobVersion: number;
}
/**
 *
 * @export
 * @interface OperativeEntity
 */
export interface OperativeEntity {
    /**
     * Reference to the full entity
     * @type {string}
     * @memberof OperativeEntity
     */
    entityRef: string;
    /**
     *
     * @type {OperativeEntityType}
     * @memberof OperativeEntity
     */
    entityType: OperativeEntityType;
    /**
     * Tree structure of entities belonging to this entity
     * @type {Array<OperativeEntity>}
     * @memberof OperativeEntity
     */
    entityChildren?: Array<OperativeEntity>;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum OperativeEntityType {
    PICKJOB = 'PICK_JOB',
    PACKJOB = 'PACK_JOB',
    SHIPMENT = 'SHIPMENT',
    HANDOVERJOB = 'HANDOVER_JOB',
    PARCEL = 'PARCEL',
    SERVICEJOB = 'SERVICE_JOB',
    RESTOWITEM = 'RESTOW_ITEM',
    ITEMRETURNJOB = 'ITEM_RETURN_JOB',
    LINKEDSERVICEJOBS = 'LINKED_SERVICE_JOBS'
}
/**
 *
 * @export
 * @interface OperativeProcess
 */
export interface OperativeProcess extends VersionedResource {
    /**
     *
     * @type {string}
     * @memberof OperativeProcess
     */
    id: string;
    /**
     * Reference to the overall process
     * @type {string}
     * @memberof OperativeProcess
     */
    processRef: string;
    /**
     * Reference to the facility this operative process is handled in
     * @type {string}
     * @memberof OperativeProcess
     */
    facilityRef: string;
    /**
     * References to all operational entities belonging to this operative process
     * @type {Array<string>}
     * @memberof OperativeProcess
     */
    flatEntityRefs: Array<string>;
    /**
     * Tree structure of entities belonging to this operative process
     * @type {Array<OperativeEntity>}
     * @memberof OperativeProcess
     */
    entityChildren: Array<OperativeEntity>;
}
/**
 *
 * @export
 * @interface OperativeProcessForCreation
 */
export interface OperativeProcessForCreation {
    /**
     * Reference to the overall process
     * @type {string}
     * @memberof OperativeProcessForCreation
     */
    processRef: string;
    /**
     * Reference to the facility this operative process is handled in
     * @type {string}
     * @memberof OperativeProcessForCreation
     */
    facilityRef: string;
    /**
     * Tree structure of entities belonging to this operative process
     * @type {Array<OperativeEntity>}
     * @memberof OperativeProcessForCreation
     */
    entityChildren?: Array<OperativeEntity>;
}
/**
 *
 * @export
 * @interface OperativeTransfer
 */
export interface OperativeTransfer {
    /**
     * The id of the transfer
     * @type {string}
     * @memberof OperativeTransfer
     */
    id: string;
    /**
     * The type of the transfer
     * @type {string}
     * @memberof OperativeTransfer
     */
    type: string;
}
/**
 *
 * @export
 * @interface Order
 */
export interface Order extends OrderForCreation {
    /**
     * The date this entity was created at the platform. This value is generated by the service.
     * @type {Date}
     * @memberof Order
     */
    created?: Date;
    /**
     * The date this entity was modified last. This value is generated by the service.
     * @type {Date}
     * @memberof Order
     */
    lastModified?: Date;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof Order
     */
    version: number;
    /**
     *
     * @type {CancelationReason}
     * @memberof Order
     */
    cancelationReason?: CancelationReason;
    /**
     * Indicates if gdpr related data was anonymized
     * @type {boolean}
     * @memberof Order
     */
    anonymized?: boolean;
    /**
     * The id of this order. It is generated during creation automatically and suits as the primary identifier of the described entity.
     * @type {string}
     * @memberof Order
     */
    id: string;
    /**
     *
     * @type {Array<OrderLineItem>}
     * @memberof Order
     */
    orderLineItems: Array<OrderLineItem>;
    /**
     * Id of the global process related to this entity. For example used for starting the GDPR process and others.
     * @type {string}
     * @memberof Order
     */
    processId: string;
    /**
     *
     * @type {Array<CustomServiceReference>}
     * @memberof Order
     */
    customServices?: Array<CustomServiceReference>;
    /**
     *
     * @type {number}
     * @memberof Order
     */
    schemaVersion?: number;
    /**
     *
     * @type {OrderStatus}
     * @memberof Order
     */
    status: OrderStatus;
}
/**
 *
 * @export
 * @interface OrderActionsParameter
 */
export interface OrderActionsParameter {
}
/**
 *
 * @export
 * @interface OrderArticleAttributeItem
 */
export interface OrderArticleAttributeItem extends ArticleAttributeItem {
}

/**
 * @export
 * @namespace OrderArticleAttributeItem
 */
export namespace OrderArticleAttributeItem {
}
/**
 *
 * @export
 * @interface OrderCancelActionParameter
 */
export interface OrderCancelActionParameter extends AbstractOrderActionsParameter {
    /**
     * ID of the cancelation reason
     * @type {string}
     * @memberof OrderCancelActionParameter
     */
    cancelationReasonId?: string;
    /**
     *
     * @type {string}
     * @memberof OrderCancelActionParameter
     */
    name: OrderCancelActionParameter.NameEnum;
}

/**
 * @export
 * @namespace OrderCancelActionParameter
 */
export namespace OrderCancelActionParameter {
    /**
     * @export
     * @enum {string}
     */
    export enum NameEnum {
        CANCEL = 'CANCEL'
    }
}
/**
 *
 * @export
 * @interface OrderCancelledWebHookEvent
 */
export interface OrderCancelledWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {Order}
     * @memberof OrderCancelledWebHookEvent
     */
    payload: Order;
}
/**
 *
 * @export
 * @interface OrderConsumerAddressChangeActionParameter
 */
export interface OrderConsumerAddressChangeActionParameter extends AbstractOrderActionsParameter {
    /**
     *
     * @type {string}
     * @memberof OrderConsumerAddressChangeActionParameter
     */
    name: OrderConsumerAddressChangeActionParameter.NameEnum;
    /**
     *
     * @type {ConsumerAddress}
     * @memberof OrderConsumerAddressChangeActionParameter
     */
    consumerAddress: ConsumerAddress;
    /**
     *
     * @type {AddressType}
     * @memberof OrderConsumerAddressChangeActionParameter
     */
    addressType: AddressType;
}

/**
 * @export
 * @namespace OrderConsumerAddressChangeActionParameter
 */
export namespace OrderConsumerAddressChangeActionParameter {
    /**
     * @export
     * @enum {string}
     */
    export enum NameEnum {
        CHANGECONSUMERADDRESS = 'CHANGE_CONSUMER_ADDRESS'
    }
}
/**
 *
 * @export
 * @interface OrderConsumerAddressesReplaceActionParameter
 */
export interface OrderConsumerAddressesReplaceActionParameter extends AbstractOrderActionsParameter {
    /**
     *
     * @type {string}
     * @memberof OrderConsumerAddressesReplaceActionParameter
     */
    name: OrderConsumerAddressesReplaceActionParameter.NameEnum;
    /**
     *
     * @type {Array<ConsumerAddress>}
     * @memberof OrderConsumerAddressesReplaceActionParameter
     */
    consumerAddresses: Array<ConsumerAddress>;
}

/**
 * @export
 * @namespace OrderConsumerAddressesReplaceActionParameter
 */
export namespace OrderConsumerAddressesReplaceActionParameter {
    /**
     * @export
     * @enum {string}
     */
    export enum NameEnum {
        REPLACECONSUMERADDRESSES = 'REPLACE_CONSUMER_ADDRESSES'
    }
}
/**
 *
 * @export
 * @interface OrderCreatedWebHookEvent
 */
export interface OrderCreatedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {Order}
     * @memberof OrderCreatedWebHookEvent
     */
    payload: Order;
}
/**
 *
 * @export
 * @interface OrderFenceDecision
 */
export interface OrderFenceDecision {
    /**
     *
     * @type {string}
     * @memberof OrderFenceDecision
     */
    name: string;
    /**
     *
     * @type {FenceResultStatus}
     * @memberof OrderFenceDecision
     */
    decision: FenceResultStatus;
    /**
     *
     * @type {Array<OrderFenceDecisionDetail | ToolkitDecisionDetail | ToolkitComparisonDecisionDetail>}
     * @memberof OrderFenceDecision
     */
    details: Array<OrderFenceDecisionDetail | ToolkitDecisionDetail | ToolkitComparisonDecisionDetail>;
}
/**
 *
 * @export
 * @interface OrderFenceDecisionDetail
 */
export interface OrderFenceDecisionDetail extends BaseDecisionDetail {
    /**
     *
     * @type {ContextReference}
     * @memberof OrderFenceDecisionDetail
     */
    contextReference?: ContextReference;
    /**
     *
     * @type {string}
     * @memberof OrderFenceDecisionDetail
     */
    expectedValue: string;
    /**
     *
     * @type {string}
     * @memberof OrderFenceDecisionDetail
     */
    actualValue?: string;
    /**
     *
     * @type {ReactiveErrorReason}
     * @memberof OrderFenceDecisionDetail
     */
    reactiveErrorReason?: ReactiveErrorReason;
}
/**
 *
 * @export
 * @interface OrderForCreation
 */
export interface OrderForCreation {
    /**
     *
     * @type {OrderForCreationConsumer}
     * @memberof OrderForCreation
     */
    consumer: OrderForCreationConsumer;
    /**
     * Attributes that can be added to the order. These attributes cannot be used within fulfillment processes, but it could be useful to have the informations carried here.
     * @type {any}
     * @memberof OrderForCreation
     */
    customAttributes?: any;
    /**
     *
     * @type {DeliveryPreferences}
     * @memberof OrderForCreation
     */
    deliveryPreferences?: DeliveryPreferences;
    /**
     * The date this order was created at the supplying system.
     * @type {Date}
     * @memberof OrderForCreation
     */
    orderDate: Date;
    /**
     *
     * @type {Array<OrderLineItemForCreation>}
     * @memberof OrderForCreation
     */
    orderLineItems: Array<OrderLineItemForCreation>;
    /**
     *
     * @type {OrderStatus}
     * @memberof OrderForCreation
     */
    status?: OrderStatus;
    /**
     *
     * @type {Array<Sticker>}
     * @memberof OrderForCreation
     */
    stickers?: Array<Sticker>;
    /**
     * Field can be used as a reference number in foreign systems, for example as a reference to the source system's identifier for this order.
     * @type {string}
     * @memberof OrderForCreation
     */
    tenantOrderId?: string;
    /**
     *
     * @type {Array<TagReference>}
     * @memberof OrderForCreation
     */
    tags?: Array<TagReference>;
    /**
     *
     * @type {Array<CustomServiceReferenceForCreation>}
     * @memberof OrderForCreation
     */
    customServices?: Array<CustomServiceReferenceForCreation>;
    /**
     *
     * @type {OrderPaymentInfo}
     * @memberof OrderForCreation
     */
    paymentInfo?: OrderPaymentInfo;
    /**
     *
     * @type {Array<OrderStatusReason>}
     * @memberof OrderForCreation
     */
    statusReasons?: Array<OrderStatusReason>;
    /**
     *
     * @type {OrderPromisesOptions}
     * @memberof OrderForCreation
     */
    promisesOptions?: OrderPromisesOptions;
}
/**
 *
 * @export
 * @interface OrderForCreationConsumer
 */
export interface OrderForCreationConsumer {
    /**
     *
     * @type {Array<ConsumerAddress>}
     * @memberof OrderForCreationConsumer
     */
    addresses: Array<ConsumerAddress>;
    /**
     * Attributes that can be added to the consumer. These attributes cannot be used within fulfillment processes, but it could be useful to have the informations carried here.
     * @type {any}
     * @memberof OrderForCreationConsumer
     */
    customAttributes?: any;
    /**
     * The email address of the consumer.
     * @type {string}
     * @memberof OrderForCreationConsumer
     */
    email?: string;
}
/**
 *
 * @export
 * @interface OrderIdCancelBody
 */
export interface OrderIdCancelBody {
    /**
     * ID of the cancelation reason
     * @type {string}
     * @memberof OrderIdCancelBody
     */
    cancelationReasonId?: string;
}
/**
 *
 * @export
 * @interface OrderInformation
 */
export interface OrderInformation {
    /**
     * The date the order was created.
     * @type {Date}
     * @memberof OrderInformation
     */
    orderDate?: Date;
    /**
     * An identifier for the order.
     * @type {string}
     * @memberof OrderInformation
     */
    orderNumber?: string;
}
/**
 *
 * @export
 * @interface OrderLineItem
 */
export interface OrderLineItem extends OrderLineItemForCreation {
    /**
     * The id of this orderline. It is generated during creation automatically by the API and suits as the primary identifier of the described line.
     * @type {string}
     * @memberof OrderLineItem
     */
    id: string;
}
/**
 *
 * @export
 * @interface OrderLineItemArticle
 */
export interface OrderLineItemArticle extends AbstractArticle {
    /**
     *
     * @type {Array<OrderArticleAttributeItem>}
     * @memberof OrderLineItemArticle
     */
    attributes?: Array<OrderArticleAttributeItem>;
}
/**
 *
 * @export
 * @interface OrderLineItemFenceDecision
 */
export interface OrderLineItemFenceDecision {
    /**
     *
     * @type {string}
     * @memberof OrderLineItemFenceDecision
     */
    tenantArticleId: string;
    /**
     *
     * @type {string}
     * @memberof OrderLineItemFenceDecision
     */
    articleTitle: string;
    /**
     *
     * @type {FenceResultStatus}
     * @memberof OrderLineItemFenceDecision
     */
    decision: FenceResultStatus;
    /**
     *
     * @type {Array<OrderFenceDecisionDetail | ToolkitDecisionDetail | ToolkitComparisonDecisionDetail>}
     * @memberof OrderLineItemFenceDecision
     */
    details: Array<OrderFenceDecisionDetail | ToolkitDecisionDetail | ToolkitComparisonDecisionDetail>;
    /**
     *
     * @type {ReactiveErrorReason}
     * @memberof OrderLineItemFenceDecision
     */
    reactiveErrorReason?: ReactiveErrorReason;
}
/**
 *
 * @export
 * @interface OrderLineItemFenceDecisions
 */
export interface OrderLineItemFenceDecisions {
    /**
     *
     * @type {string}
     * @memberof OrderLineItemFenceDecisions
     */
    name: string;
    /**
     *
     * @type {Array<OrderLineItemFenceDecision>}
     * @memberof OrderLineItemFenceDecisions
     */
    orderLineItems: Array<OrderLineItemFenceDecision>;
}
/**
 *
 * @export
 * @interface OrderLineItemForCreation
 */
export interface OrderLineItemForCreation {
    /**
     *
     * @type {OrderLineItemArticle}
     * @memberof OrderLineItemForCreation
     */
    article: OrderLineItemArticle;
    /**
     * Attributes that can be added to the orderline. These attributes cannot be used within fulfillment processes, but it could be useful to have the informations carried here.
     * @type {any}
     * @memberof OrderLineItemForCreation
     */
    customAttributes?: any;
    /**
     * Identifier for items unit of measurement.
     * @type {string}
     * @memberof OrderLineItemForCreation
     */
    measurementUnitKey?: string;
    /**
     * quantity of the specific article that has been ordered
     * @type {number}
     * @memberof OrderLineItemForCreation
     */
    quantity: number;
    /**
     * Secondary identifier for items unit of measurement.
     * @type {string}
     * @memberof OrderLineItemForCreation
     */
    secondaryMeasurementUnitKey?: string;
    /**
     * Secondary quantity of the specific article that has been ordered
     * @type {number}
     * @memberof OrderLineItemForCreation
     */
    secondaryQuantity?: number;
    /**
     *
     * @type {Array<string>}
     * @memberof OrderLineItemForCreation
     */
    scannableCodes?: Array<string>;
    /**
     *
     * @type {MeasurementValidation}
     * @memberof OrderLineItemForCreation
     */
    measurementValidation?: MeasurementValidation;
    /**
     * price per piece of this line item
     * @type {number}
     * @memberof OrderLineItemForCreation
     */
    shopPrice?: number;
    /**
     *
     * @type {Array<TagReference>}
     * @memberof OrderLineItemForCreation
     */
    tags?: Array<TagReference>;
    /**
     * Array of allowed substitutes for given orderLineItem. If an empty array is provided, no substitute is allowed for this orderLineItem. If allowedSubstitutes is not provided, this configured substitutes on listing level will be available
     * @type {Array<Substitute>}
     * @memberof OrderLineItemForCreation
     */
    allowedSubstitutes?: Array<Substitute>;
}
/**
 *
 * @export
 * @interface OrderPaymentInfo
 */
export interface OrderPaymentInfo {
    /**
     * The currency in which the consumer paid with
     * @type {string}
     * @memberof OrderPaymentInfo
     */
    currency?: string;
}
/**
 *
 * @export
 * @interface OrderPromisesOptions
 */
export interface OrderPromisesOptions {
    /**
     * The date the promised order will become invalid and is cancelled automatically, when not transformed into an actual order.
     * @type {Date}
     * @memberof OrderPromisesOptions
     */
    validUntil: Date;
}
/**
 *
 * @export
 * @interface OrderRatingDecision
 */
export interface OrderRatingDecision {
    /**
     *
     * @type {string}
     * @memberof OrderRatingDecision
     */
    name: string;
    /**
     *
     * @type {number}
     * @memberof OrderRatingDecision
     */
    score?: number;
    /**
     *
     * @type {number}
     * @memberof OrderRatingDecision
     */
    normalizedScore: number;
    /**
     *
     * @type {number}
     * @memberof OrderRatingDecision
     */
    maxPenalty: number;
    /**
     *
     * @type {Array<ToolkitDecisionDetail | ToolkitComparisonDecisionDetail>}
     * @memberof OrderRatingDecision
     */
    details?: Array<ToolkitDecisionDetail | ToolkitComparisonDecisionDetail>;
}
/**
 *
 * @export
 * @interface OrderRoutingConfiguration
 */
export interface OrderRoutingConfiguration extends VersionedResource {
    /**
     * Config to enable/disable infinite stock
     * @type {boolean}
     * @memberof OrderRoutingConfiguration
     */
    infiniteStockEnabled?: boolean;
    /**
     *
     * @type {string}
     * @memberof OrderRoutingConfiguration
     */
    id?: string;
}
/**
 * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
 * @export
 * @interface OrderSplit
 */
export interface OrderSplit {
    /**
     *
     * @type {boolean}
     * @memberof OrderSplit
     */
    active: boolean;
    /**
     *
     * @type {boolean}
     * @memberof OrderSplit
     */
    activeForSameDay?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof OrderSplit
     */
    shouldUseWaitingRoomForPreBackOrderItems?: boolean;
    /**
     *
     * @type {FixedCountConfiguration}
     * @memberof OrderSplit
     */
    fixedCountConfiguration?: FixedCountConfiguration;
    /**
     *
     * @type {OrderSplitType}
     * @memberof OrderSplit
     */
    orderSplitType: OrderSplitType;
}
/**
 *
 * @export
 * @interface OrderSplitDecision
 */
export interface OrderSplitDecision {
    /**
     *
     * @type {SplitInformation}
     * @memberof OrderSplitDecision
     */
    split?: SplitInformation;
    /**
     *
     * @type {ReassignmentInformation}
     * @memberof OrderSplitDecision
     */
    reassignment?: ReassignmentInformation;
    /**
     *
     * @type {SplitResultType}
     * @memberof OrderSplitDecision
     */
    splitType: SplitResultType;
}
/**
 * The type of order split
 * @export
 * @enum {string}
 */
export enum OrderSplitType {
    FIXEDCOUNT = 'FIXED_COUNT'
}
/**
 * The state of the order. Initially it is OPEN.
 * @export
 * @enum {string}
 */
export enum OrderStatus {
    OPEN = 'OPEN',
    CANCELLED = 'CANCELLED',
    PROMISED = 'PROMISED',
    LOCKED = 'LOCKED',
    OBSOLETE = 'OBSOLETE'
}
/**
 *
 * @export
 * @interface OrderStatusReason
 */
export interface OrderStatusReason {
    /**
     * The reason for setting this order status
     * @type {string}
     * @memberof OrderStatusReason
     */
    reason: string;
    /**
     *
     * @type {OrderStatus}
     * @memberof OrderStatusReason
     */
    status: OrderStatus;
}
/**
 *
 * @export
 * @interface OrderTagConfiguration
 */
export interface OrderTagConfiguration extends VersionedResource {
    /**
     * All entries with a match in their matchingValues will be combined when determining what documents belong to an entity
     * @type {Array<OfferedDocumentPerTag>}
     * @memberof OrderTagConfiguration
     */
    offeredDocumentsPerTag: Array<OfferedDocumentPerTag>;
    /**
     * This configuration is a fallback and applies only if none of the entries in offeredDocumentsPerTag can be applied
     * @type {Array<OfferedDocument>}
     * @memberof OrderTagConfiguration
     */
    offeredDocumentsByDefault: Array<OfferedDocument>;
    /**
     *
     * @type {StickerConfiguration}
     * @memberof OrderTagConfiguration
     */
    stickerConfiguration?: StickerConfiguration;
}
/**
 *
 * @export
 * @interface OrderUnlockActionParameter
 */
export interface OrderUnlockActionParameter extends AbstractOrderActionsParameter {
    /**
     *
     * @type {string}
     * @memberof OrderUnlockActionParameter
     */
    name: OrderUnlockActionParameter.NameEnum;
}

/**
 * @export
 * @namespace OrderUnlockActionParameter
 */
export namespace OrderUnlockActionParameter {
    /**
     * @export
     * @enum {string}
     */
    export enum NameEnum {
        UNLOCK = 'UNLOCK'
    }
}
/**
 *
 * @export
 * @interface OrderUnlockedWebHookEvent
 */
export interface OrderUnlockedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {Order}
     * @memberof OrderUnlockedWebHookEvent
     */
    payload: Order;
}
/**
 *
 * @export
 * @interface OutboundClearTrigger
 */
export interface OutboundClearTrigger {
    /**
     *
     * @type {string}
     * @memberof OutboundClearTrigger
     */
    event: OutboundClearTrigger.EventEnum;
    /**
     *
     * @type {Array<OutboundTagFilter>}
     * @memberof OutboundClearTrigger
     */
    tagFilter?: Array<OutboundTagFilter>;
}

/**
 * @export
 * @namespace OutboundClearTrigger
 */
export namespace OutboundClearTrigger {
    /**
     * @export
     * @enum {string}
     */
    export enum EventEnum {
        PickJobClosedEventV1 = 'pick-job-closed_event-v1',
        HandoverjobHandedOverEventV1 = 'handoverjob-handed-over_event-v1'
    }
}
/**
 *
 * @export
 * @interface OutboundStockConfiguration
 */
export interface OutboundStockConfiguration {
    /**
     *
     * @type {boolean}
     * @memberof OutboundStockConfiguration
     */
    trackOutboundStock: boolean;
    /**
     *
     * @type {string}
     * @memberof OutboundStockConfiguration
     */
    locationRef: string;
    /**
     *
     * @type {Array<OutboundClearTrigger>}
     * @memberof OutboundStockConfiguration
     */
    clearTrigger?: Array<OutboundClearTrigger>;
}
/**
 *
 * @export
 * @interface OutboundTagFilter
 */
export interface OutboundTagFilter {
    /**
     *
     * @type {Array<string>}
     * @memberof OutboundTagFilter
     */
    allowedValues: Array<string>;
    /**
     *
     * @type {string}
     * @memberof OutboundTagFilter
     */
    tagId: string;
}
/**
 *
 * @export
 * @interface PackJob
 */
export interface PackJob extends VersionedResource {
    /**
     * The id of this pack job. It is generated during creation automatically and suits as the primary identifier of the described entity.
     * @type {string}
     * @memberof PackJob
     */
    id: string;
    /**
     *
     * @type {Editor}
     * @memberof PackJob
     */
    editor?: Editor;
    /**
     * Reference to the facility you want to get the corresponding packjob
     * @type {string}
     * @memberof PackJob
     */
    facilityRef: string;
    /**
     * Reference to a pick job
     * @type {string}
     * @memberof PackJob
     */
    pickJobRef?: string;
    /**
     *
     * @type {PackJobStatus}
     * @memberof PackJob
     */
    status: PackJobStatus;
    /**
     *
     * @type {Array<PackLineItem>}
     * @memberof PackJob
     */
    lineItems: Array<PackLineItem>;
    /**
     *
     * @type {Array<StrippedPackingSourceContainer>}
     * @memberof PackJob
     */
    packingSourceContainers?: Array<StrippedPackingSourceContainer>;
    /**
     * Id of the global process related to this entity. For example used for starting the GDPR process and others.
     * @type {string}
     * @memberof PackJob
     */
    processId: string;
    /**
     *
     * @type {string}
     * @memberof PackJob
     */
    operativeProcessRef?: string;
    /**
     * Until when the pack job must be finished.
     * @type {Date}
     * @memberof PackJob
     */
    targetTime?: Date;
    /**
     * Date when the order was placed.
     * @type {Date}
     * @memberof PackJob
     */
    orderDate?: Date;
    /**
     *
     * @type {Array<TagReference>}
     * @memberof PackJob
     */
    tags?: Array<TagReference>;
    /**
     *
     * @type {Array<Sticker>}
     * @memberof PackJob
     */
    stickers?: Array<Sticker>;
    /**
     *
     * @type {ConsumerAddress}
     * @memberof PackJob
     */
    recipient?: ConsumerAddress;
    /**
     *
     * @type {ConsumerAddress}
     * @memberof PackJob
     */
    invoice?: ConsumerAddress;
    /**
     *
     * @type {string}
     * @memberof PackJob
     */
    tenantOrderId?: string;
    /**
     * Reference to the documents collection from this entity
     * @type {string}
     * @memberof PackJob
     */
    documentsRef: string;
    /**
     *
     * @type {DocumentHandling}
     * @memberof PackJob
     */
    documentHandling?: DocumentHandling;
    /**
     * Indicates if gdpr related data was anonymized
     * @type {boolean}
     * @memberof PackJob
     */
    anonymized?: boolean;
    /**
     *
     * @type {string}
     * @memberof PackJob
     */
    deliveryChannel?: PackJob.DeliveryChannelEnum;
    /**
     * Attributes that can be added to the pack job. These attributes cannot be used within fulfillment processes, but it could be useful to have the informations carried here.
     * @type {any}
     * @memberof PackJob
     */
    customAttributes?: any;
    /**
     * The short identifier of the shipment.
     * @type {string}
     * @memberof PackJob
     */
    shortId?: string;
    /**
     *
     * @type {Array<OperativeTransfer>}
     * @memberof PackJob
     */
    transfers?: Array<OperativeTransfer>;
}

/**
 * @export
 * @namespace PackJob
 */
export namespace PackJob {
    /**
     * @export
     * @enum {string}
     */
    export enum DeliveryChannelEnum {
        COLLECT = 'COLLECT',
        SHIPPING = 'SHIPPING'
    }
}
/**
 *
 * @export
 * @interface PackJobCanceledWebHookEvent
 */
export interface PackJobCanceledWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {PackJob}
     * @memberof PackJobCanceledWebHookEvent
     */
    payload: PackJob;
}
/**
 *
 * @export
 * @interface PackJobCreatedWebHookEvent
 */
export interface PackJobCreatedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {PackJob}
     * @memberof PackJobCreatedWebHookEvent
     */
    payload: PackJob;
}
/**
 *
 * @export
 * @interface PackJobCreationPerTag
 */
export interface PackJobCreationPerTag {
    /**
     *
     * @type {string}
     * @memberof PackJobCreationPerTag
     */
    tagRef: string;
    /**
     *
     * @type {Array<string>}
     * @memberof PackJobCreationPerTag
     */
    matchingValues: Array<string>;
    /**
     *
     * @type {boolean}
     * @memberof PackJobCreationPerTag
     */
    packJobCreationDisabled: boolean;
}
/**
 *
 * @export
 * @interface PackJobForCreation
 */
export interface PackJobForCreation {
    /**
     * Attributes that can be added to the pack job. These attributes cannot be used within fulfillment processes, but it could be useful to have the informations carried here.
     * @type {any}
     * @memberof PackJobForCreation
     */
    customAttributes?: any;
    /**
     * Reference to the facility you want to get the corresponding packjob
     * @type {string}
     * @memberof PackJobForCreation
     */
    facilityRef: string;
    /**
     * Reference to a pick job
     * @type {string}
     * @memberof PackJobForCreation
     */
    pickJobRef?: string;
    /**
     *
     * @type {PackJobStatus}
     * @memberof PackJobForCreation
     */
    status?: PackJobStatus;
    /**
     *
     * @type {Array<PackLineItemForCreation>}
     * @memberof PackJobForCreation
     */
    lineItems: Array<PackLineItemForCreation>;
    /**
     * Id of the global process related to this entity. For example used for starting the GDPR process and others.
     * @type {string}
     * @memberof PackJobForCreation
     */
    processId?: string;
    /**
     *
     * @type {string}
     * @memberof PackJobForCreation
     */
    operativeProcessRef?: string;
    /**
     *
     * @type {string}
     * @memberof PackJobForCreation
     */
    tenantOrderId?: string;
    /**
     * Until when the pack job must be finished.
     * @type {Date}
     * @memberof PackJobForCreation
     */
    targetTime?: Date;
    /**
     * Date when the order was placed.
     * @type {Date}
     * @memberof PackJobForCreation
     */
    orderDate?: Date;
    /**
     * Tags can only be set when there is no process related with this packJob. Setting processId and tags will lead to an validationError.
     * @type {Array<TagReference>}
     * @memberof PackJobForCreation
     */
    tags?: Array<TagReference>;
    /**
     *
     * @type {ConsumerAddress}
     * @memberof PackJobForCreation
     */
    recipient?: ConsumerAddress;
    /**
     *
     * @type {ConsumerAddress}
     * @memberof PackJobForCreation
     */
    invoice?: ConsumerAddress;
    /**
     *
     * @type {string}
     * @memberof PackJobForCreation
     */
    deliveryChannel?: PackJobForCreation.DeliveryChannelEnum;
    /**
     * The short identifier of the shipment.
     * @type {string}
     * @memberof PackJobForCreation
     */
    shortId?: string;
    /**
     *
     * @type {Array<OperativeTransfer>}
     * @memberof PackJobForCreation
     */
    transfers?: Array<OperativeTransfer>;
}

/**
 * @export
 * @namespace PackJobForCreation
 */
export namespace PackJobForCreation {
    /**
     * @export
     * @enum {string}
     */
    export enum DeliveryChannelEnum {
        COLLECT = 'COLLECT',
        SHIPPING = 'SHIPPING'
    }
}
/**
 * Attribute to order a packJobs by
 * @export
 * @enum {string}
 */
export enum PackJobOrderBy {
    TARGETTIMEDESC = 'TARGET_TIME_DESC',
    TARGETTIMEASC = 'TARGET_TIME_ASC',
    LASTMODIFIEDDESC = 'LAST_MODIFIED_DESC',
    LASTMODIFIEDASC = 'LAST_MODIFIED_ASC',
    ORDERDATEDESC = 'ORDER_DATE_DESC',
    ORDERDATEASC = 'ORDER_DATE_ASC'
}
/**
 *
 * @export
 * @interface PackJobPatchActions
 */
export interface PackJobPatchActions {
    /**
     *
     * @type {Array<ModifyPackJobAction | ModifyPackLineItemAction | PausePackJobAction>}
     * @memberof PackJobPatchActions
     */
    actions: Array<ModifyPackJobAction | ModifyPackLineItemAction | PausePackJobAction>;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof PackJobPatchActions
     */
    version: number;
}
/**
 * A pack job initially has the status OPEN and packing can start. When packing has started, the pack job changes its status to IN_PROGRESS. After a pack job has been completely packed its status becomes CLOSED.
 * @export
 * @enum {string}
 */
export enum PackJobStatus {
    OPEN = 'OPEN',
    INPROGRESS = 'IN_PROGRESS',
    CLOSED = 'CLOSED',
    OBSOLETE = 'OBSOLETE',
    CANCELED = 'CANCELED',
    PAUSED = 'PAUSED'
}
/**
 *
 * @export
 * @interface PackJobTagConfiguration
 */
export interface PackJobTagConfiguration extends VersionedResource {
    /**
     * All entries with a match in their matchingValues will be combined when determining what documents belong to an entity
     * @type {Array<OfferedDocumentPerTag>}
     * @memberof PackJobTagConfiguration
     */
    offeredDocumentsPerTag: Array<OfferedDocumentPerTag>;
    /**
     * This configuration is a fallback and applies only if none of the entries in offeredDocumentsPerTag can be applied
     * @type {Array<OfferedDocument>}
     * @memberof PackJobTagConfiguration
     */
    offeredDocumentsByDefault: Array<OfferedDocument>;
    /**
     *
     * @type {StickerConfiguration}
     * @memberof PackJobTagConfiguration
     */
    stickerConfiguration?: StickerConfiguration;
    /**
     *
     * @type {StickerConfiguration}
     * @memberof PackJobTagConfiguration
     */
    lineItemStickerConfiguration?: StickerConfiguration;
    /**
     * All entries with a match in their matchingValues will be combined when determining what documents belong to an entity
     * @type {Array<PackJobCreationPerTag>}
     * @memberof PackJobTagConfiguration
     */
    packJobCreationPerTag: Array<PackJobCreationPerTag>;
}
/**
 *
 * @export
 * @interface PackJobUpdatedWebHookEvent
 */
export interface PackJobUpdatedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {PackJob}
     * @memberof PackJobUpdatedWebHookEvent
     */
    payload: PackJob;
}
/**
 *
 * @export
 * @interface PackJobWithSearchPath
 */
export interface PackJobWithSearchPath extends PackJob {
    /**
     *
     * @type {Array<string>}
     * @memberof PackJobWithSearchPath
     */
    searchPaths?: Array<string>;
}

/**
 * @export
 * @namespace PackJobWithSearchPath
 */
export namespace PackJobWithSearchPath {
}
/**
 *
 * @export
 * @interface PackJobs
 */
export interface PackJobs {
    /**
     *
     * @type {Array<PackJobWithSearchPath>}
     * @memberof PackJobs
     */
    packJobs?: Array<PackJobWithSearchPath>;
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof PackJobs
     */
    total?: number;
}
/**
 *
 * @export
 * @interface PackLineItem
 */
export interface PackLineItem extends PackLineItemForCreation {
    /**
     * The id of this lineItem. It is generated during creation automatically and suits as the primary identifier of the described entity.
     * @type {string}
     * @memberof PackLineItem
     */
    id: string;
    /**
     * The amount of articles that were packed for this packline.
     * @type {number}
     * @memberof PackLineItem
     */
    packed?: number;
}
/**
 *
 * @export
 * @interface PackLineItemArticle
 */
export interface PackLineItemArticle extends AbstractArticle {
    /**
     *
     * @type {Array<ArticleAttributeItem>}
     * @memberof PackLineItemArticle
     */
    attributes?: Array<ArticleAttributeItem>;
}
/**
 *
 * @export
 * @interface PackLineItemForCreation
 */
export interface PackLineItemForCreation {
    /**
     *
     * @type {PackLineItemArticle}
     * @memberof PackLineItemForCreation
     */
    article: PackLineItemArticle;
    /**
     * Attributes that can be added to the pack line. These attributes cannot be used within fulfillment processes, but it could be useful to have the information carried here.
     * @type {any}
     * @memberof PackLineItemForCreation
     */
    customAttributes?: any;
    /**
     * quantity of the specific article that has been ordered
     * @type {number}
     * @memberof PackLineItemForCreation
     */
    quantity: number;
    /**
     * Identifier for items unit of measurement.
     * @type {string}
     * @memberof PackLineItemForCreation
     */
    measurementUnitKey?: string;
    /**
     *
     * @type {Array<TagReference>}
     * @memberof PackLineItemForCreation
     */
    tags?: Array<TagReference>;
    /**
     *
     * @type {Array<Sticker>}
     * @memberof PackLineItemForCreation
     */
    stickers?: Array<Sticker>;
    /**
     *
     * @type {Array<string>}
     * @memberof PackLineItemForCreation
     */
    scannableCodes?: Array<string>;
}
/**
 *
 * @export
 * @interface PackLineItemForUpdate
 */
export interface PackLineItemForUpdate {
    /**
     * references the id of the packLineItem of a packJob
     * @type {string}
     * @memberof PackLineItemForUpdate
     */
    id: string;
    /**
     * The amount of articles that were packed for this packline. Can't be more than picked before.
     * @type {number}
     * @memberof PackLineItemForUpdate
     */
    packed: number;
}
/**
 *
 * @export
 * @interface PackingConfigurations
 */
export interface PackingConfigurations extends VersionedResource {
    /**
     *
     * @type {PackingContainerRequiredConfiguration}
     * @memberof PackingConfigurations
     */
    packingContainerRequiredConfiguration?: PackingContainerRequiredConfiguration;
    /**
     *
     * @type {PackingItemConfirmationNeededConfiguration}
     * @memberof PackingConfigurations
     */
    packingItemConfirmationNeededConfiguration?: PackingItemConfirmationNeededConfiguration;
    /**
     *
     * @type {PackingSourceContainerConfiguration}
     * @memberof PackingConfigurations
     */
    packingSourceContainerConfiguration?: PackingSourceContainerConfiguration;
    /**
     *
     * @type {PackingScanningConfiguration}
     * @memberof PackingConfigurations
     */
    scanningConfiguration?: PackingScanningConfiguration;
}
/**
 *
 * @export
 * @interface PackingContainerRequiredConfiguration
 */
export interface PackingContainerRequiredConfiguration {
    /**
     *
     * @type {boolean}
     * @memberof PackingContainerRequiredConfiguration
     */
    active: boolean;
}
/**
 *
 * @export
 * @interface PackingContainerType
 */
export interface PackingContainerType extends VersionedResource {
    /**
     *
     * @type {string}
     * @memberof PackingContainerType
     */
    description?: string;
    /**
     *
     * @type {LocaleString}
     * @memberof PackingContainerType
     */
    descriptionLocalized?: LocaleString;
    /**
     *
     * @type {string}
     * @memberof PackingContainerType
     */
    iconUrl?: string;
    /**
     *
     * @type {string}
     * @memberof PackingContainerType
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof PackingContainerType
     */
    name?: string;
    /**
     *
     * @type {LocaleString}
     * @memberof PackingContainerType
     */
    nameLocalized: LocaleString;
    /**
     * This value gives the priority of the respective packingContainerType. The lower the value the higher is the priority, e.g. priority 1 is higher than priority 10. The priority can be used to order packingContainerTypes in the UI.
     * @type {number}
     * @memberof PackingContainerType
     */
    priority?: number;
    /**
     *
     * @type {ContainerDimensions}
     * @memberof PackingContainerType
     */
    dimensions?: ContainerDimensions;
    /**
     * Maximal weight in gramm(gr) the container can be loaded with.
     * @type {number}
     * @memberof PackingContainerType
     */
    weightLimitInG?: number;
}
/**
 *
 * @export
 * @interface PackingContainerTypeForCreation
 */
export interface PackingContainerTypeForCreation {
    /**
     *
     * @type {LocaleString}
     * @memberof PackingContainerTypeForCreation
     */
    descriptionLocalized?: LocaleString;
    /**
     *
     * @type {NamedFile}
     * @memberof PackingContainerTypeForCreation
     */
    icon?: NamedFile;
    /**
     *
     * @type {LocaleString}
     * @memberof PackingContainerTypeForCreation
     */
    nameLocalized: LocaleString;
    /**
     * This value gives the priority in the respective packingContainerType. The lower the value the higher is the priority, e.g. priority 1 is higher than priority 10. The priority can be used to order packingContainerTypes.
     * @type {number}
     * @memberof PackingContainerTypeForCreation
     */
    priority?: number;
    /**
     *
     * @type {ContainerDimensions}
     * @memberof PackingContainerTypeForCreation
     */
    dimensions?: ContainerDimensions;
    /**
     * Maximal weight in gramm(gr) the container can be loaded with.
     * @type {number}
     * @memberof PackingContainerTypeForCreation
     */
    weightLimitInG?: number;
}
/**
 *
 * @export
 * @interface PackingContainerTypePatchActions
 */
export interface PackingContainerTypePatchActions {
    /**
     *
     * @type {Array<ModifyPackingContainerTypeAction | ModifyPackingContainerTypeIconAction>}
     * @memberof PackingContainerTypePatchActions
     */
    actions: Array<ModifyPackingContainerTypeAction | ModifyPackingContainerTypeIconAction>;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof PackingContainerTypePatchActions
     */
    version: number;
}
/**
 * Do the customer need to validate which items are part of a pack job
 * @export
 * @interface PackingItemConfirmationNeededConfiguration
 */
export interface PackingItemConfirmationNeededConfiguration {
    /**
     *
     * @type {boolean}
     * @memberof PackingItemConfirmationNeededConfiguration
     */
    active: boolean;
}
/**
 *
 * @export
 * @interface PackingScanningConfiguration
 */
export interface PackingScanningConfiguration {
    /**
     *
     * @type {PackingScanningConfigurationEnum}
     * @memberof PackingScanningConfiguration
     */
    scanningType?: PackingScanningConfigurationEnum;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum PackingScanningConfigurationEnum {
    MUSTSCANEACH = 'MUST_SCAN_EACH',
    SCANNOTREQUIRED = 'SCAN_NOT_REQUIRED'
}
/**
 *
 * @export
 * @interface PackingSourceContainer
 */
export interface PackingSourceContainer extends VersionedResource {
    /**
     *
     * @type {LocaleString}
     * @memberof PackingSourceContainer
     */
    descriptionLocalized?: LocaleString;
    /**
     * The id of the facility reference. The given ID has to be present in the system. But it is not updatable.
     * @type {string}
     * @memberof PackingSourceContainer
     */
    facilityRef: string;
    /**
     *
     * @type {string}
     * @memberof PackingSourceContainer
     */
    iconUrl?: string;
    /**
     *
     * @type {string}
     * @memberof PackingSourceContainer
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof PackingSourceContainer
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof PackingSourceContainer
     */
    id: string;
    /**
     *
     * @type {LocaleString}
     * @memberof PackingSourceContainer
     */
    nameLocalized: LocaleString;
    /**
     * List of references to packJobs
     * @type {Array<string>}
     * @memberof PackingSourceContainer
     */
    packJobRefs: Array<string>;
    /**
     *
     * @type {string}
     * @memberof PackingSourceContainer
     */
    loadUnitRef?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof PackingSourceContainer
     */
    codes?: Array<string>;
}
/**
 * Can this tenant use the packing source container
 * @export
 * @interface PackingSourceContainerConfiguration
 */
export interface PackingSourceContainerConfiguration {
    /**
     *
     * @type {boolean}
     * @memberof PackingSourceContainerConfiguration
     */
    active: boolean;
}
/**
 *
 * @export
 * @interface PackingSourceContainerForCreation
 */
export interface PackingSourceContainerForCreation {
    /**
     *
     * @type {LocaleString}
     * @memberof PackingSourceContainerForCreation
     */
    descriptionLocalized?: LocaleString;
    /**
     * The id of the facility reference. The given ID has to be present in the system. But it is not updatable.
     * @type {string}
     * @memberof PackingSourceContainerForCreation
     */
    facilityRef: string;
    /**
     *
     * @type {NamedFile}
     * @memberof PackingSourceContainerForCreation
     */
    icon?: NamedFile;
    /**
     *
     * @type {LocaleString}
     * @memberof PackingSourceContainerForCreation
     */
    nameLocalized: LocaleString;
    /**
     * List of references to packJobs
     * @type {Array<string>}
     * @memberof PackingSourceContainerForCreation
     */
    packJobRefs: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof PackingSourceContainerForCreation
     */
    codes?: Array<string>;
}
/**
 *
 * @export
 * @interface PackingTargetContainer
 */
export interface PackingTargetContainer extends VersionedResource {
    /**
     *
     * @type {Array<string>}
     * @memberof PackingTargetContainer
     */
    codes: Array<string>;
    /**
     *
     * @type {Array<PackingTargetContainerLineItem>}
     * @memberof PackingTargetContainer
     */
    lineItems: Array<PackingTargetContainerLineItem>;
    /**
     *
     * @type {string}
     * @memberof PackingTargetContainer
     */
    packingContainerTypeRef: string;
    /**
     *
     * @type {string}
     * @memberof PackingTargetContainer
     */
    description?: string;
    /**
     *
     * @type {LocaleString}
     * @memberof PackingTargetContainer
     */
    descriptionLocalized?: LocaleString;
    /**
     * The id of the facility reference. The given ID has to be present in the system. But it is not updatable via PUT request
     * @type {string}
     * @memberof PackingTargetContainer
     */
    facilityRef: string;
    /**
     *
     * @type {string}
     * @memberof PackingTargetContainer
     */
    packJobRef: string;
    /**
     *
     * @type {string}
     * @memberof PackingTargetContainer
     */
    iconUrl?: string;
    /**
     *
     * @type {string}
     * @memberof PackingTargetContainer
     */
    id: string;
    /**
     *
     * @type {ContainerDimensions}
     * @memberof PackingTargetContainer
     */
    dimensions?: ContainerDimensions;
    /**
     * Maximal weight in gramm(gr) the container can be loaded with.
     * @type {number}
     * @memberof PackingTargetContainer
     */
    weightLimitInG?: number;
    /**
     *
     * @type {string}
     * @memberof PackingTargetContainer
     */
    name?: string;
    /**
     *
     * @type {LocaleString}
     * @memberof PackingTargetContainer
     */
    nameLocalized: LocaleString;
}
/**
 *
 * @export
 * @interface PackingTargetContainerActionsParameter
 */
export interface PackingTargetContainerActionsParameter {
}
/**
 *
 * @export
 * @interface PackingTargetContainerAttributeItem
 */
export interface PackingTargetContainerAttributeItem extends ArticleAttributeItem {
}

/**
 * @export
 * @namespace PackingTargetContainerAttributeItem
 */
export namespace PackingTargetContainerAttributeItem {
}
/**
 *
 * @export
 * @interface PackingTargetContainerForCreation
 */
export interface PackingTargetContainerForCreation {
    /**
     *
     * @type {Array<string>}
     * @memberof PackingTargetContainerForCreation
     */
    codes: Array<string>;
    /**
     *
     * @type {Array<PackingTargetContainerLineItemForCreation>}
     * @memberof PackingTargetContainerForCreation
     */
    lineItems?: Array<PackingTargetContainerLineItemForCreation>;
    /**
     *
     * @type {string}
     * @memberof PackingTargetContainerForCreation
     */
    packingContainerTypeRef: string;
}
/**
 *
 * @export
 * @interface PackingTargetContainerLineItem
 */
export interface PackingTargetContainerLineItem extends PackingTargetContainerLineItemForCreation {
    /**
     * The id of this lineItem. It is generated during creation automatically and suits as the primary identifier of the described entity.
     * @type {string}
     * @memberof PackingTargetContainerLineItem
     */
    id: string;
}
/**
 *
 * @export
 * @interface PackingTargetContainerLineItemArticle
 */
export interface PackingTargetContainerLineItemArticle extends AbstractArticle {
    /**
     *
     * @type {Array<PackingTargetContainerAttributeItem>}
     * @memberof PackingTargetContainerLineItemArticle
     */
    attributes?: Array<PackingTargetContainerAttributeItem>;
}
/**
 *
 * @export
 * @interface PackingTargetContainerLineItemForCreation
 */
export interface PackingTargetContainerLineItemForCreation {
    /**
     *
     * @type {PackingTargetContainerLineItemArticle}
     * @memberof PackingTargetContainerLineItemForCreation
     */
    article: PackingTargetContainerLineItemArticle;
    /**
     * Attributes that can be added to the line item. These attributes cannot be used within fulfillment processes, but it could be useful to have the informations carried here.
     * @type {any}
     * @memberof PackingTargetContainerLineItemForCreation
     */
    customAttributes?: any;
    /**
     * Identifier for items unit of measurement.
     * @type {string}
     * @memberof PackingTargetContainerLineItemForCreation
     */
    measurementUnitKey?: string;
    /**
     * quantity of the specific article that has been ordered
     * @type {number}
     * @memberof PackingTargetContainerLineItemForCreation
     */
    quantity: number;
    /**
     *
     * @type {Array<string>}
     * @memberof PackingTargetContainerLineItemForCreation
     */
    scannableCodes?: Array<string>;
}
/**
 *
 * @export
 * @interface PackingTargetContainerPatchActions
 */
export interface PackingTargetContainerPatchActions {
    /**
     *
     * @type {Array<ReplaceCodesInPackingTargetContainerAction | AddLineItemToPackingTargetContainerAction | RemoveLineItemFromPackingTargetContainerAction | UpdateLineItemOnPackingTargetContainerAction>}
     * @memberof PackingTargetContainerPatchActions
     */
    actions: Array<ReplaceCodesInPackingTargetContainerAction | AddLineItemToPackingTargetContainerAction | RemoveLineItemFromPackingTargetContainerAction | UpdateLineItemOnPackingTargetContainerAction>;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof PackingTargetContainerPatchActions
     */
    version: number;
}
/**
 *
 * @export
 * @interface PaginatedPackingSourceContainers
 */
export interface PaginatedPackingSourceContainers {
    /**
     *
     * @type {Array<PackingSourceContainer>}
     * @memberof PaginatedPackingSourceContainers
     */
    packingSourceContainers?: Array<PackingSourceContainer>;
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof PaginatedPackingSourceContainers
     */
    total?: number;
}
/**
 *
 * @export
 * @interface Parcel
 */
export interface Parcel extends VersionedResource {
    /**
     * Indicates if gdpr related data was anonymized
     * @type {boolean}
     * @memberof Parcel
     */
    anonymized?: boolean;
    /**
     * Reference to the carrier this parcel should be send by
     * @type {string}
     * @memberof Parcel
     */
    carrierRef: string;
    /**
     * Desired product of given carrier to choose when ordering a label
     * @type {string}
     * @memberof Parcel
     */
    carrierProduct?: string;
    /**
     * Attributes that can be added to the parcel. These attributes cannot be used within fulfillment processes, but it could be useful to have the information carried here.
     * @type {any}
     * @memberof Parcel
     */
    customAttributes?: any;
    /**
     *
     * @type {ParcelDimensions}
     * @memberof Parcel
     */
    dimensions?: ParcelDimensions;
    /**
     *
     * @type {ParcelServices}
     * @memberof Parcel
     */
    services?: ParcelServices;
    /**
     * The id of this parcel. It is generated during creation automatically and suits as the primary identifier of the described entity.
     * @type {string}
     * @memberof Parcel
     */
    id: string;
    /**
     * Reference to the documents collection from this entity
     * @type {string}
     * @memberof Parcel
     */
    documentsRef?: string;
    /**
     * Reference to array of load unit Refs
     * @type {Array<string>}
     * @memberof Parcel
     */
    loadUnitRefs: Array<string>;
    /**
     *
     * @type {ConsumerAddress}
     * @memberof Parcel
     */
    recipient: ConsumerAddress;
    /**
     *
     * @type {ConsumerAddress}
     * @memberof Parcel
     */
    invoice?: ConsumerAddress;
    /**
     *
     * @type {string}
     * @memberof Parcel
     */
    processRef: string;
    /**
     *
     * @type {string}
     * @memberof Parcel
     */
    operativeProcessRef?: string;
    /**
     *
     * @type {Array<ParcelItem>}
     * @memberof Parcel
     */
    items?: Array<ParcelItem>;
    /**
     *
     * @type {ParcelPostalCharge}
     * @memberof Parcel
     */
    postalCharges?: ParcelPostalCharge;
    /**
     *
     * @type {FacilityAddress}
     * @memberof Parcel
     */
    returnAddress?: FacilityAddress;
    /**
     *
     * @type {ParcelResult}
     * @memberof Parcel
     */
    result?: ParcelResult;
    /**
     *
     * @type {FacilityAddress}
     * @memberof Parcel
     */
    sender: FacilityAddress;
    /**
     * The id of this shipment this parcel has been created for.
     * @type {string}
     * @memberof Parcel
     */
    shipmentRef: string;
    /**
     *
     * @type {ParcelStatus}
     * @memberof Parcel
     */
    status: ParcelStatus;
    /**
     *
     * @type {PaymentInformation}
     * @memberof Parcel
     */
    paymentInformation?: PaymentInformation;
    /**
     *
     * @type {ParcelPickUpInformation}
     * @memberof Parcel
     */
    pickUpInformation?: ParcelPickUpInformation;
    /**
     * Monetary value of all goods in this parcel. Needed for sending cross border packages (customs) To be interpreted as money in the currency given under paymentInformation.currency
     * @type {number}
     * @memberof Parcel
     */
    productValue?: number;
    /**
     *
     * @type {Array<OperativeTransfer>}
     * @memberof Parcel
     */
    transfers?: Array<OperativeTransfer>;
}
/**
 *
 * @export
 * @interface ParcelCarrierAcknowledgedWebHookEvent
 */
export interface ParcelCarrierAcknowledgedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {Parcel}
     * @memberof ParcelCarrierAcknowledgedWebHookEvent
     */
    payload: Parcel;
}
/**
 *
 * @export
 * @interface ParcelCarrierFailedWebHookEvent
 */
export interface ParcelCarrierFailedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {Parcel}
     * @memberof ParcelCarrierFailedWebHookEvent
     */
    payload: Parcel;
}
/**
 *
 * @export
 * @interface ParcelCarrierRequestedWebHookEvent
 */
export interface ParcelCarrierRequestedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {Parcel}
     * @memberof ParcelCarrierRequestedWebHookEvent
     */
    payload: Parcel;
}
/**
 *
 * @export
 * @interface ParcelDimensions
 */
export interface ParcelDimensions {
    /**
     * The height of the package (in cm)
     * @type {number}
     * @memberof ParcelDimensions
     */
    height?: number;
    /**
     * The length of the package (in cm)
     * @type {number}
     * @memberof ParcelDimensions
     */
    length?: number;
    /**
     * The weight of the package (in g)
     * @type {number}
     * @memberof ParcelDimensions
     */
    weight?: number;
    /**
     * The width of the package (in cm)
     * @type {number}
     * @memberof ParcelDimensions
     */
    width?: number;
}
/**
 *
 * @export
 * @interface ParcelForCreation
 */
export interface ParcelForCreation {
    /**
     *
     * @type {ParcelStatus}
     * @memberof ParcelForCreation
     */
    status?: ParcelStatus;
    /**
     * Desired product of given carrier to choose when ordering a label
     * @type {string}
     * @memberof ParcelForCreation
     */
    carrierProduct?: string;
    /**
     * Attributes that can be added to the parcel. These attributes cannot be used within fulfillment processes, but it could be useful to have the information carried here.
     * @type {any}
     * @memberof ParcelForCreation
     */
    customAttributes?: any;
    /**
     *
     * @type {ParcelDimensions}
     * @memberof ParcelForCreation
     */
    dimensions?: ParcelDimensions;
    /**
     *
     * @type {ParcelServices}
     * @memberof ParcelForCreation
     */
    services?: ParcelServices;
    /**
     * Reference to array of load unit Refs
     * @type {Array<string>}
     * @memberof ParcelForCreation
     */
    loadUnitRefs?: Array<string>;
    /**
     *
     * @type {Array<ParcelItem>}
     * @memberof ParcelForCreation
     */
    items?: Array<ParcelItem>;
    /**
     *
     * @type {ConsumerAddress}
     * @memberof ParcelForCreation
     */
    recipient?: ConsumerAddress;
    /**
     *
     * @type {ConsumerAddress}
     * @memberof ParcelForCreation
     */
    invoice?: ConsumerAddress;
    /**
     *
     * @type {FacilityAddress}
     * @memberof ParcelForCreation
     */
    sender?: FacilityAddress;
    /**
     *
     * @type {FacilityAddress}
     * @memberof ParcelForCreation
     */
    returnAddress?: FacilityAddress;
    /**
     *
     * @type {PaymentInformation}
     * @memberof ParcelForCreation
     */
    paymentInformation?: PaymentInformation;
    /**
     *
     * @type {ParcelPickUpInformation}
     * @memberof ParcelForCreation
     */
    pickUpInformation?: ParcelPickUpInformation;
    /**
     * Monetary value of all goods in this parcel. Needed for sending cross border packages (customs) To be interpreted as money in the currency given under paymentInformation.currency
     * @type {number}
     * @memberof ParcelForCreation
     */
    productValue?: number;
    /**
     *
     * @type {ParcelResult}
     * @memberof ParcelForCreation
     */
    result?: ParcelResult;
    /**
     *
     * @type {Array<OperativeTransfer>}
     * @memberof ParcelForCreation
     */
    transfers?: Array<OperativeTransfer>;
}
/**
 *
 * @export
 * @interface ParcelItem
 */
export interface ParcelItem {
    /**
     * amount of the given items
     * @type {number}
     * @memberof ParcelItem
     */
    quantity: number;
    /**
     *
     * @type {string}
     * @memberof ParcelItem
     */
    hsCode?: string;
    /**
     * Description of the given item/items
     * @type {string}
     * @memberof ParcelItem
     */
    description?: string;
    /**
     * Weight of a single item in gram
     * @type {number}
     * @memberof ParcelItem
     */
    weightInGram?: number;
    /**
     *
     * @type {ParcelItemValue}
     * @memberof ParcelItem
     */
    parcelItemValue?: ParcelItemValue;
    /**
     *
     * @type {string}
     * @memberof ParcelItem
     */
    countryOfManufacture?: string;
    /**
     *
     * @type {ParcelItemArticle}
     * @memberof ParcelItem
     */
    article?: ParcelItemArticle;
}
/**
 *
 * @export
 * @interface ParcelItemArticle
 */
export interface ParcelItemArticle extends AbstractArticle {
    /**
     *
     * @type {Array<ArticleAttributeItem>}
     * @memberof ParcelItemArticle
     */
    attributes?: Array<ArticleAttributeItem>;
}
/**
 *
 * @export
 * @interface ParcelItemValue
 */
export interface ParcelItemValue {
    /**
     * Monetary Value of a single item in the given currency
     * @type {number}
     * @memberof ParcelItemValue
     */
    value: number;
    /**
     * Currency of the given value
     * @type {string}
     * @memberof ParcelItemValue
     */
    currency: string;
}
/**
 *
 * @export
 * @interface ParcelLabelClassification
 */
export interface ParcelLabelClassification {
    /**
     * Name of the parcel label classification
     * @type {string}
     * @memberof ParcelLabelClassification
     */
    name?: string;
    /**
     *
     * @type {LocaleString}
     * @memberof ParcelLabelClassification
     */
    nameLocalized: LocaleString;
    /**
     *
     * @type {ParcelLabelClassificationServices}
     * @memberof ParcelLabelClassification
     */
    services?: ParcelLabelClassificationServices;
    /**
     *
     * @type {ParcelDimensions}
     * @memberof ParcelLabelClassification
     */
    dimensions: ParcelDimensions;
}
/**
 *
 * @export
 * @interface ParcelLabelClassificationForCreation
 */
export interface ParcelLabelClassificationForCreation {
    /**
     *
     * @type {LocaleString}
     * @memberof ParcelLabelClassificationForCreation
     */
    nameLocalized: LocaleString;
    /**
     *
     * @type {ParcelLabelClassificationServices}
     * @memberof ParcelLabelClassificationForCreation
     */
    services?: ParcelLabelClassificationServices;
    /**
     *
     * @type {ParcelDimensions}
     * @memberof ParcelLabelClassificationForCreation
     */
    dimensions: ParcelDimensions;
}
/**
 *
 * @export
 * @interface ParcelLabelClassificationServices
 */
export interface ParcelLabelClassificationServices {
    /**
     *
     * @type {boolean}
     * @memberof ParcelLabelClassificationServices
     */
    bulkyGoods?: boolean;
}
/**
 *
 * @export
 * @interface ParcelPatchActions
 */
export interface ParcelPatchActions {
    /**
     *
     * @type {Array<ModifyParcelAction | ModifyParcelLoadUnitsAction>}
     * @memberof ParcelPatchActions
     */
    actions: Array<ModifyParcelAction | ModifyParcelLoadUnitsAction>;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof ParcelPatchActions
     */
    version: number;
}
/**
 *
 * @export
 * @interface ParcelPickUpInformation
 */
export interface ParcelPickUpInformation {
    /**
     * needs to be before end time
     * @type {Date}
     * @memberof ParcelPickUpInformation
     */
    startTime: Date;
    /**
     * needs to be after start time
     * @type {Date}
     * @memberof ParcelPickUpInformation
     */
    endTime: Date;
}
/**
 *
 * @export
 * @interface ParcelPostalCharge
 */
export interface ParcelPostalCharge {
    /**
     * Monetary Value in the given currency
     * @type {number}
     * @memberof ParcelPostalCharge
     */
    value: number;
    /**
     * Currency of the given value
     * @type {string}
     * @memberof ParcelPostalCharge
     */
    currency: string;
}
/**
 * Within this object you can find the result of the request after it has been processed (status = DONE or FAILED)
 * @export
 * @interface ParcelResult
 */
export interface ParcelResult {
    /**
     *
     * @type {string}
     * @memberof ParcelResult
     */
    carrierTrackingNumber?: string;
    /**
     * The URL where you can download the label relative to the path of this resource
     * @type {string}
     * @memberof ParcelResult
     */
    labelUrl?: string;
    /**
     * The ID of the corresponding job at the CEP proxy (if used)
     * @type {string}
     * @memberof ParcelResult
     */
    proxyId?: string;
    /**
     * The original return label id
     * @type {string}
     * @memberof ParcelResult
     */
    returnLabelId?: string;
    /**
     * The original return label URL
     * @type {string}
     * @memberof ParcelResult
     */
    returnLabelUrl?: string;
    /**
     * The customs document id
     * @type {string}
     * @memberof ParcelResult
     */
    customsDocumentId?: string;
    /**
     * The original customs document URL
     * @type {string}
     * @memberof ParcelResult
     */
    customsDocumentUrl?: string;
    /**
     * The original send label URL
     * @type {string}
     * @memberof ParcelResult
     */
    sendLabelUrl?: string;
    /**
     * Summary of the result of the request in a human readable form.
     * @type {string}
     * @memberof ParcelResult
     */
    summary: string;
    /**
     *
     * @type {TrackingStatus}
     * @memberof ParcelResult
     */
    trackingStatus?: TrackingStatus;
    /**
     * The URL to track this parcel
     * @type {string}
     * @memberof ParcelResult
     */
    trackingUrl?: string;
}
/**
 *
 * @export
 * @interface ParcelServices
 */
export interface ParcelServices {
    /**
     *
     * @type {boolean}
     * @memberof ParcelServices
     */
    bulkyGoods?: boolean;
    /**
     * Signature from anyone needed
     * @type {boolean}
     * @memberof ParcelServices
     */
    signature?: boolean;
    /**
     * Signature from some adult
     * @type {boolean}
     * @memberof ParcelServices
     */
    adultSignature?: boolean;
    /**
     * Signature from the ordering customer needed
     * @type {boolean}
     * @memberof ParcelServices
     */
    customerSignature?: boolean;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ParcelStatus {
    OPEN = 'OPEN',
    PROCESSING = 'PROCESSING',
    DONE = 'DONE',
    FAILED = 'FAILED',
    CANCELED = 'CANCELED',
    OBSOLETE = 'OBSOLETE',
    WAITINGFORINPUT = 'WAITING_FOR_INPUT'
}
/**
 *
 * @export
 * @interface ParcelTagConfiguration
 */
export interface ParcelTagConfiguration extends VersionedResource {
    /**
     *
     * @type {AlternativeReturnAddressConfiguration}
     * @memberof ParcelTagConfiguration
     */
    alternativeReturnAddressConfiguration: AlternativeReturnAddressConfiguration;
}
/**
 *
 * @export
 * @interface ParcelTagConfigurationForUpsert
 */
export interface ParcelTagConfigurationForUpsert {
    /**
     *
     * @type {number}
     * @memberof ParcelTagConfigurationForUpsert
     */
    version?: number;
    /**
     *
     * @type {AlternativeReturnAddressConfiguration}
     * @memberof ParcelTagConfigurationForUpsert
     */
    alternativeReturnAddressConfiguration: AlternativeReturnAddressConfiguration;
}
/**
 *
 * @export
 * @interface PartialStock
 */
export interface PartialStock extends PartialStockForCreation {
    /**
     * The date when the inventory domain comunicated a change in this partial stock
     * @type {Date}
     * @memberof PartialStock
     */
    eventLastModified?: Date;
    /**
     *
     * @type {StockInformation}
     * @memberof PartialStock
     */
    stockinformation: StockInformation;
}
/**
 *
 * @export
 * @interface PartialStockForCreation
 */
export interface PartialStockForCreation {
    /**
     * The id associated with the partial stock
     * @type {string}
     * @memberof PartialStockForCreation
     */
    tenantPartialStockId: string;
    /**
     *
     * @type {StockInformationForCreation}
     * @memberof PartialStockForCreation
     */
    stockinformation: StockInformationForCreation;
    /**
     *
     * @type {Array<Score>}
     * @memberof PartialStockForCreation
     */
    scores?: Array<Score>;
    /**
     *
     * @type {Location}
     * @memberof PartialStockForCreation
     */
    location?: Location;
}
/**
 *
 * @export
 * @interface PartialStockPatchActions
 */
export interface PartialStockPatchActions {
    /**
     *
     * @type {Array<ModifyPartialStockAction>}
     * @memberof PartialStockPatchActions
     */
    actions: Array<ModifyPartialStockAction>;
    /**
     * The version of the listing where we want to patch the partialStocks, to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof PartialStockPatchActions
     */
    version: number;
}
/**
 *
 * @export
 * @interface PartialStocksForReplacement
 */
export interface PartialStocksForReplacement {
    /**
     *
     * @type {Array<PartialStockForCreation>}
     * @memberof PartialStocksForReplacement
     */
    partialStocks: Array<PartialStockForCreation>;
    /**
     * The version of the listing where we want to put the partialStocks, to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof PartialStocksForReplacement
     */
    version: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum PauseItemReturnActionEnum {
    PauseItemReturn = 'PauseItemReturn'
}
/**
 *
 * @export
 * @interface PauseItemReturnActionParameter
 */
export interface PauseItemReturnActionParameter {
    /**
     *
     * @type {PauseItemReturnActionEnum}
     * @memberof PauseItemReturnActionParameter
     */
    name: PauseItemReturnActionEnum;
    /**
     * Version of the entity to be changed
     * @type {number}
     * @memberof PauseItemReturnActionParameter
     */
    itemReturnJobVersion: number;
}
/**
 *
 * @export
 * @interface PausePackJobAction
 */
export interface PausePackJobAction extends AbstractModificationAction {
    /**
     * Use value 'PausePackJob', because you want to pause a packjob
     * @type {string}
     * @memberof PausePackJobAction
     */
    action: PausePackJobAction.ActionEnum;
    /**
     *
     * @type {Array<PackLineItemForUpdate>}
     * @memberof PausePackJobAction
     */
    packLineItemsUpdate?: Array<PackLineItemForUpdate>;
}

/**
 * @export
 * @namespace PausePackJobAction
 */
export namespace PausePackJobAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        PausePackJob = 'PausePackJob'
    }
}
/**
 *
 * @export
 * @interface PaymentInformation
 */
export interface PaymentInformation {
    /**
     * The currency in which the consumer paid with
     * @type {string}
     * @memberof PaymentInformation
     */
    currency?: string;
}
/**
 *
 * @export
 * @interface PdfBackgroundConfiguration
 */
export interface PdfBackgroundConfiguration {
    /**
     * File url of the background image that will be used for the first page
     * @type {string}
     * @memberof PdfBackgroundConfiguration
     */
    firstPageBackgroundFileUrl?: string;
    /**
     * File url of background image that will be used for 2-n pages
     * @type {string}
     * @memberof PdfBackgroundConfiguration
     */
    followingPageBackgroundFileUrl?: string;
}
/**
 *
 * @export
 * @interface PdfBackgroundConfigurationForUpsert
 */
export interface PdfBackgroundConfigurationForUpsert {
    /**
     *
     * @type {NamedFile}
     * @memberof PdfBackgroundConfigurationForUpsert
     */
    firstPageBackgroundFile?: NamedFile;
    /**
     *
     * @type {NamedFile}
     * @memberof PdfBackgroundConfigurationForUpsert
     */
    followingPageBackgroundFile?: NamedFile;
}
/**
 *
 * @export
 * @interface PickJob
 */
export interface PickJob extends PickJobForCreation {
    /**
     * The date this entity was created at the platform. This value is generated by the service.
     * @type {Date}
     * @memberof PickJob
     */
    created?: Date;
    /**
     * The date this entity was modified last. This value is generated by the service.
     * @type {Date}
     * @memberof PickJob
     */
    lastModified?: Date;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof PickJob
     */
    version: number;
    /**
     *
     * @type {Array<UserModificationHistory>}
     * @memberof PickJob
     */
    usersModificationHistory?: Array<UserModificationHistory>;
    /**
     * Indicates if gdpr related data was anonymized
     * @type {boolean}
     * @memberof PickJob
     */
    anonymized?: boolean;
    /**
     *
     * @type {PickjobDeliveryInformation}
     * @memberof PickJob
     */
    deliveryinformation: PickjobDeliveryInformation;
    /**
     *
     * @type {Editor}
     * @memberof PickJob
     */
    editor?: Editor;
    /**
     * The id of this pickjob. It is generated during creation automatically and suits as the primary identifier of the described entity.
     * @type {string}
     * @memberof PickJob
     */
    id: string;
    /**
     *
     * @type {Array<PickLineItem>}
     * @memberof PickJob
     */
    pickLineItems: Array<PickLineItem>;
    /**
     *
     * @type {Array<ExpectedPickLineItem>}
     * @memberof PickJob
     */
    expectedPickLineItems?: Array<ExpectedPickLineItem>;
    /**
     * A short identifier that helps assigning a pickJob to a customer. This is automatically created during creation.
     * @type {string}
     * @memberof PickJob
     */
    shortId: string;
    /**
     *
     * @type {PickJobStatus}
     * @memberof PickJob
     */
    status: PickJobStatus;
    /**
     * Pick run id to which the pick job belongs
     * @type {string}
     * @memberof PickJob
     */
    pickRunRef?: string;
    /**
     *
     * @type {Array<TagReference>}
     * @memberof PickJob
     */
    tags?: Array<TagReference>;
    /**
     *
     * @type {DocumentHandling}
     * @memberof PickJob
     */
    documentHandling?: DocumentHandling;
    /**
     * Indicates if pickJob can still be resetted or restarted
     * @type {boolean}
     * @memberof PickJob
     */
    resetBlocked?: boolean;
    /**
     * Reference to the documents collection from this entity
     * @type {string}
     * @memberof PickJob
     */
    documentsRef: string;
    /**
     * The reason for the current status. Currently, only reroute reasons are supported.
     * @type {string}
     * @memberof PickJob
     */
    statusReason?: string;
    /**
     *
     * @type {Array<PickingZone>}
     * @memberof PickJob
     */
    pickingZones?: Array<PickingZone>;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum PickJobAbortActionEnum {
    ABORT = 'ABORT'
}
/**
 *
 * @export
 * @interface PickJobAbortActionParameter
 */
export interface PickJobAbortActionParameter {
    /**
     *
     * @type {PickJobAbortActionEnum}
     * @memberof PickJobAbortActionParameter
     */
    name: PickJobAbortActionEnum;
    /**
     * Version of the entity to be changed
     * @type {number}
     * @memberof PickJobAbortActionParameter
     */
    version: number;
}
/**
 *
 * @export
 * @interface PickJobActionsParameter
 */
export interface PickJobActionsParameter {
}
/**
 *
 * @export
 * @interface PickJobForCreation
 */
export interface PickJobForCreation {
    /**
     *
     * @type {string}
     * @memberof PickJobForCreation
     */
    operativeProcessRef?: string;
    /**
     * Attributes that can be added to the pickjob. These attributes cannot be used within fulfillment processes, but it could be useful to have the informations carried here.
     * @type {any}
     * @memberof PickJobForCreation
     */
    customAttributes?: any;
    /**
     *
     * @type {PickjobDeliveryInformationForCreation}
     * @memberof PickJobForCreation
     */
    deliveryinformation?: PickjobDeliveryInformationForCreation;
    /**
     * The id of the facility reference. The given ID has to be present in the system.
     * @type {string}
     * @memberof PickJobForCreation
     */
    facilityRef: string;
    /**
     * The date this order was created at the supplying system.
     * @type {Date}
     * @memberof PickJobForCreation
     */
    orderDate: Date;
    /**
     * The id of the order reference. The given ID has to be present in the system.
     * @type {string}
     * @memberof PickJobForCreation
     */
    orderRef?: string;
    /**
     *
     * @type {Array<PickLineItemForCreation>}
     * @memberof PickJobForCreation
     */
    pickLineItems: Array<PickLineItemForCreation>;
    /**
     *
     * @type {Array<ExpectedPickLineItemForCreation>}
     * @memberof PickJobForCreation
     */
    expectedPickLineItems?: Array<ExpectedPickLineItemForCreation>;
    /**
     *
     * @type {PaymentInformation}
     * @memberof PickJobForCreation
     */
    paymentInformation?: PaymentInformation;
    /**
     * Id of the global process related to this entity. For example used for starting the GDPR process and others.
     * @type {string}
     * @memberof PickJobForCreation
     */
    processId?: string;
    /**
     * A short identifier that helps assigning a pick job to a customer.
     * @type {string}
     * @memberof PickJobForCreation
     */
    shortId?: string;
    /**
     *
     * @type {PickJobStatus}
     * @memberof PickJobForCreation
     */
    status?: PickJobStatus;
    /**
     * Field can be used as a reference number in foreign systems, for example as a reference to the source system's identifier for this order.
     * @type {string}
     * @memberof PickJobForCreation
     */
    tenantOrderId?: string;
    /**
     * Tags can only be set when there is no process related with this pickJob. Setting processId and tags will lead to an validationError.
     * @type {Array<TagReference>}
     * @memberof PickJobForCreation
     */
    tags?: Array<TagReference>;
    /**
     *
     * @type {Array<Sticker>}
     * @memberof PickJobForCreation
     */
    stickers?: Array<Sticker>;
    /**
     * Reference to the routingplan which created this pickjob
     * @type {string}
     * @memberof PickJobForCreation
     */
    routingPlanRef?: string;
    /**
     * Preferred way of picking a given pickJob.
     * @type {Array<PickingMethodEnum>}
     * @memberof PickJobForCreation
     */
    preferredPickingMethods?: Array<PickingMethodEnum>;
    /**
     *
     * @type {Array<OperativeTransfer>}
     * @memberof PickJobForCreation
     */
    transfers?: Array<OperativeTransfer>;
}
/**
 *
 * @export
 * @interface PickJobLineItemPartialStockLocation
 */
export interface PickJobLineItemPartialStockLocation extends PickJobLineItemPartialStockLocationForCreation {
    /**
     *
     * @type {number}
     * @memberof PickJobLineItemPartialStockLocation
     */
    picked?: number;
    /**
     *
     * @type {boolean}
     * @memberof PickJobLineItemPartialStockLocation
     */
    stockEmptied?: boolean;
}
/**
 *
 * @export
 * @interface PickJobLineItemPartialStockLocationForCreation
 */
export interface PickJobLineItemPartialStockLocationForCreation {
    /**
     *
     * @type {string}
     * @memberof PickJobLineItemPartialStockLocationForCreation
     */
    tenantPartialStockId: string;
    /**
     * quantity of the specific article that should be picked from given stockLocation
     * @type {number}
     * @memberof PickJobLineItemPartialStockLocationForCreation
     */
    quantity?: number;
    /**
     *
     * @type {number}
     * @memberof PickJobLineItemPartialStockLocationForCreation
     */
    available?: number;
    /**
     *
     * @type {number}
     * @memberof PickJobLineItemPartialStockLocationForCreation
     */
    ratingScore?: number;
    /**
     *
     * @type {number}
     * @memberof PickJobLineItemPartialStockLocationForCreation
     */
    sequenceScore?: number;
    /**
     *
     * @type {Location}
     * @memberof PickJobLineItemPartialStockLocationForCreation
     */
    location?: Location;
    /**
     *
     * @type {PickingStockPropertyPreset | PickingStockProperty}
     * @memberof PickJobLineItemPartialStockLocationForCreation
     */
    stockProperties?: PickingStockPropertyPreset | PickingStockProperty;
}
/**
 *
 * @export
 * @interface PickJobLineItemPartialStockLocationForUpdate
 */
export interface PickJobLineItemPartialStockLocationForUpdate {
    /**
     *
     * @type {string}
     * @memberof PickJobLineItemPartialStockLocationForUpdate
     */
    tenantPartialStockId: string;
    /**
     *
     * @type {number}
     * @memberof PickJobLineItemPartialStockLocationForUpdate
     */
    picked: number;
    /**
     *
     * @type {boolean}
     * @memberof PickJobLineItemPartialStockLocationForUpdate
     */
    stockEmptied?: boolean;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum PickJobObsoleteActionEnum {
    OBSOLETE = 'OBSOLETE'
}
/**
 *
 * @export
 * @interface PickJobObsoleteActionParameter
 */
export interface PickJobObsoleteActionParameter {
    /**
     *
     * @type {PickJobObsoleteActionEnum}
     * @memberof PickJobObsoleteActionParameter
     */
    name: PickJobObsoleteActionEnum;
    /**
     * Version of the entity to be changed
     * @type {number}
     * @memberof PickJobObsoleteActionParameter
     */
    version: number;
}
/**
 * Attribute to order a pickJobs by
 * @export
 * @enum {string}
 */
export enum PickJobOrderBy {
    TARGETTIMEDESC = 'TARGET_TIME_DESC',
    TARGETTIMEASC = 'TARGET_TIME_ASC',
    LASTMODIFIEDDESC = 'LAST_MODIFIED_DESC',
    LASTMODIFIEDASC = 'LAST_MODIFIED_ASC',
    ORDERDATEDESC = 'ORDER_DATE_DESC',
    ORDERDATEASC = 'ORDER_DATE_ASC',
    LASTMODIFIEDBYUSERDESC = 'LAST_MODIFIED_BY_USER_DESC',
    LASTMODIFIEDBYUSERASC = 'LAST_MODIFIED_BY_USER_ASC'
}
/**
 *
 * @export
 * @enum {string}
 */
export enum PickJobResetActionEnum {
    RESET = 'RESET'
}
/**
 *
 * @export
 * @interface PickJobResetActionParameter
 */
export interface PickJobResetActionParameter {
    /**
     *
     * @type {PickJobResetActionEnum}
     * @memberof PickJobResetActionParameter
     */
    name: PickJobResetActionEnum;
    /**
     * Version of the entity to be changed
     * @type {number}
     * @memberof PickJobResetActionParameter
     */
    version: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum PickJobRestartActionEnum {
    RESTART = 'RESTART'
}
/**
 *
 * @export
 * @interface PickJobRestartActionParameter
 */
export interface PickJobRestartActionParameter {
    /**
     *
     * @type {PickJobRestartActionEnum}
     * @memberof PickJobRestartActionParameter
     */
    name: PickJobRestartActionEnum;
    /**
     * Version of the entity to be changed
     * @type {number}
     * @memberof PickJobRestartActionParameter
     */
    version: number;
}
/**
 * The status of a pickjob.
 * @export
 * @enum {string}
 */
export enum PickJobStatus {
    ABORTED = 'ABORTED',
    OPEN = 'OPEN',
    INPROGRESS = 'IN_PROGRESS',
    CLOSED = 'CLOSED',
    PICKED = 'PICKED',
    REROUTED = 'REROUTED',
    REJECTED = 'REJECTED',
    RESTOWED = 'RESTOWED',
    EXPIRED = 'EXPIRED',
    CANCELED = 'CANCELED',
    OBSOLETE = 'OBSOLETE',
    WAITINGFORINPUT = 'WAITING_FOR_INPUT'
}
/**
 * The status of a pickjob. These are the status that are still allowed to be used in the deprecated status field of ModifyPickJob actions
 * @export
 * @enum {string}
 */
export enum PickJobStatusUnprotected {
    OPEN = 'OPEN',
    INPROGRESS = 'IN_PROGRESS',
    CLOSED = 'CLOSED',
    PICKED = 'PICKED',
    REROUTED = 'REROUTED',
    REJECTED = 'REJECTED',
    RESTOWED = 'RESTOWED',
    EXPIRED = 'EXPIRED',
    WAITINGFORINPUT = 'WAITING_FOR_INPUT'
}
/**
 *
 * @export
 * @interface PickJobTagConfiguration
 */
export interface PickJobTagConfiguration extends VersionedResource {
    /**
     *
     * @type {StickerConfiguration}
     * @memberof PickJobTagConfiguration
     */
    stickerConfiguration?: StickerConfiguration;
    /**
     *
     * @type {StickerConfiguration}
     * @memberof PickJobTagConfiguration
     */
    lineItemStickerConfiguration?: StickerConfiguration;
    /**
     *
     * @type {TagScanningConfiguration}
     * @memberof PickJobTagConfiguration
     */
    lineItemScanningConfiguration?: TagScanningConfiguration;
    /**
     *
     * @type {PreferredPickingMethodsConfiguration}
     * @memberof PickJobTagConfiguration
     */
    preferredPickingMethodsConfiguration?: PreferredPickingMethodsConfiguration;
    /**
     * All entries with a match in their matchingValues will be combined when determining what documents belong to an entity
     * @type {Array<OfferedDocumentPerTag>}
     * @memberof PickJobTagConfiguration
     */
    offeredDocumentsPerTag: Array<OfferedDocumentPerTag>;
    /**
     * This configuration is a fallback and applies only if none of the entries in offeredDocumentsPerTag can be applied
     * @type {Array<OfferedDocument>}
     * @memberof PickJobTagConfiguration
     */
    offeredDocumentsByDefault: Array<OfferedDocument>;
}
/**
 *
 * @export
 * @interface PickLineItem
 */
export interface PickLineItem extends PickLineItemForCreation {
    /**
     * The id of this lineItem. It is generated during creation automatically and suits as the primary identifier of the described entity.
     * @type {string}
     * @memberof PickLineItem
     */
    id: string;
    /**
     * The amount of articles that were picked for this pickline.
     * @type {number}
     * @memberof PickLineItem
     */
    picked: number;
    /**
     * The secondary amount of articles that were picked for this pickline.
     * @type {number}
     * @memberof PickLineItem
     */
    secondaryPicked?: number;
    /**
     * Date when the line has been picked.
     * @type {Date}
     * @memberof PickLineItem
     */
    pickedAt?: Date;
    /**
     *
     * @type {PickLineItemStatus}
     * @memberof PickLineItem
     */
    status: PickLineItemStatus;
    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @type {Array<SubstituteLineItem>}
     * @memberof PickLineItem
     */
    substituteLineItems?: Array<SubstituteLineItem>;
    /**
     *
     * @type {boolean}
     * @memberof PickLineItem
     */
    stockEmptied?: boolean;
    /**
     * used for line items in pick runs to be split up correctly again
     * @type {string}
     * @memberof PickLineItem
     */
    pickJobLineItemRef?: string;
    /**
     * Indicates where the items to pick could be found and from where the picking should be started.
     * @type {Array<PickJobLineItemPartialStockLocation>}
     * @memberof PickLineItem
     */
    partialStockLocations?: Array<PickJobLineItemPartialStockLocation>;
    /**
     *
     * @type {Array<PickLineItemScannedCode>}
     * @memberof PickLineItem
     */
    scannedCodes?: Array<PickLineItemScannedCode>;
    /**
     *
     * @type {ScanningRuleConfiguration}
     * @memberof PickLineItem
     */
    scanningRule?: ScanningRuleConfiguration;
    /**
     *
     * @type {PickLineItemScanningRules}
     * @memberof PickLineItem
     */
    scanningRules?: PickLineItemScanningRules;
    /**
     *
     * @type {PickLineShortPickReason}
     * @memberof PickLineItem
     */
    shortPickReason?: PickLineShortPickReason;
}
/**
 *
 * @export
 * @interface PickLineItemArticle
 */
export interface PickLineItemArticle extends AbstractArticle {
    /**
     *
     * @type {Array<ArticleAttributeItem>}
     * @memberof PickLineItemArticle
     */
    attributes?: Array<ArticleAttributeItem>;
    /**
     *
     * @type {Array<ArticlePrice>}
     * @memberof PickLineItemArticle
     */
    prices?: Array<ArticlePrice>;
}
/**
 *
 * @export
 * @interface PickLineItemForCreation
 */
export interface PickLineItemForCreation {
    /**
     *
     * @type {PickLineItemArticle}
     * @memberof PickLineItemForCreation
     */
    article: PickLineItemArticle;
    /**
     * Attributes that can be added to the pick line. These attributes cannot be used within fulfillment processes, but it could be useful to have the information carried here.
     * @type {any}
     * @memberof PickLineItemForCreation
     */
    customAttributes?: any;
    /**
     * Identifier for items unit of measurement.
     * @type {string}
     * @memberof PickLineItemForCreation
     */
    measurementUnitKey?: string;
    /**
     * quantity of the specific article that has been ordered
     * @type {number}
     * @memberof PickLineItemForCreation
     */
    quantity: number;
    /**
     * Identifier for items unit of measurement.
     * @type {string}
     * @memberof PickLineItemForCreation
     */
    secondaryMeasurementUnitKey?: string;
    /**
     * quantity of the specific article that has been ordered
     * @type {number}
     * @memberof PickLineItemForCreation
     */
    secondaryQuantity?: number;
    /**
     *
     * @type {MeasurementValidation}
     * @memberof PickLineItemForCreation
     */
    measurementValidation?: MeasurementValidation;
    /**
     *
     * @type {Array<string>}
     * @memberof PickLineItemForCreation
     */
    scannableCodes?: Array<string>;
    /**
     * Indicates where the items to pick could be found and from where the picking should be started.
     * @type {Array<PickJobLineItemPartialStockLocationForCreation>}
     * @memberof PickLineItemForCreation
     */
    partialStockLocations?: Array<PickJobLineItemPartialStockLocationForCreation>;
    /**
     *
     * @type {Array<TagReference>}
     * @memberof PickLineItemForCreation
     */
    tags?: Array<TagReference>;
    /**
     *
     * @type {Array<Sticker>}
     * @memberof PickLineItemForCreation
     */
    stickers?: Array<Sticker>;
    /**
     *
     * @type {Array<Substitute>}
     * @memberof PickLineItemForCreation
     */
    allowedSubstitutes?: Array<Substitute>;
}
/**
 *
 * @export
 * @interface PickLineItemScannedCode
 */
export interface PickLineItemScannedCode {
    /**
     * scannable code i.e. barcode
     * @type {string}
     * @memberof PickLineItemScannedCode
     */
    code: string;
    /**
     * scanned quantity
     * @type {number}
     * @memberof PickLineItemScannedCode
     */
    quantity: number;
}
/**
 *
 * @export
 * @interface PickLineItemScanningRules
 */
export interface PickLineItemScanningRules {
    /**
     *
     * @type {PickingScanningConfigurationEnum}
     * @memberof PickLineItemScanningRules
     */
    scanningMode?: PickingScanningConfigurationEnum;
    /**
     *
     * @type {Array<ScanningRuleValue>}
     * @memberof PickLineItemScanningRules
     */
    scanningType?: Array<ScanningRuleValue>;
}
/**
 * A pickjob line item initially has the status OPEN and picking can start. When a line item is opened within the picking app, the item changes its status to IN_PROGRESS. When the commissioning is finished the state is CLOSED
 * @export
 * @enum {string}
 */
export enum PickLineItemStatus {
    OPEN = 'OPEN',
    INPROGRESS = 'IN_PROGRESS',
    CLOSED = 'CLOSED'
}
/**
 *
 * @export
 * @interface PickLineItemUpdate
 */
export interface PickLineItemUpdate {
    /**
     * The id of this lineItem. It is generated during creation automatically and suits as the primary identifier of the described entity.
     * @type {string}
     * @memberof PickLineItemUpdate
     */
    id: string;
    /**
     * The amount of articles that were picked for this pickline.
     * @type {number}
     * @memberof PickLineItemUpdate
     */
    picked?: number;
    /**
     * Date when the line has been picked. example: '2024-02-03T08:45:51.525Z' format: date-time type: string
     * @type {any}
     * @memberof PickLineItemUpdate
     */
    pickedAt?: any;
    /**
     * Attributes that can be added to the pick ine item. These attributes cannot be used within fulfillment processes, but it could be useful to have the informations carried here.
     * @type {any}
     * @memberof PickLineItemUpdate
     */
    customAttributes?: any;
    /**
     *
     * @type {boolean}
     * @memberof PickLineItemUpdate
     */
    stockEmptied?: boolean;
    /**
     *
     * @type {Array<Sticker>}
     * @memberof PickLineItemUpdate
     */
    stickers?: Array<Sticker>;
    /**
     *
     * @type {Array<PickJobLineItemPartialStockLocationForUpdate>}
     * @memberof PickLineItemUpdate
     */
    partialStockLocations?: Array<PickJobLineItemPartialStockLocationForUpdate>;
    /**
     * Scanned Codes of the given picked line item
     * @type {Array<PickLineItemScannedCode>}
     * @memberof PickLineItemUpdate
     */
    scannedCodes?: Array<PickLineItemScannedCode>;
    /**
     *
     * @type {PickLineItemStatus}
     * @memberof PickLineItemUpdate
     */
    status?: PickLineItemStatus;
    /**
     *
     * @type {number}
     * @memberof PickLineItemUpdate
     */
    secondaryPicked?: number;
    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @type {Array<SubstituteLineItemForCreation>}
     * @memberof PickLineItemUpdate
     */
    substituteLineItems?: Array<SubstituteLineItemForCreation>;
    /**
     *
     * @type {PickLineItemUpdateShortPickReason}
     * @memberof PickLineItemUpdate
     */
    shortPickReason?: PickLineItemUpdateShortPickReason;
}
/**
 *
 * @export
 * @interface PickLineItemUpdateShortPickReason
 */
export interface PickLineItemUpdateShortPickReason {
    /**
     *
     * @type {LocaleString}
     * @memberof PickLineItemUpdateShortPickReason
     */
    reasonLocalized?: LocaleString;
}
/**
 *
 * @export
 * @interface PickLineShortPickReason
 */
export interface PickLineShortPickReason {
    /**
     * translated reasonLocalized according to the given locale
     * @type {string}
     * @memberof PickLineShortPickReason
     */
    reason?: string;
    /**
     *
     * @type {LocaleString}
     * @memberof PickLineShortPickReason
     */
    reasonLocalized: LocaleString;
}
/**
 *
 * @export
 * @interface PickRun
 */
export interface PickRun extends VersionedResource {
    /**
     *
     * @type {Array<PickLineItem>}
     * @memberof PickRun
     */
    pickLineItems: Array<PickLineItem>;
    /**
     *
     * @type {Array<string>}
     * @memberof PickRun
     */
    pickJobRefs: Array<string>;
    /**
     *
     * @type {string}
     * @memberof PickRun
     */
    facilityRef: string;
    /**
     *
     * @type {PickRunStatus}
     * @memberof PickRun
     */
    status: PickRunStatus;
    /**
     *
     * @type {string}
     * @memberof PickRun
     */
    id: string;
    /**
     *
     * @type {Editor}
     * @memberof PickRun
     */
    editor?: Editor;
    /**
     *
     * @type {PickRunType}
     * @memberof PickRun
     */
    pickRunType?: PickRunType;
}
/**
 *
 * @export
 * @interface PickRunActionsParameter
 */
export interface PickRunActionsParameter {
}
/**
 *
 * @export
 * @enum {string}
 */
export enum PickRunCancelActionEnum {
    CANCEL = 'CANCEL'
}
/**
 *
 * @export
 * @interface PickRunCancelActionParameter
 */
export interface PickRunCancelActionParameter {
    /**
     *
     * @type {PickRunCancelActionEnum}
     * @memberof PickRunCancelActionParameter
     */
    name: PickRunCancelActionEnum;
    /**
     * Version of the entity to be changed
     * @type {number}
     * @memberof PickRunCancelActionParameter
     */
    version: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum PickRunFinishActionEnum {
    FINISH = 'FINISH'
}
/**
 *
 * @export
 * @interface PickRunFinishActionParameter
 */
export interface PickRunFinishActionParameter {
    /**
     *
     * @type {PickRunFinishActionEnum}
     * @memberof PickRunFinishActionParameter
     */
    name: PickRunFinishActionEnum;
    /**
     * Version of the entity to be changed
     * @type {number}
     * @memberof PickRunFinishActionParameter
     */
    version: number;
}
/**
 *
 * @export
 * @interface PickRunForCreation
 */
export interface PickRunForCreation {
    /**
     *
     * @type {Array<string>}
     * @memberof PickRunForCreation
     */
    pickJobRefs: Array<string>;
    /**
     *
     * @type {PickRunStatus}
     * @memberof PickRunForCreation
     */
    status?: PickRunStatus;
    /**
     *
     * @type {string}
     * @memberof PickRunForCreation
     */
    facilityRef: string;
    /**
     *
     * @type {PickRunType}
     * @memberof PickRunForCreation
     */
    pickRunType?: PickRunType;
}
/**
 *
 * @export
 * @interface PickRunPatchAction
 */
export interface PickRunPatchAction {
    /**
     *
     * @type {Array<ModifyPickRunLineItemAction | StartPickRunAction | CancelPickRunAction | FinishPickRunAction>}
     * @memberof PickRunPatchAction
     */
    actions: Array<ModifyPickRunLineItemAction | StartPickRunAction | CancelPickRunAction | FinishPickRunAction>;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof PickRunPatchAction
     */
    version: number;
}
/**
 *
 * @export
 * @interface PickRunPickJobsPatchAction
 */
export interface PickRunPickJobsPatchAction {
    /**
     *
     * @type {Array<RemovePickJobFromPickRunAction>}
     * @memberof PickRunPickJobsPatchAction
     */
    actions: Array<RemovePickJobFromPickRunAction>;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof PickRunPickJobsPatchAction
     */
    version: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum PickRunRemovePickJobActionEnum {
    REMOVEPICKJOB = 'REMOVE_PICK_JOB'
}
/**
 *
 * @export
 * @interface PickRunRemovePickJobActionParameter
 */
export interface PickRunRemovePickJobActionParameter {
    /**
     *
     * @type {PickRunRemovePickJobActionEnum}
     * @memberof PickRunRemovePickJobActionParameter
     */
    name: PickRunRemovePickJobActionEnum;
    /**
     * Version of the entity to be changed
     * @type {number}
     * @memberof PickRunRemovePickJobActionParameter
     */
    version: number;
    /**
     *
     * @type {PickRunRemovePickJobActionParameterPayload}
     * @memberof PickRunRemovePickJobActionParameter
     */
    payload: PickRunRemovePickJobActionParameterPayload;
}
/**
 *
 * @export
 * @interface PickRunRemovePickJobActionParameterPayload
 */
export interface PickRunRemovePickJobActionParameterPayload {
    /**
     *
     * @type {string}
     * @memberof PickRunRemovePickJobActionParameterPayload
     */
    pickJobId: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum PickRunStartActionEnum {
    START = 'START'
}
/**
 *
 * @export
 * @interface PickRunStartActionParameter
 */
export interface PickRunStartActionParameter {
    /**
     *
     * @type {PickRunStartActionEnum}
     * @memberof PickRunStartActionParameter
     */
    name: PickRunStartActionEnum;
    /**
     * Version of the entity to be changed
     * @type {number}
     * @memberof PickRunStartActionParameter
     */
    version: number;
}
/**
 * The state of the PickRun
 * @export
 * @enum {string}
 */
export enum PickRunStatus {
    OPEN = 'OPEN',
    INPROGRESS = 'IN_PROGRESS',
    CLOSED = 'CLOSED',
    CANCELED = 'CANCELED'
}
/**
 * Deprecated: batchPick, use batch instead Deprecated: multiOrderPick, use multiOrder instead
 * @export
 * @enum {string}
 */
export enum PickRunType {
    MultiOrderPick = 'multiOrderPick',
    MultiOrder = 'multiOrder',
    BatchPick = 'batchPick',
    Batch = 'batch'
}
/**
 *
 * @export
 * @interface PickingConfigurations
 */
export interface PickingConfigurations extends VersionedResource {
    /**
     *
     * @type {PickingShortPickConfiguration}
     * @memberof PickingConfigurations
     */
    pickingShortPickConfiguration?: PickingShortPickConfiguration;
    /**
     *
     * @type {PickingScanningConfiguration}
     * @memberof PickingConfigurations
     */
    scanningConfiguration?: PickingScanningConfiguration;
    /**
     *
     * @type {PickingScanCodeValidationConfiguration}
     * @memberof PickingConfigurations
     */
    scanCodeValidationConfiguration?: PickingScanCodeValidationConfiguration;
    /**
     *
     * @type {TakeOverPickJobConfiguration}
     * @memberof PickingConfigurations
     */
    takeOverPickJobConfiguration?: TakeOverPickJobConfiguration;
    /**
     *
     * @type {LoadUnitAssignmentConfiguration}
     * @memberof PickingConfigurations
     */
    loadUnitAssignmentConfiguration?: LoadUnitAssignmentConfiguration;
    /**
     *
     * @type {PickingMethodsConfiguration}
     * @memberof PickingConfigurations
     */
    pickingMethodsConfiguration?: PickingMethodsConfiguration;
    /**
     *
     * @type {RestartPickJobConfiguration}
     * @memberof PickingConfigurations
     */
    restartPickJobConfiguration?: RestartPickJobConfiguration;
    /**
     *
     * @type {PickingStockUpdateConfiguration}
     * @memberof PickingConfigurations
     */
    stockUpdateConfiguration?: PickingStockUpdateConfiguration;
    /**
     *
     * @type {BackofficePickingConfiguration}
     * @memberof PickingConfigurations
     */
    backofficePickingConfiguration?: BackofficePickingConfiguration;
}
/**
 *
 * @export
 * @interface PickingLoadUnit
 */
export interface PickingLoadUnit extends VersionedResource {
    /**
     *
     * @type {Array<string>}
     * @memberof PickingLoadUnit
     */
    codes: Array<string>;
    /**
     *
     * @type {string}
     * @memberof PickingLoadUnit
     */
    loadUnitTypeRef: string;
    /**
     *
     * @type {Array<LoadUnitLineItem>}
     * @memberof PickingLoadUnit
     */
    loadUnitLineItems?: Array<LoadUnitLineItem>;
    /**
     * Attributes that can be added to the PickingLoadUnit. These attributes cannot be used within fulfillment processes, but it could be useful to have the informations carried here.
     * @type {any}
     * @memberof PickingLoadUnit
     */
    customAttributes?: any;
    /**
     *
     * @type {string}
     * @memberof PickingLoadUnit
     */
    description?: string;
    /**
     *
     * @type {LocaleString}
     * @memberof PickingLoadUnit
     */
    descriptionLocalized?: LocaleString;
    /**
     * The id of the facility reference. The given ID has to be present in the system. But it is not updatable via PUT request
     * @type {string}
     * @memberof PickingLoadUnit
     */
    facilityRef: string;
    /**
     *
     * @type {string}
     * @memberof PickingLoadUnit
     */
    iconUrl?: string;
    /**
     *
     * @type {string}
     * @memberof PickingLoadUnit
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof PickingLoadUnit
     */
    name?: string;
    /**
     *
     * @type {LocaleString}
     * @memberof PickingLoadUnit
     */
    nameLocalized: LocaleString;
}
/**
 *
 * @export
 * @interface PickingLoadUnitForCreation
 */
export interface PickingLoadUnitForCreation {
    /**
     *
     * @type {Array<string>}
     * @memberof PickingLoadUnitForCreation
     */
    codes: Array<string>;
    /**
     *
     * @type {string}
     * @memberof PickingLoadUnitForCreation
     */
    loadUnitTypeRef: string;
    /**
     *
     * @type {Array<LoadUnitLineItemForCreation>}
     * @memberof PickingLoadUnitForCreation
     */
    loadUnitLineItems?: Array<LoadUnitLineItemForCreation>;
    /**
     * Attributes that can be added to the PickingLoadUnit. These attributes cannot be used within fulfillment processes, but it could be useful to have the informations carried here.
     * @type {any}
     * @memberof PickingLoadUnitForCreation
     */
    customAttributes?: any;
}
/**
 * Way in which the picking should be handled Deprecated: BATCH_PICKING, use BATCH instead
 * @export
 * @enum {string}
 */
export enum PickingMethodEnum {
    SINGLEORDER = 'SINGLE_ORDER',
    MULTIORDER = 'MULTI_ORDER',
    BATCHPICKING = 'BATCH_PICKING',
    BATCH = 'BATCH'
}
/**
 *
 * @export
 * @interface PickingMethodsConfiguration
 */
export interface PickingMethodsConfiguration {
    /**
     *
     * @type {PickingMethodEnum}
     * @memberof PickingMethodsConfiguration
     */
    defaultPickingMethod: PickingMethodEnum;
}
/**
 *
 * @export
 * @interface PickingPatchActions
 */
export interface PickingPatchActions {
    /**
     *
     * @type {Array<ModifyPickLineItemAction | ModifyPickJobAction | ModifyPickJobLastEditorAction | RestartPickJobAction | ResetPickJobAction | AbortPickJobAction>}
     * @memberof PickingPatchActions
     */
    actions: Array<ModifyPickLineItemAction | ModifyPickJobAction | ModifyPickJobLastEditorAction | RestartPickJobAction | ResetPickJobAction | AbortPickJobAction>;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof PickingPatchActions
     */
    version: number;
}
/**
 *
 * @export
 * @interface PickingScanCodeValidationConfiguration
 */
export interface PickingScanCodeValidationConfiguration {
    /**
     *
     * @type {PickingScanCodeValidationEnum}
     * @memberof PickingScanCodeValidationConfiguration
     */
    pickingScanCodeValidationType: PickingScanCodeValidationEnum;
}
/**
 * State that defines if unknown scan codes can be accepted
 * @export
 * @enum {string}
 */
export enum PickingScanCodeValidationEnum {
    NOVALIDATION = 'NO_VALIDATION',
    CODEMUSTBEKNOWN = 'CODE_MUST_BE_KNOWN'
}
/**
 *
 * @export
 * @interface PickingScanningConfiguration
 */
export interface PickingScanningConfiguration {
    /**
     *
     * @type {PickingScanningConfigurationEnum}
     * @memberof PickingScanningConfiguration
     */
    scanningType?: PickingScanningConfigurationEnum;
    /**
     *
     * @type {ScanningRuleConfiguration}
     * @memberof PickingScanningConfiguration
     */
    scanningRule?: ScanningRuleConfiguration;
    /**
     *
     * @type {Array<UserRoleNames>}
     * @memberof PickingScanningConfiguration
     */
    rolesWithOverwritingScanningPermission?: Array<UserRoleNames>;
}
/**
 * Way in which the scanning of articles during picking is enforced
 * @export
 * @enum {string}
 */
export enum PickingScanningConfigurationEnum {
    MUSTSCANFIRST = 'MUST_SCAN_FIRST',
    MUSTSCANEACH = 'MUST_SCAN_EACH',
    SCANNOTREQUIRED = 'SCAN_NOT_REQUIRED'
}
/**
 *
 * @export
 * @interface PickingShortPickConfiguration
 */
export interface PickingShortPickConfiguration {
    /**
     * Does the picker needs to confirm a stock correction before adding a short pick
     * @type {boolean}
     * @memberof PickingShortPickConfiguration
     */
    confirmationOnShortPick: boolean;
    /**
     *
     * @type {Array<ShortPickReason>}
     * @memberof PickingShortPickConfiguration
     */
    shortPickReasons?: Array<ShortPickReason>;
}
/**
 *
 * @export
 * @interface PickingStockProperty
 */
export interface PickingStockProperty {
    [key: string]: string;

}
/**
 *
 * @export
 * @interface PickingStockPropertyPreset
 */
export interface PickingStockPropertyPreset {
    /**
     *
     * @type {string}
     * @memberof PickingStockPropertyPreset
     */
    expiry?: string;
}
/**
 *
 * @export
 * @interface PickingStockUpdateConfiguration
 */
export interface PickingStockUpdateConfiguration {
    /**
     * Enable or disable stock update check for pick jobs
     * @type {boolean}
     * @memberof PickingStockUpdateConfiguration
     */
    active: boolean;
}
/**
 * There must be no overlaps for time ranges on a day
 * @export
 * @interface PickingTimes
 */
export interface PickingTimes {
    /**
     *
     * @type {Array<TimeRange>}
     * @memberof PickingTimes
     */
    friday?: Array<TimeRange>;
    /**
     *
     * @type {Array<TimeRange>}
     * @memberof PickingTimes
     */
    monday?: Array<TimeRange>;
    /**
     *
     * @type {Array<TimeRange>}
     * @memberof PickingTimes
     */
    saturday?: Array<TimeRange>;
    /**
     *
     * @type {Array<TimeRange>}
     * @memberof PickingTimes
     */
    sunday?: Array<TimeRange>;
    /**
     *
     * @type {Array<TimeRange>}
     * @memberof PickingTimes
     */
    thursday?: Array<TimeRange>;
    /**
     *
     * @type {Array<TimeRange>}
     * @memberof PickingTimes
     */
    tuesday?: Array<TimeRange>;
    /**
     *
     * @type {Array<TimeRange>}
     * @memberof PickingTimes
     */
    wednesday?: Array<TimeRange>;
}
/**
 * Zones from which items can be picked
 * @export
 * @interface PickingZone
 */
export interface PickingZone {
    /**
     *
     * @type {string}
     * @memberof PickingZone
     */
    zoneRef: string;
}
/**
 *
 * @export
 * @interface PickjobAbortedWebHookEvent
 */
export interface PickjobAbortedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {PickJob}
     * @memberof PickjobAbortedWebHookEvent
     */
    payload: PickJob;
}
/**
 *
 * @export
 * @interface PickjobCanceledWebHookEvent
 */
export interface PickjobCanceledWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {PickJob}
     * @memberof PickjobCanceledWebHookEvent
     */
    payload: PickJob;
}
/**
 *
 * @export
 * @interface PickjobCreatedWebHookEvent
 */
export interface PickjobCreatedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {PickJob}
     * @memberof PickjobCreatedWebHookEvent
     */
    payload: PickJob;
}
/**
 *
 * @export
 * @interface PickjobDeliveryInformation
 */
export interface PickjobDeliveryInformation extends PickjobDeliveryInformationForCreation {
}

/**
 * @export
 * @namespace PickjobDeliveryInformation
 */
export namespace PickjobDeliveryInformation {
}
/**
 *
 * @export
 * @interface PickjobDeliveryInformationForCreation
 */
export interface PickjobDeliveryInformationForCreation {
    /**
     *
     * @type {string}
     * @memberof PickjobDeliveryInformationForCreation
     */
    channel?: PickjobDeliveryInformationForCreation.ChannelEnum;
    /**
     *
     * @type {PickjobDeliveryInformationForCreationDetails}
     * @memberof PickjobDeliveryInformationForCreation
     */
    details?: PickjobDeliveryInformationForCreationDetails;
    /**
     * At which time the result is expected.
     * @type {Date}
     * @memberof PickjobDeliveryInformationForCreation
     */
    targetTime?: Date;
    /**
     * The start date for the targetTime calculation.
     * @type {Date}
     * @memberof PickjobDeliveryInformationForCreation
     */
    targetTimeBaseDate?: Date;
}

/**
 * @export
 * @namespace PickjobDeliveryInformationForCreation
 */
export namespace PickjobDeliveryInformationForCreation {
    /**
     * @export
     * @enum {string}
     */
    export enum ChannelEnum {
        COLLECT = 'COLLECT',
        SHIPPING = 'SHIPPING'
    }
}
/**
 *
 * @export
 * @interface PickjobDeliveryInformationForCreationDetails
 */
export interface PickjobDeliveryInformationForCreationDetails {
    /**
     *
     * @type {PickjobDeliveryInformationForCreationDetailsCollect}
     * @memberof PickjobDeliveryInformationForCreationDetails
     */
    collect?: PickjobDeliveryInformationForCreationDetailsCollect;
    /**
     *
     * @type {PickjobDeliveryInformationForCreationDetailsShipping}
     * @memberof PickjobDeliveryInformationForCreationDetails
     */
    shipping?: PickjobDeliveryInformationForCreationDetailsShipping;
}
/**
 *
 * @export
 * @interface PickjobDeliveryInformationForCreationDetailsCollect
 */
export interface PickjobDeliveryInformationForCreationDetailsCollect {
    /**
     * Includes information about Click & Collect recipient
     * @type {string}
     * @memberof PickjobDeliveryInformationForCreationDetailsCollect
     */
    identifier?: string;
    /**
     * Indicates if the order is already paid.
     * @type {boolean}
     * @memberof PickjobDeliveryInformationForCreationDetailsCollect
     */
    paid?: boolean;
}
/**
 *
 * @export
 * @interface PickjobDeliveryInformationForCreationDetailsShipping
 */
export interface PickjobDeliveryInformationForCreationDetailsShipping {
    /**
     *
     * @type {string}
     * @memberof PickjobDeliveryInformationForCreationDetailsShipping
     */
    carrierKey?: string;
    /**
     * Desired product of given carrier to choose when ordering a label
     * @type {string}
     * @memberof PickjobDeliveryInformationForCreationDetailsShipping
     */
    carrierProduct?: string;
    /**
     *
     * @type {Array<CarrierServices>}
     * @memberof PickjobDeliveryInformationForCreationDetailsShipping
     */
    carrierServices?: Array<CarrierServices>;
    /**
     * Includes information on how to identify Ship from Store recipient (Name, PIN, Reference number, ...)
     * @type {string}
     * @memberof PickjobDeliveryInformationForCreationDetailsShipping
     */
    identifier?: string;
    /**
     *
     * @type {ConsumerAddress}
     * @memberof PickjobDeliveryInformationForCreationDetailsShipping
     */
    recipientaddress?: ConsumerAddress;
    /**
     *
     * @type {ConsumerAddress}
     * @memberof PickjobDeliveryInformationForCreationDetailsShipping
     */
    invoiceAddress?: ConsumerAddress;
    /**
     *
     * @type {ConsumerAddress}
     * @memberof PickjobDeliveryInformationForCreationDetailsShipping
     */
    postalAddress?: ConsumerAddress;
    /**
     * TBD
     * @type {string}
     * @memberof PickjobDeliveryInformationForCreationDetailsShipping
     */
    serviceLevel?: PickjobDeliveryInformationForCreationDetailsShipping.ServiceLevelEnum;
}

/**
 * @export
 * @namespace PickjobDeliveryInformationForCreationDetailsShipping
 */
export namespace PickjobDeliveryInformationForCreationDetailsShipping {
    /**
     * @export
     * @enum {string}
     */
    export enum ServiceLevelEnum {
        DELIVERY = 'DELIVERY',
        SAMEDAY = 'SAMEDAY'
    }
}
/**
 *
 * @export
 * @interface PickjobPickLinePickedWebHookEvent
 */
export interface PickjobPickLinePickedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {PickLineItem}
     * @memberof PickjobPickLinePickedWebHookEvent
     */
    payload: PickLineItem;
    /**
     *
     * @type {string}
     * @memberof PickjobPickLinePickedWebHookEvent
     */
    pickJobRef: string;
}
/**
 *
 * @export
 * @interface PickjobPickingCommencedWebHookEvent
 */
export interface PickjobPickingCommencedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {PickJob}
     * @memberof PickjobPickingCommencedWebHookEvent
     */
    payload: PickJob;
}
/**
 *
 * @export
 * @interface PickjobPickingFinishedWebHookEvent
 */
export interface PickjobPickingFinishedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {PickJob}
     * @memberof PickjobPickingFinishedWebHookEvent
     */
    payload: PickJob;
}
/**
 *
 * @export
 * @interface PickjobPickingPausedWebHookEvent
 */
export interface PickjobPickingPausedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {PickJob}
     * @memberof PickjobPickingPausedWebHookEvent
     */
    payload: PickJob;
}
/**
 *
 * @export
 * @interface PostNLCarrierCredentials
 */
export interface PostNLCarrierCredentials extends AbstractCarrierCredentials {
    /**
     * PostNL API Key
     * @type {string}
     * @memberof PostNLCarrierCredentials
     */
    apiKey: string;
}
/**
 *
 * @export
 * @interface PostNLFacilityCarrierConfiguration
 */
export interface PostNLFacilityCarrierConfiguration extends AbstractFacilityCarrierConfiguration {
    /**
     *
     * @type {string}
     * @memberof PostNLFacilityCarrierConfiguration
     */
    customerId: string;
    /**
     *
     * @type {string}
     * @memberof PostNLFacilityCarrierConfiguration
     */
    customerCode: string;
    /**
     *
     * @type {string}
     * @memberof PostNLFacilityCarrierConfiguration
     */
    trackAndTraceUrl?: string;
}
/**
 *
 * @export
 * @interface PostNlCarrierConfiguration
 */
export interface PostNlCarrierConfiguration extends CarrierConfiguration {
    /**
     *
     * @type {string}
     * @memberof PostNlCarrierConfiguration
     */
    trackAndTraceUrl?: string;
}
/**
 *
 * @export
 * @interface PostalCodeValidation
 */
export interface PostalCodeValidation {
    /**
     * Country in Format [A-Z]{2}
     * @type {string}
     * @memberof PostalCodeValidation
     */
    country: string;
    /**
     * Postal code for validation
     * @type {string}
     * @memberof PostalCodeValidation
     */
    postalCode: string;
}
/**
 * Keys of the preferred carriers to handle out the order
 * @export
 */
export type PreferredCarrier = string
/**
 *
 * @export
 * @interface PreferredCarrierWithProduct
 */
export interface PreferredCarrierWithProduct {
    /**
     *
     * @type {string}
     * @memberof PreferredCarrierWithProduct
     */
    carrierKey: string;
    /**
     *
     * @type {string}
     * @memberof PreferredCarrierWithProduct
     */
    carrierProduct?: string;
    /**
     *
     * @type {Array<CarrierServices>}
     * @memberof PreferredCarrierWithProduct
     */
    carrierServices?: Array<CarrierServices>;
}
/**
 *
 * @export
 * @interface PreferredPickingMethodsConfiguration
 */
export interface PreferredPickingMethodsConfiguration {
    /**
     *
     * @type {Array<PreferredPickingMethodsPerTag>}
     * @memberof PreferredPickingMethodsConfiguration
     */
    preferredPickingMethodsPerTag?: Array<PreferredPickingMethodsPerTag>;
}
/**
 *
 * @export
 * @interface PreferredPickingMethodsPerTag
 */
export interface PreferredPickingMethodsPerTag {
    /**
     *
     * @type {string}
     * @memberof PreferredPickingMethodsPerTag
     */
    tagRef: string;
    /**
     *
     * @type {Array<string>}
     * @memberof PreferredPickingMethodsPerTag
     */
    matchingValues: Array<string>;
    /**
     *
     * @type {Array<PickingMethodEnum>}
     * @memberof PreferredPickingMethodsPerTag
     */
    pickingMethods: Array<PickingMethodEnum>;
}
/**
 *
 * @export
 * @interface PreselectedFacility
 */
export interface PreselectedFacility {
    /**
     * Reference to the facility which is supposed to fulfill the order
     * @type {string}
     * @memberof PreselectedFacility
     */
    facilityRef: string;
}
/**
 *
 * @export
 * @interface PrintableDocument
 */
export interface PrintableDocument {
    /**
     *
     * @type {string}
     * @memberof PrintableDocument
     */
    id: string;
    /**
     *
     * @type {DocumentType}
     * @memberof PrintableDocument
     */
    documentType: DocumentType;
    /**
     *
     * @type {DocumentCategory}
     * @memberof PrintableDocument
     */
    documentCategory: DocumentCategory;
    /**
     *
     * @type {DocumentStatus}
     * @memberof PrintableDocument
     */
    status: DocumentStatus;
    /**
     * Offered operations for this document
     * @type {Array<DocumentOperations>}
     * @memberof PrintableDocument
     */
    operations?: Array<DocumentOperations>;
    /**
     *
     * @type {string}
     * @memberof PrintableDocument
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof PrintableDocument
     */
    path?: string;
    /**
     *
     * @type {number}
     * @memberof PrintableDocument
     */
    priority?: number;
}
/**
 *
 * @export
 * @interface PrintableDocumentForUpdate
 */
export interface PrintableDocumentForUpdate {
    /**
     * Version of the documentSet you want to update a document of
     * @type {number}
     * @memberof PrintableDocumentForUpdate
     */
    version: number;
    /**
     * Sorting display order of document
     * @type {number}
     * @memberof PrintableDocumentForUpdate
     */
    priority?: number;
    /**
     * Offered operations for this document
     * @type {Array<DocumentOperations>}
     * @memberof PrintableDocumentForUpdate
     */
    operations?: Array<DocumentOperations>;
}
/**
 * You can select a default Prioritization Rule from the catalog. When you decide to select 'CUSTOM' you must also provide a vmExpression to match the type CustomPrioritizationRule.
 * @export
 * @interface PrioritizationRule
 */
export interface PrioritizationRule {
    /**
     *
     * @type {boolean}
     * @memberof PrioritizationRule
     */
    active: boolean;
    /**
     * This value identifies this very instance of the prioritization rule. It is set autmatically by the server when the configuration is updated.
     * @type {string}
     * @memberof PrioritizationRule
     */
    id?: string;
    /**
     *
     * @type {PrioritizationRuleImplementation}
     * @memberof PrioritizationRule
     */
    implementation: PrioritizationRuleImplementation;
    /**
     *
     * @type {string}
     * @memberof PrioritizationRule
     */
    name: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum PrioritizationRuleImplementation {
    CUSTOM = 'CUSTOM'
}
/**
 *
 * @export
 * @interface Process
 */
export interface Process extends VersionedResource {
    /**
     *
     * @type {Array<TagReference>}
     * @memberof Process
     */
    tags?: Array<TagReference>;
    /**
     * This field references all IDs of any entity connected to this process.
     * @type {Array<string>}
     * @memberof Process
     */
    flatRefs?: Array<string>;
    /**
     * The date that defines when the entities will be or have been anonymized.
     * @type {Date}
     * @memberof Process
     */
    gdprCleanupDate: Date;
    /**
     * The date that defines when the entities will be or have been deleted.
     * @type {Date}
     * @memberof Process
     */
    deletionDate?: Date;
    /**
     * References to Handoverjobs connected to this process (if present).
     * @type {Array<string>}
     * @memberof Process
     */
    handoverJobRefs?: Array<string>;
    /**
     * ID of this process
     * @type {string}
     * @memberof Process
     */
    id: string;
    /**
     * Indicates if the entities have been anonymized.
     * @type {boolean}
     * @memberof Process
     */
    isAnonymized?: boolean;
    /**
     * References to the Order connected to this process (if present).
     * @type {string}
     * @memberof Process
     */
    orderRef?: string;
    /**
     * References the RoutingPlans that were used during this process (if present).
     * @type {Array<string>}
     * @memberof Process
     */
    routingPlanRefs?: Array<string>;
    /**
     * References to the Pickjobs connected to this process (if present).
     * @type {Array<string>}
     * @memberof Process
     */
    pickJobRefs?: Array<string>;
    /**
     * References to the Returns connected to this process (if present).
     * @type {Array<string>}
     * @memberof Process
     */
    returnRefs?: Array<string>;
    /**
     * References to the Item Return Job connected to this process (if present).
     * @type {Array<string>}
     * @memberof Process
     */
    itemReturnJobsRef?: Array<string>;
    /**
     * References to the Shipments connected to this process (if present).
     * @type {Array<string>}
     * @memberof Process
     */
    shipmentRefs?: Array<string>;
    /**
     * The tenantOrderId referencing this process.
     * @type {string}
     * @memberof Process
     */
    tenantOrderId?: string;
    /**
     * References to documents that are attached to this process.
     * @type {Array<string>}
     * @memberof Process
     */
    documentRefs?: Array<string>;
    /**
     *
     * @type {ProcessStatus}
     * @memberof Process
     */
    status?: ProcessStatus;
    /**
     *
     * @type {ProcessStatus}
     * @memberof Process
     */
    domsStatus?: ProcessStatus;
    /**
     *
     * @type {ProcessStatus}
     * @memberof Process
     */
    operativeStatus?: ProcessStatus;
    /**
     *
     * @type {ProcessStatus}
     * @memberof Process
     */
    returnStatus?: ProcessStatus;
    /**
     * Overview of the different domain adherent status of the process.
     * @type {{ [key: string]: DomainStatus; }}
     * @memberof Process
     */
    domainStatuses?: { [key: string]: DomainStatus; };
    /**
     * The last domain statuses of each domain
     * @type {Array<LastDomainEntityStatusItem>}
     * @memberof Process
     */
    lastDomainEntityStatuses?: Array<LastDomainEntityStatusItem>;
    /**
     * References of the Packjobs connected to this process (if present).
     * @type {Array<string>}
     * @memberof Process
     */
    packJobRefs?: Array<string>;
    /**
     * References of the Facilities connected to this process (if any).
     * @type {Array<string>}
     * @memberof Process
     */
    facilityRefs?: Array<string>;
    /**
     * History of process status changes caused by changes on the related domains.
     * @type {Array<DomainStatusHistoryItem>}
     * @memberof Process
     */
    domainStatusHistory?: Array<DomainStatusHistoryItem>;
    /**
     * References to the Service Jobs connected to this process (if present).
     * @type {Array<string>}
     * @memberof Process
     */
    serviceJobRefs?: Array<string>;
    /**
     * References to the external actions connected to this process (if any).
     * @type {Array<string>}
     * @memberof Process
     */
    externalActionRefs?: Array<string>;
}
/**
 *
 * @export
 * @interface ProcessPatchActions
 */
export interface ProcessPatchActions {
    /**
     *
     * @type {Array<AddTagsToProcessAction | AssignFacilityToProcessAction>}
     * @memberof ProcessPatchActions
     */
    actions: Array<AddTagsToProcessAction | AssignFacilityToProcessAction>;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof ProcessPatchActions
     */
    version: number;
}
/**
 *
 * @export
 * @interface ProcessProgressLog
 */
export interface ProcessProgressLog extends VersionedResource {
    /**
     *
     * @type {string}
     * @memberof ProcessProgressLog
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof ProcessProgressLog
     */
    processRef: string;
    /**
     *
     * @type {DomainStatus}
     * @memberof ProcessProgressLog
     */
    domainEntityProcessStatus: DomainStatus;
    /**
     *
     * @type {DomainType}
     * @memberof ProcessProgressLog
     */
    domain: DomainType;
    /**
     *
     * @type {string}
     * @memberof ProcessProgressLog
     */
    domainRef: string;
    /**
     *
     * @type {string}
     * @memberof ProcessProgressLog
     */
    domainStatus: string;
    /**
     * The last modified date of the related domain entity
     * @type {Date}
     * @memberof ProcessProgressLog
     */
    domainLastModified?: Date;
    /**
     * The version of the related domain entity
     * @type {number}
     * @memberof ProcessProgressLog
     */
    domainVersion: number;
    /**
     *
     * @type {any}
     * @memberof ProcessProgressLog
     */
    attributes?: any;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ProcessStatus {
    CREATED = 'CREATED',
    INPROGRESS = 'IN_PROGRESS',
    FINISHED = 'FINISHED',
    CANCELED = 'CANCELED',
    ERROR = 'ERROR',
    NOTAVAILABLE = 'NOT_AVAILABLE'
}
/**
 *
 * @export
 * @interface Processes
 */
export interface Processes {
    /**
     *
     * @type {Array<Process>}
     * @memberof Processes
     */
    processes?: Array<Process>;
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof Processes
     */
    total?: number;
}
/**
 *
 * @export
 * @interface ProductInformation
 */
export interface ProductInformation {
    /**
     * The name of the product used by the carrier
     * @type {string}
     * @memberof ProductInformation
     */
    productName?: string;
    /**
     *
     * @type {Array<MandatoryShippingAttribute>}
     * @memberof ProductInformation
     */
    mandatoryShippingAttributes?: Array<MandatoryShippingAttribute>;
    /**
     *
     * @type {Array<MandatoryShippingItemAttribute>}
     * @memberof ProductInformation
     */
    mandatoryShippingItemAttributes?: Array<MandatoryShippingItemAttribute>;
}
/**
 *
 * @export
 * @interface PromiseCarrier
 */
export interface PromiseCarrier {
    /**
     *
     * @type {string}
     * @memberof PromiseCarrier
     */
    carrierKey: string;
    /**
     *
     * @type {string}
     * @memberof PromiseCarrier
     */
    carrierName: string;
    /**
     *
     * @type {Array<PromiseDeliveryOptions>}
     * @memberof PromiseCarrier
     */
    products: Array<PromiseDeliveryOptions>;
    /**
     *
     * @type {Date}
     * @memberof PromiseCarrier
     */
    deliveryPromiseValidUntil?: Date;
    /**
     *
     * @type {Date}
     * @memberof PromiseCarrier
     */
    latestPickingStart?: Date;
}
/**
 *
 * @export
 * @interface PromiseConfirmActionParameter
 */
export interface PromiseConfirmActionParameter extends AbstractOrderActionsParameter {
    /**
     *
     * @type {string}
     * @memberof PromiseConfirmActionParameter
     */
    name: PromiseConfirmActionParameter.NameEnum;
}

/**
 * @export
 * @namespace PromiseConfirmActionParameter
 */
export namespace PromiseConfirmActionParameter {
    /**
     * @export
     * @enum {string}
     */
    export enum NameEnum {
        CONFIRMPROMISE = 'CONFIRM_PROMISE'
    }
}
/**
 *
 * @export
 * @interface PromiseDeliveryOptions
 */
export interface PromiseDeliveryOptions {
    /**
     *
     * @type {CarrierProductCategory}
     * @memberof PromiseDeliveryOptions
     */
    carrierProductCategory: CarrierProductCategory;
    /**
     *
     * @type {CarrierTransitTime}
     * @memberof PromiseDeliveryOptions
     */
    transitTime?: CarrierTransitTime;
    /**
     *
     * @type {EstimatedDeliveryTime}
     * @memberof PromiseDeliveryOptions
     */
    estimatedDeliveryTime?: EstimatedDeliveryTime;
    /**
     *
     * @type {Array<DeliveryCost>}
     * @memberof PromiseDeliveryOptions
     */
    deliveryCosts: Array<DeliveryCost>;
}
/**
 *
 * @export
 * @interface PromiseExtendActionParameter
 */
export interface PromiseExtendActionParameter extends AbstractOrderActionsParameter {
    /**
     *
     * @type {string}
     * @memberof PromiseExtendActionParameter
     */
    name: PromiseExtendActionParameter.NameEnum;
}

/**
 * @export
 * @namespace PromiseExtendActionParameter
 */
export namespace PromiseExtendActionParameter {
    /**
     * @export
     * @enum {string}
     */
    export enum NameEnum {
        EXTENDPROMISE = 'EXTEND_PROMISE'
    }
}
/**
 *
 * @export
 * @interface PromisesConfiguration
 */
export interface PromisesConfiguration extends VersionedResource {
    /**
     * Default amount of time in ISO 8601 duration format after which an promised order becomes invalid and is cancelled. The duration need to be a multiple of 60 seconds.
     * @type {string}
     * @memberof PromisesConfiguration
     */
    invalidAfterTime: string;
    /**
     *
     * @type {string}
     * @memberof PromisesConfiguration
     */
    id?: string;
}
/**
 *
 * @export
 * @interface PurchaseOrder
 */
export interface PurchaseOrder {
    /**
     *
     * @type {string}
     * @memberof PurchaseOrder
     */
    id: string;
    /**
     *
     * @type {Date}
     * @memberof PurchaseOrder
     */
    created: Date;
    /**
     *
     * @type {Date}
     * @memberof PurchaseOrder
     */
    lastModified: Date;
    /**
     *
     * @type {Date}
     * @memberof PurchaseOrder
     */
    orderDate: Date;
    /**
     *
     * @type {RequestedDate}
     * @memberof PurchaseOrder
     */
    requestedDate: RequestedDate;
    /**
     *
     * @type {Array<InboundLineItem>}
     * @memberof PurchaseOrder
     */
    requestedItems: Array<InboundLineItem>;
    /**
     *
     * @type {string}
     * @memberof PurchaseOrder
     */
    status: PurchaseOrder.StatusEnum;
    /**
     *
     * @type {boolean}
     * @memberof PurchaseOrder
     */
    cancelled: boolean;
    /**
     *
     * @type {InboundProcessPurchaseOrderSupplier}
     * @memberof PurchaseOrder
     */
    supplier?: InboundProcessPurchaseOrderSupplier;
    /**
     *
     * @type {InboundProcessPurchaseOrderTransfer}
     * @memberof PurchaseOrder
     */
    transfer?: InboundProcessPurchaseOrderTransfer;
    /**
     * Attributes that can be added to this entity. These attributes **cannot** be used within fulfillment processes, but enable you to attach custom data from your systems to fulfillmenttools entities.
     * @type {any}
     * @memberof PurchaseOrder
     */
    customAttributes?: any;
    /**
     *
     * @type {number}
     * @memberof PurchaseOrder
     */
    version: number;
    /**
     *
     * @type {string}
     * @memberof PurchaseOrder
     */
    facilityRef: string;
    /**
     *
     * @type {string}
     * @memberof PurchaseOrder
     */
    inboundProcessRef: string;
}

/**
 * @export
 * @namespace PurchaseOrder
 */
export namespace PurchaseOrder {
    /**
     * @export
     * @enum {string}
     */
    export enum StatusEnum {
        OPEN = 'OPEN'
    }
}
/**
 *
 * @export
 * @interface PurchaseOrderForCreation
 */
export interface PurchaseOrderForCreation {
    /**
     *
     * @type {Date}
     * @memberof PurchaseOrderForCreation
     */
    orderDate: Date;
    /**
     *
     * @type {InputRequestedDate}
     * @memberof PurchaseOrderForCreation
     */
    requestedDate: InputRequestedDate;
    /**
     *
     * @type {Array<InboundLineItem>}
     * @memberof PurchaseOrderForCreation
     */
    requestedItems: Array<InboundLineItem>;
    /**
     *
     * @type {string}
     * @memberof PurchaseOrderForCreation
     */
    status?: PurchaseOrderForCreation.StatusEnum;
    /**
     *
     * @type {boolean}
     * @memberof PurchaseOrderForCreation
     */
    cancelled?: boolean;
    /**
     *
     * @type {InboundProcessPurchaseOrderSupplier}
     * @memberof PurchaseOrderForCreation
     */
    supplier?: InboundProcessPurchaseOrderSupplier;
    /**
     * Attributes that can be added to this entity. These attributes **cannot** be used within fulfillment processes, but enable you to attach custom data from your systems to fulfillmenttools entities.
     * @type {any}
     * @memberof PurchaseOrderForCreation
     */
    customAttributes?: any;
    /**
     *
     * @type {string}
     * @memberof PurchaseOrderForCreation
     */
    facilityRef: string;
}

/**
 * @export
 * @namespace PurchaseOrderForCreation
 */
export namespace PurchaseOrderForCreation {
    /**
     * @export
     * @enum {string}
     */
    export enum StatusEnum {
        OPEN = 'OPEN'
    }
}
/**
 *
 * @export
 * @interface PurchaseOrderForPartialUpdate
 */
export interface PurchaseOrderForPartialUpdate {
    /**
     *
     * @type {number}
     * @memberof PurchaseOrderForPartialUpdate
     */
    version: number;
    /**
     *
     * @type {Date}
     * @memberof PurchaseOrderForPartialUpdate
     */
    orderDate?: Date;
    /**
     *
     * @type {InputRequestedDate}
     * @memberof PurchaseOrderForPartialUpdate
     */
    requestedDate?: InputRequestedDate;
    /**
     *
     * @type {Array<InboundLineItem>}
     * @memberof PurchaseOrderForPartialUpdate
     */
    requestedItems?: Array<InboundLineItem>;
    /**
     *
     * @type {string}
     * @memberof PurchaseOrderForPartialUpdate
     */
    status?: PurchaseOrderForPartialUpdate.StatusEnum;
    /**
     *
     * @type {boolean}
     * @memberof PurchaseOrderForPartialUpdate
     */
    cancelled?: boolean;
    /**
     *
     * @type {InboundProcessPurchaseOrderSupplier}
     * @memberof PurchaseOrderForPartialUpdate
     */
    supplier?: InboundProcessPurchaseOrderSupplier;
}

/**
 * @export
 * @namespace PurchaseOrderForPartialUpdate
 */
export namespace PurchaseOrderForPartialUpdate {
    /**
     * @export
     * @enum {string}
     */
    export enum StatusEnum {
        OPEN = 'OPEN'
    }
}
/**
 *
 * @export
 * @interface PurchaseOrderForUpdate
 */
export interface PurchaseOrderForUpdate {
    /**
     *
     * @type {Date}
     * @memberof PurchaseOrderForUpdate
     */
    orderDate: Date;
    /**
     *
     * @type {InputRequestedDate}
     * @memberof PurchaseOrderForUpdate
     */
    requestedDate: InputRequestedDate;
    /**
     *
     * @type {Array<InboundLineItem>}
     * @memberof PurchaseOrderForUpdate
     */
    requestedItems: Array<InboundLineItem>;
    /**
     *
     * @type {string}
     * @memberof PurchaseOrderForUpdate
     */
    status?: PurchaseOrderForUpdate.StatusEnum;
    /**
     *
     * @type {boolean}
     * @memberof PurchaseOrderForUpdate
     */
    cancelled?: boolean;
    /**
     *
     * @type {InboundProcessPurchaseOrderSupplier}
     * @memberof PurchaseOrderForUpdate
     */
    supplier?: InboundProcessPurchaseOrderSupplier;
    /**
     * Attributes that can be added to this entity. These attributes **cannot** be used within fulfillment processes, but enable you to attach custom data from your systems to fulfillmenttools entities.
     * @type {any}
     * @memberof PurchaseOrderForUpdate
     */
    customAttributes?: any;
    /**
     *
     * @type {number}
     * @memberof PurchaseOrderForUpdate
     */
    version: number;
}

/**
 * @export
 * @namespace PurchaseOrderForUpdate
 */
export namespace PurchaseOrderForUpdate {
    /**
     * @export
     * @enum {string}
     */
    export enum StatusEnum {
        OPEN = 'OPEN'
    }
}
/**
 *
 * @export
 * @interface PurchaseOrderSupplier
 */
export interface PurchaseOrderSupplier {
    /**
     *
     * @type {string}
     * @memberof PurchaseOrderSupplier
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof PurchaseOrderSupplier
     */
    facilityRef?: string;
}
/**
 *
 * @export
 * @interface Quantity
 */
export interface Quantity {
    /**
     *
     * @type {string}
     * @memberof Quantity
     */
    unit?: string;
    /**
     *
     * @type {number}
     * @memberof Quantity
     */
    value: number;
}
/**
 * A rating is used to rate a set of possible facilities against each other during routing of orders.
 * @export
 * @interface Rating
 */
export interface Rating {
    /**
     *
     * @type {boolean}
     * @memberof Rating
     */
    active: boolean;
    /**
     *
     * @type {AbstractRatingConfiguration}
     * @memberof Rating
     */
    configuration?: AbstractRatingConfiguration;
    /**
     *
     * @type {string}
     * @memberof Rating
     */
    description?: string;
    /**
     * This value identifies this very instance of the rating. It is set automatically by the server when the configuration is updated.
     * @type {string}
     * @memberof Rating
     */
    id: string;
    /**
     *
     * @type {RatingImplementation}
     * @memberof Rating
     */
    implementation: RatingImplementation;
    /**
     *
     * @type {number}
     * @memberof Rating
     */
    maxPenalty: number;
    /**
     *
     * @type {string}
     * @memberof Rating
     */
    name: string;
}
/**
 * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
 * @export
 * @enum {string}
 */
export enum RatingImplementation {
    STOCKBALANCING = 'STOCK-BALANCING',
    GEODISTANCE = 'GEO-DISTANCE',
    TURNOVER = 'TURNOVER',
    STOCKAVAILABILITY = 'STOCK-AVAILABILITY',
    WORKLOADBALANCING = 'WORKLOAD-BALANCING',
    MATCHINGBUSINESSTYPE = 'MATCHING-BUSINESSTYPE',
    PREFERSTORE = 'PREFER-STORE',
    PREFERWAREHOUSE = 'PREFER-WAREHOUSE',
    ZONE = 'ZONE',
    EXPIRYDATE = 'EXPIRY-DATE',
    CAPACITY = 'CAPACITY',
    DELIVERYCOSTS = 'DELIVERY-COSTS',
    DELIVERYTIME = 'DELIVERY-TIME'
}
/**
 *
 * @export
 * @interface RatingStatistic
 */
export interface RatingStatistic {
    /**
     *
     * @type {string}
     * @memberof RatingStatistic
     */
    name: string;
    /**
     *
     * @type {number}
     * @memberof RatingStatistic
     */
    maxScore?: number;
    /**
     *
     * @type {number}
     * @memberof RatingStatistic
     */
    minScore?: number;
    /**
     *
     * @type {number}
     * @memberof RatingStatistic
     */
    maxPenalty: number;
    /**
     * Duration in Milliseconds
     * @type {number}
     * @memberof RatingStatistic
     */
    durationMs: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ReactiveErrorReason {
    BACKORDERLISTING = 'BACKORDER_LISTING',
    PREORDERLISTING = 'PREORDER_LISTING'
}
/**
 *
 * @export
 * @interface ReassignmentInformation
 */
export interface ReassignmentInformation {
    /**
     *
     * @type {DecisionLogFacilityInfo}
     * @memberof ReassignmentInformation
     */
    sourceFacility: DecisionLogFacilityInfo;
    /**
     *
     * @type {Array<AssignmentItem>}
     * @memberof ReassignmentInformation
     */
    reassignedItems: Array<AssignmentItem>;
}
/**
 *
 * @export
 * @interface Receipt
 */
export interface Receipt {
    /**
     *
     * @type {string}
     * @memberof Receipt
     */
    asnRef?: string;
    /**
     *
     * @type {Date}
     * @memberof Receipt
     */
    receivedDate: Date;
    /**
     *
     * @type {Array<InboundReceiptLineItem>}
     * @memberof Receipt
     */
    receivedItems: Array<InboundReceiptLineItem>;
    /**
     *
     * @type {Array<InboundReceiptComment>}
     * @memberof Receipt
     */
    comments: Array<InboundReceiptComment>;
    /**
     *
     * @type {string}
     * @memberof Receipt
     */
    status?: Receipt.StatusEnum;
    /**
     * Attributes that can be added to this entity. These attributes **cannot** be used within fulfillment processes, but enable you to attach custom data from your systems to fulfillmenttools entities.
     * @type {any}
     * @memberof Receipt
     */
    customAttributes?: any;
    /**
     *
     * @type {string}
     * @memberof Receipt
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof Receipt
     */
    inboundProcessRef: string;
    /**
     *
     * @type {number}
     * @memberof Receipt
     */
    version: number;
    /**
     *
     * @type {Date}
     * @memberof Receipt
     */
    created: Date;
    /**
     *
     * @type {Date}
     * @memberof Receipt
     */
    lastModified: Date;
}

/**
 * @export
 * @namespace Receipt
 */
export namespace Receipt {
    /**
     * @export
     * @enum {string}
     */
    export enum StatusEnum {
        INPROGRESS = 'IN_PROGRESS',
        FINISHED = 'FINISHED'
    }
}
/**
 *
 * @export
 * @interface ReceiptForCreation
 */
export interface ReceiptForCreation {
    /**
     *
     * @type {string}
     * @memberof ReceiptForCreation
     */
    asnRef?: string;
    /**
     *
     * @type {Date}
     * @memberof ReceiptForCreation
     */
    receivedDate: Date;
    /**
     *
     * @type {Array<InboundReceiptLineItem>}
     * @memberof ReceiptForCreation
     */
    receivedItems: Array<InboundReceiptLineItem>;
    /**
     *
     * @type {Array<InboundReceiptComment>}
     * @memberof ReceiptForCreation
     */
    comments: Array<InboundReceiptComment>;
    /**
     *
     * @type {string}
     * @memberof ReceiptForCreation
     */
    status?: ReceiptForCreation.StatusEnum;
    /**
     * Attributes that can be added to this entity. These attributes **cannot** be used within fulfillment processes, but enable you to attach custom data from your systems to fulfillmenttools entities.
     * @type {any}
     * @memberof ReceiptForCreation
     */
    customAttributes?: any;
    /**
     *
     * @type {string}
     * @memberof ReceiptForCreation
     */
    facilityRef: string;
}

/**
 * @export
 * @namespace ReceiptForCreation
 */
export namespace ReceiptForCreation {
    /**
     * @export
     * @enum {string}
     */
    export enum StatusEnum {
        INPROGRESS = 'IN_PROGRESS',
        FINISHED = 'FINISHED'
    }
}
/**
 *
 * @export
 * @interface RegionInformation
 */
export interface RegionInformation {
    /**
     *
     * @type {CountryCode}
     * @memberof RegionInformation
     */
    countryCode: CountryCode;
    /**
     *
     * @type {Array<string>}
     * @memberof RegionInformation
     */
    postalCodes?: Array<string>;
}
/**
 *
 * @export
 * @interface RemoteConfiguration
 */
export interface RemoteConfiguration extends VersionedResource {
    /**
     * auto generated unique identifier
     * @type {string}
     * @memberof RemoteConfiguration
     */
    id: string;
    /**
     * unique business key of this entity
     * @type {string}
     * @memberof RemoteConfiguration
     */
    key: string;
    /**
     *
     * @type {Array<RemoteConfigurationScope>}
     * @memberof RemoteConfiguration
     */
    scopes?: Array<RemoteConfigurationScope>;
    /**
     *
     * @type {RemoteConfigurationValueType}
     * @memberof RemoteConfiguration
     */
    valueType: RemoteConfigurationValueType;
    /**
     *
     * @type {string | number | boolean | any}
     * @memberof RemoteConfiguration
     */
    value: string | number | boolean | any;
    /**
     *
     * @type {Array<string>}
     * @memberof RemoteConfiguration
     */
    groups: Array<string>;
    /**
     * generated flatten unique ids of all scope sub elements (userRef, facilityRef)
     * @type {Array<string>}
     * @memberof RemoteConfiguration
     */
    flattenScopeIds: Array<string>;
}
/**
 *
 * @export
 * @interface RemoteConfigurationForCreation
 */
export interface RemoteConfigurationForCreation {
    /**
     * unique business key of this entity
     * @type {string}
     * @memberof RemoteConfigurationForCreation
     */
    key: string;
    /**
     *
     * @type {Array<RemoteConfigurationScopeForCreation>}
     * @memberof RemoteConfigurationForCreation
     */
    scopes?: Array<RemoteConfigurationScopeForCreation>;
    /**
     *
     * @type {RemoteConfigurationValueType}
     * @memberof RemoteConfigurationForCreation
     */
    valueType: RemoteConfigurationValueType;
    /**
     *
     * @type {string | number | boolean | any}
     * @memberof RemoteConfigurationForCreation
     */
    value: string | number | boolean | any;
    /**
     *
     * @type {Array<string>}
     * @memberof RemoteConfigurationForCreation
     */
    groups: Array<string>;
}
/**
 *
 * @export
 * @interface RemoteConfigurationForPut
 */
export interface RemoteConfigurationForPut {
    /**
     *
     * @type {number}
     * @memberof RemoteConfigurationForPut
     */
    version: number;
    /**
     *
     * @type {Array<RemoteConfigurationScopeForCreation>}
     * @memberof RemoteConfigurationForPut
     */
    scopes?: Array<RemoteConfigurationScopeForCreation>;
    /**
     *
     * @type {RemoteConfigurationValueType}
     * @memberof RemoteConfigurationForPut
     */
    valueType: RemoteConfigurationValueType;
    /**
     *
     * @type {string | number | boolean | any}
     * @memberof RemoteConfigurationForPut
     */
    value: string | number | boolean | any;
    /**
     *
     * @type {Array<string>}
     * @memberof RemoteConfigurationForPut
     */
    groups: Array<string>;
}
/**
 *
 * @export
 * @interface RemoteConfigurationForUpdate
 */
export interface RemoteConfigurationForUpdate {
    /**
     *
     * @type {number}
     * @memberof RemoteConfigurationForUpdate
     */
    version: number;
    /**
     *
     * @type {Array<RemoteConfigurationScopeForCreation>}
     * @memberof RemoteConfigurationForUpdate
     */
    scopes?: Array<RemoteConfigurationScopeForCreation>;
    /**
     *
     * @type {RemoteConfigurationValueType}
     * @memberof RemoteConfigurationForUpdate
     */
    valueType?: RemoteConfigurationValueType;
    /**
     *
     * @type {string | number | boolean | any}
     * @memberof RemoteConfigurationForUpdate
     */
    value?: string | number | boolean | any;
    /**
     *
     * @type {Array<string>}
     * @memberof RemoteConfigurationForUpdate
     */
    groups?: Array<string>;
}
/**
 *
 * @export
 * @interface RemoteConfigurationScope
 */
export interface RemoteConfigurationScope extends RemoteConfigurationScopeForCreation {
    /**
     * auto generated unique identifier
     * @type {string}
     * @memberof RemoteConfigurationScope
     */
    id: string;
}
/**
 *
 * @export
 * @interface RemoteConfigurationScopeForCreation
 */
export interface RemoteConfigurationScopeForCreation {
    /**
     *
     * @type {Array<string>}
     * @memberof RemoteConfigurationScopeForCreation
     */
    facilityRefs?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof RemoteConfigurationScopeForCreation
     */
    userRefs?: Array<string>;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum RemoteConfigurationValueType {
    BOOLEAN = 'BOOLEAN',
    STRING = 'STRING',
    JSON = 'JSON',
    NUMBER = 'NUMBER',
    INT = 'INT'
}
/**
 *
 * @export
 * @interface RemoteConfigurations
 */
export interface RemoteConfigurations {
    /**
     *
     * @type {Array<RemoteConfiguration>}
     * @memberof RemoteConfigurations
     */
    remoteConfigurations?: Array<RemoteConfiguration>;
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof RemoteConfigurations
     */
    total?: number;
}
/**
 *
 * @export
 * @interface RemoveFacilityCoordinatesActionParameter
 */
export interface RemoveFacilityCoordinatesActionParameter extends AbstractFacilityActionsParameter {
    /**
     *
     * @type {string}
     * @memberof RemoveFacilityCoordinatesActionParameter
     */
    name: RemoveFacilityCoordinatesActionParameter.NameEnum;
}

/**
 * @export
 * @namespace RemoveFacilityCoordinatesActionParameter
 */
export namespace RemoveFacilityCoordinatesActionParameter {
    /**
     * @export
     * @enum {string}
     */
    export enum NameEnum {
        REMOVEFACILITYCOORDINATES = 'REMOVE_FACILITY_COORDINATES'
    }
}
/**
 *
 * @export
 * @interface RemoveLineItemFromPackingTargetContainerAction
 */
export interface RemoveLineItemFromPackingTargetContainerAction extends AbstractModificationAction {
    /**
     * Use RemoveLineItemFromPackingTargetContainer to remove a line item from an existing packing container
     * @type {string}
     * @memberof RemoveLineItemFromPackingTargetContainerAction
     */
    action: RemoveLineItemFromPackingTargetContainerAction.ActionEnum;
    /**
     * Id of the PackLineItem you want to remove.
     * @type {string}
     * @memberof RemoveLineItemFromPackingTargetContainerAction
     */
    lineItemRef: string;
}

/**
 * @export
 * @namespace RemoveLineItemFromPackingTargetContainerAction
 */
export namespace RemoveLineItemFromPackingTargetContainerAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        RemoveLineItemFromPackingTargetContainer = 'RemoveLineItemFromPackingTargetContainer'
    }
}
/**
 * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />@deprecated Use /api/pickruns/{pickRunId}/actions instead
 * @export
 * @interface RemovePickJobFromPickRunAction
 */
export interface RemovePickJobFromPickRunAction extends AbstractModificationAction {
    /**
     * Use value 'RemovePickJobFromPickRunAction', because you want to remove a pickjob
     * @type {string}
     * @memberof RemovePickJobFromPickRunAction
     */
    action: RemovePickJobFromPickRunAction.ActionEnum;
    /**
     * PickJob reference of the PickJob you want to remove.
     * @type {string}
     * @memberof RemovePickJobFromPickRunAction
     */
    pickJobRef: string;
}

/**
 * @export
 * @namespace RemovePickJobFromPickRunAction
 */
export namespace RemovePickJobFromPickRunAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        RemovePickJobFromPickRunAction = 'RemovePickJobFromPickRunAction'
    }
}
/**
 *
 * @export
 * @interface ReplaceCodesInPackingTargetContainerAction
 */
export interface ReplaceCodesInPackingTargetContainerAction extends AbstractModificationAction {
    /**
     * Use ReplaceCodesInPackingTargetContainer to add a code to an existing packing container
     * @type {string}
     * @memberof ReplaceCodesInPackingTargetContainerAction
     */
    action: ReplaceCodesInPackingTargetContainerAction.ActionEnum;
    /**
     *
     * @type {Array<string>}
     * @memberof ReplaceCodesInPackingTargetContainerAction
     */
    codes?: Array<string>;
}

/**
 * @export
 * @namespace ReplaceCodesInPackingTargetContainerAction
 */
export namespace ReplaceCodesInPackingTargetContainerAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ReplaceCodesInPackingTargetContainer = 'ReplaceCodesInPackingTargetContainer'
    }
}
/**
 *
 * @export
 * @interface ReplaceLoadUnitLineItemsAction
 */
export interface ReplaceLoadUnitLineItemsAction extends AbstractModificationAction {
    /**
     * Use value 'ReplaceLoadUnitLineItems', because you want to replace loadunit line items
     * @type {string}
     * @memberof ReplaceLoadUnitLineItemsAction
     */
    action: ReplaceLoadUnitLineItemsAction.ActionEnum;
    /**
     *
     * @type {Array<LoadUnitLineItem>}
     * @memberof ReplaceLoadUnitLineItemsAction
     */
    loadUnitLineItems: Array<LoadUnitLineItem>;
}

/**
 * @export
 * @namespace ReplaceLoadUnitLineItemsAction
 */
export namespace ReplaceLoadUnitLineItemsAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ReplaceLoadUnitLineItems = 'ReplaceLoadUnitLineItems'
    }
}
/**
 *
 * @export
 * @interface ReplacePackingTargetContainerLineItemCodesAction
 */
export interface ReplacePackingTargetContainerLineItemCodesAction {
    /**
     *
     * @type {ReplacePackingTargetContainerLineItemCodesEnum}
     * @memberof ReplacePackingTargetContainerLineItemCodesAction
     */
    name: ReplacePackingTargetContainerLineItemCodesEnum;
    /**
     * Version of the entity to be changed
     * @type {number}
     * @memberof ReplacePackingTargetContainerLineItemCodesAction
     */
    version: number;
    /**
     *
     * @type {ReplacePackingTargetContainerLineItemCodesActionPayload}
     * @memberof ReplacePackingTargetContainerLineItemCodesAction
     */
    payload: ReplacePackingTargetContainerLineItemCodesActionPayload;
}
/**
 *
 * @export
 * @interface ReplacePackingTargetContainerLineItemCodesActionPayload
 */
export interface ReplacePackingTargetContainerLineItemCodesActionPayload {
    /**
     *
     * @type {Array<string>}
     * @memberof ReplacePackingTargetContainerLineItemCodesActionPayload
     */
    codes: Array<string>;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ReplacePackingTargetContainerLineItemCodesEnum {
    ReplaceLineItemCodes = 'ReplaceLineItemCodes'
}
/**
 *
 * @export
 * @interface ReplaceReturnedLineItems
 */
export interface ReplaceReturnedLineItems {
    /**
     * Version of the entity to be changed
     * @type {number}
     * @memberof ReplaceReturnedLineItems
     */
    itemReturnJobVersion: number;
    /**
     *
     * @type {Array<ItemReturnLineItemForCreation>}
     * @memberof ReplaceReturnedLineItems
     */
    returnedLineItems: Array<ItemReturnLineItemForCreation>;
}
/**
 *
 * @export
 * @interface RequestedDate
 */
export interface RequestedDate {
    /**
     *
     * @type {string}
     * @memberof RequestedDate
     */
    type: RequestedDate.TypeEnum;
    /**
     *
     * @type {Date}
     * @memberof RequestedDate
     */
    value: Date;
}

/**
 * @export
 * @namespace RequestedDate
 */
export namespace RequestedDate {
    /**
     * @export
     * @enum {string}
     */
    export enum TypeEnum {
        ASAP = 'ASAP',
        TIMEPOINT = 'TIME_POINT'
    }
}
/**
 *
 * @export
 * @interface RequestedDateASAP
 */
export interface RequestedDateASAP {
    /**
     *
     * @type {string}
     * @memberof RequestedDateASAP
     */
    type: RequestedDateASAP.TypeEnum;
}

/**
 * @export
 * @namespace RequestedDateASAP
 */
export namespace RequestedDateASAP {
    /**
     * @export
     * @enum {string}
     */
    export enum TypeEnum {
        ASAP = 'ASAP',
        TIMEPOINT = 'TIME_POINT'
    }
}
/**
 *
 * @export
 * @interface RequestedDateTimePoint
 */
export interface RequestedDateTimePoint {
    /**
     *
     * @type {string}
     * @memberof RequestedDateTimePoint
     */
    type: RequestedDateTimePoint.TypeEnum;
    /**
     *
     * @type {Date}
     * @memberof RequestedDateTimePoint
     */
    value: Date;
}

/**
 * @export
 * @namespace RequestedDateTimePoint
 */
export namespace RequestedDateTimePoint {
    /**
     * @export
     * @enum {string}
     */
    export enum TypeEnum {
        ASAP = 'ASAP',
        TIMEPOINT = 'TIME_POINT'
    }
}
/**
 *
 * @export
 * @interface RerouteConfiguration
 */
export interface RerouteConfiguration {
    /**
     *
     * @type {boolean}
     * @memberof RerouteConfiguration
     */
    active: boolean;
    /**
     * Only pickjobs within the target time window are considered for reroute.
     * @type {number}
     * @memberof RerouteConfiguration
     */
    rerouteTargetTimeHours: number;
    /**
     * The amount of minutes after which an automated reroute is executed
     * @type {number}
     * @memberof RerouteConfiguration
     */
    rerouteAfterMinutes: number;
}
/**
 *
 * @export
 * @interface RerouteDescription
 */
export interface RerouteDescription extends AbstractReason {
    /**
     *
     * @type {string}
     * @memberof RerouteDescription
     */
    action: RerouteDescription.ActionEnum;
}

/**
 * @export
 * @namespace RerouteDescription
 */
export namespace RerouteDescription {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        REROUTE = 'REROUTE'
    }
}
/**
 *
 * @export
 * @interface RerouteDescriptionForCreation
 */
export interface RerouteDescriptionForCreation extends AbstractReasonForCreation {
}
/**
 *
 * @export
 * @interface RerouteDescriptionForModification
 */
export interface RerouteDescriptionForModification extends AbstractReasonForModification {
}
/**
 *
 * @export
 * @interface RerouteDescriptions
 */
export interface RerouteDescriptions extends AbstractReasons {
    /**
     *
     * @type {Array<RerouteDescription>}
     * @memberof RerouteDescriptions
     */
    rerouteDescriptions: Array<RerouteDescription>;
    /**
     *
     * @type {Array<RerouteDescription>}
     * @memberof RerouteDescriptions
     */
    reasons: Array<RerouteDescription>;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum RerouteReason {
    PROCESSREROUTE = 'PROCESSREROUTE',
    MANUAL = 'MANUAL',
    SHORTPICK = 'SHORTPICK',
    TIMETRIGGERED = 'TIMETRIGGERED',
    STOCKZEROED = 'STOCKZEROED',
    ABORTED = 'ABORTED',
    RECALCULATION = 'RECALCULATION'
}
/**
 *
 * @export
 * @interface RerouteRoutingPlan
 */
export interface RerouteRoutingPlan {
    /**
     * if set to true every reroutable routing plan is rerouted. overrules every other identifier
     * @type {boolean}
     * @memberof RerouteRoutingPlan
     */
    allReroutable?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof RerouteRoutingPlan
     */
    orderRefs?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof RerouteRoutingPlan
     */
    routingPlanIds?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof RerouteRoutingPlan
     */
    tenantOrderIds?: Array<string>;
}
/**
 *
 * @export
 * @interface RerouteShortPickConfiguration
 */
export interface RerouteShortPickConfiguration extends VersionedResource {
    /**
     * Does not consider facilities which previously owned the pickjob during routing.
     * @type {boolean}
     * @memberof RerouteShortPickConfiguration
     */
    blacklistAssignedFacilities?: boolean;
    /**
     *
     * @type {ClickAndCollectRerouteConfiguration}
     * @memberof RerouteShortPickConfiguration
     */
    clickAndCollectReroute: ClickAndCollectRerouteConfiguration;
    /**
     * The amount of minutes after which an automated restow is executed
     * @type {number}
     * @memberof RerouteShortPickConfiguration
     */
    restowAfterMinutes?: number;
    /**
     *
     * @type {ShipFromStoreRerouteConfiguration}
     * @memberof RerouteShortPickConfiguration
     */
    shipFromStoreReroute: ShipFromStoreRerouteConfiguration;
    /**
     *
     * @type {string}
     * @memberof RerouteShortPickConfiguration
     */
    id?: string;
    /**
     * Whether or not only pickjobs with zero items picked may be rerouted
     * @type {boolean}
     * @memberof RerouteShortPickConfiguration
     */
    rerouteZeroPicksOnly?: boolean;
}
/**
 *
 * @export
 * @interface RerouteTimeTriggeredConfiguration
 */
export interface RerouteTimeTriggeredConfiguration extends VersionedResource {
    /**
     *
     * @type {RerouteConfiguration}
     * @memberof RerouteTimeTriggeredConfiguration
     */
    clickAndCollectReroute: RerouteConfiguration;
    /**
     *
     * @type {RerouteConfiguration}
     * @memberof RerouteTimeTriggeredConfiguration
     */
    shipFromStoreDeliveryReroute: RerouteConfiguration;
    /**
     *
     * @type {RerouteConfiguration}
     * @memberof RerouteTimeTriggeredConfiguration
     */
    shipFromStoreSamedayReroute: RerouteConfiguration;
    /**
     *
     * @type {string}
     * @memberof RerouteTimeTriggeredConfiguration
     */
    id?: string;
}
/**
 * The type of reroute to apply to the order   * `REROUTE`- the complete routing plan is rerouted.   * `ORDERSPLIT`- the order is splitted. The short picked line items will be moved to a new routing plan and rerouted
 * @export
 * @enum {string}
 */
export enum RerouteType {
    REROUTE = 'REROUTE',
    ORDERSPLIT = 'ORDERSPLIT'
}
/**
 * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />@deprecated Use api/pickjobs/:id/actions instead
 * @export
 * @interface ResetPickJobAction
 */
export interface ResetPickJobAction extends AbstractModificationAction {
    /**
     * Use value 'ResetPickJobAction' to reset the pickJob and set it back to status OPEN and reset the pick line items.
     * @type {string}
     * @memberof ResetPickJobAction
     */
    action: ResetPickJobAction.ActionEnum;
}

/**
 * @export
 * @namespace ResetPickJobAction
 */
export namespace ResetPickJobAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        ResetPickJob = 'ResetPickJob'
    }
}
/**
 *
 * @export
 * @interface ResolvedSubstitutes
 */
export interface ResolvedSubstitutes {
    /**
     *
     * @type {Array<Substitute>}
     * @memberof ResolvedSubstitutes
     */
    substitutes: Array<Substitute>;
    /**
     *
     * @type {string}
     * @memberof ResolvedSubstitutes
     */
    tenantArticleId: string;
}
/**
 *
 * @export
 * @interface ResponseForCNCCheckoutOptions
 */
export interface ResponseForCNCCheckoutOptions {
    /**
     *
     * @type {Array<CheckoutOptionsFacilityForCNC>}
     * @memberof ResponseForCNCCheckoutOptions
     */
    facilities: Array<CheckoutOptionsFacilityForCNC>;
}
/**
 *
 * @export
 * @interface ResponseForDeliveryPromise
 */
export interface ResponseForDeliveryPromise {
    /**
     *
     * @type {string}
     * @memberof ResponseForDeliveryPromise
     */
    orderRef: string;
    /**
     *
     * @type {number}
     * @memberof ResponseForDeliveryPromise
     */
    orderVersion: number;
    /**
     *
     * @type {OrderPromisesOptions}
     * @memberof ResponseForDeliveryPromise
     */
    promisesOptions?: OrderPromisesOptions;
    /**
     *
     * @type {DeliveryPromiseCollect}
     * @memberof ResponseForDeliveryPromise
     */
    collect?: DeliveryPromiseCollect;
    /**
     *
     * @type {Array<DeliveryPromiseShipment>}
     * @memberof ResponseForDeliveryPromise
     */
    shipToCustomer?: Array<DeliveryPromiseShipment>;
    /**
     *
     * @type {Array<DeliveryPromiseShipment>}
     * @memberof ResponseForDeliveryPromise
     */
    shipToStore?: Array<DeliveryPromiseShipment>;
    /**
     *
     * @type {Backordered}
     * @memberof ResponseForDeliveryPromise
     */
    backOrdered?: Backordered;
}
/**
 *
 * @export
 * @interface ResponseForSFSCheckoutOptions
 */
export interface ResponseForSFSCheckoutOptions {
    /**
     *
     * @type {Array<CheckoutOptionsFacilityForSFS>}
     * @memberof ResponseForSFSCheckoutOptions
     */
    facilities: Array<CheckoutOptionsFacilityForSFS>;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum RestartItemReturnJobActionEnum {
    RestartItemReturnJob = 'RestartItemReturnJob'
}
/**
 *
 * @export
 * @interface RestartItemReturnJobActionParameter
 */
export interface RestartItemReturnJobActionParameter {
    /**
     *
     * @type {RestartItemReturnJobActionEnum}
     * @memberof RestartItemReturnJobActionParameter
     */
    name: RestartItemReturnJobActionEnum;
    /**
     * Version of the entity to be changed
     * @type {number}
     * @memberof RestartItemReturnJobActionParameter
     */
    version: number;
}
/**
 * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />@deprecated Use api/pickjobs/:id/actions instead
 * @export
 * @interface RestartPickJobAction
 */
export interface RestartPickJobAction extends AbstractModificationAction {
    /**
     * Use value 'RestartPickJob' to restart the pickJob and set it back to status IN_PROGRESS.
     * @type {string}
     * @memberof RestartPickJobAction
     */
    action: RestartPickJobAction.ActionEnum;
}

/**
 * @export
 * @namespace RestartPickJobAction
 */
export namespace RestartPickJobAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        RestartPickJob = 'RestartPickJob'
    }
}
/**
 *
 * @export
 * @interface RestartPickJobConfiguration
 */
export interface RestartPickJobConfiguration {
    /**
     *
     * @type {boolean}
     * @memberof RestartPickJobConfiguration
     */
    active: boolean;
}
/**
 *
 * @export
 * @interface RestowAttributeItem
 */
export interface RestowAttributeItem extends ArticleAttributeItem {
}

/**
 * @export
 * @namespace RestowAttributeItem
 */
export namespace RestowAttributeItem {
}
/**
 *
 * @export
 * @interface RestowItem
 */
export interface RestowItem extends VersionedResource {
    /**
     *
     * @type {string}
     * @memberof RestowItem
     */
    id: string;
    /**
     *
     * @type {number}
     * @memberof RestowItem
     */
    quantity: number;
    /**
     * Identifier for items unit of measurement.
     * @type {string}
     * @memberof RestowItem
     */
    measurementUnitKey?: string;
    /**
     *
     * @type {RestowItemArticle}
     * @memberof RestowItem
     */
    article: RestowItemArticle;
    /**
     * Indicates if the restowItem has been restowed
     * @type {boolean}
     * @memberof RestowItem
     */
    restowed: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof RestowItem
     */
    scannableCodes?: Array<string>;
    /**
     * The id of the facility reference. The given ID has to be present in the system.
     * @type {string}
     * @memberof RestowItem
     */
    facilityRef: string;
    /**
     *
     * @type {Location}
     * @memberof RestowItem
     */
    location?: Location;
}
/**
 *
 * @export
 * @interface RestowItemArticle
 */
export interface RestowItemArticle extends AbstractArticle {
    /**
     *
     * @type {Array<RestowAttributeItem>}
     * @memberof RestowItemArticle
     */
    attributes?: Array<RestowAttributeItem>;
}
/**
 *
 * @export
 * @interface RestowItemForCreation
 */
export interface RestowItemForCreation {
    /**
     * Identifier for items unit of measurement.
     * @type {string}
     * @memberof RestowItemForCreation
     */
    measurementUnitKey?: string;
    /**
     *
     * @type {number}
     * @memberof RestowItemForCreation
     */
    quantity: number;
    /**
     *
     * @type {RestowItemArticle}
     * @memberof RestowItemForCreation
     */
    article: RestowItemArticle;
    /**
     * Indicates if the restowItem has been restowed
     * @type {boolean}
     * @memberof RestowItemForCreation
     */
    restowed?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof RestowItemForCreation
     */
    scannableCodes?: Array<string>;
    /**
     * The id of the facility reference. The given ID has to be present in the system.
     * @type {string}
     * @memberof RestowItemForCreation
     */
    facilityRef: string;
    /**
     *
     * @type {Location}
     * @memberof RestowItemForCreation
     */
    location?: Location;
}
/**
 *
 * @export
 * @interface RestowItemPatchActions
 */
export interface RestowItemPatchActions {
    /**
     *
     * @type {Array<ModifyRestowItemAction>}
     * @memberof RestowItemPatchActions
     */
    actions: Array<ModifyRestowItemAction>;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof RestowItemPatchActions
     */
    version: number;
}
/**
 *
 * @export
 * @interface RestowedItems
 */
export interface RestowedItems {
    /**
     *
     * @type {Array<RestowItem>}
     * @memberof RestowedItems
     */
    restowedItems?: Array<RestowItem>;
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof RestowedItems
     */
    total?: number;
}
/**
 *
 * @export
 * @interface ReturnArticleAttributeItem
 */
export interface ReturnArticleAttributeItem extends ArticleAttributeItem {
}

/**
 * @export
 * @namespace ReturnArticleAttributeItem
 */
export namespace ReturnArticleAttributeItem {
}
/**
 *
 * @export
 * @interface ReturnConfiguration
 */
export interface ReturnConfiguration extends VersionedResource {
    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Enable or disable legacy returns. Use returnTypeConfiguration instead
     * @type {boolean}
     * @memberof ReturnConfiguration
     */
    active: boolean;
    /**
     *
     * @type {ReturnTypeConfiguration}
     * @memberof ReturnConfiguration
     */
    returnTypeConfiguration?: ReturnTypeConfiguration;
    /**
     *
     * @type {Array<AvailableItemCondition>}
     * @memberof ReturnConfiguration
     */
    availableItemConditions?: Array<AvailableItemCondition>;
    /**
     *
     * @type {Array<AvailableReturnReason>}
     * @memberof ReturnConfiguration
     */
    availableReturnReasons?: Array<AvailableReturnReason>;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ReturnConfigurationType {
    RETURN = 'RETURN',
    ITEMRETURN = 'ITEM_RETURN'
}
/**
 *
 * @export
 * @interface ReturnItemArticle
 */
export interface ReturnItemArticle extends AbstractArticle {
    /**
     *
     * @type {Array<ReturnArticleAttributeItem>}
     * @memberof ReturnItemArticle
     */
    attributes?: Array<ReturnArticleAttributeItem>;
}
/**
 *
 * @export
 * @interface ReturnJob
 */
export interface ReturnJob extends ReturnJobForCreation {
    /**
     * The date this entity was created at the platform. This value is generated by the service.
     * @type {Date}
     * @memberof ReturnJob
     */
    created?: Date;
    /**
     * The date this entity was modified last. This value is generated by the service.
     * @type {Date}
     * @memberof ReturnJob
     */
    lastModified?: Date;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof ReturnJob
     */
    version: number;
    /**
     * Reference to the facility which could have been given via tenantFacilityID while creating
     * @type {string}
     * @memberof ReturnJob
     */
    facilityRef?: string;
    /**
     * Indicates if gdpr related data was anonymized
     * @type {boolean}
     * @memberof ReturnJob
     */
    anonymized?: boolean;
    /**
     * The id of this returnJob. It is generated during creation automatically and suits as the primary identifier of the described entity.
     * @type {string}
     * @memberof ReturnJob
     */
    id: string;
}
/**
 *
 * @export
 * @interface ReturnJobCanceledWebHookEvent
 */
export interface ReturnJobCanceledWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {ReturnJob}
     * @memberof ReturnJobCanceledWebHookEvent
     */
    payload: ReturnJob;
}
/**
 *
 * @export
 * @interface ReturnJobClaimedWebHookEvent
 */
export interface ReturnJobClaimedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {ReturnJob}
     * @memberof ReturnJobClaimedWebHookEvent
     */
    payload: ReturnJob;
}
/**
 *
 * @export
 * @interface ReturnJobClosedWebHookEvent
 */
export interface ReturnJobClosedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {ReturnJob}
     * @memberof ReturnJobClosedWebHookEvent
     */
    payload: ReturnJob;
}
/**
 *
 * @export
 * @interface ReturnJobCreatedWebHookEvent
 */
export interface ReturnJobCreatedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {ReturnJob}
     * @memberof ReturnJobCreatedWebHookEvent
     */
    payload: ReturnJob;
}
/**
 *
 * @export
 * @interface ReturnJobForCreation
 */
export interface ReturnJobForCreation {
    /**
     *
     * @type {string}
     * @memberof ReturnJobForCreation
     */
    carrierTrackingNumber?: string;
    /**
     *
     * @type {ConsumerAddress}
     * @memberof ReturnJobForCreation
     */
    consumerAddress?: ConsumerAddress;
    /**
     *
     * @type {FacilityAddress}
     * @memberof ReturnJobForCreation
     */
    facilityAddress?: FacilityAddress;
    /**
     * The id of the facility reference. The given ID has to be present in the system.
     * @type {string}
     * @memberof ReturnJobForCreation
     */
    tenantFacilityId?: string;
    /**
     * The id of the order
     * @type {string}
     * @memberof ReturnJobForCreation
     */
    orderRef?: string;
    /**
     * Id of the global process related to this entity. For example used for starting the GDPR process and others.
     * @type {string}
     * @memberof ReturnJobForCreation
     */
    processId?: string;
    /**
     *
     * @type {Array<ReturnLine>}
     * @memberof ReturnJobForCreation
     */
    returnLines: Array<ReturnLine>;
    /**
     *
     * @type {ReturnStatus}
     * @memberof ReturnJobForCreation
     */
    status?: ReturnStatus;
    /**
     *
     * @type {string}
     * @memberof ReturnJobForCreation
     */
    tenantOrderId?: string;
    /**
     * Attributes that can be added to the return job. These attributes cannot be used within fulfillment processes, but it could be useful to have the information carried here.
     * @type {any}
     * @memberof ReturnJobForCreation
     */
    customAttributes?: any;
}
/**
 *
 * @export
 * @interface ReturnJobs
 */
export interface ReturnJobs {
    /**
     *
     * @type {Array<ReturnJob>}
     * @memberof ReturnJobs
     */
    returnJobs: Array<ReturnJob>;
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof ReturnJobs
     */
    total: number;
}
/**
 *
 * @export
 * @interface ReturnLine
 */
export interface ReturnLine {
    /**
     *
     * @type {ReturnItemArticle}
     * @memberof ReturnLine
     */
    article: ReturnItemArticle;
    /**
     * The amount of articles that were delivered
     * @type {number}
     * @memberof ReturnLine
     */
    delivered: number;
    /**
     * The id of this return Item. It is generated during creation automatically and suits as the primary identifier of the described entity.
     * @type {string}
     * @memberof ReturnLine
     */
    id: string;
    /**
     *
     * @type {Array<string>}
     * @memberof ReturnLine
     */
    pickJobRefs: Array<string>;
    /**
     *
     * @type {Returned}
     * @memberof ReturnLine
     */
    returned: Returned;
    /**
     *
     * @type {Array<string>}
     * @memberof ReturnLine
     */
    scannableCodes: Array<string>;
    /**
     *
     * @type {ReturnLineStatus}
     * @memberof ReturnLine
     */
    status: ReturnLineStatus;
    /**
     * Attributes that can be added to the return job. These attributes cannot be used within fulfillment processes, but it could be useful to have the information carried here.
     * @type {any}
     * @memberof ReturnLine
     */
    customAttributes?: any;
}
/**
 * A return item line initially has the status INITIAL.
 * @export
 * @enum {string}
 */
export enum ReturnLineStatus {
    INITIAL = 'INITIAL',
    ADVISED = 'ADVISED',
    ACCEPTED = 'ACCEPTED',
    DECLINED = 'DECLINED',
    CANCELED = 'CANCELED'
}
/**
 *
 * @export
 * @interface ReturnNote
 */
export interface ReturnNote {
    /**
     *
     * @type {CompanyAddress}
     * @memberof ReturnNote
     */
    companyAddress?: CompanyAddress;
    /**
     *
     * @type {OrderInformation}
     * @memberof ReturnNote
     */
    orderInformation: OrderInformation;
    /**
     *
     * @type {DeliveryAddress}
     * @memberof ReturnNote
     */
    deliveryAddress?: DeliveryAddress;
    /**
     * if this field is filled, the delivery address will be taken from here according to this sorting: INVOICE_ADDRESS > POSTAL_ADDRESS. Each type is only allowed once.
     * @type {Array<DeliveryAddressWithType>}
     * @memberof ReturnNote
     */
    deliveryAddresses?: Array<DeliveryAddressWithType>;
    /**
     *
     * @type {string}
     * @memberof ReturnNote
     */
    qrCodeContent?: string;
    /**
     *
     * @type {Array<ReturnNoteItem>}
     * @memberof ReturnNote
     */
    items: Array<ReturnNoteItem>;
}
/**
 *
 * @export
 * @interface ReturnNoteConfiguration
 */
export interface ReturnNoteConfiguration extends VersionedResource {
    /**
     *
     * @type {string}
     * @memberof ReturnNoteConfiguration
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof ReturnNoteConfiguration
     */
    logoUrl?: string;
    /**
     *
     * @type {PdfBackgroundConfiguration}
     * @memberof ReturnNoteConfiguration
     */
    pdfBackgroundConfiguration?: PdfBackgroundConfiguration;
    /**
     *
     * @type {CompanyAddress}
     * @memberof ReturnNoteConfiguration
     */
    companyAddress?: CompanyAddress;
    /**
     *
     * @type {LocaleString}
     * @memberof ReturnNoteConfiguration
     */
    orderDateLabel: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof ReturnNoteConfiguration
     */
    orderNumberLabel: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof ReturnNoteConfiguration
     */
    headline: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof ReturnNoteConfiguration
     */
    quantityLabel: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof ReturnNoteConfiguration
     */
    articleIdLabel: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof ReturnNoteConfiguration
     */
    articleTitleLabel: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof ReturnNoteConfiguration
     */
    returnReasonLabel: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof ReturnNoteConfiguration
     */
    returnReasonExplanationHeadline?: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof ReturnNoteConfiguration
     */
    returnReasonExplanation?: LocaleString;
    /**
     * Deprecated - use ReturnConfiguration.availableReturnReasons instead
     * @type {Array<LocaleString>}
     * @memberof ReturnNoteConfiguration
     */
    reasons?: Array<LocaleString>;
    /**
     *
     * @type {LocaleString}
     * @memberof ReturnNoteConfiguration
     */
    disclaimerHeadline: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof ReturnNoteConfiguration
     */
    disclaimer: LocaleString;
    /**
     * Determines if the page label should be shown
     * @type {boolean}
     * @memberof ReturnNoteConfiguration
     */
    displayPageLabel?: boolean;
    /**
     *
     * @type {LocaleString}
     * @memberof ReturnNoteConfiguration
     */
    pageLabel: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof ReturnNoteConfiguration
     */
    substituteText?: LocaleString;
}
/**
 *
 * @export
 * @interface ReturnNoteConfigurationForUpsert
 */
export interface ReturnNoteConfigurationForUpsert {
    /**
     *
     * @type {NamedFile}
     * @memberof ReturnNoteConfigurationForUpsert
     */
    logo?: NamedFile;
    /**
     *
     * @type {PdfBackgroundConfigurationForUpsert}
     * @memberof ReturnNoteConfigurationForUpsert
     */
    pdfBackgroundConfiguration?: PdfBackgroundConfigurationForUpsert;
    /**
     *
     * @type {CompanyAddress}
     * @memberof ReturnNoteConfigurationForUpsert
     */
    companyAddress?: CompanyAddress;
    /**
     *
     * @type {LocaleString}
     * @memberof ReturnNoteConfigurationForUpsert
     */
    orderDateLabel: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof ReturnNoteConfigurationForUpsert
     */
    orderNumberLabel: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof ReturnNoteConfigurationForUpsert
     */
    headline: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof ReturnNoteConfigurationForUpsert
     */
    quantityLabel: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof ReturnNoteConfigurationForUpsert
     */
    articleIdLabel: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof ReturnNoteConfigurationForUpsert
     */
    articleTitleLabel: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof ReturnNoteConfigurationForUpsert
     */
    returnReasonLabel: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof ReturnNoteConfigurationForUpsert
     */
    returnReasonExplanationHeadline?: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof ReturnNoteConfigurationForUpsert
     */
    returnReasonExplanation?: LocaleString;
    /**
     * Deprecated - use ReturnConfiguration.availableReturnReasons instead
     * @type {Array<LocaleString>}
     * @memberof ReturnNoteConfigurationForUpsert
     */
    reasons?: Array<LocaleString>;
    /**
     *
     * @type {LocaleString}
     * @memberof ReturnNoteConfigurationForUpsert
     */
    disclaimerHeadline: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof ReturnNoteConfigurationForUpsert
     */
    disclaimer: LocaleString;
    /**
     * Determines if the page label should be shown
     * @type {boolean}
     * @memberof ReturnNoteConfigurationForUpsert
     */
    displayPageLabel?: boolean;
    /**
     *
     * @type {LocaleString}
     * @memberof ReturnNoteConfigurationForUpsert
     */
    pageLabel: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof ReturnNoteConfigurationForUpsert
     */
    substituteText?: LocaleString;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof ReturnNoteConfigurationForUpsert
     */
    version: number;
}
/**
 *
 * @export
 * @interface ReturnNoteItem
 */
export interface ReturnNoteItem {
    /**
     *
     * @type {string}
     * @memberof ReturnNoteItem
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof ReturnNoteItem
     */
    title: string;
    /**
     * optional parameter for picked quantity of the given line item
     * @type {number}
     * @memberof ReturnNoteItem
     */
    quantity?: number;
    /**
     * Titel of the item which is substituted through this item
     * @type {string}
     * @memberof ReturnNoteItem
     */
    substitutes?: string;
}
/**
 * You can choose from patch actions for the ReturnLineItems (ModifyReturnLineItemAction, action value: 'ModifyReturnLineItem') or the return itself (ModifyReturnAction, action value 'ModifyReturn').
 * @export
 * @interface ReturnPatchActions
 */
export interface ReturnPatchActions {
    /**
     *
     * @type {Array<ModifyReturnAction | ModifyReturnLineItemAction>}
     * @memberof ReturnPatchActions
     */
    actions: Array<ModifyReturnAction | ModifyReturnLineItemAction>;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof ReturnPatchActions
     */
    version: number;
}
/**
 * A return initially has the status INITIAL. As soon as one of the returnlines is returned partly or in full the state changes to CLAIMED. When the return option voids the state could change to CLOSED. Please note that this last step might depend on configuration values.
 * @export
 * @enum {string}
 */
export enum ReturnStatus {
    INITIAL = 'INITIAL',
    INPROGRESS = 'IN_PROGRESS',
    CLAIMED = 'CLAIMED',
    CLOSED = 'CLOSED',
    CANCELED = 'CANCELED'
}
/**
 *
 * @export
 * @interface ReturnTypeConfiguration
 */
export interface ReturnTypeConfiguration {
    /**
     *
     * @type {ReturnConfigurationType}
     * @memberof ReturnTypeConfiguration
     */
    type: ReturnConfigurationType;
}
/**
 *
 * @export
 * @interface Returned
 */
export interface Returned {
    /**
     * Reason of return.
     * @type {string}
     * @memberof Returned
     */
    reason?: string;
    /**
     * Amount of item which is returned
     * @type {number}
     * @memberof Returned
     */
    returnedAmount: number;
}
/**
 * Either price or percent must be set, not both.
 * @export
 * @interface ReturnedLineItemRefund
 */
export interface ReturnedLineItemRefund {
    /**
     *
     * @type {ReturnedLineItemRefundStatus}
     * @memberof ReturnedLineItemRefund
     */
    status: ReturnedLineItemRefundStatus;
    /**
     *
     * @type {ReturnedLineItemRefundPrice}
     * @memberof ReturnedLineItemRefund
     */
    price?: ReturnedLineItemRefundPrice;
    /**
     * 0.0 - 100.0 amount of the line item price that should be refunded
     * @type {number}
     * @memberof ReturnedLineItemRefund
     */
    percent?: number;
}
/**
 *
 * @export
 * @interface ReturnedLineItemRefundPrice
 */
export interface ReturnedLineItemRefundPrice {
    /**
     * 0.0 till line item price that should be refunded
     * @type {number}
     * @memberof ReturnedLineItemRefundPrice
     */
    value: number;
    /**
     * The currency of the price as an ISO 4217 code.
     * @type {CurrencyCode}
     * @memberof ReturnedLineItemRefundPrice
     */
    currency: CurrencyCode;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ReturnedLineItemRefundStatus {
    OPEN = 'OPEN',
    INPROGRESS = 'IN_PROGRESS',
    CLOSED = 'CLOSED'
}
/**
 * A list of all rolenames and permissions assigned to the user
 * @export
 */
export type Roles = Array<RolesInner>
/**
 *
 * @export
 * @interface RolesInner
 */
export interface RolesInner {
    /**
     *
     * @type {UserRoleNames}
     * @memberof RolesInner
     */
    name: UserRoleNames;
    /**
     *
     * @type {Array<string>}
     * @memberof RolesInner
     */
    facilityRefs?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof RolesInner
     */
    permissions: Array<string>;
}
/**
 * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />This is the configuration for the distributing order management system. By changing the configuration you are able to change the behavior of the routing of orders henceforth.
 * @export
 * @interface RoutingConfiguration
 */
export interface RoutingConfiguration {
    /**
     * The date this order was created at the platform. This value is generated by the service.
     * @type {Date}
     * @memberof RoutingConfiguration
     */
    created?: Date;
    /**
     *
     * @type {GlobalRoutingConfiguration}
     * @memberof RoutingConfiguration
     */
    globalRoutingConfiguration: GlobalRoutingConfiguration;
    /**
     * The date this order was modified last. This value is generated by the service.
     * @type {Date}
     * @memberof RoutingConfiguration
     */
    lastModified?: Date;
    /**
     * Contains the routing configuration for prioritization & routing for the whole tenant
     * @type {Array<PrioritizationRule>}
     * @memberof RoutingConfiguration
     */
    prioritizationRules: Array<PrioritizationRule>;
    /**
     *
     * @type {RoutingRule}
     * @memberof RoutingConfiguration
     */
    routingRule: RoutingRule;
    /**
     *
     * @type {RoutingConfigurationTiming}
     * @memberof RoutingConfiguration
     */
    timingMode?: RoutingConfigurationTiming;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof RoutingConfiguration
     */
    version: number;
    /**
     *
     * @type {string}
     * @memberof RoutingConfiguration
     */
    id?: string;
}
/**
 * Configuration for the timing of routing decisions
 * @export
 * @interface RoutingConfigurationTiming
 */
export interface RoutingConfigurationTiming {
    /**
     *
     * @type {any}
     * @memberof RoutingConfigurationTiming
     */
    options?: any;
    /**
     *
     * @type {RoutingConfigurationTimingType}
     * @memberof RoutingConfigurationTiming
     */
    type: RoutingConfigurationTimingType;
}
/**
 * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />The available types for routing timing.
 * @export
 * @enum {string}
 */
export enum RoutingConfigurationTimingType {
    DIRECT = 'DIRECT',
    MANUAL = 'MANUAL'
}
/**
 *
 * @export
 * @interface RoutingConfigurationsPatchActions
 */
export interface RoutingConfigurationsPatchActions {
    /**
     *
     * @type {Array<ModifyFenceAction | ModifyRatingAction | ModifyTimingModeAction | ModifyOrderSplitAction | ModifyPrioritizationAction | ModifyGlobalRoutingConfigurationAction>}
     * @memberof RoutingConfigurationsPatchActions
     */
    actions: Array<ModifyFenceAction | ModifyRatingAction | ModifyTimingModeAction | ModifyOrderSplitAction | ModifyPrioritizationAction | ModifyGlobalRoutingConfigurationAction>;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof RoutingConfigurationsPatchActions
     */
    version: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum RoutingDecisionContext {
    LISTING = 'LISTING',
    CARRIER = 'CARRIER'
}
/**
 *
 * @export
 * @interface RoutingPlan
 */
export interface RoutingPlan extends VersionedResource {
    /**
     *
     * @type {Array<Transfer>}
     * @memberof RoutingPlan
     */
    transfers?: Array<Transfer>;
    /**
     *
     * @type {Array<ExpectedLineItem>}
     * @memberof RoutingPlan
     */
    expectedLineItems?: Array<ExpectedLineItem>;
    /**
     *
     * @type {DeliveryPreferences}
     * @memberof RoutingPlan
     */
    deliveryPreferences?: DeliveryPreferences;
    /**
     * Indicates if gdpr related data was anonymized
     * @type {boolean}
     * @memberof RoutingPlan
     */
    anonymized?: boolean;
    /**
     *
     * @type {Array<DecisionLogRef>}
     * @memberof RoutingPlan
     */
    decisionLogs: Array<DecisionLogRef>;
    /**
     *
     * @type {Array<string>}
     * @memberof RoutingPlan
     */
    facilityBlackList?: Array<string>;
    /**
     * The id of the facility reference. The given ID has to be present in the system.
     * @type {string}
     * @memberof RoutingPlan
     */
    facilityRef?: string;
    /**
     * The iteration through the finalizer process
     * @type {number}
     * @memberof RoutingPlan
     */
    finalizeRun: number;
    /**
     * The date of the first routing attempt.
     * @type {Date}
     * @memberof RoutingPlan
     */
    firstRoutingAttempt?: Date;
    /**
     *
     * @type {string}
     * @memberof RoutingPlan
     */
    id: string;
    /**
     * The date this order was created at the supplying system.
     * @type {Date}
     * @memberof RoutingPlan
     */
    orderDate: Date;
    /**
     *
     * @type {Array<RoutingPlanLineItem>}
     * @memberof RoutingPlan
     */
    orderLineItems?: Array<RoutingPlanLineItem>;
    /**
     * The id of the order that lead to the creation of this pickjob. Can be empty / not present when the pickjob was created without having an order.
     * @type {string}
     * @memberof RoutingPlan
     */
    orderRef: string;
    /**
     *
     * @type {string}
     * @memberof RoutingPlan
     */
    parentRoutingPlanRef?: string;
    /**
     *
     * @type {string}
     * @memberof RoutingPlan
     */
    childRoutingPlanRef?: string;
    /**
     * The id of the pickjob that has been created from the routing plan.
     * @type {string}
     * @memberof RoutingPlan
     */
    pickJobRef?: string;
    /**
     * priority of return plan
     * @type {number}
     * @memberof RoutingPlan
     */
    priority: number;
    /**
     *
     * @type {RerouteReason}
     * @memberof RoutingPlan
     */
    reRouteReason?: RerouteReason;
    /**
     *
     * @type {RerouteDescription}
     * @memberof RoutingPlan
     */
    rerouteDescription?: RerouteDescription;
    /**
     * The id of the facility the order was rerouted from.
     * @type {string}
     * @memberof RoutingPlan
     */
    reRoutedFacilityRef?: string;
    /**
     * The id of the original pickjob that was rerouted.
     * @type {string}
     * @memberof RoutingPlan
     */
    reRoutedPickJobRef?: string;
    /**
     * The id of the original routingplan that was rerouted.
     * @type {string}
     * @memberof RoutingPlan
     */
    reRoutedRoutingPlanRef?: string;
    /**
     * The iteration through the routing process
     * @type {number}
     * @memberof RoutingPlan
     */
    routingRun: number;
    /**
     * The rule type of a decision log entry
     * @type {string}
     * @memberof RoutingPlan
     */
    runType?: RoutingPlan.RunTypeEnum;
    /**
     * The number of order splits that happened before this routingplan was created
     * @type {number}
     * @memberof RoutingPlan
     */
    splitCount?: number;
    /**
     *
     * @type {RoutingPlanStatus}
     * @memberof RoutingPlan
     */
    status: RoutingPlanStatus;
    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />@deprecated  For more detailed information, use the History field. Saves all status changes when creating or updating a routing plan
     * @type {Array<RoutingPlanStatus>}
     * @memberof RoutingPlan
     */
    statusHistory?: Array<RoutingPlanStatus>;
    /**
     *
     * @type {Array<RoutingPlanHistory>}
     * @memberof RoutingPlan
     */
    history?: Array<RoutingPlanHistory>;
    /**
     *
     * @type {Array<RoutingPlanStatusReason>}
     * @memberof RoutingPlan
     */
    statusReasons?: Array<RoutingPlanStatusReason>;
    /**
     *
     * @type {ConsolidatedRoutingPlanStatus}
     * @memberof RoutingPlan
     */
    consolidatedStatus: ConsolidatedRoutingPlanStatus;
    /**
     *
     * @type {TargetAddress}
     * @memberof RoutingPlan
     */
    targetAddress?: TargetAddress;
    /**
     *
     * @type {Array<DeliveryEventTargetAddress>}
     * @memberof RoutingPlan
     */
    targetAddressesByDeliveryEvent?: Array<DeliveryEventTargetAddress>;
    /**
     * Id of the global process related to this entity. For example used for starting the GDPR process and others.
     * @type {string}
     * @memberof RoutingPlan
     */
    processId: string;
    /**
     * This date is used as base/start to calculate the target time date.
     * @type {Date}
     * @memberof RoutingPlan
     */
    targetTimeBaseDate?: Date;
    /**
     *
     * @type {Array<CustomServiceReference>}
     * @memberof RoutingPlan
     */
    customServices?: Array<CustomServiceReference>;
    /**
     * The point in time by which the order is supposed to be provisioned.
     * @type {Date}
     * @memberof RoutingPlan
     */
    provisioningTime?: Date;
}

/**
 * @export
 * @namespace RoutingPlan
 */
export namespace RoutingPlan {
    /**
     * @export
     * @enum {string}
     */
    export enum RunTypeEnum {
        DEFAULT = 'DEFAULT',
        REROUTE = 'REROUTE',
        ORDERSPLITONSHORTPICK = 'ORDERSPLIT_ON_SHORTPICK',
        MANUALASSIGNMENT = 'MANUAL_ASSIGNMENT',
        PROCESSMANUALASSIGNMENT = 'PROCESS_MANUALASSIGNMENT',
        REACTIVATION = 'REACTIVATION'
    }
}
/**
 *
 * @export
 * @interface RoutingPlanFallbackRoutingWebHookEvent
 */
export interface RoutingPlanFallbackRoutingWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {RoutingPlan}
     * @memberof RoutingPlanFallbackRoutingWebHookEvent
     */
    payload: RoutingPlan;
}
/**
 *
 * @export
 * @interface RoutingPlanHistory
 */
export interface RoutingPlanHistory {
    /**
     *
     * @type {RoutingPlanStatus}
     * @memberof RoutingPlanHistory
     */
    status: RoutingPlanStatus;
    /**
     * Information about the time, when a routing plan status is set
     * @type {Date}
     * @memberof RoutingPlanHistory
     */
    created: Date;
}
/**
 *
 * @export
 * @interface RoutingPlanLineItem
 */
export interface RoutingPlanLineItem extends OrderLineItem {
    /**
     *
     * @type {number}
     * @memberof RoutingPlanLineItem
     */
    picked?: number;
    /**
     *
     * @type {number}
     * @memberof RoutingPlanLineItem
     */
    available?: number;
    /**
     *
     * @type {Array<RoutingPlanLineItemPiece>}
     * @memberof RoutingPlanLineItem
     */
    pieces?: Array<RoutingPlanLineItemPiece>;
    /**
     *
     * @type {string}
     * @memberof RoutingPlanLineItem
     */
    outOfStockBehaviour?: RoutingPlanLineItem.OutOfStockBehaviourEnum;
    /**
     *
     * @type {AvailabilityTimeframe}
     * @memberof RoutingPlanLineItem
     */
    availabilityTimeframe?: AvailabilityTimeframe;
}

/**
 * @export
 * @namespace RoutingPlanLineItem
 */
export namespace RoutingPlanLineItem {
    /**
     * @export
     * @enum {string}
     */
    export enum OutOfStockBehaviourEnum {
        BACKORDER = 'BACKORDER'
    }
}
/**
 *
 * @export
 * @interface RoutingPlanLineItemPiece
 */
export interface RoutingPlanLineItemPiece {
    /**
     *
     * @type {string}
     * @memberof RoutingPlanLineItemPiece
     */
    partialStockRef?: string;
    /**
     *
     * @type {number}
     * @memberof RoutingPlanLineItemPiece
     */
    quantity?: number;
    /**
     *
     * @type {number}
     * @memberof RoutingPlanLineItemPiece
     */
    available?: number;
    /**
     *
     * @type {number}
     * @memberof RoutingPlanLineItemPiece
     */
    mandatoryScore?: number;
    /**
     *
     * @type {number}
     * @memberof RoutingPlanLineItemPiece
     */
    sequenceScore?: number;
    /**
     *
     * @type {Location}
     * @memberof RoutingPlanLineItemPiece
     */
    location?: Location;
    /**
     *
     * @type {number}
     * @memberof RoutingPlanLineItemPiece
     */
    picked?: number;
}
/**
 *
 * @export
 * @interface RoutingPlanNotRoutableWebHookEvent
 */
export interface RoutingPlanNotRoutableWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {RoutingPlan}
     * @memberof RoutingPlanNotRoutableWebHookEvent
     */
    payload: RoutingPlan;
}
/**
 *
 * @export
 * @interface RoutingPlanObsoleteStatusReason
 */
export interface RoutingPlanObsoleteStatusReason {
    /**
     *
     * @type {string}
     * @memberof RoutingPlanObsoleteStatusReason
     */
    reason: RoutingPlanObsoleteStatusReason.ReasonEnum;
    /**
     *
     * @type {string}
     * @memberof RoutingPlanObsoleteStatusReason
     */
    status: RoutingPlanObsoleteStatusReason.StatusEnum;
}

/**
 * @export
 * @namespace RoutingPlanObsoleteStatusReason
 */
export namespace RoutingPlanObsoleteStatusReason {
    /**
     * @export
     * @enum {string}
     */
    export enum ReasonEnum {
        REROUTEAFTERSHORTPICK = 'REROUTE_AFTER_SHORTPICK',
        MANUALLYREROUTED = 'MANUALLY_REROUTED',
        MANUALLYASSIGNED = 'MANUALLY_ASSIGNED'
    }
    /**
     * @export
     * @enum {string}
     */
    export enum StatusEnum {
        OBSOLETE = 'OBSOLETE'
    }
}
/**
 *
 * @export
 * @interface RoutingPlanPatchActions
 */
export interface RoutingPlanPatchActions {
    /**
     *
     * @type {Array<ModifyRoutingPlanAction>}
     * @memberof RoutingPlanPatchActions
     */
    actions: Array<ModifyRoutingPlanAction>;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof RoutingPlanPatchActions
     */
    version: number;
}
/**
 *
 * @export
 * @interface RoutingPlanRerouteCreatedWebHookEvent
 */
export interface RoutingPlanRerouteCreatedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {RoutingPlan}
     * @memberof RoutingPlanRerouteCreatedWebHookEvent
     */
    payload: RoutingPlan;
}
/**
 *
 * @export
 * @interface RoutingPlanRoutedWebHookEvent
 */
export interface RoutingPlanRoutedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {RoutingPlan}
     * @memberof RoutingPlanRoutedWebHookEvent
     */
    payload: RoutingPlan;
}
/**
 *
 * @export
 * @interface RoutingPlanSplittedWebHookEvent
 */
export interface RoutingPlanSplittedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {RoutingPlan}
     * @memberof RoutingPlanSplittedWebHookEvent
     */
    payload: RoutingPlan;
}
/**
 * A routing plan line initially has the status INITIAL. Final state is ROUTED
 * @export
 * @enum {string}
 */
export enum RoutingPlanStatus {
    INITIAL = 'INITIAL',
    PRIORITIZED = 'PRIORITIZED',
    ROUTING = 'ROUTING',
    PROPOSED = 'PROPOSED',
    PLANNED = 'PLANNED',
    ROUTED = 'ROUTED',
    NOTROUTABLE = 'NOT_ROUTABLE',
    MANUALPLANNED = 'MANUAL_PLANNED',
    FAILED = 'FAILED',
    REDUNDANTREROUTE = 'REDUNDANT_REROUTE',
    FAILEDREROUTE = 'FAILED_REROUTE',
    RETRYABLE = 'RETRYABLE',
    FALLBACKROUTING = 'FALLBACK_ROUTING',
    WAITING = 'WAITING',
    OBSOLETE = 'OBSOLETE',
    CANCELED = 'CANCELED',
    LOCKED = 'LOCKED',
    PROMISED = 'PROMISED',
    REROUTED = 'REROUTED'
}
/**
 *
 * @export
 * @interface RoutingPlanStatusReason
 */
export interface RoutingPlanStatusReason {
}
/**
 *
 * @export
 * @interface RoutingPlanWaitingWebHookEvent
 */
export interface RoutingPlanWaitingWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {RoutingPlan}
     * @memberof RoutingPlanWaitingWebHookEvent
     */
    payload: RoutingPlan;
}
/**
 *
 * @export
 * @interface RoutingPlans
 */
export interface RoutingPlans {
    /**
     *
     * @type {Array<RoutingPlan>}
     * @memberof RoutingPlans
     */
    routingPlans?: Array<RoutingPlan>;
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof RoutingPlans
     */
    total?: number;
}
/**
 *
 * @export
 * @interface RoutingResults
 */
export interface RoutingResults {
    /**
     *
     * @type {Array<AssignmentItem>}
     * @memberof RoutingResults
     */
    assignedItems: Array<AssignmentItem>;
    /**
     *
     * @type {DecisionLogFacilityInfo}
     * @memberof RoutingResults
     */
    bestRatedFacility?: DecisionLogFacilityInfo;
    /**
     *
     * @type {DecisionLogFacilityInfo}
     * @memberof RoutingResults
     */
    bestAvailableFacility?: DecisionLogFacilityInfo;
    /**
     *
     * @type {DecisionLogFacilityInfo}
     * @memberof RoutingResults
     */
    bestReassignmentFacility?: DecisionLogFacilityInfo;
    /**
     *
     * @type {RoutingPlanStatus}
     * @memberof RoutingResults
     */
    routingPlanStatus?: RoutingPlanStatus;
}
/**
 *
 * @export
 * @interface RoutingRule
 */
export interface RoutingRule {
    /**
     *
     * @type {Array<Fence>}
     * @memberof RoutingRule
     */
    fences: Array<Fence>;
    /**
     *
     * @type {OrderSplit}
     * @memberof RoutingRule
     */
    orderSplit?: OrderSplit;
    /**
     *
     * @type {Array<Rating>}
     * @memberof RoutingRule
     */
    ratings: Array<Rating>;
}
/**
 *
 * @export
 * @interface RoutingStatistics
 */
export interface RoutingStatistics {
    /**
     *
     * @type {Array<FenceStatistic>}
     * @memberof RoutingStatistics
     */
    fenceStatistics: Array<FenceStatistic>;
    /**
     *
     * @type {Array<RatingStatistic>}
     * @memberof RoutingStatistics
     */
    ratingStatistics: Array<RatingStatistic>;
    /**
     *
     * @type {number}
     * @memberof RoutingStatistics
     */
    durationMs?: number;
}
/**
 *
 * @export
 * @interface SafetyStock
 */
export interface SafetyStock {
    /**
     *
     * @type {string}
     * @memberof SafetyStock
     */
    tenantArticleId: string;
    /**
     *
     * @type {number}
     * @memberof SafetyStock
     */
    value: number;
    /**
     *
     * @type {string}
     * @memberof SafetyStock
     */
    facilityRef?: string;
    /**
     *
     * @type {Date}
     * @memberof SafetyStock
     */
    created: Date;
    /**
     *
     * @type {string}
     * @memberof SafetyStock
     */
    id: string;
    /**
     *
     * @type {Date}
     * @memberof SafetyStock
     */
    lastModified: Date;
    /**
     *
     * @type {number}
     * @memberof SafetyStock
     */
    version: number;
}
/**
 *
 * @export
 * @interface SafetyStockBulkOperation
 */
export interface SafetyStockBulkOperation {
    /**
     *
     * @type {string}
     * @memberof SafetyStockBulkOperation
     */
    tenantArticleId: string;
    /**
     *
     * @type {number}
     * @memberof SafetyStockBulkOperation
     */
    value: number;
    /**
     *
     * @type {string}
     * @memberof SafetyStockBulkOperation
     */
    facilityRef?: string;
}
/**
 *
 * @export
 * @interface SafetyStockBulkOperationResult
 */
export interface SafetyStockBulkOperationResult {
    /**
     *
     * @type {string}
     * @memberof SafetyStockBulkOperationResult
     */
    tenantArticleId: string;
    /**
     *
     * @type {string}
     * @memberof SafetyStockBulkOperationResult
     */
    facilityRef: string;
    /**
     *
     * @type {number}
     * @memberof SafetyStockBulkOperationResult
     */
    value: number;
    /**
     *
     * @type {string}
     * @memberof SafetyStockBulkOperationResult
     */
    status: SafetyStockBulkOperationResult.StatusEnum;
    /**
     *
     * @type {BulkOperationError}
     * @memberof SafetyStockBulkOperationResult
     */
    error?: BulkOperationError;
}

/**
 * @export
 * @namespace SafetyStockBulkOperationResult
 */
export namespace SafetyStockBulkOperationResult {
    /**
     * @export
     * @enum {string}
     */
    export enum StatusEnum {
        UPDATED = 'UPDATED',
        CREATED = 'CREATED',
        FAILED = 'FAILED'
    }
}
/**
 *
 * @export
 * @interface SafetyStockBulkOperations
 */
export interface SafetyStockBulkOperations {
    /**
     *
     * @type {Array<SafetyStockBulkOperation>}
     * @memberof SafetyStockBulkOperations
     */
    operations: Array<SafetyStockBulkOperation>;
}
/**
 *
 * @export
 * @interface SafetyStocksPaginatedResult
 */
export interface SafetyStocksPaginatedResult {
    /**
     *
     * @type {number}
     * @memberof SafetyStocksPaginatedResult
     */
    total: number;
    /**
     *
     * @type {Array<SafetyStock>}
     * @memberof SafetyStocksPaginatedResult
     */
    safetyStocks: Array<SafetyStock>;
}
/**
 * Configuration to show the client how the items should be scanned during picking
 * @export
 * @interface ScanningRuleConfiguration
 */
export interface ScanningRuleConfiguration {
    /**
     *
     * @type {Array<ScanningRuleValue>}
     * @memberof ScanningRuleConfiguration
     */
    values?: Array<ScanningRuleValue>;
}
/**
 * Type of scanning rule
 * @export
 * @enum {string}
 */
export enum ScanningRuleTypeEnum {
    ARTICLE = 'ARTICLE',
    LOCATION = 'LOCATION'
}
/**
 *
 * @export
 * @interface ScanningRuleValue
 */
export interface ScanningRuleValue {
    /**
     * This field allows you to rank scanningRuleType against each other. The lowest number is the most preferable.
     * @type {number}
     * @memberof ScanningRuleValue
     */
    priority: number;
    /**
     *
     * @type {ScanningRuleTypeEnum}
     * @memberof ScanningRuleValue
     */
    scanningRuleType: ScanningRuleTypeEnum;
}
/**
 *
 * @export
 * @interface ScopedCapabilities
 */
export interface ScopedCapabilities {
    /**
     *
     * @type {Array<ScopedCapability>}
     * @memberof ScopedCapabilities
     */
    capabilities?: Array<ScopedCapability>;
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof ScopedCapabilities
     */
    total?: number;
}
/**
 *
 * @export
 * @interface ScopedCapability
 */
export interface ScopedCapability extends VersionedResource {
    /**
     *
     * @type {Array<string>}
     * @memberof ScopedCapability
     */
    currentUserPermissions?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof ScopedCapability
     */
    name: string;
    /**
     *
     * @type {CapabilityStatus}
     * @memberof ScopedCapability
     */
    status: CapabilityStatus;
    /**
     *
     * @type {Array<SubstitutionConfiguration | CarrierConfiguration | RerouteShortPickConfiguration | ReturnNoteConfiguration>}
     * @memberof ScopedCapability
     */
    configurations?: Array<SubstitutionConfiguration | CarrierConfiguration | RerouteShortPickConfiguration | ReturnNoteConfiguration>;
}
/**
 *
 * @export
 * @interface Score
 */
export interface Score {
    /**
     *
     * @type {ScoreType}
     * @memberof Score
     */
    scoreType: ScoreType;
    /**
     *
     * @type {ScoreName}
     * @memberof Score
     */
    scoreName: ScoreName;
    /**
     * Describes the performance of the score
     * @type {number}
     * @memberof Score
     */
    scoreValue: number;
}
/**
 * Describes the name of the score for humans to identify
 * @export
 * @enum {string}
 */
export enum ScoreName {
    ZONE = 'ZONE',
    EXPIRYDATE = 'EXPIRY_DATE',
    RECEIPTDATE = 'RECEIPT_DATE',
    RUNNINGSEQUENCE = 'RUNNING_SEQUENCE',
    RESTOWSEQUENCE = 'RESTOW_SEQUENCE'
}
/**
 * Describes what kind of score is represented
 * @export
 * @enum {string}
 */
export enum ScoreType {
    RATING = 'RATING',
    SEQUENCE = 'SEQUENCE'
}
/**
 *
 * @export
 * @enum {string}
 */
export enum Section {
    ORDER = 'ORDER',
    PACKJOB = 'PACKJOB',
    PICKJOB = 'PICKJOB',
    HANDOVERJOB = 'HANDOVERJOB',
    PARCEL = 'PARCEL'
}
/**
 *
 * @export
 * @interface ServiceJob
 */
export interface ServiceJob extends VersionedResource {
    /**
     *
     * @type {string}
     * @memberof ServiceJob
     */
    operativeProcessRef?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceJob
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof ServiceJob
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceJob
     */
    description?: string;
    /**
     *
     * @type {Array<ServiceJobLineItem>}
     * @memberof ServiceJob
     */
    lineItems: Array<ServiceJobLineItem>;
    /**
     *
     * @type {string}
     * @memberof ServiceJob
     */
    processRef: string;
    /**
     *
     * @type {string}
     * @memberof ServiceJob
     */
    facilityRef: string;
    /**
     *
     * @type {ServiceJobStatus}
     * @memberof ServiceJob
     */
    status: ServiceJobStatus;
    /**
     *
     * @type {LocaleString}
     * @memberof ServiceJob
     */
    nameLocalized: LocaleString;
    /**
     *
     * @type {LocaleString}
     * @memberof ServiceJob
     */
    descriptionLocalized?: LocaleString;
    /**
     *
     * @type {number}
     * @memberof ServiceJob
     */
    executionTimeInMin?: number;
    /**
     *
     * @type {boolean}
     * @memberof ServiceJob
     */
    itemsReturnable?: boolean;
    /**
     *
     * @type {ItemsRequiredEnum}
     * @memberof ServiceJob
     */
    itemsRequired: ItemsRequiredEnum;
    /**
     *
     * @type {string}
     * @memberof ServiceJob
     */
    shortId?: string;
    /**
     *
     * @type {Array<ServiceJobAdditionalInformation>}
     * @memberof ServiceJob
     */
    additionalInformation?: Array<ServiceJobAdditionalInformation>;
    /**
     * Attributes that can be added to the service job. These attributes cannot be used within fulfillment processes, but it could be useful to have the information carried here.
     * @type {any}
     * @memberof ServiceJob
     */
    customAttributes?: any;
    /**
     * At which time the service job is expected to be finished.
     * @type {Date}
     * @memberof ServiceJob
     */
    targetTime: Date;
    /**
     * Id of the customService this ServiceJob was created from.
     * @type {string}
     * @memberof ServiceJob
     */
    customServiceRef: string;
    /**
     * ID of the Linked Service Job, the Service Job should reference.
     * @type {string}
     * @memberof ServiceJob
     */
    linkedServiceJobsRef?: string;
    /**
     * ID of the tenant order, the linked service jobs are part of
     * @type {string}
     * @memberof ServiceJob
     */
    tenantOrderId?: string;
    /**
     * Line items that are inherited from a preceding service job in a linked service job
     * @type {Array<InheritedServiceJobLineItem>}
     * @memberof ServiceJob
     */
    inheritedLineItems?: Array<InheritedServiceJobLineItem>;
}
/**
 *
 * @export
 * @interface ServiceJobActionsParameter
 */
export interface ServiceJobActionsParameter {
}
/**
 *
 * @export
 * @interface ServiceJobAdditionalInformation
 */
export interface ServiceJobAdditionalInformation extends AdditionalInformation {
    /**
     * Value of the additional information
     * @type {string | number | boolean}
     * @memberof ServiceJobAdditionalInformation
     */
    value?: string | number | boolean;
}
/**
 *
 * @export
 * @interface ServiceJobAdditionalInformationForCreation
 */
export interface ServiceJobAdditionalInformationForCreation {
    /**
     * ID of the additional information
     * @type {string}
     * @memberof ServiceJobAdditionalInformationForCreation
     */
    additionalInformationRef: string;
    /**
     * Value of the additional information
     * @type {string | number | boolean}
     * @memberof ServiceJobAdditionalInformationForCreation
     */
    value?: string | number | boolean;
}
/**
 *
 * @export
 * @interface ServiceJobAdditionalInformationForUpdate
 */
export interface ServiceJobAdditionalInformationForUpdate {
    /**
     * ID of the additional information
     * @type {string}
     * @memberof ServiceJobAdditionalInformationForUpdate
     */
    additionalInformationRef: string;
    /**
     * Value of the additional information
     * @type {string | number | boolean}
     * @memberof ServiceJobAdditionalInformationForUpdate
     */
    value?: string | number | boolean;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ServiceJobCancelledActionEnum {
    CancelServiceJob = 'CancelServiceJob'
}
/**
 *
 * @export
 * @interface ServiceJobCancelledActionParameter
 */
export interface ServiceJobCancelledActionParameter {
    /**
     *
     * @type {ServiceJobCancelledActionEnum}
     * @memberof ServiceJobCancelledActionParameter
     */
    name: ServiceJobCancelledActionEnum;
    /**
     * Version of the entity to be changed
     * @type {number}
     * @memberof ServiceJobCancelledActionParameter
     */
    version: number;
    /**
     *
     * @type {Array<ServiceJobAdditionalInformationForUpdate>}
     * @memberof ServiceJobCancelledActionParameter
     */
    additionalInformation?: Array<ServiceJobAdditionalInformationForUpdate>;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ServiceJobFilterChannel {
    COLLECT = 'COLLECT',
    SHIPPING = 'SHIPPING'
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ServiceJobFinishedActionEnum {
    FinishServiceJob = 'FinishServiceJob'
}
/**
 *
 * @export
 * @interface ServiceJobFinishedActionParameter
 */
export interface ServiceJobFinishedActionParameter {
    /**
     *
     * @type {ServiceJobFinishedActionEnum}
     * @memberof ServiceJobFinishedActionParameter
     */
    name: ServiceJobFinishedActionEnum;
    /**
     * Version of the entity to be changed
     * @type {number}
     * @memberof ServiceJobFinishedActionParameter
     */
    version: number;
    /**
     *
     * @type {Array<ServiceJobAdditionalInformationForUpdate>}
     * @memberof ServiceJobFinishedActionParameter
     */
    additionalInformation?: Array<ServiceJobAdditionalInformationForUpdate>;
}
/**
 *
 * @export
 * @interface ServiceJobForCreation
 */
export interface ServiceJobForCreation {
    /**
     *
     * @type {string}
     * @memberof ServiceJobForCreation
     */
    operativeProcessRef?: string;
    /**
     * ID of the Custom Service, the Service Job should reference.
     * @type {string}
     * @memberof ServiceJobForCreation
     */
    customServiceRef: string;
    /**
     * ID of the Process, the Service Job belongs to.
     * @type {string}
     * @memberof ServiceJobForCreation
     */
    processRef?: string;
    /**
     * ID of the Facility, the Service Job is executed in.
     * @type {string}
     * @memberof ServiceJobForCreation
     */
    facilityRef: string;
    /**
     *
     * @type {string}
     * @memberof ServiceJobForCreation
     */
    shortId?: string;
    /**
     *
     * @type {Array<ServiceJobLineItemForCreation>}
     * @memberof ServiceJobForCreation
     */
    lineItems?: Array<ServiceJobLineItemForCreation>;
    /**
     *
     * @type {Array<ServiceJobAdditionalInformationForCreation>}
     * @memberof ServiceJobForCreation
     */
    additionalInformation?: Array<ServiceJobAdditionalInformationForCreation>;
    /**
     * Attributes that can be added to the service job. These attributes cannot be used within fulfillment processes, but it could be useful to have the information carried here.
     * @type {any}
     * @memberof ServiceJobForCreation
     */
    customAttributes?: any;
    /**
     * At which time the service job is expected to be finished.
     * @type {Date}
     * @memberof ServiceJobForCreation
     */
    targetTime: Date;
    /**
     * ID of the tenant order, the linked service jobs are part of
     * @type {string}
     * @memberof ServiceJobForCreation
     */
    tenantOrderId?: string;
    /**
     * ID of the Service Job Link, the Service Job should reference.
     * @type {string}
     * @memberof ServiceJobForCreation
     */
    serviceJobLinkRef?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ServiceJobInProgressActionEnum {
    StartServiceJob = 'StartServiceJob'
}
/**
 *
 * @export
 * @interface ServiceJobInProgressActionParameter
 */
export interface ServiceJobInProgressActionParameter {
    /**
     *
     * @type {ServiceJobInProgressActionEnum}
     * @memberof ServiceJobInProgressActionParameter
     */
    name: ServiceJobInProgressActionEnum;
    /**
     * Version of the entity to be changed
     * @type {number}
     * @memberof ServiceJobInProgressActionParameter
     */
    version: number;
    /**
     *
     * @type {Array<ServiceJobAdditionalInformationForUpdate>}
     * @memberof ServiceJobInProgressActionParameter
     */
    additionalInformation?: Array<ServiceJobAdditionalInformationForUpdate>;
}
/**
 *
 * @export
 * @interface ServiceJobLineItem
 */
export interface ServiceJobLineItem extends ServiceJobLineItemForCreation {
    /**
     *
     * @type {string}
     * @memberof ServiceJobLineItem
     */
    id: string;
}
/**
 *
 * @export
 * @interface ServiceJobLineItemArticle
 */
export interface ServiceJobLineItemArticle extends AbstractArticle {
    /**
     *
     * @type {Array<ArticleAttributeItem>}
     * @memberof ServiceJobLineItemArticle
     */
    attributes?: Array<ArticleAttributeItem>;
}
/**
 *
 * @export
 * @interface ServiceJobLineItemForCreation
 */
export interface ServiceJobLineItemForCreation {
    /**
     * Quantity of the items
     * @type {number}
     * @memberof ServiceJobLineItemForCreation
     */
    quantity: number;
    /**
     *
     * @type {Array<string>}
     * @memberof ServiceJobLineItemForCreation
     */
    scannableCodes?: Array<string>;
    /**
     *
     * @type {ServiceJobLineItemArticle}
     * @memberof ServiceJobLineItemForCreation
     */
    article: ServiceJobLineItemArticle;
}
/**
 *
 * @export
 * @interface ServiceJobLink
 */
export interface ServiceJobLink {
    /**
     *
     * @type {string}
     * @memberof ServiceJobLink
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof ServiceJobLink
     */
    serviceJobRef: string;
    /**
     *
     * @type {Array<string>}
     * @memberof ServiceJobLink
     */
    previousServiceJobRefs: Array<string>;
    /**
     * id of the created previous service job links
     * @type {Array<string>}
     * @memberof ServiceJobLink
     */
    previousServiceJobLinkRefs: Array<string>;
    /**
     *
     * @type {Array<ServiceJobLink>}
     * @memberof ServiceJobLink
     */
    nextServiceJobLinks: Array<ServiceJobLink>;
}
/**
 *
 * @export
 * @interface ServiceJobLinkForAdding
 */
export interface ServiceJobLinkForAdding {
    /**
     *
     * @type {string}
     * @memberof ServiceJobLinkForAdding
     */
    serviceJobRef: string;
}
/**
 *
 * @export
 * @interface ServiceJobLinkForCreation
 */
export interface ServiceJobLinkForCreation {
    /**
     *
     * @type {string}
     * @memberof ServiceJobLinkForCreation
     */
    serviceJobRef: string;
    /**
     *
     * @type {Array<string>}
     * @memberof ServiceJobLinkForCreation
     */
    previousServiceJobRefs: Array<string>;
    /**
     *
     * @type {Array<ServiceJobLinkForCreation>}
     * @memberof ServiceJobLinkForCreation
     */
    nextServiceJobLinks: Array<ServiceJobLinkForCreation>;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ServiceJobObsoleteActionEnum {
    ObsoleteServiceJob = 'ObsoleteServiceJob'
}
/**
 *
 * @export
 * @interface ServiceJobObsoleteActionParameter
 */
export interface ServiceJobObsoleteActionParameter {
    /**
     *
     * @type {ServiceJobObsoleteActionEnum}
     * @memberof ServiceJobObsoleteActionParameter
     */
    name: ServiceJobObsoleteActionEnum;
    /**
     * Version of the entity to be changed
     * @type {number}
     * @memberof ServiceJobObsoleteActionParameter
     */
    version: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ServiceJobOpenActionEnum {
    OpenServiceJob = 'OpenServiceJob'
}
/**
 *
 * @export
 * @interface ServiceJobOpenActionParameter
 */
export interface ServiceJobOpenActionParameter {
    /**
     *
     * @type {ServiceJobOpenActionEnum}
     * @memberof ServiceJobOpenActionParameter
     */
    name: ServiceJobOpenActionEnum;
    /**
     * Version of the entity to be changed
     * @type {number}
     * @memberof ServiceJobOpenActionParameter
     */
    version: number;
    /**
     *
     * @type {Array<ServiceJobAdditionalInformationForUpdate>}
     * @memberof ServiceJobOpenActionParameter
     */
    additionalInformation?: Array<ServiceJobAdditionalInformationForUpdate>;
}
/**
 * Attribute to order service job by
 * @export
 * @enum {string}
 */
export enum ServiceJobOrderBy {
    TARGETTIMEASC = 'TARGET_TIME_ASC',
    TARGETTIMEDESC = 'TARGET_TIME_DESC',
    LASTMODIFIEDASC = 'LAST_MODIFIED_ASC',
    LASTMODIFIEDDESC = 'LAST_MODIFIED_DESC'
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ServiceJobStatus {
    OPEN = 'OPEN',
    INPROGRESS = 'IN_PROGRESS',
    FINISHED = 'FINISHED',
    CANCELLED = 'CANCELLED',
    WAITINGFORINPUT = 'WAITING_FOR_INPUT',
    OBSOLETE = 'OBSOLETE',
    NOTREADY = 'NOT_READY'
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ServiceJobWaitingForInputActionEnum {
    HoldServiceJob = 'HoldServiceJob'
}
/**
 *
 * @export
 * @interface ServiceJobWaitingForInputActionParameter
 */
export interface ServiceJobWaitingForInputActionParameter {
    /**
     *
     * @type {ServiceJobWaitingForInputActionEnum}
     * @memberof ServiceJobWaitingForInputActionParameter
     */
    name: ServiceJobWaitingForInputActionEnum;
    /**
     * Version of the entity to be changed
     * @type {number}
     * @memberof ServiceJobWaitingForInputActionParameter
     */
    version: number;
    /**
     *
     * @type {Array<ServiceJobAdditionalInformationForUpdate>}
     * @memberof ServiceJobWaitingForInputActionParameter
     */
    additionalInformation?: Array<ServiceJobAdditionalInformationForUpdate>;
}
/**
 *
 * @export
 * @interface ServiceJobWithSearchPaths
 */
export interface ServiceJobWithSearchPaths extends ServiceJob {
    /**
     *
     * @type {Array<string>}
     * @memberof ServiceJobWithSearchPaths
     */
    searchPaths: Array<string>;
}
/**
 *
 * @export
 * @interface ServiceJobs
 */
export interface ServiceJobs {
    /**
     *
     * @type {Array<ServiceJobWithSearchPaths>}
     * @memberof ServiceJobs
     */
    serviceJobs?: Array<ServiceJobWithSearchPaths>;
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof ServiceJobs
     */
    total?: number;
}
/**
 *
 * @export
 * @interface ShipFromStoreRerouteConfiguration
 */
export interface ShipFromStoreRerouteConfiguration {
    /**
     *
     * @type {boolean}
     * @memberof ShipFromStoreRerouteConfiguration
     */
    active: boolean;
    /**
     * @deprecated This config property is deprecated since 26/02/24. Use GlobalManualRerouteConfiguration instead.
     * @type {boolean}
     * @memberof ShipFromStoreRerouteConfiguration
     */
    allowManualReroute?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof ShipFromStoreRerouteConfiguration
     */
    facilityWideRerouteOnShortPick?: boolean;
    /**
     * Only pickJobs where the targetTime in not larger than now plus this number are rerouted
     * @type {number}
     * @memberof ShipFromStoreRerouteConfiguration
     */
    rerouteTargetTime?: number;
    /**
     *
     * @type {RerouteType}
     * @memberof ShipFromStoreRerouteConfiguration
     */
    rerouteType: RerouteType;
}
/**
 *
 * @export
 * @interface Shipment
 */
export interface Shipment extends ShipmentForCreation {
    /**
     * The date this entity was created at the platform. This value is generated by the service.
     * @type {Date}
     * @memberof Shipment
     */
    created?: Date;
    /**
     * The date this entity was modified last. This value is generated by the service.
     * @type {Date}
     * @memberof Shipment
     */
    lastModified?: Date;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof Shipment
     */
    version: number;
    /**
     * Indicates if gdpr related data was anonymized
     * @type {boolean}
     * @memberof Shipment
     */
    anonymized?: boolean;
    /**
     * Indicates if there is an active carrier configuration to fulfill this shipment
     * @type {boolean}
     * @memberof Shipment
     */
    hasActiveCarrier: boolean;
    /**
     *
     * @type {string}
     * @memberof Shipment
     */
    carrierKey?: string;
    /**
     * The id of this Shipment. It is generated during creation automatically and suits as the primary identifier of the described entity.
     * @type {string}
     * @memberof Shipment
     */
    id: string;
    /**
     *
     * @type {Array<ShipmentLineItem>}
     * @memberof Shipment
     */
    lineItems?: Array<ShipmentLineItem>;
    /**
     *
     * @type {Array<StrippedParcel>}
     * @memberof Shipment
     */
    parcels?: Array<StrippedParcel>;
    /**
     *
     * @type {ShipmentStatus}
     * @memberof Shipment
     */
    status: ShipmentStatus;
}
/**
 *
 * @export
 * @interface ShipmentCreatedWebHookEvent
 */
export interface ShipmentCreatedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {Shipment}
     * @memberof ShipmentCreatedWebHookEvent
     */
    payload: Shipment;
}
/**
 *
 * @export
 * @interface ShipmentForCreation
 */
export interface ShipmentForCreation {
    /**
     *
     * @type {string}
     * @memberof ShipmentForCreation
     */
    operativeProcessRef?: string;
    /**
     * The URL to the carrier logo
     * @type {string}
     * @memberof ShipmentForCreation
     */
    carrierLogoUrl?: string;
    /**
     * The reference to the carrier for which the shipment is assigned to
     * @type {string}
     * @memberof ShipmentForCreation
     */
    carrierRef?: string;
    /**
     * Desired product of given carrier to choose when ordering a label
     * @type {string}
     * @memberof ShipmentForCreation
     */
    carrierProduct?: string;
    /**
     *
     * @type {Array<CarrierServices>}
     * @memberof ShipmentForCreation
     */
    carrierServices?: Array<CarrierServices>;
    /**
     * Attributes that can be added to the shipment. These attributes cannot be used within fulfillment processes, but it could be useful to have the informations carried here.
     * @type {any}
     * @memberof ShipmentForCreation
     */
    customAttributes?: any;
    /**
     * The reference to the facility which the shipment is assigned to.
     * @type {string}
     * @memberof ShipmentForCreation
     */
    facilityRef: string;
    /**
     *
     * @type {Array<ShipmentLineItemForCreation>}
     * @memberof ShipmentForCreation
     */
    lineItems?: Array<ShipmentLineItemForCreation>;
    /**
     * The date this order was created at the supplying system.
     * @type {Date}
     * @memberof ShipmentForCreation
     */
    orderDate: Date;
    /**
     * The id of the facility reference.
     * @type {string}
     * @memberof ShipmentForCreation
     */
    pickJobRef?: string;
    /**
     * Id of the global process related to this entity. For example used for starting the GDPR process and others.
     * @type {string}
     * @memberof ShipmentForCreation
     */
    processId?: string;
    /**
     * The short identifier of the shipment.
     * @type {string}
     * @memberof ShipmentForCreation
     */
    shortId?: string;
    /**
     *
     * @type {FacilityAddress}
     * @memberof ShipmentForCreation
     */
    sourceAddress?: FacilityAddress;
    /**
     *
     * @type {ConsumerAddress}
     * @memberof ShipmentForCreation
     */
    targetAddress?: ConsumerAddress;
    /**
     *
     * @type {ConsumerAddress}
     * @memberof ShipmentForCreation
     */
    invoiceAddress?: ConsumerAddress;
    /**
     *
     * @type {ConsumerAddress}
     * @memberof ShipmentForCreation
     */
    postalAddress?: ConsumerAddress;
    /**
     * At which time the result is expected.
     * @type {Date}
     * @memberof ShipmentForCreation
     */
    targetTime: Date;
    /**
     * Reference to the order in the tenant system.
     * @type {string}
     * @memberof ShipmentForCreation
     */
    tenantOrderId?: string;
    /**
     * The start date for the targetTime calculation.
     * @type {Date}
     * @memberof ShipmentForCreation
     */
    targetTimeBaseDate?: Date;
    /**
     *
     * @type {PaymentInformation}
     * @memberof ShipmentForCreation
     */
    paymentInformation?: PaymentInformation;
    /**
     *
     * @type {Array<TagReference>}
     * @memberof ShipmentForCreation
     */
    tags?: Array<TagReference>;
    /**
     *
     * @type {Array<OperativeTransfer>}
     * @memberof ShipmentForCreation
     */
    transfers?: Array<OperativeTransfer>;
}
/**
 *
 * @export
 * @interface ShipmentLineItem
 */
export interface ShipmentLineItem extends ShipmentLineItemForCreation {
    /**
     * The id of this lineItem. It is generated during creation automatically and suits as the primary identifier of the described entity.
     * @type {string}
     * @memberof ShipmentLineItem
     */
    id: string;
}
/**
 *
 * @export
 * @interface ShipmentLineItemArticle
 */
export interface ShipmentLineItemArticle extends AbstractArticle {
    /**
     *
     * @type {Array<ArticleAttributeItem>}
     * @memberof ShipmentLineItemArticle
     */
    attributes?: Array<ArticleAttributeItem>;
}
/**
 *
 * @export
 * @interface ShipmentLineItemForCreation
 */
export interface ShipmentLineItemForCreation {
    /**
     *
     * @type {ShipmentLineItemArticle}
     * @memberof ShipmentLineItemForCreation
     */
    article: ShipmentLineItemArticle;
    /**
     * Attributes that can be added to the orderline. These attributes cannot be used within fulfillment processes, but it could be useful to have the informations carried here.
     * @type {any}
     * @memberof ShipmentLineItemForCreation
     */
    customAttributes?: any;
    /**
     * Identifier for items unit of measurement.
     * @type {string}
     * @memberof ShipmentLineItemForCreation
     */
    measurementUnitKey?: string;
    /**
     * quantity of the specific article that has been ordered
     * @type {number}
     * @memberof ShipmentLineItemForCreation
     */
    quantity: number;
    /**
     *
     * @type {Array<TagReference>}
     * @memberof ShipmentLineItemForCreation
     */
    tags?: Array<TagReference>;
    /**
     *
     * @type {Array<string>}
     * @memberof ShipmentLineItemForCreation
     */
    scannableCodes?: Array<string>;
}
/**
 * STATUS_TARGET_TIME_LAST_MODIFIED_DATE is depricated
 * @export
 * @enum {string}
 */
export enum ShipmentOrderBy {
    STATUSTARGETTIMEORDERDATE = 'STATUS_TARGET_TIME_ORDER_DATE'
}
/**
 *
 * @export
 * @interface ShipmentPatchActions
 */
export interface ShipmentPatchActions {
    /**
     *
     * @type {Array<ModifyShipmentAction>}
     * @memberof ShipmentPatchActions
     */
    actions: Array<ModifyShipmentAction>;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof ShipmentPatchActions
     */
    version: number;
}
/**
 * Every newly created shipment is in state INITIAL. When the parcel labels should be requested the state changes to REQUEST and as soon as all parcel labels are successfully requested the state changes to CONFIRMED. The state COMPLETED is set in the end or the process
 * @export
 * @enum {string}
 */
export enum ShipmentStatus {
    INITIAL = 'INITIAL',
    REQUEST = 'REQUEST',
    RETRYABLE = 'RETRYABLE',
    CONFIRMED = 'CONFIRMED',
    COMPLETED = 'COMPLETED',
    CANCELED = 'CANCELED',
    OBSOLETE = 'OBSOLETE'
}
/**
 *
 * @export
 * @interface ShipmentUpdatedWebHookEvent
 */
export interface ShipmentUpdatedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {Shipment}
     * @memberof ShipmentUpdatedWebHookEvent
     */
    payload: Shipment;
}
/**
 *
 * @export
 * @interface ShipmentWithSearchPath
 */
export interface ShipmentWithSearchPath extends Shipment {
    /**
     *
     * @type {Array<string>}
     * @memberof ShipmentWithSearchPath
     */
    searchPaths?: Array<string>;
}
/**
 *
 * @export
 * @interface ShortPickReason
 */
export interface ShortPickReason {
    /**
     * translated reasonLocalized according to the given locale
     * @type {string}
     * @memberof ShortPickReason
     */
    reason?: string;
    /**
     * Flag to mark a reason as active or inactive
     * @type {boolean}
     * @memberof ShortPickReason
     */
    active: boolean;
    /**
     *
     * @type {LocaleString}
     * @memberof ShortPickReason
     */
    reasonLocalized: LocaleString;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum SortDirection {
    ASCENDING = 'ASCENDING',
    DESCENDING = 'DESCENDING'
}
/**
 *
 * @export
 * @interface SortParameter
 */
export interface SortParameter {
    /**
     *
     * @type {SortDirection}
     * @memberof SortParameter
     */
    sortDirection: SortDirection;
    /**
     *
     * @type {SortParameterName}
     * @memberof SortParameter
     */
    sortParameterName: SortParameterName;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum SortParameterName {
    NAME = 'NAME',
    ADDRESS = 'ADDRESS',
    STATUS = 'STATUS',
    OPERATIVESTATUS = 'OPERATIVESTATUS',
    SERVICETYPE = 'SERVICETYPE',
    ORDEREDAMOUNT = 'ORDEREDAMOUNT',
    ORDERDATE = 'ORDERDATE',
    ORDERID = 'ORDERID'
}
/**
 *
 * @export
 * @interface SplitInformation
 */
export interface SplitInformation {
    /**
     *
     * @type {DecisionLogFacilityInfo}
     * @memberof SplitInformation
     */
    targetFacility?: DecisionLogFacilityInfo;
    /**
     *
     * @type {string}
     * @memberof SplitInformation
     */
    targetRoutingPlanRef: string;
    /**
     *
     * @type {number}
     * @memberof SplitInformation
     */
    splitCount: number;
    /**
     *
     * @type {Array<AssignmentItem>}
     * @memberof SplitInformation
     */
    splittedItems: Array<AssignmentItem>;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum SplitResultType {
    SPLIT = 'SPLIT',
    DONOTSPLIT = 'DO_NOT_SPLIT',
    DONOTSPLITUSEBESTRATED = 'DO_NOT_SPLIT_USE_BEST_RATED',
    DONOTSPLITBECAUSEAVAILABILITYUSEBESTRATED = 'DO_NOT_SPLIT_BECAUSE_AVAILABILITY_USE_BEST_RATED',
    DONOTSPLITUSEBESTAVAILABLE = 'DO_NOT_SPLIT_USE_BEST_AVAILABLE',
    REASSIGNTOPARENT = 'REASSIGN_TO_PARENT',
    REASSIGNTOPARENTCOMPLETELY = 'REASSIGN_TO_PARENT_COMPLETELY',
    FAIL = 'FAIL',
    INVALIDSPLIT = 'INVALID_SPLIT',
    PARKINWAITINGROOM = 'PARK_IN_WAITING_ROOM'
}
/**
 *
 * @export
 * @enum {string}
 */
export enum StartItemReturnActionEnum {
    StartItemReturn = 'StartItemReturn'
}
/**
 *
 * @export
 * @interface StartItemReturnActionParameter
 */
export interface StartItemReturnActionParameter {
    /**
     *
     * @type {StartItemReturnActionEnum}
     * @memberof StartItemReturnActionParameter
     */
    name: StartItemReturnActionEnum;
    /**
     * Version of the entity to be changed
     * @type {number}
     * @memberof StartItemReturnActionParameter
     */
    itemReturnJobVersion: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum StartItemReturnJobActionEnum {
    StartItemReturnJob = 'StartItemReturnJob'
}
/**
 *
 * @export
 * @interface StartItemReturnJobActionParameter
 */
export interface StartItemReturnJobActionParameter {
    /**
     *
     * @type {StartItemReturnJobActionEnum}
     * @memberof StartItemReturnJobActionParameter
     */
    name: StartItemReturnJobActionEnum;
    /**
     * Version of the entity to be changed
     * @type {number}
     * @memberof StartItemReturnJobActionParameter
     */
    version: number;
}
/**
 * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />@deprecated Use api/pickruns/:id/actions instead
 * @export
 * @interface StartPickRunAction
 */
export interface StartPickRunAction extends AbstractModificationAction {
    /**
     * Use value 'StartPickRun', because you want to start a pickrun
     * @type {string}
     * @memberof StartPickRunAction
     */
    action: StartPickRunAction.ActionEnum;
}

/**
 * @export
 * @namespace StartPickRunAction
 */
export namespace StartPickRunAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        StartPickRun = 'StartPickRun'
    }
}
/**
 *
 * @export
 * @interface Status
 */
export interface Status {
    /**
     * The current state of the API
     * @type {string}
     * @memberof Status
     */
    status: Status.StatusEnum;
}

/**
 * @export
 * @namespace Status
 */
export namespace Status {
    /**
     * @export
     * @enum {string}
     */
    export enum StatusEnum {
        UP = 'UP',
        DEGRADED = 'DEGRADED',
        DOWN = 'DOWN'
    }
}
/**
 *
 * @export
 * @interface Sticker
 */
export interface Sticker {
    /**
     * unique identifier
     * @type {string}
     * @memberof Sticker
     */
    key: string;
    /**
     * priority of the given sticker
     * @type {number}
     * @memberof Sticker
     */
    priority: number;
    /**
     *
     * @type {LocaleString}
     * @memberof Sticker
     */
    nameLocalized: LocaleString;
    /**
     * Translated display name
     * @type {string}
     * @memberof Sticker
     */
    name?: string;
    /**
     * optional color coding for the sticker
     * @type {string}
     * @memberof Sticker
     */
    color?: string;
}
/**
 *
 * @export
 * @interface StickerConfiguration
 */
export interface StickerConfiguration {
    /**
     *
     * @type {Array<OfferedStickersByTag>}
     * @memberof StickerConfiguration
     */
    offeredStickersByTag?: Array<OfferedStickersByTag>;
}
/**
 *
 * @export
 * @interface Stock
 */
export interface Stock {
    /**
     *
     * @type {number}
     * @memberof Stock
     */
    reserved: number;
    /**
     *
     * @type {number}
     * @memberof Stock
     */
    facilityWideReserved: number;
    /**
     *
     * @type {number}
     * @memberof Stock
     */
    available: number;
    /**
     *
     * @type {string}
     * @memberof Stock
     */
    id: string;
    /**
     *
     * @type {number}
     * @memberof Stock
     */
    version: number;
    /**
     *
     * @type {string}
     * @memberof Stock
     */
    facilityRef: string;
    /**
     *
     * @type {string}
     * @memberof Stock
     */
    tenantArticleId: string;
    /**
     *
     * @type {string}
     * @memberof Stock
     */
    tenantStockId?: string;
    /**
     *
     * @type {Date}
     * @memberof Stock
     */
    created: Date;
    /**
     *
     * @type {Date}
     * @memberof Stock
     */
    lastModified: Date;
    /**
     *
     * @type {number}
     * @memberof Stock
     */
    value: number;
    /**
     *
     * @type {string}
     * @memberof Stock
     */
    locationRef?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof Stock
     */
    traits: Array<Stock.TraitsEnum>;
    /**
     *
     * @type {Array<string>}
     * @memberof Stock
     */
    scores?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof Stock
     */
    scannableCodes?: Array<string>;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof Stock
     */
    properties?: { [key: string]: string; };
    /**
     *
     * @type {string}
     * @memberof Stock
     */
    serializedProperties: string;
    /**
     *
     * @type {Date}
     * @memberof Stock
     */
    receiptDate: Date;
    /**
     *
     * @type {Date}
     * @memberof Stock
     */
    availableUntil?: Date;
    /**
     * Attributes that can be added to this entity. These attributes **cannot** be used within fulfillment processes, but enable you to attach custom data from your systems to fulfillmenttools entities.
     * @type {any}
     * @memberof Stock
     */
    customAttributes?: any;
}

/**
 * @export
 * @namespace Stock
 */
export namespace Stock {
    /**
     * @export
     * @enum {string}
     */
    export enum TraitsEnum {
        PICKABLE = 'PICKABLE',
        ACCESSIBLE = 'ACCESSIBLE',
        KEEPONZERO = 'KEEP_ON_ZERO'
    }
}
/**
 *
 * @export
 * @interface StockAction
 */
export interface StockAction {
    /**
     * Deprecated. Use 'action' with a single action input instead.
     * @type {Array<StockDeleteByLocations | StockDeleteByProducts | StockDeleteByIds>}
     * @memberof StockAction
     */
    actions?: Array<StockDeleteByLocations | StockDeleteByProducts | StockDeleteByIds>;
    /**
     *
     * @type {StockDeleteByLocations | StockDeleteByProducts | StockDeleteByIds | StockMoveToLocation}
     * @memberof StockAction
     */
    action?: StockDeleteByLocations | StockDeleteByProducts | StockDeleteByIds | StockMoveToLocation;
}
/**
 *
 * @export
 * @interface StockActionResult
 */
export interface StockActionResult {
    /**
     *
     * @type {string}
     * @memberof StockActionResult
     */
    name: StockActionResult.NameEnum;
    /**
     *
     * @type {StockDeleteActionResult | StockMoveToLocationActionResult}
     * @memberof StockActionResult
     */
    result: StockDeleteActionResult | StockMoveToLocationActionResult;
}

/**
 * @export
 * @namespace StockActionResult
 */
export namespace StockActionResult {
    /**
     * @export
     * @enum {string}
     */
    export enum NameEnum {
        DELETEBYLOCATIONS = 'DELETE_BY_LOCATIONS',
        DELETEBYPRODUCTS = 'DELETE_BY_PRODUCTS',
        DELETEBYIDS = 'DELETE_BY_IDS',
        MOVETOLOCATION = 'MOVE_TO_LOCATION'
    }
}
/**
 *
 * @export
 * @interface StockConfiguration
 */
export interface StockConfiguration extends VersionedResource {
    /**
     * Indicates if manual stock modification is allowed
     * @type {boolean}
     * @memberof StockConfiguration
     */
    stockModificationEnabled: boolean;
    /**
     *
     * @type {string}
     * @memberof StockConfiguration
     */
    id?: string;
}
/**
 *
 * @export
 * @interface StockConfigurationPatchActions
 */
export interface StockConfigurationPatchActions {
    /**
     *
     * @type {Array<ModifyRetainedOfflineStockAction | ModifyListingReactivationAfterAction | ModifyShortpickAction>}
     * @memberof StockConfigurationPatchActions
     */
    actions: Array<ModifyRetainedOfflineStockAction | ModifyListingReactivationAfterAction | ModifyShortpickAction>;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof StockConfigurationPatchActions
     */
    version: number;
}
/**
 *
 * @export
 * @interface StockDeleteActionResult
 */
export interface StockDeleteActionResult {
    /**
     *
     * @type {Array<string>}
     * @memberof StockDeleteActionResult
     */
    ids: Array<string>;
}
/**
 *
 * @export
 * @interface StockDeleteByIds
 */
export interface StockDeleteByIds {
    /**
     *
     * @type {string}
     * @memberof StockDeleteByIds
     */
    name: StockDeleteByIds.NameEnum;
    /**
     *
     * @type {Array<string>}
     * @memberof StockDeleteByIds
     */
    ids: Array<string>;
}

/**
 * @export
 * @namespace StockDeleteByIds
 */
export namespace StockDeleteByIds {
    /**
     * @export
     * @enum {string}
     */
    export enum NameEnum {
        DELETEBYIDS = 'DELETE_BY_IDS'
    }
}
/**
 *
 * @export
 * @interface StockDeleteByLocations
 */
export interface StockDeleteByLocations {
    /**
     *
     * @type {string}
     * @memberof StockDeleteByLocations
     */
    name: StockDeleteByLocations.NameEnum;
    /**
     *
     * @type {Array<string>}
     * @memberof StockDeleteByLocations
     */
    locationRefs: Array<string>;
}

/**
 * @export
 * @namespace StockDeleteByLocations
 */
export namespace StockDeleteByLocations {
    /**
     * @export
     * @enum {string}
     */
    export enum NameEnum {
        DELETEBYLOCATIONS = 'DELETE_BY_LOCATIONS'
    }
}
/**
 *
 * @export
 * @interface StockDeleteByProducts
 */
export interface StockDeleteByProducts {
    /**
     *
     * @type {string}
     * @memberof StockDeleteByProducts
     */
    name: StockDeleteByProducts.NameEnum;
    /**
     *
     * @type {string}
     * @memberof StockDeleteByProducts
     */
    facilityRef: string;
    /**
     *
     * @type {Array<string>}
     * @memberof StockDeleteByProducts
     */
    tenantArticleIds: Array<string>;
}

/**
 * @export
 * @namespace StockDeleteByProducts
 */
export namespace StockDeleteByProducts {
    /**
     * @export
     * @enum {string}
     */
    export enum NameEnum {
        DELETEBYPRODUCTS = 'DELETE_BY_PRODUCTS'
    }
}
/**
 *
 * @export
 * @interface StockDistribution
 */
export interface StockDistribution {
    /**
     *
     * @type {string}
     * @memberof StockDistribution
     */
    tenantArticleId: string;
    /**
     *
     * @type {StockSummaryDetails}
     * @memberof StockDistribution
     */
    summary: StockSummaryDetails;
    /**
     *
     * @type {Array<FacilityStockDistribution>}
     * @memberof StockDistribution
     */
    facilityStocks: Array<FacilityStockDistribution>;
}
/**
 *
 * @export
 * @interface StockForCreation
 */
export interface StockForCreation {
    /**
     *
     * @type {string}
     * @memberof StockForCreation
     */
    facilityRef: string;
    /**
     *
     * @type {string}
     * @memberof StockForCreation
     */
    tenantArticleId: string;
    /**
     *
     * @type {number}
     * @memberof StockForCreation
     */
    value: number;
    /**
     *
     * @type {string}
     * @memberof StockForCreation
     */
    locationRef?: string;
    /**
     *
     * @type {StockPropertyPreset}
     * @memberof StockForCreation
     */
    properties?: StockPropertyPreset;
    /**
     *
     * @type {Date}
     * @memberof StockForCreation
     */
    receiptDate?: Date;
    /**
     *
     * @type {Date}
     * @memberof StockForCreation
     */
    availableUntil?: Date;
    /**
     * Attributes that can be added to this entity. These attributes **cannot** be used within fulfillment processes, but enable you to attach custom data from your systems to fulfillmenttools entities.
     * @type {any}
     * @memberof StockForCreation
     */
    customAttributes?: any;
}
/**
 *
 * @export
 * @interface StockForUpdate
 */
export interface StockForUpdate {
    /**
     *
     * @type {number}
     * @memberof StockForUpdate
     */
    value: number;
    /**
     *
     * @type {string}
     * @memberof StockForUpdate
     */
    locationRef?: string;
    /**
     * Attributes that can be added to this entity. These attributes **cannot** be used within fulfillment processes, but enable you to attach custom data from your systems to fulfillmenttools entities.
     * @type {any}
     * @memberof StockForUpdate
     */
    customAttributes?: any;
    /**
     *
     * @type {number}
     * @memberof StockForUpdate
     */
    version: number;
}
/**
 *
 * @export
 * @interface StockForUpsertUpdate
 */
export interface StockForUpsertUpdate {
    /**
     *
     * @type {number}
     * @memberof StockForUpsertUpdate
     */
    value: number;
    /**
     *
     * @type {string}
     * @memberof StockForUpsertUpdate
     */
    locationRef?: string;
    /**
     * Attributes that can be added to this entity. These attributes **cannot** be used within fulfillment processes, but enable you to attach custom data from your systems to fulfillmenttools entities.
     * @type {any}
     * @memberof StockForUpsertUpdate
     */
    customAttributes?: any;
    /**
     *
     * @type {string}
     * @memberof StockForUpsertUpdate
     */
    id: string;
    /**
     *
     * @type {number}
     * @memberof StockForUpsertUpdate
     */
    version: number;
}
/**
 *
 * @export
 * @interface StockInformation
 */
export interface StockInformation extends StockInformationForCreation {
    /**
     *
     * @type {number}
     * @memberof StockInformation
     */
    reserved?: number;
    /**
     * The actual available amount for this stock
     * @type {number}
     * @memberof StockInformation
     */
    available: number;
}
/**
 * @deprecated This object is deprecated since 30th of November 2023. This object carries information about the current stock of this listing.
 * @export
 * @interface StockInformationForCreation
 */
export interface StockInformationForCreation {
    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />@deprecated This field is deprecated since 8th of February 2023. Reserved can't be overridden by the API, because its internally now handled by open PickJobs (or other upcoming ways to reserve Stock) Any Value provided will be ignored upon arrival.
     * @type {number}
     * @memberof StockInformationForCreation
     */
    reserved?: number;
    /**
     * This the amount of the given article that is in stock for the given facility
     * @type {number}
     * @memberof StockInformationForCreation
     */
    stock: number;
}
/**
 *
 * @export
 * @interface StockMoveToLocation
 */
export interface StockMoveToLocation {
    /**
     *
     * @type {string}
     * @memberof StockMoveToLocation
     */
    name: StockMoveToLocation.NameEnum;
    /**
     *
     * @type {string}
     * @memberof StockMoveToLocation
     */
    fromStockId: string;
    /**
     *
     * @type {string}
     * @memberof StockMoveToLocation
     */
    toLocationRef: string;
    /**
     *
     * @type {number}
     * @memberof StockMoveToLocation
     */
    amount: number;
    /**
     *
     * @type {MoveStockToLocationOptions}
     * @memberof StockMoveToLocation
     */
    options?: MoveStockToLocationOptions;
}

/**
 * @export
 * @namespace StockMoveToLocation
 */
export namespace StockMoveToLocation {
    /**
     * @export
     * @enum {string}
     */
    export enum NameEnum {
        MOVETOLOCATION = 'MOVE_TO_LOCATION'
    }
}
/**
 *
 * @export
 * @interface StockMoveToLocationActionResult
 */
export interface StockMoveToLocationActionResult {
    /**
     *
     * @type {Stock}
     * @memberof StockMoveToLocationActionResult
     */
    fromStock?: Stock;
    /**
     *
     * @type {Stock}
     * @memberof StockMoveToLocationActionResult
     */
    toStock: Stock;
}
/**
 *
 * @export
 * @interface StockPaginatedResult
 */
export interface StockPaginatedResult {
    /**
     *
     * @type {number}
     * @memberof StockPaginatedResult
     */
    total: number;
    /**
     *
     * @type {Array<Stock>}
     * @memberof StockPaginatedResult
     */
    stocks: Array<Stock>;
}
/**
 *
 * @export
 * @interface StockPropertyDefinition
 */
export interface StockPropertyDefinition {
    /**
     *
     * @type {StockPropertyInputType}
     * @memberof StockPropertyDefinition
     */
    inputType: StockPropertyInputType;
    /**
     * Indicates if this property is required.
     * @type {boolean}
     * @memberof StockPropertyDefinition
     */
    required: boolean;
    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />If {{NOW}} is provided, this will be replaced with a timestamp.
     * @type {string}
     * @memberof StockPropertyDefinition
     */
    defaultValue?: string;
}
/**
 * Input Type for this property, used for clients.
 * @export
 * @enum {string}
 */
export enum StockPropertyInputType {
    DATE = 'DATE',
    TEXT = 'TEXT'
}
/**
 *
 * @export
 * @interface StockPropertyPreset
 */
export interface StockPropertyPreset {
    /**
     *
     * @type {string}
     * @memberof StockPropertyPreset
     */
    expiry?: string;
    /**
     *
     * @type {string}
     * @memberof StockPropertyPreset
     */
    batch?: string;
}
/**
 *
 * @export
 * @interface StockSummaries
 */
export interface StockSummaries {
    /**
     *
     * @type {number}
     * @memberof StockSummaries
     */
    total: number;
    /**
     *
     * @type {Array<StockSummary>}
     * @memberof StockSummaries
     */
    stockSummaries: Array<StockSummary>;
}
/**
 *
 * @export
 * @interface StockSummary
 */
export interface StockSummary {
    /**
     * ALPHA Status!. The facilityRefs that are included in the stock summary.
     * @type {Array<string>}
     * @memberof StockSummary
     */
    includedFacilityRefs: Array<string>;
    /**
     *
     * @type {StockSummaryArticle}
     * @memberof StockSummary
     */
    article: StockSummaryArticle;
    /**
     *
     * @type {StockSummaryDetails}
     * @memberof StockSummary
     */
    details: StockSummaryDetails;
}
/**
 *
 * @export
 * @interface StockSummaryArticle
 */
export interface StockSummaryArticle {
    /**
     *
     * @type {string}
     * @memberof StockSummaryArticle
     */
    tenantArticleId: string;
    /**
     *
     * @type {string}
     * @memberof StockSummaryArticle
     */
    title: string;
    /**
     *
     * @type {string}
     * @memberof StockSummaryArticle
     */
    imageUrl?: string;
}
/**
 *
 * @export
 * @interface StockSummaryDetails
 */
export interface StockSummaryDetails {
    /**
     *
     * @type {number}
     * @memberof StockSummaryDetails
     */
    reserved: number;
    /**
     *
     * @type {number}
     * @memberof StockSummaryDetails
     */
    totalAmount: number;
    /**
     * This field is deprecated and replaced by new availability concepts. Please see https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/global-inventory/availability for more information.
     * @type {number}
     * @memberof StockSummaryDetails
     */
    available: number;
    /**
     *
     * @type {number}
     * @memberof StockSummaryDetails
     */
    safetyStock: number;
    /**
     *
     * @type {ByTrait}
     * @memberof StockSummaryDetails
     */
    byTrait: ByTrait;
    /**
     *
     * @type {number}
     * @memberof StockSummaryDetails
     */
    availableForPicking: number;
    /**
     * This field is deprecated and replaced by new availability concepts. Please see https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/global-inventory/availability for more information.
     * @type {number}
     * @memberof StockSummaryDetails
     */
    availableToPromise: number;
    /**
     * This field is deprecated and replaced by new availability concepts. Please see https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/global-inventory/availability for more information.
     * @type {number}
     * @memberof StockSummaryDetails
     */
    readyToPick: number;
    /**
     *
     * @type {number}
     * @memberof StockSummaryDetails
     */
    availableOnStock: number;
    /**
     *
     * @type {number}
     * @memberof StockSummaryDetails
     */
    stockOnHand: number;
    /**
     *
     * @type {Array<ChannelStockAvailability>}
     * @memberof StockSummaryDetails
     */
    channelAdjusted?: Array<ChannelStockAvailability>;
}
/**
 *
 * @export
 * @interface StockUpsertOperationResult
 */
export interface StockUpsertOperationResult {
    /**
     *
     * @type {Stock}
     * @memberof StockUpsertOperationResult
     */
    stock: Stock;
    /**
     *
     * @type {string}
     * @memberof StockUpsertOperationResult
     */
    status: StockUpsertOperationResult.StatusEnum;
}

/**
 * @export
 * @namespace StockUpsertOperationResult
 */
export namespace StockUpsertOperationResult {
    /**
     * @export
     * @enum {string}
     */
    export enum StatusEnum {
        UPDATED = 'UPDATED',
        CREATED = 'CREATED'
    }
}
/**
 *
 * @export
 * @interface StocksForUpsert
 */
export interface StocksForUpsert {
    /**
     * Please be sure to include each stock (by ID) only once, when updating. Otherwise the whole batch is rejected with an error.
     * @type {Array<StockForCreation | StockForUpsertUpdate | any>}
     * @memberof StocksForUpsert
     */
    stocks: Array<StockForCreation | StockForUpsertUpdate | any>;
}
/**
 *
 * @export
 * @interface StocksStockIdBody
 */
export interface StocksStockIdBody {
}
/**
 *
 * @export
 * @interface StorageLocation
 */
export interface StorageLocation extends StorageLocationForReplacement {
    /**
     * The date this entity was created at the platform. This value is generated by the service.
     * @type {Date}
     * @memberof StorageLocation
     */
    created?: Date;
    /**
     * The date this entity was modified last. This value is generated by the service.
     * @type {Date}
     * @memberof StorageLocation
     */
    lastModified?: Date;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof StorageLocation
     */
    version: number;
    /**
     * The id of this storage location
     * @type {string}
     * @memberof StorageLocation
     */
    id: string;
    /**
     * The id of the facility reference.
     * @type {string}
     * @memberof StorageLocation
     */
    facilityRef: string;
    /**
     * Deprecated! This field will not be filled in newly created storage locations. Resolve the zone name separately via the facilities/{id}/zones endpoint. The name of the Zone to which this storage location belongs
     * @type {string}
     * @memberof StorageLocation
     */
    zoneName?: string;
    /**
     * The traits of this storage location
     * @type {Array<StorageLocationTrait>}
     * @memberof StorageLocation
     */
    traits: Array<StorageLocationTrait>;
    /**
     *
     * @type {StorageLocationTraitConfig}
     * @memberof StorageLocation
     */
    traitConfig?: StorageLocationTraitConfig;
    /**
     *
     * @type {number}
     * @memberof StorageLocation
     */
    schemaVersion?: number;
}
/**
 *
 * @export
 * @interface StorageLocationForCreation
 */
export interface StorageLocationForCreation {
    /**
     * The name of this storage location
     * @type {string}
     * @memberof StorageLocationForCreation
     */
    name: string;
    /**
     * The internal tenant id for this location
     * @type {string}
     * @memberof StorageLocationForCreation
     */
    tenantLocationId?: string;
    /**
     *
     * @type {StorageLocationType}
     * @memberof StorageLocationForCreation
     */
    type: StorageLocationType;
    /**
     * The traits of this storage location, includes both local config and and defaults. Do not use to write to traits, use traitConfig instead.
     * @type {Array<StorageLocationTrait>}
     * @memberof StorageLocationForCreation
     */
    traits?: Array<StorageLocationTrait>;
    /**
     *
     * @type {StorageLocationTraitConfig}
     * @memberof StorageLocationForCreation
     */
    traitConfig?: StorageLocationTraitConfig;
    /**
     * Barcodes representing this storage location
     * @type {Array<string>}
     * @memberof StorageLocationForCreation
     */
    scannableCodes: Array<string>;
    /**
     * The Sequence item/s of this location
     * @type {Array<StorageLocationSequenceItem>}
     * @memberof StorageLocationForCreation
     */
    runningSequences: Array<StorageLocationSequenceItem>;
    /**
     * The id of the Zone to which this storage location belongs
     * @type {string}
     * @memberof StorageLocationForCreation
     */
    zoneRef?: string;
    /**
     * The name of the Zone to which this storage location belongs
     * @type {string}
     * @memberof StorageLocationForCreation
     */
    zoneName?: string;
    /**
     * A free text information about this storage location, max length 1024
     * @type {string}
     * @memberof StorageLocationForCreation
     */
    information?: string;
    /**
     * Attributes that can be added to the storage location. These attributes cannot be used within fulfillment processes, but it could be useful to have the informations carried here.
     * @type {any}
     * @memberof StorageLocationForCreation
     */
    customAttributes?: any;
}
/**
 *
 * @export
 * @interface StorageLocationForReplacement
 */
export interface StorageLocationForReplacement extends StorageLocationForCreation {
    /**
     *
     * @type {number}
     * @memberof StorageLocationForReplacement
     */
    version: number;
}
/**
 *
 * @export
 * @interface StorageLocationPatchActions
 */
export interface StorageLocationPatchActions {
    /**
     *
     * @type {Array<ModifyStorageLocationAction>}
     * @memberof StorageLocationPatchActions
     */
    actions: Array<ModifyStorageLocationAction>;
    /**
     * The version of the facility where we want to patch the storage locations to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof StorageLocationPatchActions
     */
    version: number;
}
/**
 *
 * @export
 * @interface StorageLocationRecommendation
 */
export interface StorageLocationRecommendation {
    /**
     *
     * @type {StorageLocation}
     * @memberof StorageLocationRecommendation
     */
    storageLocation: StorageLocation;
    /**
     *
     * @type {number}
     * @memberof StorageLocationRecommendation
     */
    stockCount: number;
}
/**
 *
 * @export
 * @interface StorageLocationSequenceItem
 */
export interface StorageLocationSequenceItem {
    /**
     *
     * @type {StorageLocationSequenceType}
     * @memberof StorageLocationSequenceItem
     */
    type: StorageLocationSequenceType;
    /**
     * The previous storage from which to pick up after this one
     * @type {string}
     * @memberof StorageLocationSequenceItem
     */
    previousStorageLocationRef?: string;
    /**
     * The next storage from which to pick up after this one
     * @type {string}
     * @memberof StorageLocationSequenceItem
     */
    nextStorageLocationRef?: string;
    /**
     * Running sequence score - read-only
     * @type {number}
     * @memberof StorageLocationSequenceItem
     */
    score?: number;
}
/**
 * Describes the type of a storage location sequence type   * `PICKING_SEQUENCE`- The sequence in wich the storage locations are picked.   * `RESTOW_SEQUENCE`- The sequence in wich the storage locations are restowed.
 * @export
 * @enum {string}
 */
export enum StorageLocationSequenceType {
    PICKINGSEQUENCE = 'PICKING_SEQUENCE',
    RESTOWSEQUENCE = 'RESTOW_SEQUENCE'
}
/**
 * Describes what kind of actions this stock is available for   * `PICKABLE`- The stock is available for picking   * `ACCESSIBLE`- The stock is available for stock movements (stowing, inbound, etc)   * `KEEP_ON_ZERO`- The stock will not be deleted when emptied
 * @export
 * @enum {string}
 */
export enum StorageLocationTrait {
    PICKABLE = 'PICKABLE',
    ACCESSIBLE = 'ACCESSIBLE',
    KEEPONZERO = 'KEEP_ON_ZERO'
}
/**
 * The configuration of the traits of this storage location
 * @export
 */
export type StorageLocationTraitConfig = Array<StorageLocationTraitConfigInner>
/**
 *
 * @export
 * @interface StorageLocationTraitConfigInner
 */
export interface StorageLocationTraitConfigInner {
    /**
     *
     * @type {StorageLocationTrait}
     * @memberof StorageLocationTraitConfigInner
     */
    trait: StorageLocationTrait;
    /**
     *
     * @type {boolean}
     * @memberof StorageLocationTraitConfigInner
     */
    enabled: boolean;
}
/**
 * Describes the kind of a storage location:   * `SINGLE_STORAGE`- it is only allowed to store stock with the same tenantArticleId here   * `BULK_STORAGE`- stocks belonging to different tenantArticleIds can be stored here
 * @export
 * @enum {string}
 */
export enum StorageLocationType {
    SINGLESTORAGE = 'SINGLE_STORAGE',
    BULKSTORAGE = 'BULK_STORAGE'
}
/**
 *
 * @export
 * @interface StringValidation
 */
export interface StringValidation extends BaseValidation {
    /**
     *
     * @type {number}
     * @memberof StringValidation
     */
    minLength?: number;
    /**
     *
     * @type {number}
     * @memberof StringValidation
     */
    maxLength?: number;
}

/**
 * @export
 * @namespace StringValidation
 */
export namespace StringValidation {
}
/**
 *
 * @export
 * @interface StrippedBrands
 */
export interface StrippedBrands {
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof StrippedBrands
     */
    total?: number;
    /**
     *
     * @type {Array<Brand>}
     * @memberof StrippedBrands
     */
    brands?: Array<Brand>;
}
/**
 *
 * @export
 * @interface StrippedCarrier
 */
export interface StrippedCarrier extends VersionedResource {
    /**
     *
     * @type {CarrierDeliveryType}
     * @memberof StrippedCarrier
     */
    deliveryType?: CarrierDeliveryType;
    /**
     * The id of this carrier. It is generated during creation automatically and suits as the primary identifier of the described carrier.
     * @type {string}
     * @memberof StrippedCarrier
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof StrippedCarrier
     */
    key: string;
    /**
     *
     * @type {CarrierLifecycle}
     * @memberof StrippedCarrier
     */
    lifecycle?: CarrierLifecycle;
    /**
     * This is the well known name for a supported CEP partner. Can be adapted to the clients needs.
     * @type {string}
     * @memberof StrippedCarrier
     */
    name: string;
    /**
     *
     * @type {CarrierStatus}
     * @memberof StrippedCarrier
     */
    status?: CarrierStatus;
}
/**
 *
 * @export
 * @interface StrippedCarriers
 */
export interface StrippedCarriers {
    /**
     *
     * @type {Array<StrippedCarrier>}
     * @memberof StrippedCarriers
     */
    carriers?: Array<StrippedCarrier>;
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof StrippedCarriers
     */
    total?: number;
}
/**
 *
 * @export
 * @interface StrippedCustomServices
 */
export interface StrippedCustomServices {
    /**
     *
     * @type {Array<CustomService>}
     * @memberof StrippedCustomServices
     */
    customServices?: Array<CustomService>;
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof StrippedCustomServices
     */
    total?: number;
}
/**
 *
 * @export
 * @interface StrippedFacilities
 */
export interface StrippedFacilities {
    /**
     *
     * @type {Array<StrippedFacility>}
     * @memberof StrippedFacilities
     */
    facilities?: Array<StrippedFacility>;
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof StrippedFacilities
     */
    total?: number;
}
/**
 *
 * @export
 * @interface StrippedFacility
 */
export interface StrippedFacility extends VersionedResource {
    /**
     *
     * @type {string}
     * @memberof StrippedFacility
     */
    additionalAddressInfo?: string;
    /**
     *
     * @type {string}
     * @memberof StrippedFacility
     */
    city: string;
    /**
     * A two-digit country code as per ISO 3166-1 alpha-2
     * @type {string}
     * @memberof StrippedFacility
     */
    country: string;
    /**
     *
     * @type {string}
     * @memberof StrippedFacility
     */
    province?: string;
    /**
     * Attributes that can be added to the address. These attributes cannot be used within fulfillment processes, but it could be useful to have the informations carried here.
     * @type {any}
     * @memberof StrippedFacility
     */
    customAttributes?: any;
    /**
     *
     * @type {string}
     * @memberof StrippedFacility
     */
    houseNumber?: string;
    /**
     *
     * @type {Array<AddressPhoneNumbers>}
     * @memberof StrippedFacility
     */
    phoneNumbers?: Array<AddressPhoneNumbers>;
    /**
     *
     * @type {string}
     * @memberof StrippedFacility
     */
    postalCode: string;
    /**
     *
     * @type {string}
     * @memberof StrippedFacility
     */
    street: string;
    /**
     *
     * @type {string}
     * @memberof StrippedFacility
     */
    id: string;
    /**
     * name of the facility
     * @type {string}
     * @memberof StrippedFacility
     */
    name?: string;
    /**
     *
     * @type {FacilityStatus}
     * @memberof StrippedFacility
     */
    status: FacilityStatus;
    /**
     * The id of the facility in the tenants own system
     * @type {string}
     * @memberof StrippedFacility
     */
    tenantFacilityId?: string;
}
/**
 *
 * @export
 * @interface StrippedFacilityCustomServiceConnections
 */
export interface StrippedFacilityCustomServiceConnections {
    /**
     *
     * @type {Array<FacilityCustomServiceConnection>}
     * @memberof StrippedFacilityCustomServiceConnections
     */
    facilityCustomServiceConnections?: Array<FacilityCustomServiceConnection>;
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof StrippedFacilityCustomServiceConnections
     */
    total?: number;
}
/**
 *
 * @export
 * @interface StrippedFilterEntities
 */
export interface StrippedFilterEntities {
    /**
     * Total number of found filter entities for this query
     * @type {number}
     * @memberof StrippedFilterEntities
     */
    total?: number;
    /**
     *
     * @type {Array<FilterEntity>}
     * @memberof StrippedFilterEntities
     */
    filterEntities?: Array<FilterEntity>;
}
/**
 *
 * @export
 * @interface StrippedHandoverjob
 */
export interface StrippedHandoverjob extends VersionedResource {
    /**
     *
     * @type {string}
     * @memberof StrippedHandoverjob
     */
    carrierRef?: string;
    /**
     *
     * @type {string}
     * @memberof StrippedHandoverjob
     */
    channel: StrippedHandoverjob.ChannelEnum;
    /**
     * The id of the facility reference.
     * @type {string}
     * @memberof StrippedHandoverjob
     */
    facilityRef: string;
    /**
     * The id of this handoverjob. It is generated during creation automatically and suits as the primary identifier of the described entity.
     * @type {string}
     * @memberof StrippedHandoverjob
     */
    id: string;
    /**
     * Reference to array of load unit Refs
     * @type {Array<string>}
     * @memberof StrippedHandoverjob
     */
    loadUnitRefs?: Array<string>;
    /**
     * The date this order was created at the supplying system.
     * @type {Date}
     * @memberof StrippedHandoverjob
     */
    orderDate?: Date;
    /**
     * The reference to the parcel.
     * @type {string}
     * @memberof StrippedHandoverjob
     */
    parcelRef?: string;
    /**
     * The reference to the pickjob for which the handoverjob is assigned to
     * @type {string}
     * @memberof StrippedHandoverjob
     */
    pickJobRef?: string;
    /**
     * The reference to the shipment belonging to the handoverjob
     * @type {string}
     * @memberof StrippedHandoverjob
     */
    shipmentRef?: string;
    /**
     *
     * @type {HandoverjobStatus}
     * @memberof StrippedHandoverjob
     */
    status: HandoverjobStatus;
    /**
     * Field can be used as a reference number in foreign systems, for example as a reference to the source system's identifier for this order.
     * @type {string}
     * @memberof StrippedHandoverjob
     */
    tenantOrderId?: string;
    /**
     * This is the search term that was used to find the handover job
     * @type {Array<string>}
     * @memberof StrippedHandoverjob
     */
    searchPaths?: Array<string>;
}

/**
 * @export
 * @namespace StrippedHandoverjob
 */
export namespace StrippedHandoverjob {
    /**
     * @export
     * @enum {string}
     */
    export enum ChannelEnum {
        DELIVERY = 'DELIVERY',
        COLLECT = 'COLLECT'
    }
}
/**
 *
 * @export
 * @interface StrippedHandoverjobs
 */
export interface StrippedHandoverjobs {
    /**
     *
     * @type {Array<StrippedHandoverjob>}
     * @memberof StrippedHandoverjobs
     */
    handoverjobs?: Array<StrippedHandoverjob>;
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof StrippedHandoverjobs
     */
    total?: number;
}
/**
 *
 * @export
 * @interface StrippedInboundProcess
 */
export interface StrippedInboundProcess {
    /**
     *
     * @type {string}
     * @memberof StrippedInboundProcess
     */
    id: string;
    /**
     *
     * @type {number}
     * @memberof StrippedInboundProcess
     */
    version: number;
    /**
     *
     * @type {Date}
     * @memberof StrippedInboundProcess
     */
    created: Date;
    /**
     *
     * @type {Date}
     * @memberof StrippedInboundProcess
     */
    lastModified: Date;
    /**
     *
     * @type {string}
     * @memberof StrippedInboundProcess
     */
    tenantInboundProcessId?: string;
    /**
     *
     * @type {string}
     * @memberof StrippedInboundProcess
     */
    facilityRef: string;
    /**
     *
     * @type {string}
     * @memberof StrippedInboundProcess
     */
    status: StrippedInboundProcess.StatusEnum;
    /**
     *
     * @type {boolean}
     * @memberof StrippedInboundProcess
     */
    onHold: boolean;
    /**
     *
     * @type {Array<Date>}
     * @memberof StrippedInboundProcess
     */
    inboundDate: Array<Date>;
    /**
     *
     * @type {Array<InboundProcessOrigin>}
     * @memberof StrippedInboundProcess
     */
    origin: Array<InboundProcessOrigin>;
    /**
     *
     * @type {Array<string>}
     * @memberof StrippedInboundProcess
     */
    scannableCodes: Array<string>;
    /**
     *
     * @type {boolean}
     * @memberof StrippedInboundProcess
     */
    anonymized: boolean;
}

/**
 * @export
 * @namespace StrippedInboundProcess
 */
export namespace StrippedInboundProcess {
    /**
     * @export
     * @enum {string}
     */
    export enum StatusEnum {
        OPEN = 'OPEN',
        PARTIALDELIVERY = 'PARTIAL_DELIVERY',
        ONHOLD = 'ON_HOLD',
        CLOSED = 'CLOSED'
    }
}
/**
 *
 * @export
 * @interface StrippedListing
 */
export interface StrippedListing extends VersionedResource {
    /**
     *
     * @type {string}
     * @memberof StrippedListing
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof StrippedListing
     */
    status: StrippedListing.StatusEnum;
    /**
     * This is a reference to an article Id
     * @type {string}
     * @memberof StrippedListing
     */
    tenantArticleId: string;
}

/**
 * @export
 * @namespace StrippedListing
 */
export namespace StrippedListing {
    /**
     * @export
     * @enum {string}
     */
    export enum StatusEnum {
        ACTIVE = 'ACTIVE',
        INACTIVE = 'INACTIVE'
    }
}
/**
 *
 * @export
 * @interface StrippedListings
 */
export interface StrippedListings {
    /**
     *
     * @type {Array<StrippedListing>}
     * @memberof StrippedListings
     */
    listings?: Array<StrippedListing>;
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof StrippedListings
     */
    total?: number;
}
/**
 *
 * @export
 * @interface StrippedOidcProvider
 */
export interface StrippedOidcProvider extends VersionedResource {
    /**
     *
     * @type {string}
     * @memberof StrippedOidcProvider
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof StrippedOidcProvider
     */
    name: string;
    /**
     *
     * @type {OidcProviderStatus}
     * @memberof StrippedOidcProvider
     */
    status: OidcProviderStatus;
    /**
     *
     * @type {string}
     * @memberof StrippedOidcProvider
     */
    issuer: string;
    /**
     *
     * @type {string}
     * @memberof StrippedOidcProvider
     */
    clientId: string;
    /**
     *
     * @type {Array<OidcProviderCustomParameter>}
     * @memberof StrippedOidcProvider
     */
    customParameters: Array<OidcProviderCustomParameter>;
    /**
     *
     * @type {Array<AssignedGroup>}
     * @memberof StrippedOidcProvider
     */
    assignedGroups: Array<AssignedGroup>;
}
/**
 *
 * @export
 * @interface StrippedOrder
 */
export interface StrippedOrder extends VersionedResource {
    /**
     * The id of this order. It is generated during creation automatically and suits as the primary identifier of the described entity.
     * @type {string}
     * @memberof StrippedOrder
     */
    id: string;
    /**
     * The date this order was created at the supplying system.
     * @type {Date}
     * @memberof StrippedOrder
     */
    orderDate: Date;
    /**
     *
     * @type {Array<StrippedOrderOrderLineItems>}
     * @memberof StrippedOrder
     */
    orderLineItems?: Array<StrippedOrderOrderLineItems>;
    /**
     *
     * @type {OrderStatus}
     * @memberof StrippedOrder
     */
    status: OrderStatus;
    /**
     *
     * @type {Array<Sticker>}
     * @memberof StrippedOrder
     */
    stickers?: Array<Sticker>;
}
/**
 *
 * @export
 * @interface StrippedOrderOrderLineItems
 */
export interface StrippedOrderOrderLineItems {
    /**
     * quantity of the specific article that has been ordered
     * @type {number}
     * @memberof StrippedOrderOrderLineItems
     */
    quantity: number;
    /**
     *
     * @type {string}
     * @memberof StrippedOrderOrderLineItems
     */
    title: string;
}
/**
 *
 * @export
 * @interface StrippedOrders
 */
export interface StrippedOrders {
    /**
     *
     * @type {Array<StrippedOrder>}
     * @memberof StrippedOrders
     */
    orders?: Array<StrippedOrder>;
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof StrippedOrders
     */
    total?: number;
}
/**
 *
 * @export
 * @interface StrippedPackingSourceContainer
 */
export interface StrippedPackingSourceContainer {
    /**
     *
     * @type {string}
     * @memberof StrippedPackingSourceContainer
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof StrippedPackingSourceContainer
     */
    loadUnitRef?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof StrippedPackingSourceContainer
     */
    codes?: Array<string>;
}
/**
 *
 * @export
 * @interface StrippedParcel
 */
export interface StrippedParcel {
    /**
     * The reference to the carrier for which the parcel is assigned to
     * @type {string}
     * @memberof StrippedParcel
     */
    carrierRef: string;
    /**
     *
     * @type {string}
     * @memberof StrippedParcel
     */
    parcelRef: string;
    /**
     *
     * @type {ParcelStatus}
     * @memberof StrippedParcel
     */
    status: ParcelStatus;
    /**
     *
     * @type {string}
     * @memberof StrippedParcel
     */
    carrierTrackingNumber?: string;
}
/**
 *
 * @export
 * @interface StrippedParcels
 */
export interface StrippedParcels {
    /**
     *
     * @type {Array<StrippedParcel>}
     * @memberof StrippedParcels
     */
    parcels?: Array<StrippedParcel>;
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof StrippedParcels
     */
    total?: number;
}
/**
 *
 * @export
 * @interface StrippedPickJob
 */
export interface StrippedPickJob extends VersionedResource {
    /**
     *
     * @type {Array<string>}
     * @memberof StrippedPickJob
     */
    searchPaths?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof StrippedPickJob
     */
    carrierKey?: string;
    /**
     * The id of the facility reference. The given ID has to be present in the system.
     * @type {string}
     * @memberof StrippedPickJob
     */
    facilityRef?: string;
    /**
     *
     * @type {string}
     * @memberof StrippedPickJob
     */
    id: string;
    /**
     * The id of the order that lead to the creation of this pickjob. Can be empty / not present when the pickjob was created without having an order.
     * @type {string}
     * @memberof StrippedPickJob
     */
    orderRef?: string;
    /**
     * At which time the result is expected.
     * @type {Date}
     * @memberof StrippedPickJob
     */
    targetTime?: Date;
    /**
     *
     * @type {PickJobStatus}
     * @memberof StrippedPickJob
     */
    status: PickJobStatus;
}
/**
 *
 * @export
 * @interface StrippedPickJobs
 */
export interface StrippedPickJobs {
    /**
     *
     * @type {Array<StrippedPickJob>}
     * @memberof StrippedPickJobs
     */
    pickjobs?: Array<StrippedPickJob>;
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof StrippedPickJobs
     */
    total?: number;
}
/**
 *
 * @export
 * @interface StrippedShipments
 */
export interface StrippedShipments {
    /**
     *
     * @type {Array<ShipmentWithSearchPath>}
     * @memberof StrippedShipments
     */
    shipments?: Array<ShipmentWithSearchPath>;
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof StrippedShipments
     */
    total?: number;
}
/**
 *
 * @export
 * @interface StrippedShippingTargetAddress
 */
export interface StrippedShippingTargetAddress {
    /**
     * A two-digit country code as per ISO 3166-1 alpha-2
     * @type {string}
     * @memberof StrippedShippingTargetAddress
     */
    country?: string;
    /**
     *
     * @type {string}
     * @memberof StrippedShippingTargetAddress
     */
    postalCode?: string;
}
/**
 *
 * @export
 * @interface StrippedTags
 */
export interface StrippedTags {
    /**
     *
     * @type {Array<Tag>}
     * @memberof StrippedTags
     */
    tags?: Array<Tag>;
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof StrippedTags
     */
    total?: number;
}
/**
 *
 * @export
 * @interface StrippedUsers
 */
export interface StrippedUsers {
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof StrippedUsers
     */
    total?: number;
    /**
     *
     * @type {Array<User>}
     * @memberof StrippedUsers
     */
    users?: Array<User>;
}
/**
 *
 * @export
 * @interface Subscription
 */
export interface Subscription extends SubscriptionForCreation {
    /**
     * The date this subscription was created at the platform. This value is generated by the service.
     * @type {Date}
     * @memberof Subscription
     */
    created: Date;
    /**
     *
     * @type {string}
     * @memberof Subscription
     */
    id: string;
}
/**
 *
 * @export
 * @interface SubscriptionForCreation
 */
export interface SubscriptionForCreation {
    /**
     *
     * @type {string}
     * @memberof SubscriptionForCreation
     */
    callbackUrl: string;
    /**
     *
     * @type {string}
     * @memberof SubscriptionForCreation
     */
    event: string;
    /**
     *
     * @type {Array<CallbackHeader>}
     * @memberof SubscriptionForCreation
     */
    headers: Array<CallbackHeader>;
    /**
     *
     * @type {string}
     * @memberof SubscriptionForCreation
     */
    name: string;
}
/**
 *
 * @export
 * @interface Subscriptions
 */
export interface Subscriptions {
    /**
     *
     * @type {Array<Subscription>}
     * @memberof Subscriptions
     */
    subscriptions?: Array<Subscription>;
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof Subscriptions
     */
    total?: number;
}
/**
 *
 * @export
 * @interface Substitute
 */
export interface Substitute {
    /**
     *
     * @type {Array<SubstituteAttributeItem>}
     * @memberof Substitute
     */
    attributes?: Array<SubstituteAttributeItem>;
    /**
     *
     * @type {string}
     * @memberof Substitute
     */
    imageUrl?: string;
    /**
     * This field allows you to rank substitutes against each other. The lowest number is the most preferrable substitute.
     * @type {number}
     * @memberof Substitute
     */
    priority?: number;
    /**
     *
     * @type {Array<string>}
     * @memberof Substitute
     */
    scannableCodes?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof Substitute
     */
    tenantArticleId: string;
    /**
     *
     * @type {string}
     * @memberof Substitute
     */
    title: string;
}
/**
 *
 * @export
 * @interface SubstituteAttributeItem
 */
export interface SubstituteAttributeItem extends ArticleAttributeItem {
}

/**
 * @export
 * @namespace SubstituteAttributeItem
 */
export namespace SubstituteAttributeItem {
}
/**
 *
 * @export
 * @interface SubstituteLineItem
 */
export interface SubstituteLineItem {
    /**
     *
     * @type {SubstituteLineItemArticle}
     * @memberof SubstituteLineItem
     */
    article: SubstituteLineItemArticle;
    /**
     * This field allows you to rank substitutes against each other. The lowest number is the most preferrable substitute.
     * @type {number}
     * @memberof SubstituteLineItem
     */
    priority?: number;
    /**
     * Date when the line has been picked.
     * @type {Date}
     * @memberof SubstituteLineItem
     */
    pickedAt?: Date;
    /**
     * quantity of the specific article that has been picked to substitute the ordered line item
     * @type {number}
     * @memberof SubstituteLineItem
     */
    quantity: number;
    /**
     *
     * @type {Array<string>}
     * @memberof SubstituteLineItem
     */
    scannableCodes?: Array<string>;
    /**
     *
     * @type {Array<SubstituteLineItemPartialStockLocation>}
     * @memberof SubstituteLineItem
     */
    partialStockLocations?: Array<SubstituteLineItemPartialStockLocation>;
}
/**
 *
 * @export
 * @interface SubstituteLineItemArticle
 */
export interface SubstituteLineItemArticle extends AbstractArticle {
    /**
     *
     * @type {Array<ArticleAttributeItem>}
     * @memberof SubstituteLineItemArticle
     */
    attributes?: Array<ArticleAttributeItem>;
}
/**
 *
 * @export
 * @interface SubstituteLineItemForCreation
 */
export interface SubstituteLineItemForCreation {
    /**
     * quantity of the specific article that has been picked to substitute the ordered line item
     * @type {number}
     * @memberof SubstituteLineItemForCreation
     */
    quantity: number;
    /**
     * TenantArticleId of the substitute article
     * @type {string}
     * @memberof SubstituteLineItemForCreation
     */
    tenantArticleId: string;
    /**
     * Date when the line has been picked.
     * @type {Date}
     * @memberof SubstituteLineItemForCreation
     */
    pickedAt?: Date;
}
/**
 *
 * @export
 * @interface SubstituteLineItemPartialStockLocation
 */
export interface SubstituteLineItemPartialStockLocation {
    /**
     *
     * @type {number}
     * @memberof SubstituteLineItemPartialStockLocation
     */
    quantity: number;
    /**
     *
     * @type {Location}
     * @memberof SubstituteLineItemPartialStockLocation
     */
    location: Location;
}
/**
 *
 * @export
 * @interface Substitutes
 */
export interface Substitutes extends Entity {
    /**
     *
     * @type {Array<Substitute>}
     * @memberof Substitutes
     */
    substitutes: Array<Substitute>;
    /**
     *
     * @type {string}
     * @memberof Substitutes
     */
    tenantArticleId: string;
    /**
     * Version field is used in the optimistic locking process. If the Substitute is for the tenantArticleId is not set yet, this field is ignored.
     * @type {number}
     * @memberof Substitutes
     */
    version: number;
}
/**
 *
 * @export
 * @interface SubstitutesForUpsert
 */
export interface SubstitutesForUpsert {
    /**
     *
     * @type {Array<Substitute>}
     * @memberof SubstitutesForUpsert
     */
    substitutes: Array<Substitute>;
    /**
     *
     * @type {string}
     * @memberof SubstitutesForUpsert
     */
    tenantArticleId: string;
    /**
     * Version field is used in the optimistic locking process. If the Substitute is for the tenantArticleId is not set yet, this field is ignored.
     * @type {number}
     * @memberof SubstitutesForUpsert
     */
    version: number;
}
/**
 *
 * @export
 * @interface SubstitutionConfiguration
 */
export interface SubstitutionConfiguration extends VersionedResource {
    /**
     * Toggle for substitution articles.
     * @type {boolean}
     * @memberof SubstitutionConfiguration
     */
    active: boolean;
}
/**
 *
 * @export
 * @interface SupplyingFacilityConfiguration
 */
export interface SupplyingFacilityConfiguration {
    /**
     *
     * @type {string}
     * @memberof SupplyingFacilityConfiguration
     */
    facilityRef: string;
    /**
     *
     * @type {Array<DeliveryEvent>}
     * @memberof SupplyingFacilityConfiguration
     */
    deliveryEvents: Array<DeliveryEvent>;
}
/**
 *
 * @export
 * @interface SupportedEvent
 */
export interface SupportedEvent {
    /**
     *
     * @type {string}
     * @memberof SupportedEvent
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof SupportedEvent
     */
    event?: string;
}
/**
 *
 * @export
 * @interface SupportedEvents
 */
export interface SupportedEvents {
    /**
     *
     * @type {Array<SupportedEvent>}
     * @memberof SupportedEvents
     */
    supportedEvents?: Array<SupportedEvent>;
}
/**
 * Entity types supported as filter entities
 * @export
 * @enum {string}
 */
export enum SupportedFilterEntityTypesEnum {
    STICKER = 'STICKER'
}
/**
 * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />ISO 3166 conform country code and ISO 639-1 conform language code (de_DE, en_US, ch_FR, etc.)
 * @export
 * @enum {string}
 */
export enum SupportedLocale {
    DeDE = 'de_DE',
    EnUS = 'en_US',
    PlPL = 'pl_PL',
    RuRU = 'ru_RU',
    NlNL = 'nl_NL',
    FrFR = 'fr_FR',
    ItIT = 'it_IT',
    NbNO = 'nb_NO',
    EsES = 'es_ES'
}
/**
 *
 * @export
 */
export type SupportedLocales = Array<SupportedLocale>
/**
 *
 * @export
 * @interface Tag
 */
export interface Tag extends VersionedResource {
    /**
     *
     * @type {string}
     * @memberof Tag
     */
    id: string;
    /**
     *
     * @type {Array<string>}
     * @memberof Tag
     */
    allowedValues: Array<string>;
}
/**
 *
 * @export
 * @interface TagConfiguration
 */
export interface TagConfiguration {
    /**
     * All entries with a match in their matchingValues will be combined when determining what documents belong to an entity
     * @type {Array<OfferedDocumentPerTag>}
     * @memberof TagConfiguration
     */
    offeredDocumentsPerTag: Array<OfferedDocumentPerTag>;
    /**
     * This configuration is a fallback and applies only if none of the entries in offeredDocumentsPerTag can be applied
     * @type {Array<OfferedDocument>}
     * @memberof TagConfiguration
     */
    offeredDocumentsByDefault: Array<OfferedDocument>;
}
/**
 *
 * @export
 * @interface TagForCreation
 */
export interface TagForCreation {
    /**
     *
     * @type {string}
     * @memberof TagForCreation
     */
    id: string;
    /**
     *
     * @type {Array<string>}
     * @memberof TagForCreation
     */
    allowedValues: Array<string>;
}
/**
 *
 * @export
 * @interface TagPatchActions
 */
export interface TagPatchActions {
    /**
     *
     * @type {Array<AddAllowedValueToTagAction>}
     * @memberof TagPatchActions
     */
    actions: Array<AddAllowedValueToTagAction>;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof TagPatchActions
     */
    version: number;
}
/**
 *
 * @export
 * @interface TagReference
 */
export interface TagReference {
    /**
     *
     * @type {string}
     * @memberof TagReference
     */
    value: string;
    /**
     *
     * @type {string}
     * @memberof TagReference
     */
    id: string;
}
/**
 *
 * @export
 * @interface TagScanningConfiguration
 */
export interface TagScanningConfiguration {
    /**
     *
     * @type {Array<OfferedScanningRuleByTag>}
     * @memberof TagScanningConfiguration
     */
    offeredScanningRuleByTag?: Array<OfferedScanningRuleByTag>;
}
/**
 *
 * @export
 * @interface TakeOverPickJobConfiguration
 */
export interface TakeOverPickJobConfiguration {
    /**
     * Enable or disable returns
     * @type {boolean}
     * @memberof TakeOverPickJobConfiguration
     */
    active: boolean;
}
/**
 *
 * @export
 * @interface TargetAddress
 */
export interface TargetAddress extends ConsumerAddress {
    /**
     * The id of the facility reference. The given ID has to be present in the system.
     * @type {string}
     * @memberof TargetAddress
     */
    facilityRef?: string;
}
/**
 *
 * @export
 * @interface TenantConfiguration
 */
export interface TenantConfiguration extends VersionedResource {
    /**
     *
     * @type {string}
     * @memberof TenantConfiguration
     */
    clearName: string;
}
/**
 *
 * @export
 * @interface TenantConfigurationForUpsert
 */
export interface TenantConfigurationForUpsert extends VersionedResource {
    /**
     *
     * @type {string}
     * @memberof TenantConfigurationForUpsert
     */
    clearName: string;
    /**
     *
     * @type {number}
     * @memberof TenantConfigurationForUpsert
     */
    version: number;
}
/**
 *
 * @export
 * @interface TenantConnectorConfiguration
 */
export interface TenantConnectorConfiguration {
    /**
     *
     * @type {ConnectAppTypeEnum}
     * @memberof TenantConnectorConfiguration
     */
    app: ConnectAppTypeEnum;
    /**
     *
     * @type {string}
     * @memberof TenantConnectorConfiguration
     */
    firebaseProjectId: string;
    /**
     *
     * @type {string}
     * @memberof TenantConnectorConfiguration
     */
    apiUrl: string;
    /**
     *
     * @type {string}
     * @memberof TenantConnectorConfiguration
     */
    firebaseWebApiKey: string;
    /**
     *
     * @type {string}
     * @memberof TenantConnectorConfiguration
     */
    firebaseAppId: string;
    /**
     *
     * @type {string}
     * @memberof TenantConnectorConfiguration
     */
    firebaseAppIdDebug: string;
}
/**
 *
 * @export
 * @interface TenantConnectorConfigurations
 */
export interface TenantConnectorConfigurations extends VersionedResource {
    /**
     * All possible apps
     * @type {Array<TenantConnectorConfiguration>}
     * @memberof TenantConnectorConfigurations
     */
    connectApps: Array<TenantConnectorConfiguration>;
}
/**
 *
 * @export
 * @interface TimeRange
 */
export interface TimeRange {
    /**
     *
     * @type {TimeStamp}
     * @memberof TimeRange
     */
    end: TimeStamp;
    /**
     *
     * @type {TimeStamp}
     * @memberof TimeRange
     */
    start: TimeStamp;
    /**
     *
     * @type {number}
     * @memberof TimeRange
     */
    capacity?: number;
}
/**
 *
 * @export
 * @interface TimeStamp
 */
export interface TimeStamp {
    /**
     *
     * @type {number}
     * @memberof TimeStamp
     */
    hour: number;
    /**
     *
     * @type {number}
     * @memberof TimeStamp
     */
    minute: number;
}
/**
 * Timezone for information retrieved e.g. by the Google Maps API
 * @export
 * @interface TimeZone
 */
export interface TimeZone {
    /**
     * offset in seconds to standard time
     * @type {number}
     * @memberof TimeZone
     */
    offsetInSeconds: number;
    /**
     * official id of the timezone
     * @type {string}
     * @memberof TimeZone
     */
    timeZoneId: string;
    /**
     * descriptive name of the timezone
     * @type {string}
     * @memberof TimeZone
     */
    timeZoneName: string;
}
/**
 *
 * @export
 * @interface ToolKitComparisonDetails
 */
export interface ToolKitComparisonDetails {
    /**
     *
     * @type {ToolKitComparisonPart}
     * @memberof ToolKitComparisonDetails
     */
    leftPart: ToolKitComparisonPart;
    /**
     *
     * @type {ToolKitComparisonPart}
     * @memberof ToolKitComparisonDetails
     */
    rightPart: ToolKitComparisonPart;
    /**
     *
     * @type {boolean}
     * @memberof ToolKitComparisonDetails
     */
    evaluationResult: boolean;
    /**
     *
     * @type {ToolkitComparisonPredicate}
     * @memberof ToolKitComparisonDetails
     */
    predicate: ToolkitComparisonPredicate;
}
/**
 *
 * @export
 * @interface ToolKitComparisonPart
 */
export interface ToolKitComparisonPart {
    /**
     *
     * @type {Array<string>}
     * @memberof ToolKitComparisonPart
     */
    originalValue: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof ToolKitComparisonPart
     */
    transformedValue: Array<string>;
}
/**
 * The entities that can be compared by the toolkit fence or rating   * `ORDER`   * `FACILITY`   * `CARRIERCONNECTION`
 * @export
 * @enum {string}
 */
export enum ToolkitAllowedEntities {
    ORDER = 'ORDER',
    FACILITY = 'FACILITY',
    CARRIERCONNECTION = 'CARRIERCONNECTION'
}
/**
 *
 * @export
 * @interface ToolkitComparisonDecisionDetail
 */
export interface ToolkitComparisonDecisionDetail extends BaseDecisionDetail {
    /**
     *
     * @type {Array<ToolKitComparisonDetails>}
     * @memberof ToolkitComparisonDecisionDetail
     */
    predicates: Array<ToolKitComparisonDetails>;
    /**
     *
     * @type {ToolkitPredicateConnector}
     * @memberof ToolkitComparisonDecisionDetail
     */
    predicateConnector: ToolkitPredicateConnector;
    /**
     *
     * @type {string}
     * @memberof ToolkitComparisonDecisionDetail
     */
    description: string;
    /**
     *
     * @type {ToolkitRuleComparePropertiesOperatorResultExplanation}
     * @memberof ToolkitComparisonDecisionDetail
     */
    explanation?: ToolkitRuleComparePropertiesOperatorResultExplanation;
}
/**
 * The predicate for a Toolkit V2 Fence that defines how conditions are constructed
 * @export
 * @interface ToolkitComparisonPredicate
 */
export interface ToolkitComparisonPredicate {
    /**
     *
     * @type {string}
     * @memberof ToolkitComparisonPredicate
     */
    rightPropertyPath: string;
    /**
     *
     * @type {string}
     * @memberof ToolkitComparisonPredicate
     */
    leftPropertyPath: string;
    /**
     *
     * @type {ToolkitRuleComparisonOperatorType}
     * @memberof ToolkitComparisonPredicate
     */
    entityOperator: ToolkitRuleComparisonOperatorType;
    /**
     *
     * @type {ToolkitTransformationType}
     * @memberof ToolkitComparisonPredicate
     */
    rightTransformation?: ToolkitTransformationType;
    /**
     *
     * @type {Array<string | number | boolean>}
     * @memberof ToolkitComparisonPredicate
     */
    rightTransformationArgs?: Array<string | number | boolean>;
    /**
     *
     * @type {ToolkitTransformationType}
     * @memberof ToolkitComparisonPredicate
     */
    leftTransformation?: ToolkitTransformationType;
    /**
     *
     * @type {Array<string | number | boolean>}
     * @memberof ToolkitComparisonPredicate
     */
    leftTransformationArgs?: Array<string | number | boolean>;
}
/**
 * The rule, comparing the left and right path values, that will be evaluated applying a RuleOperator
 * @export
 * @interface ToolkitComparisonRule
 */
export interface ToolkitComparisonRule {
    /**
     *
     * @type {ToolkitPredicateConnector}
     * @memberof ToolkitComparisonRule
     */
    predicateConnector?: ToolkitPredicateConnector;
    /**
     *
     * @type {Array<ToolkitComparisonPredicate>}
     * @memberof ToolkitComparisonRule
     */
    predicates: Array<ToolkitComparisonPredicate>;
}
/**
 *
 * @export
 * @interface ToolkitDecisionDetail
 */
export interface ToolkitDecisionDetail extends BaseDecisionDetail {
    /**
     *
     * @type {boolean}
     * @memberof ToolkitDecisionDetail
     */
    leftSideEvaluation: boolean;
    /**
     *
     * @type {ToolkitPredicatesDecisionDetail}
     * @memberof ToolkitDecisionDetail
     */
    leftPredicatesDetail?: ToolkitPredicatesDecisionDetail;
    /**
     *
     * @type {boolean}
     * @memberof ToolkitDecisionDetail
     */
    rightSideEvaluation?: boolean;
    /**
     *
     * @type {ToolkitPredicatesDecisionDetail}
     * @memberof ToolkitDecisionDetail
     */
    rightPredicatesDetail?: ToolkitPredicatesDecisionDetail;
    /**
     *
     * @type {ToolkitRuleComparisonOperatorType}
     * @memberof ToolkitDecisionDetail
     */
    comparisonOperator?: ToolkitRuleComparisonOperatorType;
    /**
     *
     * @type {string}
     * @memberof ToolkitDecisionDetail
     */
    description: string;
    /**
     *
     * @type {ToolkitRuleOperatorResultExplanation}
     * @memberof ToolkitDecisionDetail
     */
    explanation?: ToolkitRuleOperatorResultExplanation;
}
/**
 * The possible operator types that can be used on given entities
 * @export
 * @enum {string}
 */
export enum ToolkitEntityOperatorType {
    VALUEEQUALS = 'VALUE_EQUALS',
    VALUENOTEQUALS = 'VALUE_NOT_EQUALS',
    ANYVALUEEQUALS = 'ANY_VALUE_EQUALS',
    ANYVALUEGREATEREQUALS = 'ANY_VALUE_GREATER_EQUALS',
    ANYVALUEGREATERTHAN = 'ANY_VALUE_GREATER_THAN',
    ANYVALUELESSEQUALS = 'ANY_VALUE_LESS_EQUALS',
    ANYVALUELESSTHAN = 'ANY_VALUE_LESS_THAN',
    ANYVALUECONTAINS = 'ANY_VALUE_CONTAINS',
    ANYVALUENOTCONTAINS = 'ANY_VALUE_NOT_CONTAINS',
    EVERYVALUEEQUALS = 'EVERY_VALUE_EQUALS',
    EVERYVALUEGREATEREQUALS = 'EVERY_VALUE_GREATER_EQUALS',
    EVERYVALUEGREATERTHAN = 'EVERY_VALUE_GREATER_THAN',
    EVERYVALUELESSEQUALS = 'EVERY_VALUE_LESS_EQUALS',
    EVERYVALUELESSTHAN = 'EVERY_VALUE_LESS_THAN',
    EVERYVALUECONTAINS = 'EVERY_VALUE_CONTAINS',
    EVERYVALUENOTCONTAINS = 'EVERY_VALUE_NOT_CONTAINS',
    NOVALUEEQUALS = 'NO_VALUE_EQUALS',
    NOVALUEGREATEREQUALS = 'NO_VALUE_GREATER_EQUALS',
    NOVALUEGREATERTHAN = 'NO_VALUE_GREATER_THAN',
    NOVALUELESSEQUALS = 'NO_VALUE_LESS_EQUALS',
    NOVALUELESSTHAN = 'NO_VALUE_LESS_THAN',
    NOVALUECONTAINS = 'NO_VALUE_CONTAINS',
    NOVALUENOTCONTAINS = 'NO_VALUE_NOT_CONTAINS',
    VALUECONTAINS = 'VALUE_CONTAINS',
    VALUENOTCONTAINS = 'VALUE_NOT_CONTAINS',
    GREATERTHAN = 'GREATER_THAN',
    GREATEREQUALS = 'GREATER_EQUALS',
    LESSTHAN = 'LESS_THAN',
    LESSEQUALS = 'LESS_EQUALS'
}
/**
 *
 * @export
 * @interface ToolkitFence
 */
export interface ToolkitFence extends ToolkitFenceForModification {
    /**
     * The date this entity was created at the platform. This value is generated by the service.
     * @type {Date}
     * @memberof ToolkitFence
     */
    created?: Date;
    /**
     * The date this entity was modified last. This value is generated by the service.
     * @type {Date}
     * @memberof ToolkitFence
     */
    lastModified?: Date;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof ToolkitFence
     */
    version: number;
    /**
     * The id of the toolkit fence
     * @type {string}
     * @memberof ToolkitFence
     */
    id: string;
}
/**
 *
 * @export
 * @interface ToolkitFenceForCreation
 */
export interface ToolkitFenceForCreation {
    /**
     * The name of the fence.
     * @type {string}
     * @memberof ToolkitFenceForCreation
     */
    name: string;
    /**
     *
     * @type {LocaleString}
     * @memberof ToolkitFenceForCreation
     */
    nameLocalized: LocaleString;
    /**
     * The description of this fence.
     * @type {string}
     * @memberof ToolkitFenceForCreation
     */
    description?: string;
    /**
     *
     * @type {LocaleString}
     * @memberof ToolkitFenceForCreation
     */
    descriptionLocalized?: LocaleString;
    /**
     * Indicates whether this fence is active or not.
     * @type {boolean}
     * @memberof ToolkitFenceForCreation
     */
    active: boolean;
    /**
     * Order in which this fence is executed
     * @type {number}
     * @memberof ToolkitFenceForCreation
     */
    order: number;
    /**
     *
     * @type {ToolkitAllowedEntities}
     * @memberof ToolkitFenceForCreation
     */
    entity1: ToolkitAllowedEntities;
    /**
     *
     * @type {ToolkitAllowedEntities}
     * @memberof ToolkitFenceForCreation
     */
    entity2: ToolkitAllowedEntities;
    /**
     *
     * @type {ToolkitRule}
     * @memberof ToolkitFenceForCreation
     */
    rule?: ToolkitRule;
    /**
     *
     * @type {ToolkitComparisonRule}
     * @memberof ToolkitFenceForCreation
     */
    comparisonRule?: ToolkitComparisonRule;
}
/**
 *
 * @export
 * @interface ToolkitFenceForModification
 */
export interface ToolkitFenceForModification extends ToolkitFenceForCreation {
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof ToolkitFenceForModification
     */
    version: number;
}
/**
 *
 * @export
 * @interface ToolkitFencesTransporter
 */
export interface ToolkitFencesTransporter {
    /**
     *
     * @type {Array<ToolkitFence>}
     * @memberof ToolkitFencesTransporter
     */
    fences: Array<ToolkitFence>;
    /**
     * Total number of found entities for this query
     * @type {number}
     * @memberof ToolkitFencesTransporter
     */
    total: number;
}
/**
 * Type of operator used for a toolkit fence or rating:   * `TAG_EQUALS`- the entity2 should have a tag with the same id as the entity1 and the value is dynamically matched   * `VALUE_EQUALS`- compares the tag of entity1 with the tag of entity2 attending to the configured rule and returns true if it does match   * `VALUE_NOT_EQUALS`- compares the tag of entity1 with the tag of entity2 attending to the configured rule and returns true if it does not match
 * @export
 * @enum {string}
 */
export enum ToolkitOperatorType {
    TAGEQUALS = 'TAG_EQUALS',
    VALUEEQUALS = 'VALUE_EQUALS',
    VALUENOTEQUALS = 'VALUE_NOT_EQUALS'
}
/**
 * The predicate for a Toolkit V2 Fence that defines how conditions are constructed
 * @export
 * @interface ToolkitPredicate
 */
export interface ToolkitPredicate {
    /**
     *
     * @type {string}
     * @memberof ToolkitPredicate
     */
    propertyPath: string;
    /**
     *
     * @type {ToolkitEntityOperatorType}
     * @memberof ToolkitPredicate
     */
    entityOperator: ToolkitEntityOperatorType;
    /**
     *
     * @type {ToolkitTransformationType}
     * @memberof ToolkitPredicate
     */
    transformation?: ToolkitTransformationType;
    /**
     *
     * @type {Array<string | number | boolean>}
     * @memberof ToolkitPredicate
     */
    transformationArgs?: Array<string | number | boolean>;
    /**
     *
     * @type {string | number | boolean}
     * @memberof ToolkitPredicate
     */
    expectedValue?: string | number | boolean;
}
/**
 * The allowed operators for connecting multiple predicates
 * @export
 * @enum {string}
 */
export enum ToolkitPredicateConnector {
    OR = 'OR',
    AND = 'AND'
}
/**
 *
 * @export
 * @interface ToolkitPredicateDecisionDetail
 */
export interface ToolkitPredicateDecisionDetail {
    /**
     *
     * @type {Array<string>}
     * @memberof ToolkitPredicateDecisionDetail
     */
    originalValue: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof ToolkitPredicateDecisionDetail
     */
    transformedValue: Array<string>;
    /**
     *
     * @type {boolean}
     * @memberof ToolkitPredicateDecisionDetail
     */
    evaluationResult: boolean;
    /**
     *
     * @type {ToolkitPredicate}
     * @memberof ToolkitPredicateDecisionDetail
     */
    predicate: ToolkitPredicate;
}
/**
 *
 * @export
 * @interface ToolkitPredicatesDecisionDetail
 */
export interface ToolkitPredicatesDecisionDetail {
    /**
     *
     * @type {ToolkitPredicateConnector}
     * @memberof ToolkitPredicatesDecisionDetail
     */
    connector: ToolkitPredicateConnector;
    /**
     *
     * @type {Array<ToolkitPredicateDecisionDetail>}
     * @memberof ToolkitPredicatesDecisionDetail
     */
    predicates: Array<ToolkitPredicateDecisionDetail>;
}
/**
 *
 * @export
 * @interface ToolkitRating
 */
export interface ToolkitRating extends ToolkitRatingForModification {
    /**
     * The date this entity was created at the platform. This value is generated by the service.
     * @type {Date}
     * @memberof ToolkitRating
     */
    created?: Date;
    /**
     * The date this entity was modified last. This value is generated by the service.
     * @type {Date}
     * @memberof ToolkitRating
     */
    lastModified?: Date;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof ToolkitRating
     */
    version: number;
    /**
     * The id of the toolkit rating
     * @type {string}
     * @memberof ToolkitRating
     */
    id: string;
}
/**
 *
 * @export
 * @interface ToolkitRatingForCreation
 */
export interface ToolkitRatingForCreation {
    /**
     * The name of the rating
     * @type {string}
     * @memberof ToolkitRatingForCreation
     */
    name: string;
    /**
     *
     * @type {LocaleString}
     * @memberof ToolkitRatingForCreation
     */
    nameLocalized: LocaleString;
    /**
     * The description of this rating
     * @type {string}
     * @memberof ToolkitRatingForCreation
     */
    description?: string;
    /**
     *
     * @type {LocaleString}
     * @memberof ToolkitRatingForCreation
     */
    descriptionLocalized?: LocaleString;
    /**
     * Indicates whether this fence is active or not
     * @type {boolean}
     * @memberof ToolkitRatingForCreation
     */
    active: boolean;
    /**
     *
     * @type {ToolkitAllowedEntities}
     * @memberof ToolkitRatingForCreation
     */
    entity1: ToolkitAllowedEntities;
    /**
     *
     * @type {ToolkitAllowedEntities}
     * @memberof ToolkitRatingForCreation
     */
    entity2: ToolkitAllowedEntities;
    /**
     *
     * @type {ToolkitRule}
     * @memberof ToolkitRatingForCreation
     */
    rule?: ToolkitRule;
    /**
     *
     * @type {ToolkitComparisonRule}
     * @memberof ToolkitRatingForCreation
     */
    comparisonRule?: ToolkitComparisonRule;
    /**
     * The maximum penalty this rating can have
     * @type {number}
     * @memberof ToolkitRatingForCreation
     */
    maxPenalty: number;
}
/**
 *
 * @export
 * @interface ToolkitRatingForModification
 */
export interface ToolkitRatingForModification extends ToolkitRatingForCreation {
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof ToolkitRatingForModification
     */
    version: number;
}
/**
 *
 * @export
 * @interface ToolkitRatingTransporter
 */
export interface ToolkitRatingTransporter {
    /**
     *
     * @type {Array<ToolkitRating>}
     * @memberof ToolkitRatingTransporter
     */
    ratings: Array<ToolkitRating>;
    /**
     * Total number of entities found for this query
     * @type {number}
     * @memberof ToolkitRatingTransporter
     */
    total: number;
}
/**
 * The rule, containing the left predicates and the right predicates, that will be evaluated applying a RuleOperator
 * @export
 * @interface ToolkitRule
 */
export interface ToolkitRule {
    /**
     *
     * @type {ToolkitRuleOperatorType}
     * @memberof ToolkitRule
     */
    operator: ToolkitRuleOperatorType;
    /**
     *
     * @type {ToolkitRulePart}
     * @memberof ToolkitRule
     */
    leftPart: ToolkitRulePart;
    /**
     *
     * @type {ToolkitRulePart}
     * @memberof ToolkitRule
     */
    rightPart: ToolkitRulePart;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ToolkitRuleComparePropertiesOperatorResultExplanation {
    ALLPREDICATESMET = 'ALL_PREDICATES_MET',
    NOTALLPREDICATESMET = 'NOT_ALL_PREDICATES_MET',
    SKIPPEDBECAUSEOFERROR = 'SKIPPED_BECAUSE_OF_ERROR'
}
/**
 * The type of the rule operator applied to the results of evaluating the left predicates and the right predicates
 * @export
 * @enum {string}
 */
export enum ToolkitRuleComparisonOperatorType {
    ALLMATCHES = 'ALL_MATCHES',
    LEFTCONTAINSRIGHT = 'LEFT_CONTAINS_RIGHT',
    RIGHTCONTAINSLEFT = 'RIGHT_CONTAINS_LEFT'
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ToolkitRuleOperatorResultExplanation {
    SKIPPED = 'SKIPPED',
    BOTHCONDITIONSMET = 'BOTH_CONDITIONS_MET',
    ONLYFIRSTCONDITIONMET = 'ONLY_FIRST_CONDITION_MET',
    ONLYSECONDCONDITIONMET = 'ONLY_SECOND_CONDITION_MET',
    SKIPPEDBECAUSEOFERROR = 'SKIPPED_BECAUSE_OF_ERROR'
}
/**
 * The type of the rule operator applied to the results of evaluating the left predicates and the right predicates
 * @export
 * @enum {string}
 */
export enum ToolkitRuleOperatorType {
    EQUALS = 'EQUALS'
}
/**
 * One half of the rule, containing either the left or right predicates and booleanOperator.
 * @export
 * @interface ToolkitRulePart
 */
export interface ToolkitRulePart {
    /**
     *
     * @type {ToolkitPredicateConnector}
     * @memberof ToolkitRulePart
     */
    predicateConnector?: ToolkitPredicateConnector;
    /**
     *
     * @type {Array<ToolkitPredicate>}
     * @memberof ToolkitRulePart
     */
    predicates: Array<ToolkitPredicate>;
}
/**
 * The transformations available to apply on the entity property value before a predicate is evaluated
 * @export
 * @enum {string}
 */
export enum ToolkitTransformationType {
    SUBSTRING = 'SUBSTRING',
    COUNT = 'COUNT',
    SUM = 'SUM',
    LAST = 'LAST'
}
/**
 * The state of the KEP
 * @export
 * @enum {string}
 */
export enum TrackingStatus {
    Registered = 'registered',
    PickedUp = 'picked_up',
    Delivered = 'delivered',
    NotDelivered = 'not_delivered',
    Transit = 'transit',
    Exception = 'exception',
    OutForDelivery = 'out_for_delivery',
    Destroyed = 'destroyed',
    Unknown = 'unknown',
    Canceled = 'canceled',
    AwaitsPickupByReceiver = 'awaits_pickup_by_receiver',
    Delayed = 'delayed',
    Notification = 'notification'
}
/**
 *
 * @export
 * @interface Transfer
 */
export interface Transfer {
    /**
     *
     * @type {string}
     * @memberof Transfer
     */
    transferId: string;
    /**
     *
     * @type {string}
     * @memberof Transfer
     */
    transferType: Transfer.TransferTypeEnum;
}

/**
 * @export
 * @namespace Transfer
 */
export namespace Transfer {
    /**
     * @export
     * @enum {string}
     */
    export enum TransferTypeEnum {
        SUPPLIER = 'SUPPLIER',
        RECEIVER = 'RECEIVER'
    }
}
/**
 *
 * @export
 * @interface UpdateChannelByIdAction
 */
export interface UpdateChannelByIdAction {
    /**
     *
     * @type {string}
     * @memberof UpdateChannelByIdAction
     */
    name: UpdateChannelByIdAction.NameEnum;
    /**
     *
     * @type {EmailNotificationChannel}
     * @memberof UpdateChannelByIdAction
     */
    channel: EmailNotificationChannel;
    /**
     *
     * @type {number}
     * @memberof UpdateChannelByIdAction
     */
    version: number;
}

/**
 * @export
 * @namespace UpdateChannelByIdAction
 */
export namespace UpdateChannelByIdAction {
    /**
     * @export
     * @enum {string}
     */
    export enum NameEnum {
        UPDATECHANNEL = 'UPDATE_CHANNEL'
    }
}
/**
 *
 * @export
 * @interface UpdateFacilityCoordinatesActionParameter
 */
export interface UpdateFacilityCoordinatesActionParameter extends AbstractFacilityActionsParameter {
    /**
     *
     * @type {string}
     * @memberof UpdateFacilityCoordinatesActionParameter
     */
    name: UpdateFacilityCoordinatesActionParameter.NameEnum;
    /**
     *
     * @type {Coordinates}
     * @memberof UpdateFacilityCoordinatesActionParameter
     */
    coordinates: Coordinates;
}

/**
 * @export
 * @namespace UpdateFacilityCoordinatesActionParameter
 */
export namespace UpdateFacilityCoordinatesActionParameter {
    /**
     * @export
     * @enum {string}
     */
    export enum NameEnum {
        UPDATEFACILITYCOORDINATES = 'UPDATE_FACILITY_COORDINATES'
    }
}
/**
 *
 * @export
 * @interface UpdateLineItemOnPackingTargetContainerAction
 */
export interface UpdateLineItemOnPackingTargetContainerAction extends AbstractModificationAction {
    /**
     * Use UpdateLineItemOnPackingTargetContainer to change a line item on an existing packing container
     * @type {string}
     * @memberof UpdateLineItemOnPackingTargetContainerAction
     */
    action: UpdateLineItemOnPackingTargetContainerAction.ActionEnum;
    /**
     *
     * @type {PackingTargetContainerLineItem}
     * @memberof UpdateLineItemOnPackingTargetContainerAction
     */
    lineItem: PackingTargetContainerLineItem;
}

/**
 * @export
 * @namespace UpdateLineItemOnPackingTargetContainerAction
 */
export namespace UpdateLineItemOnPackingTargetContainerAction {
    /**
     * @export
     * @enum {string}
     */
    export enum ActionEnum {
        UpdateLineItemOnPackingTargetContainer = 'UpdateLineItemOnPackingTargetContainer'
    }
}
/**
 *
 * @export
 * @interface UpdatePackingTargetContainerLineItemAction
 */
export interface UpdatePackingTargetContainerLineItemAction {
    /**
     *
     * @type {UpdatePackingTargetContainerLineItemEnum}
     * @memberof UpdatePackingTargetContainerLineItemAction
     */
    name: UpdatePackingTargetContainerLineItemEnum;
    /**
     * Version of the entity to be changed
     * @type {number}
     * @memberof UpdatePackingTargetContainerLineItemAction
     */
    version: number;
    /**
     *
     * @type {UpdatePackingTargetContainerLineItemActionPayload}
     * @memberof UpdatePackingTargetContainerLineItemAction
     */
    payload: UpdatePackingTargetContainerLineItemActionPayload;
}
/**
 *
 * @export
 * @interface UpdatePackingTargetContainerLineItemActionPayload
 */
export interface UpdatePackingTargetContainerLineItemActionPayload {
    /**
     *
     * @type {PackingTargetContainerLineItem}
     * @memberof UpdatePackingTargetContainerLineItemActionPayload
     */
    lineItem: PackingTargetContainerLineItem;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum UpdatePackingTargetContainerLineItemEnum {
    UpdateLineItem = 'UpdateLineItem'
}
/**
 *
 * @export
 * @interface UpdateRefuseReasonParameter
 */
export interface UpdateRefuseReasonParameter {
    /**
     *
     * @type {number}
     * @memberof UpdateRefuseReasonParameter
     */
    handoverConfigurationVersion: number;
    /**
     *
     * @type {AvailableRefuseReasonForUpdate}
     * @memberof UpdateRefuseReasonParameter
     */
    availableRefuseReasonForUpdate: AvailableRefuseReasonForUpdate;
}
/**
 *
 * @export
 * @interface User
 */
export interface User extends VersionedResource {
    /**
     *
     * @type {CustomClaims}
     * @memberof User
     */
    customClaims?: CustomClaims;
    /**
     *
     * @type {string}
     * @memberof User
     */
    firstname: string;
    /**
     *
     * @type {string}
     * @memberof User
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof User
     */
    lastname: string;
    /**
     *
     * @type {SupportedLocale}
     * @memberof User
     */
    locale: SupportedLocale;
    /**
     *
     * @type {string}
     * @memberof User
     */
    username: string;
    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />@deprecated use authenticationProvider instead.
     * @type {string}
     * @memberof User
     */
    authenticationProviderType?: User.AuthenticationProviderTypeEnum;
    /**
     *
     * @type {AuthenticationProvider}
     * @memberof User
     */
    authenticationProvider: AuthenticationProvider;
    /**
     *
     * @type {Array<UserAssignedFacility>}
     * @memberof User
     */
    assignedFacilities?: Array<UserAssignedFacility>;
    /**
     * Attributes that can be added to the user. These attributes **cannot** be used within fulfillment processes, but enable you to attach custom data from your systems to fulfillmenttools entities.
     * @type {any}
     * @memberof User
     */
    customAttributes?: any;
}

/**
 * @export
 * @namespace User
 */
export namespace User {
    /**
     * @export
     * @enum {string}
     */
    export enum AuthenticationProviderTypeEnum {
        EMAILPASSWORD = 'EMAIL_PASSWORD',
        OIDC = 'OIDC'
    }
}
/**
 * A facility that was assigned to an user
 * @export
 * @interface UserAssignedFacility
 */
export interface UserAssignedFacility extends UserAssignedFacilityForCreation {
    /**
     *
     * @type {string}
     * @memberof UserAssignedFacility
     */
    id: string;
}
/**
 * A facility that was assigned to an user
 * @export
 * @interface UserAssignedFacilityForCreation
 */
export interface UserAssignedFacilityForCreation {
    /**
     * The id of the assigned facility
     * @type {string}
     * @memberof UserAssignedFacilityForCreation
     */
    facilityRef: string;
    /**
     *
     * @type {Array<UserAssignedZone>}
     * @memberof UserAssignedFacilityForCreation
     */
    assignedZones?: Array<UserAssignedZone>;
}
/**
 * A facility zone that was assigned to an user
 * @export
 * @interface UserAssignedZone
 */
export interface UserAssignedZone {
    /**
     *
     * @type {string}
     * @memberof UserAssignedZone
     */
    zoneRef: string;
}
/**
 *
 * @export
 * @interface UserCreatedWebHookEvent
 */
export interface UserCreatedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {User}
     * @memberof UserCreatedWebHookEvent
     */
    payload: User;
}
/**
 *
 * @export
 * @interface UserDeletedWebHookEvent
 */
export interface UserDeletedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {User}
     * @memberof UserDeletedWebHookEvent
     */
    payload: User;
}
/**
 *
 * @export
 * @interface UserForCreation
 */
export interface UserForCreation {
    /**
     *
     * @type {string}
     * @memberof UserForCreation
     */
    firstname: string;
    /**
     *
     * @type {string}
     * @memberof UserForCreation
     */
    lastname: string;
    /**
     *
     * @type {SupportedLocale}
     * @memberof UserForCreation
     */
    locale?: SupportedLocale;
    /**
     *
     * @type {string}
     * @memberof UserForCreation
     */
    password: string;
    /**
     *
     * @type {UserRoles}
     * @memberof UserForCreation
     */
    roles: UserRoles;
    /**
     *
     * @type {string}
     * @memberof UserForCreation
     */
    username: string;
    /**
     *
     * @type {Array<UserAssignedFacilityForCreation>}
     * @memberof UserForCreation
     */
    assignedFacilities?: Array<UserAssignedFacilityForCreation>;
    /**
     * Attributes that can be added to the user. These attributes **cannot** be used within fulfillment processes, but enable you to attach custom data from your systems to fulfillmenttools entities.
     * @type {any}
     * @memberof UserForCreation
     */
    customAttributes?: any;
}
/**
 *
 * @export
 * @interface UserModificationHistory
 */
export interface UserModificationHistory {
    /**
     * ID of the user who commited this modification
     * @type {string}
     * @memberof UserModificationHistory
     */
    userId?: string;
    /**
     * Username of the user who commited this modification
     * @type {string}
     * @memberof UserModificationHistory
     */
    username: string;
    /**
     *
     * @type {Date}
     * @memberof UserModificationHistory
     */
    modificationDate: Date;
}
/**
 * Attribute to order a user list
 * @export
 * @enum {string}
 */
export enum UserOrderBy {
    LASTNAME = 'LASTNAME'
}
/**
 *
 * @export
 * @interface UserPatchActions
 */
export interface UserPatchActions {
    /**
     *
     * @type {Array<ModifyUserAction>}
     * @memberof UserPatchActions
     */
    actions: Array<ModifyUserAction>;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof UserPatchActions
     */
    version: number;
}
/**
 *
 * @export
 * @interface UserRole
 */
export interface UserRole {
    /**
     * List of facility Ids that the user is assigned to
     * @type {Array<string>}
     * @memberof UserRole
     */
    facilities?: Array<string>;
    /**
     *
     * @type {UserRoleNames}
     * @memberof UserRole
     */
    name: UserRoleNames;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum UserRoleNames {
    FULFILLER = 'FULFILLER',
    SUPERVISOR = 'SUPERVISOR',
    ADMINISTRATOR = 'ADMINISTRATOR'
}
/**
 * roles of a user
 * @export
 */
export type UserRoles = Array<UserRole>
/**
 *
 * @export
 * @interface UserUpdatedWebHookEvent
 */
export interface UserUpdatedWebHookEvent extends WebHookEvent {
    /**
     *
     * @type {User}
     * @memberof UserUpdatedWebHookEvent
     */
    payload: User;
}
/**
 *
 * @export
 * @interface VceCarrierConfiguration
 */
export interface VceCarrierConfiguration extends CarrierConfiguration {
    /**
     *
     * @type {FacilityAddress}
     * @memberof VceCarrierConfiguration
     */
    alternativeReturnAddress?: FacilityAddress;
}
/**
 *
 * @export
 * @interface VceCarrierCredentials
 */
export interface VceCarrierCredentials extends AbstractCarrierCredentials {
    /**
     * Internal user to identify with the VCE Api
     * @type {string}
     * @memberof VceCarrierCredentials
     */
    user: string;
    /**
     * Password to authenticate with the VCE Api
     * @type {string}
     * @memberof VceCarrierCredentials
     */
    password: string;
}
/**
 *
 * @export
 * @interface VceFacilityCarrierConfiguration
 */
export interface VceFacilityCarrierConfiguration extends AbstractFacilityCarrierConfiguration {
    /**
     *
     * @type {FacilityAddress}
     * @memberof VceFacilityCarrierConfiguration
     */
    alternativeReturnAddress?: FacilityAddress;
    /**
     *
     * @type {string}
     * @memberof VceFacilityCarrierConfiguration
     */
    trackAndTraceUrl?: string;
}
/**
 *
 * @export
 * @interface VersionedResource
 */
export interface VersionedResource {
    /**
     * The date this entity was created at the platform. This value is generated by the service.
     * @type {Date}
     * @memberof VersionedResource
     */
    created?: Date;
    /**
     * The date this entity was modified last. This value is generated by the service.
     * @type {Date}
     * @memberof VersionedResource
     */
    lastModified?: Date;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof VersionedResource
     */
    version: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum WaitForInputItemReturnActionEnum {
    WaitForInputItemReturn = 'WaitForInputItemReturn'
}
/**
 *
 * @export
 * @interface WaitForInputItemReturnActionParameter
 */
export interface WaitForInputItemReturnActionParameter {
    /**
     *
     * @type {WaitForInputItemReturnActionEnum}
     * @memberof WaitForInputItemReturnActionParameter
     */
    name: WaitForInputItemReturnActionEnum;
    /**
     * Version of the entity to be changed
     * @type {number}
     * @memberof WaitForInputItemReturnActionParameter
     */
    itemReturnJobVersion: number;
}
/**
 *
 * @export
 * @interface WebHookEvent
 */
export interface WebHookEvent {
    /**
     * The type of the send event
     * @type {string}
     * @memberof WebHookEvent
     */
    event: string;
    /**
     * The id of the event
     * @type {string}
     * @memberof WebHookEvent
     */
    eventId: string;
}
/**
 * A weekday
 * @export
 * @enum {string}
 */
export enum WeekDay {
    MONDAY = 'MONDAY',
    TUESDAY = 'TUESDAY',
    WEDNESDAY = 'WEDNESDAY',
    THURSDAY = 'THURSDAY',
    FRIDAY = 'FRIDAY',
    SATURDAY = 'SATURDAY',
    SUNDAY = 'SUNDAY'
}
/**
 *
 * @export
 * @interface Zone
 */
export interface Zone extends ZoneForReplacement {
    /**
     * The date this entity was created at the platform. This value is generated by the service.
     * @type {Date}
     * @memberof Zone
     */
    created?: Date;
    /**
     * The date this entity was modified last. This value is generated by the service.
     * @type {Date}
     * @memberof Zone
     */
    lastModified?: Date;
    /**
     * The version of the document to be used in optimistic locking mechanisms.
     * @type {number}
     * @memberof Zone
     */
    version: number;
    /**
     * The id of this zone
     * @type {string}
     * @memberof Zone
     */
    id: string;
    /**
     * The id of the facility reference. The given ID has to be present in the system.
     * @type {string}
     * @memberof Zone
     */
    facilityRef: string;
}
/**
 *
 * @export
 * @interface ZoneForCreation
 */
export interface ZoneForCreation {
    /**
     * The name of this zone
     * @type {string}
     * @memberof ZoneForCreation
     */
    name: string;
    /**
     * The score of this zone
     * @type {number}
     * @memberof ZoneForCreation
     */
    score: number;
}
/**
 *
 * @export
 * @interface ZoneForReplacement
 */
export interface ZoneForReplacement extends ZoneForCreation {
    /**
     *
     * @type {number}
     * @memberof ZoneForReplacement
     */
    version: number;
}
/**
 * CoreConfigurationApi - fetch parameter creator
 * @export
 */
export const CoreConfigurationApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get the current configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getExpiryConfiguration(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/expiry`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a tenant gdpr config
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getGdprConfiguration(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/gdpr`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get the tenant wide default locale configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLocaleConfiguration(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/locale`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get the list of supported locales
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLocales(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/supportedlocales`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get a tenant config
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTenantConfiguration(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/tenant`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Update gdpr configuration of a tenant
         * @param {GdprConfiguration} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putGdprConfiguration(body: GdprConfiguration, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putGdprConfiguration.');
            }
            const localVarPath = `/api/configurations/gdpr`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"GdprConfiguration" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Change the tenant wide default locale configuration
         * @param {LocaleConfiguration} body Desired default locale configuration to put
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putLocaleConfiguration(body: LocaleConfiguration, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putLocaleConfiguration.');
            }
            const localVarPath = `/api/configurations/locale`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"LocaleConfiguration" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Upsert tenant configuration
         * @summary Update tenant configuration of a tenant
         * @param {TenantConfigurationForUpsert} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putTenantConfiguration(body: TenantConfigurationForUpsert, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putTenantConfiguration.');
            }
            const localVarPath = `/api/configurations/tenant`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"TenantConfigurationForUpsert" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Change the tenant wide configuration
         * @param {ExpiryConfiguration} body Desired configuration to create/update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertExpiryConfiguration(body: ExpiryConfiguration, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling upsertExpiryConfiguration.');
            }
            const localVarPath = `/api/configurations/expiry`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ExpiryConfiguration" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * CoreConfigurationApi - functional programming interface
 * @export
 */
export const CoreConfigurationApiFp = function(configuration?: Configuration) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get the current configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getExpiryConfiguration(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ExpiryConfiguration> {
            const localVarFetchArgs = CoreConfigurationApiFetchParamCreator(configuration).getExpiryConfiguration(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a tenant gdpr config
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getGdprConfiguration(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<GdprConfiguration> {
            const localVarFetchArgs = CoreConfigurationApiFetchParamCreator(configuration).getGdprConfiguration(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get the tenant wide default locale configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLocaleConfiguration(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<LocaleConfiguration> {
            const localVarFetchArgs = CoreConfigurationApiFetchParamCreator(configuration).getLocaleConfiguration(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get the list of supported locales
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLocales(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<SupportedLocales> {
            const localVarFetchArgs = CoreConfigurationApiFetchParamCreator(configuration).getLocales(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get a tenant config
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTenantConfiguration(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<TenantConfiguration> {
            const localVarFetchArgs = CoreConfigurationApiFetchParamCreator(configuration).getTenantConfiguration(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Update gdpr configuration of a tenant
         * @param {GdprConfiguration} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putGdprConfiguration(body: GdprConfiguration, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<GdprConfiguration> {
            const localVarFetchArgs = CoreConfigurationApiFetchParamCreator(configuration).putGdprConfiguration(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Change the tenant wide default locale configuration
         * @param {LocaleConfiguration} body Desired default locale configuration to put
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putLocaleConfiguration(body: LocaleConfiguration, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<LocaleConfiguration> {
            const localVarFetchArgs = CoreConfigurationApiFetchParamCreator(configuration).putLocaleConfiguration(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Upsert tenant configuration
         * @summary Update tenant configuration of a tenant
         * @param {TenantConfigurationForUpsert} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putTenantConfiguration(body: TenantConfigurationForUpsert, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<TenantConfiguration> {
            const localVarFetchArgs = CoreConfigurationApiFetchParamCreator(configuration).putTenantConfiguration(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Change the tenant wide configuration
         * @param {ExpiryConfiguration} body Desired configuration to create/update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertExpiryConfiguration(body: ExpiryConfiguration, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ExpiryConfiguration> {
            const localVarFetchArgs = CoreConfigurationApiFetchParamCreator(configuration).upsertExpiryConfiguration(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * CoreConfigurationApi - factory interface
 * @export
 */
export const CoreConfigurationApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get the current configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getExpiryConfiguration(options?: any) {
            return CoreConfigurationApiFp(configuration).getExpiryConfiguration(options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a tenant gdpr config
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getGdprConfiguration(options?: any) {
            return CoreConfigurationApiFp(configuration).getGdprConfiguration(options)(fetch, basePath);
        },
        /**
         *
         * @summary Get the tenant wide default locale configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLocaleConfiguration(options?: any) {
            return CoreConfigurationApiFp(configuration).getLocaleConfiguration(options)(fetch, basePath);
        },
        /**
         *
         * @summary Get the list of supported locales
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLocales(options?: any) {
            return CoreConfigurationApiFp(configuration).getLocales(options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get a tenant config
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTenantConfiguration(options?: any) {
            return CoreConfigurationApiFp(configuration).getTenantConfiguration(options)(fetch, basePath);
        },
        /**
         *
         * @summary Update gdpr configuration of a tenant
         * @param {GdprConfiguration} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putGdprConfiguration(body: GdprConfiguration, options?: any) {
            return CoreConfigurationApiFp(configuration).putGdprConfiguration(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Change the tenant wide default locale configuration
         * @param {LocaleConfiguration} body Desired default locale configuration to put
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putLocaleConfiguration(body: LocaleConfiguration, options?: any) {
            return CoreConfigurationApiFp(configuration).putLocaleConfiguration(body, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Upsert tenant configuration
         * @summary Update tenant configuration of a tenant
         * @param {TenantConfigurationForUpsert} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putTenantConfiguration(body: TenantConfigurationForUpsert, options?: any) {
            return CoreConfigurationApiFp(configuration).putTenantConfiguration(body, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Change the tenant wide configuration
         * @param {ExpiryConfiguration} body Desired configuration to create/update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertExpiryConfiguration(body: ExpiryConfiguration, options?: any) {
            return CoreConfigurationApiFp(configuration).upsertExpiryConfiguration(body, options)(fetch, basePath);
        },
    };
};

/**
 * CoreConfigurationApi - object-oriented interface
 * @export
 * @class CoreConfigurationApi
 * @extends {BaseAPI}
 */
export class CoreConfigurationApi extends BaseAPI {
    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get the current configuration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreConfigurationApi
     */
    public getExpiryConfiguration(options?: any) {
        return CoreConfigurationApiFp(this.configuration).getExpiryConfiguration(options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a tenant gdpr config
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreConfigurationApi
     */
    public getGdprConfiguration(options?: any) {
        return CoreConfigurationApiFp(this.configuration).getGdprConfiguration(options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get the tenant wide default locale configuration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreConfigurationApi
     */
    public getLocaleConfiguration(options?: any) {
        return CoreConfigurationApiFp(this.configuration).getLocaleConfiguration(options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get the list of supported locales
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreConfigurationApi
     */
    public getLocales(options?: any) {
        return CoreConfigurationApiFp(this.configuration).getLocales(options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get a tenant config
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreConfigurationApi
     */
    public getTenantConfiguration(options?: any) {
        return CoreConfigurationApiFp(this.configuration).getTenantConfiguration(options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Update gdpr configuration of a tenant
     * @param {GdprConfiguration} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreConfigurationApi
     */
    public putGdprConfiguration(body: GdprConfiguration, options?: any) {
        return CoreConfigurationApiFp(this.configuration).putGdprConfiguration(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Change the tenant wide default locale configuration
     * @param {LocaleConfiguration} body Desired default locale configuration to put
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreConfigurationApi
     */
    public putLocaleConfiguration(body: LocaleConfiguration, options?: any) {
        return CoreConfigurationApiFp(this.configuration).putLocaleConfiguration(body, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Upsert tenant configuration
     * @summary Update tenant configuration of a tenant
     * @param {TenantConfigurationForUpsert} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreConfigurationApi
     */
    public putTenantConfiguration(body: TenantConfigurationForUpsert, options?: any) {
        return CoreConfigurationApiFp(this.configuration).putTenantConfiguration(body, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Change the tenant wide configuration
     * @param {ExpiryConfiguration} body Desired configuration to create/update
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreConfigurationApi
     */
    public upsertExpiryConfiguration(body: ExpiryConfiguration, options?: any) {
        return CoreConfigurationApiFp(this.configuration).upsertExpiryConfiguration(body, options)(this.fetch, this.basePath);
    }

}
/**
 * CoreCustomServicesApi - fetch parameter creator
 * @export
 */
export const CoreCustomServicesApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Create a custom service
         * @param {CustomServiceForCreation} body Desired custom service to create
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createCustomService(body: CustomServiceForCreation, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling createCustomService.');
            }
            const localVarPath = `/api/customservices`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"CustomServiceForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Create a custom service additional information
         * @param {AdditionalInformationForCreation} body Desired custom service to create
         * @param {string} customServiceId ID of custom service you want to create service job for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createCustomServiceAdditionalInformation(body: AdditionalInformationForCreation, customServiceId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling createCustomServiceAdditionalInformation.');
            }
            // verify required parameter 'customServiceId' is not null or undefined
            if (customServiceId === null || customServiceId === undefined) {
                throw new RequiredError('customServiceId','Required parameter customServiceId was null or undefined when calling createCustomServiceAdditionalInformation.');
            }
            const localVarPath = `/api/customservices/{customServiceId}/additionalinformation`
                .replace(`{${"customServiceId"}}`, encodeURIComponent(String(customServiceId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"AdditionalInformationForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Delete a custom service
         * @param {string} customServiceId ID of custom service
         * @param {string} additionalInformationId ID of additional information you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteAdditionalInfo(customServiceId: string, additionalInformationId: string, options: any = {}): FetchArgs {
            // verify required parameter 'customServiceId' is not null or undefined
            if (customServiceId === null || customServiceId === undefined) {
                throw new RequiredError('customServiceId','Required parameter customServiceId was null or undefined when calling deleteAdditionalInfo.');
            }
            // verify required parameter 'additionalInformationId' is not null or undefined
            if (additionalInformationId === null || additionalInformationId === undefined) {
                throw new RequiredError('additionalInformationId','Required parameter additionalInformationId was null or undefined when calling deleteAdditionalInfo.');
            }
            const localVarPath = `/api/customservices/{customServiceId}/additionalinformation/{additionalInformationId}`
                .replace(`{${"customServiceId"}}`, encodeURIComponent(String(customServiceId)))
                .replace(`{${"additionalInformationId"}}`, encodeURIComponent(String(additionalInformationId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get requested Custom service
         * @param {string} customServiceId ID of custom service you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCustomService(customServiceId: string, options: any = {}): FetchArgs {
            // verify required parameter 'customServiceId' is not null or undefined
            if (customServiceId === null || customServiceId === undefined) {
                throw new RequiredError('customServiceId','Required parameter customServiceId was null or undefined when calling getCustomService.');
            }
            const localVarPath = `/api/customservices/{customServiceId}`
                .replace(`{${"customServiceId"}}`, encodeURIComponent(String(customServiceId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get Custom services
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCustomServices(startAfterId?: string, size?: number, options: any = {}): FetchArgs {
            const localVarPath = `/api/customservices`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Patches a custom service with the given ID
         * @param {CustomServicePatchActions} body Patch set
         * @param {string} customServiceId ID of custom service you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchCustomService(body: CustomServicePatchActions, customServiceId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling patchCustomService.');
            }
            // verify required parameter 'customServiceId' is not null or undefined
            if (customServiceId === null || customServiceId === undefined) {
                throw new RequiredError('customServiceId','Required parameter customServiceId was null or undefined when calling patchCustomService.');
            }
            const localVarPath = `/api/customservices/{customServiceId}`
                .replace(`{${"customServiceId"}}`, encodeURIComponent(String(customServiceId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"CustomServicePatchActions" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Update a custom service additional information
         * @param {AdditionalInformationForCreation} body Desired custom service to create
         * @param {string} customServiceId ID of custom service
         * @param {string} additionalInformationId ID of additional information you want to put
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateCustomServiceAdditionalInformation(body: AdditionalInformationForCreation, customServiceId: string, additionalInformationId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling updateCustomServiceAdditionalInformation.');
            }
            // verify required parameter 'customServiceId' is not null or undefined
            if (customServiceId === null || customServiceId === undefined) {
                throw new RequiredError('customServiceId','Required parameter customServiceId was null or undefined when calling updateCustomServiceAdditionalInformation.');
            }
            // verify required parameter 'additionalInformationId' is not null or undefined
            if (additionalInformationId === null || additionalInformationId === undefined) {
                throw new RequiredError('additionalInformationId','Required parameter additionalInformationId was null or undefined when calling updateCustomServiceAdditionalInformation.');
            }
            const localVarPath = `/api/customservices/{customServiceId}/additionalinformation/{additionalInformationId}`
                .replace(`{${"customServiceId"}}`, encodeURIComponent(String(customServiceId)))
                .replace(`{${"additionalInformationId"}}`, encodeURIComponent(String(additionalInformationId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"AdditionalInformationForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * CoreCustomServicesApi - functional programming interface
 * @export
 */
export const CoreCustomServicesApiFp = function(configuration?: Configuration) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Create a custom service
         * @param {CustomServiceForCreation} body Desired custom service to create
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createCustomService(body: CustomServiceForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CustomService> {
            const localVarFetchArgs = CoreCustomServicesApiFetchParamCreator(configuration).createCustomService(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Create a custom service additional information
         * @param {AdditionalInformationForCreation} body Desired custom service to create
         * @param {string} customServiceId ID of custom service you want to create service job for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createCustomServiceAdditionalInformation(body: AdditionalInformationForCreation, customServiceId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CustomService> {
            const localVarFetchArgs = CoreCustomServicesApiFetchParamCreator(configuration).createCustomServiceAdditionalInformation(body, customServiceId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Delete a custom service
         * @param {string} customServiceId ID of custom service
         * @param {string} additionalInformationId ID of additional information you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteAdditionalInfo(customServiceId: string, additionalInformationId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CustomService> {
            const localVarFetchArgs = CoreCustomServicesApiFetchParamCreator(configuration).deleteAdditionalInfo(customServiceId, additionalInformationId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get requested Custom service
         * @param {string} customServiceId ID of custom service you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCustomService(customServiceId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CustomService> {
            const localVarFetchArgs = CoreCustomServicesApiFetchParamCreator(configuration).getCustomService(customServiceId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get Custom services
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCustomServices(startAfterId?: string, size?: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<StrippedCustomServices> {
            const localVarFetchArgs = CoreCustomServicesApiFetchParamCreator(configuration).getCustomServices(startAfterId, size, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Patches a custom service with the given ID
         * @param {CustomServicePatchActions} body Patch set
         * @param {string} customServiceId ID of custom service you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchCustomService(body: CustomServicePatchActions, customServiceId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CustomService> {
            const localVarFetchArgs = CoreCustomServicesApiFetchParamCreator(configuration).patchCustomService(body, customServiceId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Update a custom service additional information
         * @param {AdditionalInformationForCreation} body Desired custom service to create
         * @param {string} customServiceId ID of custom service
         * @param {string} additionalInformationId ID of additional information you want to put
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateCustomServiceAdditionalInformation(body: AdditionalInformationForCreation, customServiceId: string, additionalInformationId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CustomService> {
            const localVarFetchArgs = CoreCustomServicesApiFetchParamCreator(configuration).updateCustomServiceAdditionalInformation(body, customServiceId, additionalInformationId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * CoreCustomServicesApi - factory interface
 * @export
 */
export const CoreCustomServicesApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Create a custom service
         * @param {CustomServiceForCreation} body Desired custom service to create
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createCustomService(body: CustomServiceForCreation, options?: any) {
            return CoreCustomServicesApiFp(configuration).createCustomService(body, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Create a custom service additional information
         * @param {AdditionalInformationForCreation} body Desired custom service to create
         * @param {string} customServiceId ID of custom service you want to create service job for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createCustomServiceAdditionalInformation(body: AdditionalInformationForCreation, customServiceId: string, options?: any) {
            return CoreCustomServicesApiFp(configuration).createCustomServiceAdditionalInformation(body, customServiceId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Delete a custom service
         * @param {string} customServiceId ID of custom service
         * @param {string} additionalInformationId ID of additional information you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteAdditionalInfo(customServiceId: string, additionalInformationId: string, options?: any) {
            return CoreCustomServicesApiFp(configuration).deleteAdditionalInfo(customServiceId, additionalInformationId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get requested Custom service
         * @param {string} customServiceId ID of custom service you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCustomService(customServiceId: string, options?: any) {
            return CoreCustomServicesApiFp(configuration).getCustomService(customServiceId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get Custom services
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCustomServices(startAfterId?: string, size?: number, options?: any) {
            return CoreCustomServicesApiFp(configuration).getCustomServices(startAfterId, size, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Patches a custom service with the given ID
         * @param {CustomServicePatchActions} body Patch set
         * @param {string} customServiceId ID of custom service you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchCustomService(body: CustomServicePatchActions, customServiceId: string, options?: any) {
            return CoreCustomServicesApiFp(configuration).patchCustomService(body, customServiceId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Update a custom service additional information
         * @param {AdditionalInformationForCreation} body Desired custom service to create
         * @param {string} customServiceId ID of custom service
         * @param {string} additionalInformationId ID of additional information you want to put
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateCustomServiceAdditionalInformation(body: AdditionalInformationForCreation, customServiceId: string, additionalInformationId: string, options?: any) {
            return CoreCustomServicesApiFp(configuration).updateCustomServiceAdditionalInformation(body, customServiceId, additionalInformationId, options)(fetch, basePath);
        },
    };
};

/**
 * CoreCustomServicesApi - object-oriented interface
 * @export
 * @class CoreCustomServicesApi
 * @extends {BaseAPI}
 */
export class CoreCustomServicesApi extends BaseAPI {
    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Create a custom service
     * @param {CustomServiceForCreation} body Desired custom service to create
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreCustomServicesApi
     */
    public createCustomService(body: CustomServiceForCreation, options?: any) {
        return CoreCustomServicesApiFp(this.configuration).createCustomService(body, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Create a custom service additional information
     * @param {AdditionalInformationForCreation} body Desired custom service to create
     * @param {string} customServiceId ID of custom service you want to create service job for
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreCustomServicesApi
     */
    public createCustomServiceAdditionalInformation(body: AdditionalInformationForCreation, customServiceId: string, options?: any) {
        return CoreCustomServicesApiFp(this.configuration).createCustomServiceAdditionalInformation(body, customServiceId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Delete a custom service
     * @param {string} customServiceId ID of custom service
     * @param {string} additionalInformationId ID of additional information you want to delete
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreCustomServicesApi
     */
    public deleteAdditionalInfo(customServiceId: string, additionalInformationId: string, options?: any) {
        return CoreCustomServicesApiFp(this.configuration).deleteAdditionalInfo(customServiceId, additionalInformationId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get requested Custom service
     * @param {string} customServiceId ID of custom service you want to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreCustomServicesApi
     */
    public getCustomService(customServiceId: string, options?: any) {
        return CoreCustomServicesApiFp(this.configuration).getCustomService(customServiceId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get Custom services
     * @param {string} [startAfterId] all entities after given Id
     * @param {number} [size] number of entities to show
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreCustomServicesApi
     */
    public getCustomServices(startAfterId?: string, size?: number, options?: any) {
        return CoreCustomServicesApiFp(this.configuration).getCustomServices(startAfterId, size, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Patches a custom service with the given ID
     * @param {CustomServicePatchActions} body Patch set
     * @param {string} customServiceId ID of custom service you want to patch
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreCustomServicesApi
     */
    public patchCustomService(body: CustomServicePatchActions, customServiceId: string, options?: any) {
        return CoreCustomServicesApiFp(this.configuration).patchCustomService(body, customServiceId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Update a custom service additional information
     * @param {AdditionalInformationForCreation} body Desired custom service to create
     * @param {string} customServiceId ID of custom service
     * @param {string} additionalInformationId ID of additional information you want to put
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreCustomServicesApi
     */
    public updateCustomServiceAdditionalInformation(body: AdditionalInformationForCreation, customServiceId: string, additionalInformationId: string, options?: any) {
        return CoreCustomServicesApiFp(this.configuration).updateCustomServiceAdditionalInformation(body, customServiceId, additionalInformationId, options)(this.fetch, this.basePath);
    }

}
/**
 * CoreDocumentSetsApi - fetch parameter creator
 * @export
 */
export const CoreDocumentSetsApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *
         * @param {ExternalDocumentContentForUpdate} body Document Content with id and version
         * @param {string} documentSetRef Reference to the documentSet you want to update
         * @param {string} documentRef Reference to the single document you want to update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addContentToDocument(body: ExternalDocumentContentForUpdate, documentSetRef: string, documentRef: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling addContentToDocument.');
            }
            // verify required parameter 'documentSetRef' is not null or undefined
            if (documentSetRef === null || documentSetRef === undefined) {
                throw new RequiredError('documentSetRef','Required parameter documentSetRef was null or undefined when calling addContentToDocument.');
            }
            // verify required parameter 'documentRef' is not null or undefined
            if (documentRef === null || documentRef === undefined) {
                throw new RequiredError('documentRef','Required parameter documentRef was null or undefined when calling addContentToDocument.');
            }
            const localVarPath = `/api/documentsets/{documentSetRef}/documents/{documentRef}/file`
                .replace(`{${"documentSetRef"}}`, encodeURIComponent(String(documentSetRef)))
                .replace(`{${"documentRef"}}`, encodeURIComponent(String(documentRef)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ExternalDocumentContentForUpdate" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Deprecated, use /api/documentsets/{documentSetRef}/documents/{documentRef}/file instead
         * @param {ExternalDocumentContentForUpdate} body Document Content with id and version
         * @param {string} documentSetRef Reference to the documentSet you want to update
         * @param {string} documentRef Reference to the single document you want to update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addContentToDocumentDeprecated(body: ExternalDocumentContentForUpdate, documentSetRef: string, documentRef: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling addContentToDocumentDeprecated.');
            }
            // verify required parameter 'documentSetRef' is not null or undefined
            if (documentSetRef === null || documentSetRef === undefined) {
                throw new RequiredError('documentSetRef','Required parameter documentSetRef was null or undefined when calling addContentToDocumentDeprecated.');
            }
            // verify required parameter 'documentRef' is not null or undefined
            if (documentRef === null || documentRef === undefined) {
                throw new RequiredError('documentRef','Required parameter documentRef was null or undefined when calling addContentToDocumentDeprecated.');
            }
            const localVarPath = `/api/documentSet/{documentSetRef}/documents/{documentRef}/file`
                .replace(`{${"documentSetRef"}}`, encodeURIComponent(String(documentSetRef)))
                .replace(`{${"documentRef"}}`, encodeURIComponent(String(documentRef)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ExternalDocumentContentForUpdate" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @param {ExternalPrintableDocumentForCreation} body
         * @param {string} documentSetRef Reference to the documentSet you want to add a file to
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addDocument(body: ExternalPrintableDocumentForCreation, documentSetRef: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling addDocument.');
            }
            // verify required parameter 'documentSetRef' is not null or undefined
            if (documentSetRef === null || documentSetRef === undefined) {
                throw new RequiredError('documentSetRef','Required parameter documentSetRef was null or undefined when calling addDocument.');
            }
            const localVarPath = `/api/documentsets/{documentSetRef}/documents`
                .replace(`{${"documentSetRef"}}`, encodeURIComponent(String(documentSetRef)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ExternalPrintableDocumentForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Deprecated, use /api/documentsets/{documentSetRef}/documents instead
         * @param {ExternalPrintableDocumentForCreation} body
         * @param {string} documentSetRef Reference to the documentSet you want to add a file to
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addDocumentDeprecated(body: ExternalPrintableDocumentForCreation, documentSetRef: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling addDocumentDeprecated.');
            }
            // verify required parameter 'documentSetRef' is not null or undefined
            if (documentSetRef === null || documentSetRef === undefined) {
                throw new RequiredError('documentSetRef','Required parameter documentSetRef was null or undefined when calling addDocumentDeprecated.');
            }
            const localVarPath = `/api/documentSet/{documentSetRef}/documents`
                .replace(`{${"documentSetRef"}}`, encodeURIComponent(String(documentSetRef)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ExternalPrintableDocumentForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Download a document
         * @param {string} documentSetRef Reference to the documentSet you want to download a file from
         * @param {string} documentRef Reference to the single document you want to download
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        downloadDocument(documentSetRef: string, documentRef: string, options: any = {}): FetchArgs {
            // verify required parameter 'documentSetRef' is not null or undefined
            if (documentSetRef === null || documentSetRef === undefined) {
                throw new RequiredError('documentSetRef','Required parameter documentSetRef was null or undefined when calling downloadDocument.');
            }
            // verify required parameter 'documentRef' is not null or undefined
            if (documentRef === null || documentRef === undefined) {
                throw new RequiredError('documentRef','Required parameter documentRef was null or undefined when calling downloadDocument.');
            }
            const localVarPath = `/api/documentsets/{documentSetRef}/documents/{documentRef}/file`
                .replace(`{${"documentSetRef"}}`, encodeURIComponent(String(documentSetRef)))
                .replace(`{${"documentRef"}}`, encodeURIComponent(String(documentRef)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Download a document
         * @param {string} documentSetRef Reference to the documentSet you want to download a file from
         * @param {string} documentRef Reference to the single document you want to download
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        downloadDocumentDeprecated(documentSetRef: string, documentRef: string, options: any = {}): FetchArgs {
            // verify required parameter 'documentSetRef' is not null or undefined
            if (documentSetRef === null || documentSetRef === undefined) {
                throw new RequiredError('documentSetRef','Required parameter documentSetRef was null or undefined when calling downloadDocumentDeprecated.');
            }
            // verify required parameter 'documentRef' is not null or undefined
            if (documentRef === null || documentRef === undefined) {
                throw new RequiredError('documentRef','Required parameter documentRef was null or undefined when calling downloadDocumentDeprecated.');
            }
            const localVarPath = `/api/documentSet/{documentSetRef}/documents/{documentRef}/file`
                .replace(`{${"documentSetRef"}}`, encodeURIComponent(String(documentSetRef)))
                .replace(`{${"documentRef"}}`, encodeURIComponent(String(documentRef)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Simple query interface to find documents
         * @param {string} documentSetRef Reference to the entity you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDocumentSet(documentSetRef: string, options: any = {}): FetchArgs {
            // verify required parameter 'documentSetRef' is not null or undefined
            if (documentSetRef === null || documentSetRef === undefined) {
                throw new RequiredError('documentSetRef','Required parameter documentSetRef was null or undefined when calling getDocumentSet.');
            }
            const localVarPath = `/api/documentsets/{documentSetRef}`
                .replace(`{${"documentSetRef"}}`, encodeURIComponent(String(documentSetRef)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Deprecated, use /api/documentsets/{documentSetRef} instead
         * @summary Simple query interface to find documents
         * @param {string} documentSetRef Reference to the entity you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDocumentSetDeprecated(documentSetRef: string, options: any = {}): FetchArgs {
            // verify required parameter 'documentSetRef' is not null or undefined
            if (documentSetRef === null || documentSetRef === undefined) {
                throw new RequiredError('documentSetRef','Required parameter documentSetRef was null or undefined when calling getDocumentSetDeprecated.');
            }
            const localVarPath = `/api/documentSet/{documentSetRef}`
                .replace(`{${"documentSetRef"}}`, encodeURIComponent(String(documentSetRef)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Simple query interface to find documents
         * @param {PrintableDocumentForUpdate} body PartialDocument
         * @param {string} documentSetRef Reference to the documentSet you want to update
         * @param {string} documentRef Reference to the single document you want to update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateDocument(body: PrintableDocumentForUpdate, documentSetRef: string, documentRef: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling updateDocument.');
            }
            // verify required parameter 'documentSetRef' is not null or undefined
            if (documentSetRef === null || documentSetRef === undefined) {
                throw new RequiredError('documentSetRef','Required parameter documentSetRef was null or undefined when calling updateDocument.');
            }
            // verify required parameter 'documentRef' is not null or undefined
            if (documentRef === null || documentRef === undefined) {
                throw new RequiredError('documentRef','Required parameter documentRef was null or undefined when calling updateDocument.');
            }
            const localVarPath = `/api/documentsets/{documentSetRef}/documents/{documentRef}`
                .replace(`{${"documentSetRef"}}`, encodeURIComponent(String(documentSetRef)))
                .replace(`{${"documentRef"}}`, encodeURIComponent(String(documentRef)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"PrintableDocumentForUpdate" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Deprecated, use /api/documentsets/{documentSetRef}/documents/{documentRef} instead
         * @summary Simple query interface to find documents
         * @param {PrintableDocumentForUpdate} body PartialDocument
         * @param {string} documentSetRef Reference to the documentSet you want to update
         * @param {string} documentRef Reference to the single document you want to update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateDocumentDeprecated(body: PrintableDocumentForUpdate, documentSetRef: string, documentRef: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling updateDocumentDeprecated.');
            }
            // verify required parameter 'documentSetRef' is not null or undefined
            if (documentSetRef === null || documentSetRef === undefined) {
                throw new RequiredError('documentSetRef','Required parameter documentSetRef was null or undefined when calling updateDocumentDeprecated.');
            }
            // verify required parameter 'documentRef' is not null or undefined
            if (documentRef === null || documentRef === undefined) {
                throw new RequiredError('documentRef','Required parameter documentRef was null or undefined when calling updateDocumentDeprecated.');
            }
            const localVarPath = `/api/documentSet/{documentSetRef}/documents/{documentRef}`
                .replace(`{${"documentSetRef"}}`, encodeURIComponent(String(documentSetRef)))
                .replace(`{${"documentRef"}}`, encodeURIComponent(String(documentRef)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"PrintableDocumentForUpdate" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * CoreDocumentSetsApi - functional programming interface
 * @export
 */
export const CoreDocumentSetsApiFp = function(configuration?: Configuration) {
    return {
        /**
         *
         * @param {ExternalDocumentContentForUpdate} body Document Content with id and version
         * @param {string} documentSetRef Reference to the documentSet you want to update
         * @param {string} documentRef Reference to the single document you want to update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addContentToDocument(body: ExternalDocumentContentForUpdate, documentSetRef: string, documentRef: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PrintableDocument> {
            const localVarFetchArgs = CoreDocumentSetsApiFetchParamCreator(configuration).addContentToDocument(body, documentSetRef, documentRef, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * Deprecated, use /api/documentsets/{documentSetRef}/documents/{documentRef}/file instead
         * @param {ExternalDocumentContentForUpdate} body Document Content with id and version
         * @param {string} documentSetRef Reference to the documentSet you want to update
         * @param {string} documentRef Reference to the single document you want to update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addContentToDocumentDeprecated(body: ExternalDocumentContentForUpdate, documentSetRef: string, documentRef: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PrintableDocument> {
            const localVarFetchArgs = CoreDocumentSetsApiFetchParamCreator(configuration).addContentToDocumentDeprecated(body, documentSetRef, documentRef, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @param {ExternalPrintableDocumentForCreation} body
         * @param {string} documentSetRef Reference to the documentSet you want to add a file to
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addDocument(body: ExternalPrintableDocumentForCreation, documentSetRef: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PrintableDocument> {
            const localVarFetchArgs = CoreDocumentSetsApiFetchParamCreator(configuration).addDocument(body, documentSetRef, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * Deprecated, use /api/documentsets/{documentSetRef}/documents instead
         * @param {ExternalPrintableDocumentForCreation} body
         * @param {string} documentSetRef Reference to the documentSet you want to add a file to
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addDocumentDeprecated(body: ExternalPrintableDocumentForCreation, documentSetRef: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PrintableDocument> {
            const localVarFetchArgs = CoreDocumentSetsApiFetchParamCreator(configuration).addDocumentDeprecated(body, documentSetRef, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Download a document
         * @param {string} documentSetRef Reference to the documentSet you want to download a file from
         * @param {string} documentRef Reference to the single document you want to download
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        downloadDocument(documentSetRef: string, documentRef: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = CoreDocumentSetsApiFetchParamCreator(configuration).downloadDocument(documentSetRef, documentRef, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Download a document
         * @param {string} documentSetRef Reference to the documentSet you want to download a file from
         * @param {string} documentRef Reference to the single document you want to download
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        downloadDocumentDeprecated(documentSetRef: string, documentRef: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = CoreDocumentSetsApiFetchParamCreator(configuration).downloadDocumentDeprecated(documentSetRef, documentRef, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Simple query interface to find documents
         * @param {string} documentSetRef Reference to the entity you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDocumentSet(documentSetRef: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<DocumentSet> {
            const localVarFetchArgs = CoreDocumentSetsApiFetchParamCreator(configuration).getDocumentSet(documentSetRef, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * Deprecated, use /api/documentsets/{documentSetRef} instead
         * @summary Simple query interface to find documents
         * @param {string} documentSetRef Reference to the entity you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDocumentSetDeprecated(documentSetRef: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<DocumentSet> {
            const localVarFetchArgs = CoreDocumentSetsApiFetchParamCreator(configuration).getDocumentSetDeprecated(documentSetRef, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Simple query interface to find documents
         * @param {PrintableDocumentForUpdate} body PartialDocument
         * @param {string} documentSetRef Reference to the documentSet you want to update
         * @param {string} documentRef Reference to the single document you want to update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateDocument(body: PrintableDocumentForUpdate, documentSetRef: string, documentRef: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PrintableDocument> {
            const localVarFetchArgs = CoreDocumentSetsApiFetchParamCreator(configuration).updateDocument(body, documentSetRef, documentRef, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * Deprecated, use /api/documentsets/{documentSetRef}/documents/{documentRef} instead
         * @summary Simple query interface to find documents
         * @param {PrintableDocumentForUpdate} body PartialDocument
         * @param {string} documentSetRef Reference to the documentSet you want to update
         * @param {string} documentRef Reference to the single document you want to update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateDocumentDeprecated(body: PrintableDocumentForUpdate, documentSetRef: string, documentRef: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PrintableDocument> {
            const localVarFetchArgs = CoreDocumentSetsApiFetchParamCreator(configuration).updateDocumentDeprecated(body, documentSetRef, documentRef, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * CoreDocumentSetsApi - factory interface
 * @export
 */
export const CoreDocumentSetsApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         *
         * @param {ExternalDocumentContentForUpdate} body Document Content with id and version
         * @param {string} documentSetRef Reference to the documentSet you want to update
         * @param {string} documentRef Reference to the single document you want to update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addContentToDocument(body: ExternalDocumentContentForUpdate, documentSetRef: string, documentRef: string, options?: any) {
            return CoreDocumentSetsApiFp(configuration).addContentToDocument(body, documentSetRef, documentRef, options)(fetch, basePath);
        },
        /**
         * Deprecated, use /api/documentsets/{documentSetRef}/documents/{documentRef}/file instead
         * @param {ExternalDocumentContentForUpdate} body Document Content with id and version
         * @param {string} documentSetRef Reference to the documentSet you want to update
         * @param {string} documentRef Reference to the single document you want to update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addContentToDocumentDeprecated(body: ExternalDocumentContentForUpdate, documentSetRef: string, documentRef: string, options?: any) {
            return CoreDocumentSetsApiFp(configuration).addContentToDocumentDeprecated(body, documentSetRef, documentRef, options)(fetch, basePath);
        },
        /**
         *
         * @param {ExternalPrintableDocumentForCreation} body
         * @param {string} documentSetRef Reference to the documentSet you want to add a file to
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addDocument(body: ExternalPrintableDocumentForCreation, documentSetRef: string, options?: any) {
            return CoreDocumentSetsApiFp(configuration).addDocument(body, documentSetRef, options)(fetch, basePath);
        },
        /**
         * Deprecated, use /api/documentsets/{documentSetRef}/documents instead
         * @param {ExternalPrintableDocumentForCreation} body
         * @param {string} documentSetRef Reference to the documentSet you want to add a file to
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addDocumentDeprecated(body: ExternalPrintableDocumentForCreation, documentSetRef: string, options?: any) {
            return CoreDocumentSetsApiFp(configuration).addDocumentDeprecated(body, documentSetRef, options)(fetch, basePath);
        },
        /**
         *
         * @summary Download a document
         * @param {string} documentSetRef Reference to the documentSet you want to download a file from
         * @param {string} documentRef Reference to the single document you want to download
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        downloadDocument(documentSetRef: string, documentRef: string, options?: any) {
            return CoreDocumentSetsApiFp(configuration).downloadDocument(documentSetRef, documentRef, options)(fetch, basePath);
        },
        /**
         *
         * @summary Download a document
         * @param {string} documentSetRef Reference to the documentSet you want to download a file from
         * @param {string} documentRef Reference to the single document you want to download
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        downloadDocumentDeprecated(documentSetRef: string, documentRef: string, options?: any) {
            return CoreDocumentSetsApiFp(configuration).downloadDocumentDeprecated(documentSetRef, documentRef, options)(fetch, basePath);
        },
        /**
         *
         * @summary Simple query interface to find documents
         * @param {string} documentSetRef Reference to the entity you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDocumentSet(documentSetRef: string, options?: any) {
            return CoreDocumentSetsApiFp(configuration).getDocumentSet(documentSetRef, options)(fetch, basePath);
        },
        /**
         * Deprecated, use /api/documentsets/{documentSetRef} instead
         * @summary Simple query interface to find documents
         * @param {string} documentSetRef Reference to the entity you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDocumentSetDeprecated(documentSetRef: string, options?: any) {
            return CoreDocumentSetsApiFp(configuration).getDocumentSetDeprecated(documentSetRef, options)(fetch, basePath);
        },
        /**
         *
         * @summary Simple query interface to find documents
         * @param {PrintableDocumentForUpdate} body PartialDocument
         * @param {string} documentSetRef Reference to the documentSet you want to update
         * @param {string} documentRef Reference to the single document you want to update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateDocument(body: PrintableDocumentForUpdate, documentSetRef: string, documentRef: string, options?: any) {
            return CoreDocumentSetsApiFp(configuration).updateDocument(body, documentSetRef, documentRef, options)(fetch, basePath);
        },
        /**
         * Deprecated, use /api/documentsets/{documentSetRef}/documents/{documentRef} instead
         * @summary Simple query interface to find documents
         * @param {PrintableDocumentForUpdate} body PartialDocument
         * @param {string} documentSetRef Reference to the documentSet you want to update
         * @param {string} documentRef Reference to the single document you want to update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateDocumentDeprecated(body: PrintableDocumentForUpdate, documentSetRef: string, documentRef: string, options?: any) {
            return CoreDocumentSetsApiFp(configuration).updateDocumentDeprecated(body, documentSetRef, documentRef, options)(fetch, basePath);
        },
    };
};

/**
 * CoreDocumentSetsApi - object-oriented interface
 * @export
 * @class CoreDocumentSetsApi
 * @extends {BaseAPI}
 */
export class CoreDocumentSetsApi extends BaseAPI {
    /**
     *
     * @param {ExternalDocumentContentForUpdate} body Document Content with id and version
     * @param {string} documentSetRef Reference to the documentSet you want to update
     * @param {string} documentRef Reference to the single document you want to update
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreDocumentSetsApi
     */
    public addContentToDocument(body: ExternalDocumentContentForUpdate, documentSetRef: string, documentRef: string, options?: any) {
        return CoreDocumentSetsApiFp(this.configuration).addContentToDocument(body, documentSetRef, documentRef, options)(this.fetch, this.basePath);
    }

    /**
     * Deprecated, use /api/documentsets/{documentSetRef}/documents/{documentRef}/file instead
     * @param {ExternalDocumentContentForUpdate} body Document Content with id and version
     * @param {string} documentSetRef Reference to the documentSet you want to update
     * @param {string} documentRef Reference to the single document you want to update
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreDocumentSetsApi
     */
    public addContentToDocumentDeprecated(body: ExternalDocumentContentForUpdate, documentSetRef: string, documentRef: string, options?: any) {
        return CoreDocumentSetsApiFp(this.configuration).addContentToDocumentDeprecated(body, documentSetRef, documentRef, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @param {ExternalPrintableDocumentForCreation} body
     * @param {string} documentSetRef Reference to the documentSet you want to add a file to
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreDocumentSetsApi
     */
    public addDocument(body: ExternalPrintableDocumentForCreation, documentSetRef: string, options?: any) {
        return CoreDocumentSetsApiFp(this.configuration).addDocument(body, documentSetRef, options)(this.fetch, this.basePath);
    }

    /**
     * Deprecated, use /api/documentsets/{documentSetRef}/documents instead
     * @param {ExternalPrintableDocumentForCreation} body
     * @param {string} documentSetRef Reference to the documentSet you want to add a file to
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreDocumentSetsApi
     */
    public addDocumentDeprecated(body: ExternalPrintableDocumentForCreation, documentSetRef: string, options?: any) {
        return CoreDocumentSetsApiFp(this.configuration).addDocumentDeprecated(body, documentSetRef, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Download a document
     * @param {string} documentSetRef Reference to the documentSet you want to download a file from
     * @param {string} documentRef Reference to the single document you want to download
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreDocumentSetsApi
     */
    public downloadDocument(documentSetRef: string, documentRef: string, options?: any) {
        return CoreDocumentSetsApiFp(this.configuration).downloadDocument(documentSetRef, documentRef, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Download a document
     * @param {string} documentSetRef Reference to the documentSet you want to download a file from
     * @param {string} documentRef Reference to the single document you want to download
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreDocumentSetsApi
     */
    public downloadDocumentDeprecated(documentSetRef: string, documentRef: string, options?: any) {
        return CoreDocumentSetsApiFp(this.configuration).downloadDocumentDeprecated(documentSetRef, documentRef, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Simple query interface to find documents
     * @param {string} documentSetRef Reference to the entity you want to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreDocumentSetsApi
     */
    public getDocumentSet(documentSetRef: string, options?: any) {
        return CoreDocumentSetsApiFp(this.configuration).getDocumentSet(documentSetRef, options)(this.fetch, this.basePath);
    }

    /**
     * Deprecated, use /api/documentsets/{documentSetRef} instead
     * @summary Simple query interface to find documents
     * @param {string} documentSetRef Reference to the entity you want to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreDocumentSetsApi
     */
    public getDocumentSetDeprecated(documentSetRef: string, options?: any) {
        return CoreDocumentSetsApiFp(this.configuration).getDocumentSetDeprecated(documentSetRef, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Simple query interface to find documents
     * @param {PrintableDocumentForUpdate} body PartialDocument
     * @param {string} documentSetRef Reference to the documentSet you want to update
     * @param {string} documentRef Reference to the single document you want to update
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreDocumentSetsApi
     */
    public updateDocument(body: PrintableDocumentForUpdate, documentSetRef: string, documentRef: string, options?: any) {
        return CoreDocumentSetsApiFp(this.configuration).updateDocument(body, documentSetRef, documentRef, options)(this.fetch, this.basePath);
    }

    /**
     * Deprecated, use /api/documentsets/{documentSetRef}/documents/{documentRef} instead
     * @summary Simple query interface to find documents
     * @param {PrintableDocumentForUpdate} body PartialDocument
     * @param {string} documentSetRef Reference to the documentSet you want to update
     * @param {string} documentRef Reference to the single document you want to update
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreDocumentSetsApi
     */
    public updateDocumentDeprecated(body: PrintableDocumentForUpdate, documentSetRef: string, documentRef: string, options?: any) {
        return CoreDocumentSetsApiFp(this.configuration).updateDocumentDeprecated(body, documentSetRef, documentRef, options)(this.fetch, this.basePath);
    }

}
/**
 * CoreEventingApi - fetch parameter creator
 * @export
 */
export const CoreEventingApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Add new Subscription. Please note: Currently it is only possible to add one subscription per event.
         * @param {SubscriptionForCreation} body Representation that describes the subscription
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addSubscription(body: SubscriptionForCreation, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling addSubscription.');
            }
            const localVarPath = `/api/subscriptions`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"SubscriptionForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Delete subscription by Id
         * @param {string} subscriptionId ID of the subscription you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSubscription(subscriptionId: string, options: any = {}): FetchArgs {
            // verify required parameter 'subscriptionId' is not null or undefined
            if (subscriptionId === null || subscriptionId === undefined) {
                throw new RequiredError('subscriptionId','Required parameter subscriptionId was null or undefined when calling deleteSubscription.');
            }
            const localVarPath = `/api/subscriptions/{subscriptionId}`
                .replace(`{${"subscriptionId"}}`, encodeURIComponent(String(subscriptionId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a list of supported events you can subscribe to.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getEvents(options: any = {}): FetchArgs {
            const localVarPath = `/api/supportedevents`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get all subscriptions
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getSubscriptions(startAfterId?: string, size?: number, options: any = {}): FetchArgs {
            const localVarPath = `/api/subscriptions`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * CoreEventingApi - functional programming interface
 * @export
 */
export const CoreEventingApiFp = function(configuration?: Configuration) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Add new Subscription. Please note: Currently it is only possible to add one subscription per event.
         * @param {SubscriptionForCreation} body Representation that describes the subscription
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addSubscription(body: SubscriptionForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Subscription> {
            const localVarFetchArgs = CoreEventingApiFetchParamCreator(configuration).addSubscription(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Delete subscription by Id
         * @param {string} subscriptionId ID of the subscription you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSubscription(subscriptionId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Subscription> {
            const localVarFetchArgs = CoreEventingApiFetchParamCreator(configuration).deleteSubscription(subscriptionId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a list of supported events you can subscribe to.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getEvents(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<SupportedEvents> {
            const localVarFetchArgs = CoreEventingApiFetchParamCreator(configuration).getEvents(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get all subscriptions
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getSubscriptions(startAfterId?: string, size?: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Subscriptions> {
            const localVarFetchArgs = CoreEventingApiFetchParamCreator(configuration).getSubscriptions(startAfterId, size, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * CoreEventingApi - factory interface
 * @export
 */
export const CoreEventingApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Add new Subscription. Please note: Currently it is only possible to add one subscription per event.
         * @param {SubscriptionForCreation} body Representation that describes the subscription
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addSubscription(body: SubscriptionForCreation, options?: any) {
            return CoreEventingApiFp(configuration).addSubscription(body, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Delete subscription by Id
         * @param {string} subscriptionId ID of the subscription you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSubscription(subscriptionId: string, options?: any) {
            return CoreEventingApiFp(configuration).deleteSubscription(subscriptionId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a list of supported events you can subscribe to.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getEvents(options?: any) {
            return CoreEventingApiFp(configuration).getEvents(options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get all subscriptions
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getSubscriptions(startAfterId?: string, size?: number, options?: any) {
            return CoreEventingApiFp(configuration).getSubscriptions(startAfterId, size, options)(fetch, basePath);
        },
    };
};

/**
 * CoreEventingApi - object-oriented interface
 * @export
 * @class CoreEventingApi
 * @extends {BaseAPI}
 */
export class CoreEventingApi extends BaseAPI {
    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Add new Subscription. Please note: Currently it is only possible to add one subscription per event.
     * @param {SubscriptionForCreation} body Representation that describes the subscription
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreEventingApi
     */
    public addSubscription(body: SubscriptionForCreation, options?: any) {
        return CoreEventingApiFp(this.configuration).addSubscription(body, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Delete subscription by Id
     * @param {string} subscriptionId ID of the subscription you want to delete
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreEventingApi
     */
    public deleteSubscription(subscriptionId: string, options?: any) {
        return CoreEventingApiFp(this.configuration).deleteSubscription(subscriptionId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Get a list of supported events you can subscribe to.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreEventingApi
     */
    public getEvents(options?: any) {
        return CoreEventingApiFp(this.configuration).getEvents(options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Get all subscriptions
     * @param {string} [startAfterId] all entities after given Id
     * @param {number} [size] number of entities to show
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreEventingApi
     */
    public getSubscriptions(startAfterId?: string, size?: number, options?: any) {
        return CoreEventingApiFp(this.configuration).getSubscriptions(startAfterId, size, options)(this.fetch, this.basePath);
    }

}
/**
 * CoreExpiriesApi - fetch parameter creator
 * @export
 */
export const CoreExpiriesApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Create Expiry
         * @param {ExpiryEntityForCreation} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createExpiry(body?: ExpiryEntityForCreation, options: any = {}): FetchArgs {
            const localVarPath = `/api/expiries`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ExpiryEntityForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get expiries by filter parameter
         * @param {ExpiryEntityStatus} [status] Status to filter the results
         * @param {string} [processRef] ProcessRef to filter the results
         * @param {Date} [startDate] StartDate to filter the results. Expiry Date of results is after or equals the given value
         * @param {string} [endDate] EndDate to filter the results. Expiry Date of results is before or equals the given value
         * @param {string} [startAfterId] entity to start after
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getExpiries(status?: ExpiryEntityStatus, processRef?: string, startDate?: Date, endDate?: string, startAfterId?: string, size?: number, options: any = {}): FetchArgs {
            const localVarPath = `/api/expiries`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (status !== undefined) {
                localVarQueryParameter['status'] = status;
            }

            if (processRef !== undefined) {
                localVarQueryParameter['processRef'] = processRef;
            }

            if (startDate !== undefined) {
                localVarQueryParameter['startDate'] = (startDate as any).toISOString();
            }

            if (endDate !== undefined) {
                localVarQueryParameter['endDate'] = endDate;
            }

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get Expiry by Id
         * @param {string} expiryId id for the searched entity
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getExpiry(expiryId: string, options: any = {}): FetchArgs {
            // verify required parameter 'expiryId' is not null or undefined
            if (expiryId === null || expiryId === undefined) {
                throw new RequiredError('expiryId','Required parameter expiryId was null or undefined when calling getExpiry.');
            }
            const localVarPath = `/api/expiries/{expiryId}`
                .replace(`{${"expiryId"}}`, encodeURIComponent(String(expiryId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Update Expiry
         * @param {string} expiryId id of the entity to be changed
         * @param {ExpiryEntityForUpdate} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateExpiry(expiryId: string, body?: ExpiryEntityForUpdate, options: any = {}): FetchArgs {
            // verify required parameter 'expiryId' is not null or undefined
            if (expiryId === null || expiryId === undefined) {
                throw new RequiredError('expiryId','Required parameter expiryId was null or undefined when calling updateExpiry.');
            }
            const localVarPath = `/api/expiries/{expiryId}`
                .replace(`{${"expiryId"}}`, encodeURIComponent(String(expiryId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ExpiryEntityForUpdate" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * CoreExpiriesApi - functional programming interface
 * @export
 */
export const CoreExpiriesApiFp = function(configuration?: Configuration) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Create Expiry
         * @param {ExpiryEntityForCreation} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createExpiry(body?: ExpiryEntityForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ExpiryEntity> {
            const localVarFetchArgs = CoreExpiriesApiFetchParamCreator(configuration).createExpiry(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get expiries by filter parameter
         * @param {ExpiryEntityStatus} [status] Status to filter the results
         * @param {string} [processRef] ProcessRef to filter the results
         * @param {Date} [startDate] StartDate to filter the results. Expiry Date of results is after or equals the given value
         * @param {string} [endDate] EndDate to filter the results. Expiry Date of results is before or equals the given value
         * @param {string} [startAfterId] entity to start after
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getExpiries(status?: ExpiryEntityStatus, processRef?: string, startDate?: Date, endDate?: string, startAfterId?: string, size?: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<ExpiryEntity>> {
            const localVarFetchArgs = CoreExpiriesApiFetchParamCreator(configuration).getExpiries(status, processRef, startDate, endDate, startAfterId, size, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get Expiry by Id
         * @param {string} expiryId id for the searched entity
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getExpiry(expiryId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ExpiryEntity> {
            const localVarFetchArgs = CoreExpiriesApiFetchParamCreator(configuration).getExpiry(expiryId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Update Expiry
         * @param {string} expiryId id of the entity to be changed
         * @param {ExpiryEntityForUpdate} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateExpiry(expiryId: string, body?: ExpiryEntityForUpdate, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ExpiryEntity> {
            const localVarFetchArgs = CoreExpiriesApiFetchParamCreator(configuration).updateExpiry(expiryId, body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * CoreExpiriesApi - factory interface
 * @export
 */
export const CoreExpiriesApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Create Expiry
         * @param {ExpiryEntityForCreation} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createExpiry(body?: ExpiryEntityForCreation, options?: any) {
            return CoreExpiriesApiFp(configuration).createExpiry(body, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get expiries by filter parameter
         * @param {ExpiryEntityStatus} [status] Status to filter the results
         * @param {string} [processRef] ProcessRef to filter the results
         * @param {Date} [startDate] StartDate to filter the results. Expiry Date of results is after or equals the given value
         * @param {string} [endDate] EndDate to filter the results. Expiry Date of results is before or equals the given value
         * @param {string} [startAfterId] entity to start after
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getExpiries(status?: ExpiryEntityStatus, processRef?: string, startDate?: Date, endDate?: string, startAfterId?: string, size?: number, options?: any) {
            return CoreExpiriesApiFp(configuration).getExpiries(status, processRef, startDate, endDate, startAfterId, size, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get Expiry by Id
         * @param {string} expiryId id for the searched entity
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getExpiry(expiryId: string, options?: any) {
            return CoreExpiriesApiFp(configuration).getExpiry(expiryId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Update Expiry
         * @param {string} expiryId id of the entity to be changed
         * @param {ExpiryEntityForUpdate} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateExpiry(expiryId: string, body?: ExpiryEntityForUpdate, options?: any) {
            return CoreExpiriesApiFp(configuration).updateExpiry(expiryId, body, options)(fetch, basePath);
        },
    };
};

/**
 * CoreExpiriesApi - object-oriented interface
 * @export
 * @class CoreExpiriesApi
 * @extends {BaseAPI}
 */
export class CoreExpiriesApi extends BaseAPI {
    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Create Expiry
     * @param {ExpiryEntityForCreation} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreExpiriesApi
     */
    public createExpiry(body?: ExpiryEntityForCreation, options?: any) {
        return CoreExpiriesApiFp(this.configuration).createExpiry(body, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get expiries by filter parameter
     * @param {ExpiryEntityStatus} [status] Status to filter the results
     * @param {string} [processRef] ProcessRef to filter the results
     * @param {Date} [startDate] StartDate to filter the results. Expiry Date of results is after or equals the given value
     * @param {string} [endDate] EndDate to filter the results. Expiry Date of results is before or equals the given value
     * @param {string} [startAfterId] entity to start after
     * @param {number} [size] number of entities to show
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreExpiriesApi
     */
    public getExpiries(status?: ExpiryEntityStatus, processRef?: string, startDate?: Date, endDate?: string, startAfterId?: string, size?: number, options?: any) {
        return CoreExpiriesApiFp(this.configuration).getExpiries(status, processRef, startDate, endDate, startAfterId, size, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get Expiry by Id
     * @param {string} expiryId id for the searched entity
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreExpiriesApi
     */
    public getExpiry(expiryId: string, options?: any) {
        return CoreExpiriesApiFp(this.configuration).getExpiry(expiryId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Update Expiry
     * @param {string} expiryId id of the entity to be changed
     * @param {ExpiryEntityForUpdate} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreExpiriesApi
     */
    public updateExpiry(expiryId: string, body?: ExpiryEntityForUpdate, options?: any) {
        return CoreExpiriesApiFp(this.configuration).updateExpiry(expiryId, body, options)(this.fetch, this.basePath);
    }

}
/**
 * CoreFacilitiesApi - fetch parameter creator
 * @export
 */
export const CoreFacilitiesApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *
         * @summary Add a new facility
         * @param {FacilityForCreation} body Representation that describes the facility
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addFacility(body: FacilityForCreation, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling addFacility.');
            }
            const localVarPath = `/api/facilities`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"FacilityForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Connect a configured carrier to the facility with given ID
         * @param {FacilityCarrierConnectionForModification} body Representation that describes the facility
         * @param {string} facilityId ID of facility you want to get
         * @param {string} carrierRef The referenced carrier ID
         * @param {string} [locale] Provide the localized names and descriptions for the parcel label classifications. If not provided the default locale is used., for example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        connectCarrierToFacility(body: FacilityCarrierConnectionForModification, facilityId: string, carrierRef: string, locale?: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling connectCarrierToFacility.');
            }
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling connectCarrierToFacility.');
            }
            // verify required parameter 'carrierRef' is not null or undefined
            if (carrierRef === null || carrierRef === undefined) {
                throw new RequiredError('carrierRef','Required parameter carrierRef was null or undefined when calling connectCarrierToFacility.');
            }
            const localVarPath = `/api/facilities/{facilityId}/carriers/{carrierRef}`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)))
                .replace(`{${"carrierRef"}}`, encodeURIComponent(String(carrierRef)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"FacilityCarrierConnectionForModification" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Create a connection of a configured carrier to the facility with given ID
         * @param {FacilityCarrierConnectionForCreation} body Representation that describes the facility
         * @param {string} facilityId ID of facility you want to get
         * @param {string} carrierRef The referenced carrier ID
         * @param {string} [locale] Provide the localized names and descriptions for the parcel label classifications. If not provided the default locale is used., for example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createCarrierToFacility(body: FacilityCarrierConnectionForCreation, facilityId: string, carrierRef: string, locale?: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling createCarrierToFacility.');
            }
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling createCarrierToFacility.');
            }
            // verify required parameter 'carrierRef' is not null or undefined
            if (carrierRef === null || carrierRef === undefined) {
                throw new RequiredError('carrierRef','Required parameter carrierRef was null or undefined when calling createCarrierToFacility.');
            }
            const localVarPath = `/api/facilities/{facilityId}/carriers/{carrierRef}`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)))
                .replace(`{${"carrierRef"}}`, encodeURIComponent(String(carrierRef)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"FacilityCarrierConnectionForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Create a facility custom service connection
         * @param {FacilityCustomServiceConnectionForCreation} body Desired custom service connection to create/update
         * @param {string} facilityId ID of facility
         * @param {string} customServiceId ID of the custom service
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createFacilityCustomServiceConnection(body: FacilityCustomServiceConnectionForCreation, facilityId: string, customServiceId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling createFacilityCustomServiceConnection.');
            }
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling createFacilityCustomServiceConnection.');
            }
            // verify required parameter 'customServiceId' is not null or undefined
            if (customServiceId === null || customServiceId === undefined) {
                throw new RequiredError('customServiceId','Required parameter customServiceId was null or undefined when calling createFacilityCustomServiceConnection.');
            }
            const localVarPath = `/api/facilities/{facilityId}/customservices/{customServiceId}`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)))
                .replace(`{${"customServiceId"}}`, encodeURIComponent(String(customServiceId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"FacilityCustomServiceConnectionForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary deletes a facility with the given ID
         * @param {string} facilityId ID of facility you want to delete
         * @param {boolean} [forceDeletion] cascading deletion without pre condition check
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteFacility(facilityId: string, forceDeletion?: boolean, options: any = {}): FetchArgs {
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling deleteFacility.');
            }
            const localVarPath = `/api/facilities/{facilityId}`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (forceDeletion !== undefined) {
                localVarQueryParameter['forceDeletion'] = forceDeletion;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Delete a facility custom service connection
         * @param {string} facilityId ID of facility
         * @param {string} customServiceId ID of the custom service
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteFacilityCustomServiceConnection(facilityId: string, customServiceId: string, options: any = {}): FetchArgs {
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling deleteFacilityCustomServiceConnection.');
            }
            // verify required parameter 'customServiceId' is not null or undefined
            if (customServiceId === null || customServiceId === undefined) {
                throw new RequiredError('customServiceId','Required parameter customServiceId was null or undefined when calling deleteFacilityCustomServiceConnection.');
            }
            const localVarPath = `/api/facilities/{facilityId}/customservices/{customServiceId}`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)))
                .replace(`{${"customServiceId"}}`, encodeURIComponent(String(customServiceId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Delete a storage location of a facility with the given ID
         * @param {string} facilityId ID of facility from whom you want to delete the storage location
         * @param {string} storageLocationId ID of the storageLocation you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteFacilityStorageLocation(facilityId: string, storageLocationId: string, options: any = {}): FetchArgs {
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling deleteFacilityStorageLocation.');
            }
            // verify required parameter 'storageLocationId' is not null or undefined
            if (storageLocationId === null || storageLocationId === undefined) {
                throw new RequiredError('storageLocationId','Required parameter storageLocationId was null or undefined when calling deleteFacilityStorageLocation.');
            }
            const localVarPath = `/api/facilities/{facilityId}/storagelocations/{storageLocationId}`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)))
                .replace(`{${"storageLocationId"}}`, encodeURIComponent(String(storageLocationId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Delete a zone of a facility with the given ID
         * @param {string} facilityId ID of facility from whom you want to delete the zone
         * @param {string} zoneId ID of the zone you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteFacilityZone(facilityId: string, zoneId: string, options: any = {}): FetchArgs {
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling deleteFacilityZone.');
            }
            // verify required parameter 'zoneId' is not null or undefined
            if (zoneId === null || zoneId === undefined) {
                throw new RequiredError('zoneId','Required parameter zoneId was null or undefined when calling deleteFacilityZone.');
            }
            const localVarPath = `/api/facilities/{facilityId}/zones/{zoneId}`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)))
                .replace(`{${"zoneId"}}`, encodeURIComponent(String(zoneId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Call a single action on a given facility
         * @param {string} facilityId Reference to the facility you want to call the action for
         * @param {FacilityActionsParameter} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        facilityAction(facilityId: string, body?: FacilityActionsParameter, options: any = {}): FetchArgs {
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling facilityAction.');
            }
            const localVarPath = `/api/facilities/{facilityId}/actions`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"FacilityActionsParameter" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Return all facilities
         * @param {string} [startAfterId] all entities after given Id
         * @param {Array<string>} [status] Reference to the status you want to get the corresponding facilities
         * @param {number} [size] number of facilities to show
         * @param {string} [tenantFacilityId] query facilities with the given tenantFacilityId
         * @param {FacilityOrderBy} [orderBy] query facilities orderBy
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllFacilities(startAfterId?: string, status?: Array<string>, size?: number, tenantFacilityId?: string, orderBy?: FacilityOrderBy, options: any = {}): FetchArgs {
            const localVarPath = `/api/facilities`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (status) {
                localVarQueryParameter['status'] = status;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            if (tenantFacilityId !== undefined) {
                localVarQueryParameter['tenantFacilityId'] = tenantFacilityId;
            }

            if (orderBy !== undefined) {
                localVarQueryParameter['orderBy'] = orderBy;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a facility with the given ID
         * @param {string} facilityId ID of facility you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacility(facilityId: string, options: any = {}): FetchArgs {
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling getFacility.');
            }
            const localVarPath = `/api/facilities/{facilityId}`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get the details for a carrier related to the facility with the given ID
         * @param {string} facilityId ID of facility you want to get listing
         * @param {string} carrierRef The ID that describes the connection of this facility to the referenced carrier
         * @param {string} [locale] Provide the localized names and descriptions for the parcel label classifications. If not provided the default locale is used., for example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityCarrier(facilityId: string, carrierRef: string, locale?: string, options: any = {}): FetchArgs {
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling getFacilityCarrier.');
            }
            // verify required parameter 'carrierRef' is not null or undefined
            if (carrierRef === null || carrierRef === undefined) {
                throw new RequiredError('carrierRef','Required parameter carrierRef was null or undefined when calling getFacilityCarrier.');
            }
            const localVarPath = `/api/facilities/{facilityId}/carriers/{carrierRef}`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)))
                .replace(`{${"carrierRef"}}`, encodeURIComponent(String(carrierRef)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get the available CEPs for a facility
         * @param {string} facilityId ID of facility you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityCeps(facilityId: string, options: any = {}): FetchArgs {
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling getFacilityCeps.');
            }
            const localVarPath = `/api/facilities/{facilityId}/carriers`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get requested Custom service connection for a facility
         * @param {string} facilityId ID of facility
         * @param {string} customServiceId ID of the custom service
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityCustomService(facilityId: string, customServiceId: string, options: any = {}): FetchArgs {
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling getFacilityCustomService.');
            }
            // verify required parameter 'customServiceId' is not null or undefined
            if (customServiceId === null || customServiceId === undefined) {
                throw new RequiredError('customServiceId','Required parameter customServiceId was null or undefined when calling getFacilityCustomService.');
            }
            const localVarPath = `/api/facilities/{facilityId}/customservices/{customServiceId}`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)))
                .replace(`{${"customServiceId"}}`, encodeURIComponent(String(customServiceId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get requested Custom service connection for a facility
         * @param {string} facilityId ID of facility
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityCustomServiceConnections(facilityId: string, startAfterId?: string, size?: number, options: any = {}): FetchArgs {
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling getFacilityCustomServiceConnections.');
            }
            const localVarPath = `/api/facilities/{facilityId}/customservices`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get the storage location of this facility
         * @param {string} facilityId ID of facility from whom you want to get the storage locations
         * @param {string} storageLocationId the ID of the storageLocation
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityStorageLocation(facilityId: string, storageLocationId: string, options: any = {}): FetchArgs {
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling getFacilityStorageLocation.');
            }
            // verify required parameter 'storageLocationId' is not null or undefined
            if (storageLocationId === null || storageLocationId === undefined) {
                throw new RequiredError('storageLocationId','Required parameter storageLocationId was null or undefined when calling getFacilityStorageLocation.');
            }
            const localVarPath = `/api/facilities/{facilityId}/storagelocations/{storageLocationId}`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)))
                .replace(`{${"storageLocationId"}}`, encodeURIComponent(String(storageLocationId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get the storage locations of this facility
         * @param {string} facilityId ID of facility from whom you want to get the storage locations
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {string} [scannableCode] limit result to storage locations with scannable code
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityStorageLocations(facilityId: string, startAfterId?: string, size?: number, scannableCode?: string, options: any = {}): FetchArgs {
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling getFacilityStorageLocations.');
            }
            const localVarPath = `/api/facilities/{facilityId}/storagelocations`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            if (scannableCode !== undefined) {
                localVarQueryParameter['scannableCode'] = scannableCode;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get the zone of this facility
         * @param {string} facilityId ID of facility from whom you want to get the zones
         * @param {string} zoneId the ID of the zone
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityZone(facilityId: string, zoneId: string, options: any = {}): FetchArgs {
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling getFacilityZone.');
            }
            // verify required parameter 'zoneId' is not null or undefined
            if (zoneId === null || zoneId === undefined) {
                throw new RequiredError('zoneId','Required parameter zoneId was null or undefined when calling getFacilityZone.');
            }
            const localVarPath = `/api/facilities/{facilityId}/zones/{zoneId}`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)))
                .replace(`{${"zoneId"}}`, encodeURIComponent(String(zoneId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get the zones of this facility
         * @param {string} facilityId ID of facility from whom you want to get the zones
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityZones(facilityId: string, startAfterId?: string, size?: number, options: any = {}): FetchArgs {
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling getFacilityZones.');
            }
            const localVarPath = `/api/facilities/{facilityId}/zones`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Patches a facility with the given ID
         * @param {FacilityPatchActions} body Patch set
         * @param {string} facilityId ID of facility you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchFacility(body: FacilityPatchActions, facilityId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling patchFacility.');
            }
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling patchFacility.');
            }
            const localVarPath = `/api/facilities/{facilityId}`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"FacilityPatchActions" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Adds new storage locations, updates existing ones and keeps the previously present ones in the database.  1. If a storage location exists in the patch action but not in the database it is added. 2. If a storage location exists both in the patch action and in the database it is updated and the contents merged. 3. If a storage location exists only in the database, it is left untouched.
         * @summary Patches the storage locations of a facility with the given ID
         * @param {StorageLocationPatchActions} body Patch set
         * @param {string} facilityId ID of facility you want to patch the storage locations
         * @param {string} storageLocationId the ID of the storageLocation
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchFacilityStorageLocation(body: StorageLocationPatchActions, facilityId: string, storageLocationId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling patchFacilityStorageLocation.');
            }
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling patchFacilityStorageLocation.');
            }
            // verify required parameter 'storageLocationId' is not null or undefined
            if (storageLocationId === null || storageLocationId === undefined) {
                throw new RequiredError('storageLocationId','Required parameter storageLocationId was null or undefined when calling patchFacilityStorageLocation.');
            }
            const localVarPath = `/api/facilities/{facilityId}/storagelocations/{storageLocationId}`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)))
                .replace(`{${"storageLocationId"}}`, encodeURIComponent(String(storageLocationId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"StorageLocationPatchActions" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Creates a new storage location in this facility.
         * @summary Create a new storage location
         * @param {StorageLocationForCreation} body Patch set
         * @param {string} facilityId ID of facility from whom you want to create the storage location
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postFacilityStorageLocations(body: StorageLocationForCreation, facilityId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling postFacilityStorageLocations.');
            }
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling postFacilityStorageLocations.');
            }
            const localVarPath = `/api/facilities/{facilityId}/storagelocations`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"StorageLocationForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Creates a new zone in this facility.
         * @summary Create a zone
         * @param {ZoneForCreation} body The zone to be created
         * @param {string} facilityId ID of facility from whom you want to create the zone
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postFacilityZone(body: ZoneForCreation, facilityId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling postFacilityZone.');
            }
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling postFacilityZone.');
            }
            const localVarPath = `/api/facilities/{facilityId}/zones`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ZoneForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Replaces the current storage locations of this Facility with the provided in the body.
         * @summary Replace the storage locations of a Facility
         * @param {StorageLocationForReplacement} body Patch set
         * @param {string} facilityId ID of facility from whom you want to put the storage locations
         * @param {string} storageLocationId the ID of the storageLocation
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putFacilityStorageLocation(body: StorageLocationForReplacement, facilityId: string, storageLocationId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putFacilityStorageLocation.');
            }
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling putFacilityStorageLocation.');
            }
            // verify required parameter 'storageLocationId' is not null or undefined
            if (storageLocationId === null || storageLocationId === undefined) {
                throw new RequiredError('storageLocationId','Required parameter storageLocationId was null or undefined when calling putFacilityStorageLocation.');
            }
            const localVarPath = `/api/facilities/{facilityId}/storagelocations/{storageLocationId}`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)))
                .replace(`{${"storageLocationId"}}`, encodeURIComponent(String(storageLocationId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"StorageLocationForReplacement" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Replaces the current zone of this Facility with the provided in the body.
         * @summary Replace the zones of a Facility
         * @param {ZoneForReplacement} body Patch set
         * @param {string} facilityId ID of facility from whom you want to put the zone
         * @param {string} zoneId the ID of the zone
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putFacilityZone(body: ZoneForReplacement, facilityId: string, zoneId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putFacilityZone.');
            }
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling putFacilityZone.');
            }
            // verify required parameter 'zoneId' is not null or undefined
            if (zoneId === null || zoneId === undefined) {
                throw new RequiredError('zoneId','Required parameter zoneId was null or undefined when calling putFacilityZone.');
            }
            const localVarPath = `/api/facilities/{facilityId}/zones/{zoneId}`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)))
                .replace(`{${"zoneId"}}`, encodeURIComponent(String(zoneId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ZoneForReplacement" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Update a facility custom service connection
         * @param {FacilityCustomServiceConnectionForUpdate} body Desired custom service connection to create/update
         * @param {string} facilityId ID of facility
         * @param {string} customServiceId ID of the custom service
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateFacilityCustomServiceConnction(body: FacilityCustomServiceConnectionForUpdate, facilityId: string, customServiceId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling updateFacilityCustomServiceConnction.');
            }
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling updateFacilityCustomServiceConnction.');
            }
            // verify required parameter 'customServiceId' is not null or undefined
            if (customServiceId === null || customServiceId === undefined) {
                throw new RequiredError('customServiceId','Required parameter customServiceId was null or undefined when calling updateFacilityCustomServiceConnction.');
            }
            const localVarPath = `/api/facilities/{facilityId}/customservices/{customServiceId}`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)))
                .replace(`{${"customServiceId"}}`, encodeURIComponent(String(customServiceId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"FacilityCustomServiceConnectionForUpdate" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * CoreFacilitiesApi - functional programming interface
 * @export
 */
export const CoreFacilitiesApiFp = function(configuration?: Configuration) {
    return {
        /**
         *
         * @summary Add a new facility
         * @param {FacilityForCreation} body Representation that describes the facility
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addFacility(body: FacilityForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Facility> {
            const localVarFetchArgs = CoreFacilitiesApiFetchParamCreator(configuration).addFacility(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Connect a configured carrier to the facility with given ID
         * @param {FacilityCarrierConnectionForModification} body Representation that describes the facility
         * @param {string} facilityId ID of facility you want to get
         * @param {string} carrierRef The referenced carrier ID
         * @param {string} [locale] Provide the localized names and descriptions for the parcel label classifications. If not provided the default locale is used., for example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        connectCarrierToFacility(body: FacilityCarrierConnectionForModification, facilityId: string, carrierRef: string, locale?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FacilityCarrierConnection> {
            const localVarFetchArgs = CoreFacilitiesApiFetchParamCreator(configuration).connectCarrierToFacility(body, facilityId, carrierRef, locale, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Create a connection of a configured carrier to the facility with given ID
         * @param {FacilityCarrierConnectionForCreation} body Representation that describes the facility
         * @param {string} facilityId ID of facility you want to get
         * @param {string} carrierRef The referenced carrier ID
         * @param {string} [locale] Provide the localized names and descriptions for the parcel label classifications. If not provided the default locale is used., for example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createCarrierToFacility(body: FacilityCarrierConnectionForCreation, facilityId: string, carrierRef: string, locale?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FacilityCarrierConnection> {
            const localVarFetchArgs = CoreFacilitiesApiFetchParamCreator(configuration).createCarrierToFacility(body, facilityId, carrierRef, locale, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Create a facility custom service connection
         * @param {FacilityCustomServiceConnectionForCreation} body Desired custom service connection to create/update
         * @param {string} facilityId ID of facility
         * @param {string} customServiceId ID of the custom service
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createFacilityCustomServiceConnection(body: FacilityCustomServiceConnectionForCreation, facilityId: string, customServiceId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FacilityCustomServiceConnection> {
            const localVarFetchArgs = CoreFacilitiesApiFetchParamCreator(configuration).createFacilityCustomServiceConnection(body, facilityId, customServiceId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary deletes a facility with the given ID
         * @param {string} facilityId ID of facility you want to delete
         * @param {boolean} [forceDeletion] cascading deletion without pre condition check
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteFacility(facilityId: string, forceDeletion?: boolean, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = CoreFacilitiesApiFetchParamCreator(configuration).deleteFacility(facilityId, forceDeletion, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Delete a facility custom service connection
         * @param {string} facilityId ID of facility
         * @param {string} customServiceId ID of the custom service
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteFacilityCustomServiceConnection(facilityId: string, customServiceId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = CoreFacilitiesApiFetchParamCreator(configuration).deleteFacilityCustomServiceConnection(facilityId, customServiceId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Delete a storage location of a facility with the given ID
         * @param {string} facilityId ID of facility from whom you want to delete the storage location
         * @param {string} storageLocationId ID of the storageLocation you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteFacilityStorageLocation(facilityId: string, storageLocationId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = CoreFacilitiesApiFetchParamCreator(configuration).deleteFacilityStorageLocation(facilityId, storageLocationId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Delete a zone of a facility with the given ID
         * @param {string} facilityId ID of facility from whom you want to delete the zone
         * @param {string} zoneId ID of the zone you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteFacilityZone(facilityId: string, zoneId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = CoreFacilitiesApiFetchParamCreator(configuration).deleteFacilityZone(facilityId, zoneId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Call a single action on a given facility
         * @param {string} facilityId Reference to the facility you want to call the action for
         * @param {FacilityActionsParameter} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        facilityAction(facilityId: string, body?: FacilityActionsParameter, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Facility> {
            const localVarFetchArgs = CoreFacilitiesApiFetchParamCreator(configuration).facilityAction(facilityId, body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Return all facilities
         * @param {string} [startAfterId] all entities after given Id
         * @param {Array<string>} [status] Reference to the status you want to get the corresponding facilities
         * @param {number} [size] number of facilities to show
         * @param {string} [tenantFacilityId] query facilities with the given tenantFacilityId
         * @param {FacilityOrderBy} [orderBy] query facilities orderBy
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllFacilities(startAfterId?: string, status?: Array<string>, size?: number, tenantFacilityId?: string, orderBy?: FacilityOrderBy, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<StrippedFacilities> {
            const localVarFetchArgs = CoreFacilitiesApiFetchParamCreator(configuration).getAllFacilities(startAfterId, status, size, tenantFacilityId, orderBy, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a facility with the given ID
         * @param {string} facilityId ID of facility you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacility(facilityId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Facility> {
            const localVarFetchArgs = CoreFacilitiesApiFetchParamCreator(configuration).getFacility(facilityId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get the details for a carrier related to the facility with the given ID
         * @param {string} facilityId ID of facility you want to get listing
         * @param {string} carrierRef The ID that describes the connection of this facility to the referenced carrier
         * @param {string} [locale] Provide the localized names and descriptions for the parcel label classifications. If not provided the default locale is used., for example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityCarrier(facilityId: string, carrierRef: string, locale?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FacilityCarrierConnection> {
            const localVarFetchArgs = CoreFacilitiesApiFetchParamCreator(configuration).getFacilityCarrier(facilityId, carrierRef, locale, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get the available CEPs for a facility
         * @param {string} facilityId ID of facility you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityCeps(facilityId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<StrippedCarriers> {
            const localVarFetchArgs = CoreFacilitiesApiFetchParamCreator(configuration).getFacilityCeps(facilityId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get requested Custom service connection for a facility
         * @param {string} facilityId ID of facility
         * @param {string} customServiceId ID of the custom service
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityCustomService(facilityId: string, customServiceId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FacilityCustomServiceConnection> {
            const localVarFetchArgs = CoreFacilitiesApiFetchParamCreator(configuration).getFacilityCustomService(facilityId, customServiceId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get requested Custom service connection for a facility
         * @param {string} facilityId ID of facility
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityCustomServiceConnections(facilityId: string, startAfterId?: string, size?: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<StrippedFacilityCustomServiceConnections> {
            const localVarFetchArgs = CoreFacilitiesApiFetchParamCreator(configuration).getFacilityCustomServiceConnections(facilityId, startAfterId, size, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get the storage location of this facility
         * @param {string} facilityId ID of facility from whom you want to get the storage locations
         * @param {string} storageLocationId the ID of the storageLocation
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityStorageLocation(facilityId: string, storageLocationId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<StorageLocation>> {
            const localVarFetchArgs = CoreFacilitiesApiFetchParamCreator(configuration).getFacilityStorageLocation(facilityId, storageLocationId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get the storage locations of this facility
         * @param {string} facilityId ID of facility from whom you want to get the storage locations
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {string} [scannableCode] limit result to storage locations with scannable code
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityStorageLocations(facilityId: string, startAfterId?: string, size?: number, scannableCode?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<StorageLocation>> {
            const localVarFetchArgs = CoreFacilitiesApiFetchParamCreator(configuration).getFacilityStorageLocations(facilityId, startAfterId, size, scannableCode, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get the zone of this facility
         * @param {string} facilityId ID of facility from whom you want to get the zones
         * @param {string} zoneId the ID of the zone
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityZone(facilityId: string, zoneId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<Zone>> {
            const localVarFetchArgs = CoreFacilitiesApiFetchParamCreator(configuration).getFacilityZone(facilityId, zoneId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get the zones of this facility
         * @param {string} facilityId ID of facility from whom you want to get the zones
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityZones(facilityId: string, startAfterId?: string, size?: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<Zone>> {
            const localVarFetchArgs = CoreFacilitiesApiFetchParamCreator(configuration).getFacilityZones(facilityId, startAfterId, size, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Patches a facility with the given ID
         * @param {FacilityPatchActions} body Patch set
         * @param {string} facilityId ID of facility you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchFacility(body: FacilityPatchActions, facilityId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Facility> {
            const localVarFetchArgs = CoreFacilitiesApiFetchParamCreator(configuration).patchFacility(body, facilityId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * Adds new storage locations, updates existing ones and keeps the previously present ones in the database.  1. If a storage location exists in the patch action but not in the database it is added. 2. If a storage location exists both in the patch action and in the database it is updated and the contents merged. 3. If a storage location exists only in the database, it is left untouched.
         * @summary Patches the storage locations of a facility with the given ID
         * @param {StorageLocationPatchActions} body Patch set
         * @param {string} facilityId ID of facility you want to patch the storage locations
         * @param {string} storageLocationId the ID of the storageLocation
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchFacilityStorageLocation(body: StorageLocationPatchActions, facilityId: string, storageLocationId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<StorageLocation> {
            const localVarFetchArgs = CoreFacilitiesApiFetchParamCreator(configuration).patchFacilityStorageLocation(body, facilityId, storageLocationId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * Creates a new storage location in this facility.
         * @summary Create a new storage location
         * @param {StorageLocationForCreation} body Patch set
         * @param {string} facilityId ID of facility from whom you want to create the storage location
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postFacilityStorageLocations(body: StorageLocationForCreation, facilityId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<StorageLocation> {
            const localVarFetchArgs = CoreFacilitiesApiFetchParamCreator(configuration).postFacilityStorageLocations(body, facilityId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * Creates a new zone in this facility.
         * @summary Create a zone
         * @param {ZoneForCreation} body The zone to be created
         * @param {string} facilityId ID of facility from whom you want to create the zone
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postFacilityZone(body: ZoneForCreation, facilityId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Zone> {
            const localVarFetchArgs = CoreFacilitiesApiFetchParamCreator(configuration).postFacilityZone(body, facilityId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * Replaces the current storage locations of this Facility with the provided in the body.
         * @summary Replace the storage locations of a Facility
         * @param {StorageLocationForReplacement} body Patch set
         * @param {string} facilityId ID of facility from whom you want to put the storage locations
         * @param {string} storageLocationId the ID of the storageLocation
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putFacilityStorageLocation(body: StorageLocationForReplacement, facilityId: string, storageLocationId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<StorageLocation> {
            const localVarFetchArgs = CoreFacilitiesApiFetchParamCreator(configuration).putFacilityStorageLocation(body, facilityId, storageLocationId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * Replaces the current zone of this Facility with the provided in the body.
         * @summary Replace the zones of a Facility
         * @param {ZoneForReplacement} body Patch set
         * @param {string} facilityId ID of facility from whom you want to put the zone
         * @param {string} zoneId the ID of the zone
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putFacilityZone(body: ZoneForReplacement, facilityId: string, zoneId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<Zone>> {
            const localVarFetchArgs = CoreFacilitiesApiFetchParamCreator(configuration).putFacilityZone(body, facilityId, zoneId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Update a facility custom service connection
         * @param {FacilityCustomServiceConnectionForUpdate} body Desired custom service connection to create/update
         * @param {string} facilityId ID of facility
         * @param {string} customServiceId ID of the custom service
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateFacilityCustomServiceConnction(body: FacilityCustomServiceConnectionForUpdate, facilityId: string, customServiceId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FacilityCustomServiceConnection> {
            const localVarFetchArgs = CoreFacilitiesApiFetchParamCreator(configuration).updateFacilityCustomServiceConnction(body, facilityId, customServiceId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * CoreFacilitiesApi - factory interface
 * @export
 */
export const CoreFacilitiesApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         *
         * @summary Add a new facility
         * @param {FacilityForCreation} body Representation that describes the facility
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addFacility(body: FacilityForCreation, options?: any) {
            return CoreFacilitiesApiFp(configuration).addFacility(body, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Connect a configured carrier to the facility with given ID
         * @param {FacilityCarrierConnectionForModification} body Representation that describes the facility
         * @param {string} facilityId ID of facility you want to get
         * @param {string} carrierRef The referenced carrier ID
         * @param {string} [locale] Provide the localized names and descriptions for the parcel label classifications. If not provided the default locale is used., for example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        connectCarrierToFacility(body: FacilityCarrierConnectionForModification, facilityId: string, carrierRef: string, locale?: string, options?: any) {
            return CoreFacilitiesApiFp(configuration).connectCarrierToFacility(body, facilityId, carrierRef, locale, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Create a connection of a configured carrier to the facility with given ID
         * @param {FacilityCarrierConnectionForCreation} body Representation that describes the facility
         * @param {string} facilityId ID of facility you want to get
         * @param {string} carrierRef The referenced carrier ID
         * @param {string} [locale] Provide the localized names and descriptions for the parcel label classifications. If not provided the default locale is used., for example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createCarrierToFacility(body: FacilityCarrierConnectionForCreation, facilityId: string, carrierRef: string, locale?: string, options?: any) {
            return CoreFacilitiesApiFp(configuration).createCarrierToFacility(body, facilityId, carrierRef, locale, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Create a facility custom service connection
         * @param {FacilityCustomServiceConnectionForCreation} body Desired custom service connection to create/update
         * @param {string} facilityId ID of facility
         * @param {string} customServiceId ID of the custom service
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createFacilityCustomServiceConnection(body: FacilityCustomServiceConnectionForCreation, facilityId: string, customServiceId: string, options?: any) {
            return CoreFacilitiesApiFp(configuration).createFacilityCustomServiceConnection(body, facilityId, customServiceId, options)(fetch, basePath);
        },
        /**
         *
         * @summary deletes a facility with the given ID
         * @param {string} facilityId ID of facility you want to delete
         * @param {boolean} [forceDeletion] cascading deletion without pre condition check
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteFacility(facilityId: string, forceDeletion?: boolean, options?: any) {
            return CoreFacilitiesApiFp(configuration).deleteFacility(facilityId, forceDeletion, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Delete a facility custom service connection
         * @param {string} facilityId ID of facility
         * @param {string} customServiceId ID of the custom service
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteFacilityCustomServiceConnection(facilityId: string, customServiceId: string, options?: any) {
            return CoreFacilitiesApiFp(configuration).deleteFacilityCustomServiceConnection(facilityId, customServiceId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Delete a storage location of a facility with the given ID
         * @param {string} facilityId ID of facility from whom you want to delete the storage location
         * @param {string} storageLocationId ID of the storageLocation you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteFacilityStorageLocation(facilityId: string, storageLocationId: string, options?: any) {
            return CoreFacilitiesApiFp(configuration).deleteFacilityStorageLocation(facilityId, storageLocationId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Delete a zone of a facility with the given ID
         * @param {string} facilityId ID of facility from whom you want to delete the zone
         * @param {string} zoneId ID of the zone you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteFacilityZone(facilityId: string, zoneId: string, options?: any) {
            return CoreFacilitiesApiFp(configuration).deleteFacilityZone(facilityId, zoneId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Call a single action on a given facility
         * @param {string} facilityId Reference to the facility you want to call the action for
         * @param {FacilityActionsParameter} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        facilityAction(facilityId: string, body?: FacilityActionsParameter, options?: any) {
            return CoreFacilitiesApiFp(configuration).facilityAction(facilityId, body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Return all facilities
         * @param {string} [startAfterId] all entities after given Id
         * @param {Array<string>} [status] Reference to the status you want to get the corresponding facilities
         * @param {number} [size] number of facilities to show
         * @param {string} [tenantFacilityId] query facilities with the given tenantFacilityId
         * @param {FacilityOrderBy} [orderBy] query facilities orderBy
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllFacilities(startAfterId?: string, status?: Array<string>, size?: number, tenantFacilityId?: string, orderBy?: FacilityOrderBy, options?: any) {
            return CoreFacilitiesApiFp(configuration).getAllFacilities(startAfterId, status, size, tenantFacilityId, orderBy, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a facility with the given ID
         * @param {string} facilityId ID of facility you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacility(facilityId: string, options?: any) {
            return CoreFacilitiesApiFp(configuration).getFacility(facilityId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get the details for a carrier related to the facility with the given ID
         * @param {string} facilityId ID of facility you want to get listing
         * @param {string} carrierRef The ID that describes the connection of this facility to the referenced carrier
         * @param {string} [locale] Provide the localized names and descriptions for the parcel label classifications. If not provided the default locale is used., for example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityCarrier(facilityId: string, carrierRef: string, locale?: string, options?: any) {
            return CoreFacilitiesApiFp(configuration).getFacilityCarrier(facilityId, carrierRef, locale, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get the available CEPs for a facility
         * @param {string} facilityId ID of facility you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityCeps(facilityId: string, options?: any) {
            return CoreFacilitiesApiFp(configuration).getFacilityCeps(facilityId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get requested Custom service connection for a facility
         * @param {string} facilityId ID of facility
         * @param {string} customServiceId ID of the custom service
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityCustomService(facilityId: string, customServiceId: string, options?: any) {
            return CoreFacilitiesApiFp(configuration).getFacilityCustomService(facilityId, customServiceId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get requested Custom service connection for a facility
         * @param {string} facilityId ID of facility
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityCustomServiceConnections(facilityId: string, startAfterId?: string, size?: number, options?: any) {
            return CoreFacilitiesApiFp(configuration).getFacilityCustomServiceConnections(facilityId, startAfterId, size, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get the storage location of this facility
         * @param {string} facilityId ID of facility from whom you want to get the storage locations
         * @param {string} storageLocationId the ID of the storageLocation
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityStorageLocation(facilityId: string, storageLocationId: string, options?: any) {
            return CoreFacilitiesApiFp(configuration).getFacilityStorageLocation(facilityId, storageLocationId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get the storage locations of this facility
         * @param {string} facilityId ID of facility from whom you want to get the storage locations
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {string} [scannableCode] limit result to storage locations with scannable code
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityStorageLocations(facilityId: string, startAfterId?: string, size?: number, scannableCode?: string, options?: any) {
            return CoreFacilitiesApiFp(configuration).getFacilityStorageLocations(facilityId, startAfterId, size, scannableCode, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get the zone of this facility
         * @param {string} facilityId ID of facility from whom you want to get the zones
         * @param {string} zoneId the ID of the zone
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityZone(facilityId: string, zoneId: string, options?: any) {
            return CoreFacilitiesApiFp(configuration).getFacilityZone(facilityId, zoneId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get the zones of this facility
         * @param {string} facilityId ID of facility from whom you want to get the zones
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityZones(facilityId: string, startAfterId?: string, size?: number, options?: any) {
            return CoreFacilitiesApiFp(configuration).getFacilityZones(facilityId, startAfterId, size, options)(fetch, basePath);
        },
        /**
         *
         * @summary Patches a facility with the given ID
         * @param {FacilityPatchActions} body Patch set
         * @param {string} facilityId ID of facility you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchFacility(body: FacilityPatchActions, facilityId: string, options?: any) {
            return CoreFacilitiesApiFp(configuration).patchFacility(body, facilityId, options)(fetch, basePath);
        },
        /**
         * Adds new storage locations, updates existing ones and keeps the previously present ones in the database.  1. If a storage location exists in the patch action but not in the database it is added. 2. If a storage location exists both in the patch action and in the database it is updated and the contents merged. 3. If a storage location exists only in the database, it is left untouched.
         * @summary Patches the storage locations of a facility with the given ID
         * @param {StorageLocationPatchActions} body Patch set
         * @param {string} facilityId ID of facility you want to patch the storage locations
         * @param {string} storageLocationId the ID of the storageLocation
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchFacilityStorageLocation(body: StorageLocationPatchActions, facilityId: string, storageLocationId: string, options?: any) {
            return CoreFacilitiesApiFp(configuration).patchFacilityStorageLocation(body, facilityId, storageLocationId, options)(fetch, basePath);
        },
        /**
         * Creates a new storage location in this facility.
         * @summary Create a new storage location
         * @param {StorageLocationForCreation} body Patch set
         * @param {string} facilityId ID of facility from whom you want to create the storage location
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postFacilityStorageLocations(body: StorageLocationForCreation, facilityId: string, options?: any) {
            return CoreFacilitiesApiFp(configuration).postFacilityStorageLocations(body, facilityId, options)(fetch, basePath);
        },
        /**
         * Creates a new zone in this facility.
         * @summary Create a zone
         * @param {ZoneForCreation} body The zone to be created
         * @param {string} facilityId ID of facility from whom you want to create the zone
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postFacilityZone(body: ZoneForCreation, facilityId: string, options?: any) {
            return CoreFacilitiesApiFp(configuration).postFacilityZone(body, facilityId, options)(fetch, basePath);
        },
        /**
         * Replaces the current storage locations of this Facility with the provided in the body.
         * @summary Replace the storage locations of a Facility
         * @param {StorageLocationForReplacement} body Patch set
         * @param {string} facilityId ID of facility from whom you want to put the storage locations
         * @param {string} storageLocationId the ID of the storageLocation
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putFacilityStorageLocation(body: StorageLocationForReplacement, facilityId: string, storageLocationId: string, options?: any) {
            return CoreFacilitiesApiFp(configuration).putFacilityStorageLocation(body, facilityId, storageLocationId, options)(fetch, basePath);
        },
        /**
         * Replaces the current zone of this Facility with the provided in the body.
         * @summary Replace the zones of a Facility
         * @param {ZoneForReplacement} body Patch set
         * @param {string} facilityId ID of facility from whom you want to put the zone
         * @param {string} zoneId the ID of the zone
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putFacilityZone(body: ZoneForReplacement, facilityId: string, zoneId: string, options?: any) {
            return CoreFacilitiesApiFp(configuration).putFacilityZone(body, facilityId, zoneId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Update a facility custom service connection
         * @param {FacilityCustomServiceConnectionForUpdate} body Desired custom service connection to create/update
         * @param {string} facilityId ID of facility
         * @param {string} customServiceId ID of the custom service
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateFacilityCustomServiceConnction(body: FacilityCustomServiceConnectionForUpdate, facilityId: string, customServiceId: string, options?: any) {
            return CoreFacilitiesApiFp(configuration).updateFacilityCustomServiceConnction(body, facilityId, customServiceId, options)(fetch, basePath);
        },
    };
};

/**
 * CoreFacilitiesApi - object-oriented interface
 * @export
 * @class CoreFacilitiesApi
 * @extends {BaseAPI}
 */
export class CoreFacilitiesApi extends BaseAPI {
    /**
     *
     * @summary Add a new facility
     * @param {FacilityForCreation} body Representation that describes the facility
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreFacilitiesApi
     */
    public addFacility(body: FacilityForCreation, options?: any) {
        return CoreFacilitiesApiFp(this.configuration).addFacility(body, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Connect a configured carrier to the facility with given ID
     * @param {FacilityCarrierConnectionForModification} body Representation that describes the facility
     * @param {string} facilityId ID of facility you want to get
     * @param {string} carrierRef The referenced carrier ID
     * @param {string} [locale] Provide the localized names and descriptions for the parcel label classifications. If not provided the default locale is used., for example de_DE.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreFacilitiesApi
     */
    public connectCarrierToFacility(body: FacilityCarrierConnectionForModification, facilityId: string, carrierRef: string, locale?: string, options?: any) {
        return CoreFacilitiesApiFp(this.configuration).connectCarrierToFacility(body, facilityId, carrierRef, locale, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Create a connection of a configured carrier to the facility with given ID
     * @param {FacilityCarrierConnectionForCreation} body Representation that describes the facility
     * @param {string} facilityId ID of facility you want to get
     * @param {string} carrierRef The referenced carrier ID
     * @param {string} [locale] Provide the localized names and descriptions for the parcel label classifications. If not provided the default locale is used., for example de_DE.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreFacilitiesApi
     */
    public createCarrierToFacility(body: FacilityCarrierConnectionForCreation, facilityId: string, carrierRef: string, locale?: string, options?: any) {
        return CoreFacilitiesApiFp(this.configuration).createCarrierToFacility(body, facilityId, carrierRef, locale, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Create a facility custom service connection
     * @param {FacilityCustomServiceConnectionForCreation} body Desired custom service connection to create/update
     * @param {string} facilityId ID of facility
     * @param {string} customServiceId ID of the custom service
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreFacilitiesApi
     */
    public createFacilityCustomServiceConnection(body: FacilityCustomServiceConnectionForCreation, facilityId: string, customServiceId: string, options?: any) {
        return CoreFacilitiesApiFp(this.configuration).createFacilityCustomServiceConnection(body, facilityId, customServiceId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary deletes a facility with the given ID
     * @param {string} facilityId ID of facility you want to delete
     * @param {boolean} [forceDeletion] cascading deletion without pre condition check
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreFacilitiesApi
     */
    public deleteFacility(facilityId: string, forceDeletion?: boolean, options?: any) {
        return CoreFacilitiesApiFp(this.configuration).deleteFacility(facilityId, forceDeletion, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Delete a facility custom service connection
     * @param {string} facilityId ID of facility
     * @param {string} customServiceId ID of the custom service
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreFacilitiesApi
     */
    public deleteFacilityCustomServiceConnection(facilityId: string, customServiceId: string, options?: any) {
        return CoreFacilitiesApiFp(this.configuration).deleteFacilityCustomServiceConnection(facilityId, customServiceId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Delete a storage location of a facility with the given ID
     * @param {string} facilityId ID of facility from whom you want to delete the storage location
     * @param {string} storageLocationId ID of the storageLocation you want to delete
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreFacilitiesApi
     */
    public deleteFacilityStorageLocation(facilityId: string, storageLocationId: string, options?: any) {
        return CoreFacilitiesApiFp(this.configuration).deleteFacilityStorageLocation(facilityId, storageLocationId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Delete a zone of a facility with the given ID
     * @param {string} facilityId ID of facility from whom you want to delete the zone
     * @param {string} zoneId ID of the zone you want to delete
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreFacilitiesApi
     */
    public deleteFacilityZone(facilityId: string, zoneId: string, options?: any) {
        return CoreFacilitiesApiFp(this.configuration).deleteFacilityZone(facilityId, zoneId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Call a single action on a given facility
     * @param {string} facilityId Reference to the facility you want to call the action for
     * @param {FacilityActionsParameter} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreFacilitiesApi
     */
    public facilityAction(facilityId: string, body?: FacilityActionsParameter, options?: any) {
        return CoreFacilitiesApiFp(this.configuration).facilityAction(facilityId, body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Return all facilities
     * @param {string} [startAfterId] all entities after given Id
     * @param {Array<string>} [status] Reference to the status you want to get the corresponding facilities
     * @param {number} [size] number of facilities to show
     * @param {string} [tenantFacilityId] query facilities with the given tenantFacilityId
     * @param {FacilityOrderBy} [orderBy] query facilities orderBy
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreFacilitiesApi
     */
    public getAllFacilities(startAfterId?: string, status?: Array<string>, size?: number, tenantFacilityId?: string, orderBy?: FacilityOrderBy, options?: any) {
        return CoreFacilitiesApiFp(this.configuration).getAllFacilities(startAfterId, status, size, tenantFacilityId, orderBy, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a facility with the given ID
     * @param {string} facilityId ID of facility you want to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreFacilitiesApi
     */
    public getFacility(facilityId: string, options?: any) {
        return CoreFacilitiesApiFp(this.configuration).getFacility(facilityId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Get the details for a carrier related to the facility with the given ID
     * @param {string} facilityId ID of facility you want to get listing
     * @param {string} carrierRef The ID that describes the connection of this facility to the referenced carrier
     * @param {string} [locale] Provide the localized names and descriptions for the parcel label classifications. If not provided the default locale is used., for example de_DE.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreFacilitiesApi
     */
    public getFacilityCarrier(facilityId: string, carrierRef: string, locale?: string, options?: any) {
        return CoreFacilitiesApiFp(this.configuration).getFacilityCarrier(facilityId, carrierRef, locale, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Get the available CEPs for a facility
     * @param {string} facilityId ID of facility you want to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreFacilitiesApi
     */
    public getFacilityCeps(facilityId: string, options?: any) {
        return CoreFacilitiesApiFp(this.configuration).getFacilityCeps(facilityId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get requested Custom service connection for a facility
     * @param {string} facilityId ID of facility
     * @param {string} customServiceId ID of the custom service
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreFacilitiesApi
     */
    public getFacilityCustomService(facilityId: string, customServiceId: string, options?: any) {
        return CoreFacilitiesApiFp(this.configuration).getFacilityCustomService(facilityId, customServiceId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get requested Custom service connection for a facility
     * @param {string} facilityId ID of facility
     * @param {string} [startAfterId] all entities after given Id
     * @param {number} [size] number of entities to show
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreFacilitiesApi
     */
    public getFacilityCustomServiceConnections(facilityId: string, startAfterId?: string, size?: number, options?: any) {
        return CoreFacilitiesApiFp(this.configuration).getFacilityCustomServiceConnections(facilityId, startAfterId, size, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get the storage location of this facility
     * @param {string} facilityId ID of facility from whom you want to get the storage locations
     * @param {string} storageLocationId the ID of the storageLocation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreFacilitiesApi
     */
    public getFacilityStorageLocation(facilityId: string, storageLocationId: string, options?: any) {
        return CoreFacilitiesApiFp(this.configuration).getFacilityStorageLocation(facilityId, storageLocationId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get the storage locations of this facility
     * @param {string} facilityId ID of facility from whom you want to get the storage locations
     * @param {string} [startAfterId] all entities after given Id
     * @param {number} [size] number of entities to show
     * @param {string} [scannableCode] limit result to storage locations with scannable code
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreFacilitiesApi
     */
    public getFacilityStorageLocations(facilityId: string, startAfterId?: string, size?: number, scannableCode?: string, options?: any) {
        return CoreFacilitiesApiFp(this.configuration).getFacilityStorageLocations(facilityId, startAfterId, size, scannableCode, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get the zone of this facility
     * @param {string} facilityId ID of facility from whom you want to get the zones
     * @param {string} zoneId the ID of the zone
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreFacilitiesApi
     */
    public getFacilityZone(facilityId: string, zoneId: string, options?: any) {
        return CoreFacilitiesApiFp(this.configuration).getFacilityZone(facilityId, zoneId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get the zones of this facility
     * @param {string} facilityId ID of facility from whom you want to get the zones
     * @param {string} [startAfterId] all entities after given Id
     * @param {number} [size] number of entities to show
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreFacilitiesApi
     */
    public getFacilityZones(facilityId: string, startAfterId?: string, size?: number, options?: any) {
        return CoreFacilitiesApiFp(this.configuration).getFacilityZones(facilityId, startAfterId, size, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Patches a facility with the given ID
     * @param {FacilityPatchActions} body Patch set
     * @param {string} facilityId ID of facility you want to patch
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreFacilitiesApi
     */
    public patchFacility(body: FacilityPatchActions, facilityId: string, options?: any) {
        return CoreFacilitiesApiFp(this.configuration).patchFacility(body, facilityId, options)(this.fetch, this.basePath);
    }

    /**
     * Adds new storage locations, updates existing ones and keeps the previously present ones in the database.  1. If a storage location exists in the patch action but not in the database it is added. 2. If a storage location exists both in the patch action and in the database it is updated and the contents merged. 3. If a storage location exists only in the database, it is left untouched.
     * @summary Patches the storage locations of a facility with the given ID
     * @param {StorageLocationPatchActions} body Patch set
     * @param {string} facilityId ID of facility you want to patch the storage locations
     * @param {string} storageLocationId the ID of the storageLocation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreFacilitiesApi
     */
    public patchFacilityStorageLocation(body: StorageLocationPatchActions, facilityId: string, storageLocationId: string, options?: any) {
        return CoreFacilitiesApiFp(this.configuration).patchFacilityStorageLocation(body, facilityId, storageLocationId, options)(this.fetch, this.basePath);
    }

    /**
     * Creates a new storage location in this facility.
     * @summary Create a new storage location
     * @param {StorageLocationForCreation} body Patch set
     * @param {string} facilityId ID of facility from whom you want to create the storage location
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreFacilitiesApi
     */
    public postFacilityStorageLocations(body: StorageLocationForCreation, facilityId: string, options?: any) {
        return CoreFacilitiesApiFp(this.configuration).postFacilityStorageLocations(body, facilityId, options)(this.fetch, this.basePath);
    }

    /**
     * Creates a new zone in this facility.
     * @summary Create a zone
     * @param {ZoneForCreation} body The zone to be created
     * @param {string} facilityId ID of facility from whom you want to create the zone
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreFacilitiesApi
     */
    public postFacilityZone(body: ZoneForCreation, facilityId: string, options?: any) {
        return CoreFacilitiesApiFp(this.configuration).postFacilityZone(body, facilityId, options)(this.fetch, this.basePath);
    }

    /**
     * Replaces the current storage locations of this Facility with the provided in the body.
     * @summary Replace the storage locations of a Facility
     * @param {StorageLocationForReplacement} body Patch set
     * @param {string} facilityId ID of facility from whom you want to put the storage locations
     * @param {string} storageLocationId the ID of the storageLocation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreFacilitiesApi
     */
    public putFacilityStorageLocation(body: StorageLocationForReplacement, facilityId: string, storageLocationId: string, options?: any) {
        return CoreFacilitiesApiFp(this.configuration).putFacilityStorageLocation(body, facilityId, storageLocationId, options)(this.fetch, this.basePath);
    }

    /**
     * Replaces the current zone of this Facility with the provided in the body.
     * @summary Replace the zones of a Facility
     * @param {ZoneForReplacement} body Patch set
     * @param {string} facilityId ID of facility from whom you want to put the zone
     * @param {string} zoneId the ID of the zone
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreFacilitiesApi
     */
    public putFacilityZone(body: ZoneForReplacement, facilityId: string, zoneId: string, options?: any) {
        return CoreFacilitiesApiFp(this.configuration).putFacilityZone(body, facilityId, zoneId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Update a facility custom service connection
     * @param {FacilityCustomServiceConnectionForUpdate} body Desired custom service connection to create/update
     * @param {string} facilityId ID of facility
     * @param {string} customServiceId ID of the custom service
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreFacilitiesApi
     */
    public updateFacilityCustomServiceConnction(body: FacilityCustomServiceConnectionForUpdate, facilityId: string, customServiceId: string, options?: any) {
        return CoreFacilitiesApiFp(this.configuration).updateFacilityCustomServiceConnction(body, facilityId, customServiceId, options)(this.fetch, this.basePath);
    }

}
/**
 * CoreListingsApi - fetch parameter creator
 * @export
 */
export const CoreListingsApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Create measurementUnit
         * @param {MeasurementUnitForCreation} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createMeasurementUnit(body: MeasurementUnitForCreation, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling createMeasurementUnit.');
            }
            const localVarPath = `/api/measurementunits`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"MeasurementUnitForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary deletes a listing with the given ID of a facility with the given ID
         * @param {string} facilityId ID of facility you want to delete a listing of
         * @param {string} tenantArticleId tenant ID of the articles listing you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteFacilityListing(facilityId: string, tenantArticleId: string, options: any = {}): FetchArgs {
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling deleteFacilityListing.');
            }
            // verify required parameter 'tenantArticleId' is not null or undefined
            if (tenantArticleId === null || tenantArticleId === undefined) {
                throw new RequiredError('tenantArticleId','Required parameter tenantArticleId was null or undefined when calling deleteFacilityListing.');
            }
            const localVarPath = `/api/facilities/{facilityId}/listings/{tenantArticleId}`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)))
                .replace(`{${"tenantArticleId"}}`, encodeURIComponent(String(tenantArticleId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />This endpoint is deprecated. Use /api/stocks endpoints instead.
         * @summary Delete partial stocks of a listings of a facility with the given ID
         * @param {string} facilityId ID of facility from whom you want to delete the partial stock
         * @param {string} tenantArticleId ID of listing you want to get partial stocks
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteFacilityListingPartialStock(facilityId: string, tenantArticleId: string, options: any = {}): FetchArgs {
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling deleteFacilityListingPartialStock.');
            }
            // verify required parameter 'tenantArticleId' is not null or undefined
            if (tenantArticleId === null || tenantArticleId === undefined) {
                throw new RequiredError('tenantArticleId','Required parameter tenantArticleId was null or undefined when calling deleteFacilityListingPartialStock.');
            }
            const localVarPath = `/api/facilities/{facilityId}/listings/{tenantArticleId}/partialstocks`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)))
                .replace(`{${"tenantArticleId"}}`, encodeURIComponent(String(tenantArticleId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary deletes all listings of a facility with the given ID
         * @param {string} facilityId ID of facility you want to delete all listings of
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteListingsOfFacility(facilityId: string, options: any = {}): FetchArgs {
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling deleteListingsOfFacility.');
            }
            const localVarPath = `/api/facilities/{facilityId}/listings`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Delete measurementUnit
         * @param {string} measurementUnitId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteMeasurementUnit(measurementUnitId: string, options: any = {}): FetchArgs {
            // verify required parameter 'measurementUnitId' is not null or undefined
            if (measurementUnitId === null || measurementUnitId === undefined) {
                throw new RequiredError('measurementUnitId','Required parameter measurementUnitId was null or undefined when calling deleteMeasurementUnit.');
            }
            const localVarPath = `/api/measurementunits/{measurementUnitId}`
                .replace(`{${"measurementUnitId"}}`, encodeURIComponent(String(measurementUnitId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get all measurementUnits
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of measurementUnits to show
         * @param {string} [key] key of the measurementUnit
         * @param {string} [locale] Provide the localized names for the measurementUnit. If not provided the default locale is used., for example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllMeasurementUnits(startAfterId?: string, size?: number, key?: string, locale?: string, options: any = {}): FetchArgs {
            const localVarPath = `/api/measurementunits`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            if (key !== undefined) {
                localVarQueryParameter['key'] = key;
            }

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a facility with the given ID
         * @param {string} facilityId ID of facility you want to get listing
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of facilities to show
         * @param {Array<string>} [tenantArticleIds] Array of tenantArticleIds
         * @param {string} [scannableCode] limit results to this scannableCode
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityListing(facilityId: string, startAfterId?: string, size?: number, tenantArticleIds?: Array<string>, scannableCode?: string, options: any = {}): FetchArgs {
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling getFacilityListing.');
            }
            const localVarPath = `/api/facilities/{facilityId}/listings`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            if (tenantArticleIds) {
                localVarQueryParameter['tenantArticleIds'] = tenantArticleIds.join(COLLECTION_FORMATS["csv"]);
            }

            if (scannableCode !== undefined) {
                localVarQueryParameter['scannableCode'] = scannableCode;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />This endpoint is deprecated. Use /api/stocks endpoints instead.
         * @summary Get a partial stocks for a listing
         * @param {string} facilityId ID of facility you want to get the partial stocks
         * @param {string} tenantArticleId ID of listing you want to get partial stocks
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityListingPartialStock(facilityId: string, tenantArticleId: string, options: any = {}): FetchArgs {
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling getFacilityListingPartialStock.');
            }
            // verify required parameter 'tenantArticleId' is not null or undefined
            if (tenantArticleId === null || tenantArticleId === undefined) {
                throw new RequiredError('tenantArticleId','Required parameter tenantArticleId was null or undefined when calling getFacilityListingPartialStock.');
            }
            const localVarPath = `/api/facilities/{facilityId}/listings/{tenantArticleId}/partialstocks`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)))
                .replace(`{${"tenantArticleId"}}`, encodeURIComponent(String(tenantArticleId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a Listings with the given ID
         * @param {string} facilityId ID of facility you want to get listing
         * @param {string} tenantArticleId tenantArticleId of listing you want to get
         * @param {string} [locale] Provide the localized names and descriptions for the listing. If not provided the default locale is used., for example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getListing(facilityId: string, tenantArticleId: string, locale?: string, options: any = {}): FetchArgs {
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling getListing.');
            }
            // verify required parameter 'tenantArticleId' is not null or undefined
            if (tenantArticleId === null || tenantArticleId === undefined) {
                throw new RequiredError('tenantArticleId','Required parameter tenantArticleId was null or undefined when calling getListing.');
            }
            const localVarPath = `/api/facilities/{facilityId}/listings/{tenantArticleId}`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)))
                .replace(`{${"tenantArticleId"}}`, encodeURIComponent(String(tenantArticleId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a measurementUnit by its ID
         * @param {string} measurementUnitId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getMeasurementUnitByID(measurementUnitId: string, options: any = {}): FetchArgs {
            // verify required parameter 'measurementUnitId' is not null or undefined
            if (measurementUnitId === null || measurementUnitId === undefined) {
                throw new RequiredError('measurementUnitId','Required parameter measurementUnitId was null or undefined when calling getMeasurementUnitByID.');
            }
            const localVarPath = `/api/measurementunits/{measurementUnitId}`
                .replace(`{${"measurementUnitId"}}`, encodeURIComponent(String(measurementUnitId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Update a listing with the given ID of a facility with the given ID
         * @param {ListingPatchActions} body listings for put
         * @param {string} facilityId ID of facility you want to patch a listing of
         * @param {string} tenantArticleId tenant ID of the articles listing you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchFacilityListing(body: ListingPatchActions, facilityId: string, tenantArticleId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling patchFacilityListing.');
            }
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling patchFacilityListing.');
            }
            // verify required parameter 'tenantArticleId' is not null or undefined
            if (tenantArticleId === null || tenantArticleId === undefined) {
                throw new RequiredError('tenantArticleId','Required parameter tenantArticleId was null or undefined when calling patchFacilityListing.');
            }
            const localVarPath = `/api/facilities/{facilityId}/listings/{tenantArticleId}`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)))
                .replace(`{${"tenantArticleId"}}`, encodeURIComponent(String(tenantArticleId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ListingPatchActions" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />This endpoint is deprecated. Use /api/stocks endpoints instead. Adds new partial stocks, updates existing partial stocks and keeps stocks that are previously present in the database.  1. If a stock exists in the patch action but not in the database it is added. 2. If a stock exists both in the patch action and in the database it is updated and the contents are merged. 3. If a stock exists only in the database, it is left untouched.
         * @summary Patches partial stocks of a listings of a facility with the given ID
         * @param {PartialStockPatchActions} body Patch set
         * @param {string} facilityId ID of facility you want to patch the partial stocks
         * @param {string} tenantArticleId ID of listing you want to get partial stocks
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchFacilityListingPartialStock(body: PartialStockPatchActions, facilityId: string, tenantArticleId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling patchFacilityListingPartialStock.');
            }
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling patchFacilityListingPartialStock.');
            }
            // verify required parameter 'tenantArticleId' is not null or undefined
            if (tenantArticleId === null || tenantArticleId === undefined) {
                throw new RequiredError('tenantArticleId','Required parameter tenantArticleId was null or undefined when calling patchFacilityListingPartialStock.');
            }
            const localVarPath = `/api/facilities/{facilityId}/listings/{tenantArticleId}/partialstocks`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)))
                .replace(`{${"tenantArticleId"}}`, encodeURIComponent(String(tenantArticleId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"PartialStockPatchActions" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Bulk PUT for Listings. Please note: This endpoint has legacy behaviour, i.e. all PUTs fail if a single PUT fails.
         * @summary Create or Update listings of a facility with the given ID
         * @param {ListingsForReplacement} body listings for put
         * @param {string} facilityId ID of facility you want to put listings to
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putFacilityListing(body: ListingsForReplacement, facilityId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putFacilityListing.');
            }
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling putFacilityListing.');
            }
            const localVarPath = `/api/facilities/{facilityId}/listings`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ListingsForReplacement" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />This endpoint is deprecated. Use /api/stocks endpoints instead. Replaces the current partial stock object related to its listing
         * @summary Replace partial stocks of a listings of a facility with the given ID
         * @param {PartialStocksForReplacement} body Patch set
         * @param {string} facilityId ID of facility you want to get listing
         * @param {string} tenantArticleId ID of listing you want to get partial stocks
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putFacilityListingPartialStock(body: PartialStocksForReplacement, facilityId: string, tenantArticleId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putFacilityListingPartialStock.');
            }
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling putFacilityListingPartialStock.');
            }
            // verify required parameter 'tenantArticleId' is not null or undefined
            if (tenantArticleId === null || tenantArticleId === undefined) {
                throw new RequiredError('tenantArticleId','Required parameter tenantArticleId was null or undefined when calling putFacilityListingPartialStock.');
            }
            const localVarPath = `/api/facilities/{facilityId}/listings/{tenantArticleId}/partialstocks`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)))
                .replace(`{${"tenantArticleId"}}`, encodeURIComponent(String(tenantArticleId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"PartialStocksForReplacement" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Update measurementUnit
         * @param {MeasurementUnitForCreation} body
         * @param {string} measurementUnitId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateMeasurementUnit(body: MeasurementUnitForCreation, measurementUnitId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling updateMeasurementUnit.');
            }
            // verify required parameter 'measurementUnitId' is not null or undefined
            if (measurementUnitId === null || measurementUnitId === undefined) {
                throw new RequiredError('measurementUnitId','Required parameter measurementUnitId was null or undefined when calling updateMeasurementUnit.');
            }
            const localVarPath = `/api/measurementunits/{measurementUnitId}`
                .replace(`{${"measurementUnitId"}}`, encodeURIComponent(String(measurementUnitId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"MeasurementUnitForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * CoreListingsApi - functional programming interface
 * @export
 */
export const CoreListingsApiFp = function(configuration?: Configuration) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Create measurementUnit
         * @param {MeasurementUnitForCreation} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createMeasurementUnit(body: MeasurementUnitForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<MeasurementUnit> {
            const localVarFetchArgs = CoreListingsApiFetchParamCreator(configuration).createMeasurementUnit(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary deletes a listing with the given ID of a facility with the given ID
         * @param {string} facilityId ID of facility you want to delete a listing of
         * @param {string} tenantArticleId tenant ID of the articles listing you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteFacilityListing(facilityId: string, tenantArticleId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = CoreListingsApiFetchParamCreator(configuration).deleteFacilityListing(facilityId, tenantArticleId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />This endpoint is deprecated. Use /api/stocks endpoints instead.
         * @summary Delete partial stocks of a listings of a facility with the given ID
         * @param {string} facilityId ID of facility from whom you want to delete the partial stock
         * @param {string} tenantArticleId ID of listing you want to get partial stocks
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteFacilityListingPartialStock(facilityId: string, tenantArticleId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = CoreListingsApiFetchParamCreator(configuration).deleteFacilityListingPartialStock(facilityId, tenantArticleId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary deletes all listings of a facility with the given ID
         * @param {string} facilityId ID of facility you want to delete all listings of
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteListingsOfFacility(facilityId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = CoreListingsApiFetchParamCreator(configuration).deleteListingsOfFacility(facilityId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Delete measurementUnit
         * @param {string} measurementUnitId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteMeasurementUnit(measurementUnitId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = CoreListingsApiFetchParamCreator(configuration).deleteMeasurementUnit(measurementUnitId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get all measurementUnits
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of measurementUnits to show
         * @param {string} [key] key of the measurementUnit
         * @param {string} [locale] Provide the localized names for the measurementUnit. If not provided the default locale is used., for example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllMeasurementUnits(startAfterId?: string, size?: number, key?: string, locale?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<MeasurementUnits> {
            const localVarFetchArgs = CoreListingsApiFetchParamCreator(configuration).getAllMeasurementUnits(startAfterId, size, key, locale, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a facility with the given ID
         * @param {string} facilityId ID of facility you want to get listing
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of facilities to show
         * @param {Array<string>} [tenantArticleIds] Array of tenantArticleIds
         * @param {string} [scannableCode] limit results to this scannableCode
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityListing(facilityId: string, startAfterId?: string, size?: number, tenantArticleIds?: Array<string>, scannableCode?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<StrippedListings> {
            const localVarFetchArgs = CoreListingsApiFetchParamCreator(configuration).getFacilityListing(facilityId, startAfterId, size, tenantArticleIds, scannableCode, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />This endpoint is deprecated. Use /api/stocks endpoints instead.
         * @summary Get a partial stocks for a listing
         * @param {string} facilityId ID of facility you want to get the partial stocks
         * @param {string} tenantArticleId ID of listing you want to get partial stocks
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityListingPartialStock(facilityId: string, tenantArticleId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<PartialStock>> {
            const localVarFetchArgs = CoreListingsApiFetchParamCreator(configuration).getFacilityListingPartialStock(facilityId, tenantArticleId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a Listings with the given ID
         * @param {string} facilityId ID of facility you want to get listing
         * @param {string} tenantArticleId tenantArticleId of listing you want to get
         * @param {string} [locale] Provide the localized names and descriptions for the listing. If not provided the default locale is used., for example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getListing(facilityId: string, tenantArticleId: string, locale?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Listing> {
            const localVarFetchArgs = CoreListingsApiFetchParamCreator(configuration).getListing(facilityId, tenantArticleId, locale, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a measurementUnit by its ID
         * @param {string} measurementUnitId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getMeasurementUnitByID(measurementUnitId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<MeasurementUnit> {
            const localVarFetchArgs = CoreListingsApiFetchParamCreator(configuration).getMeasurementUnitByID(measurementUnitId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Update a listing with the given ID of a facility with the given ID
         * @param {ListingPatchActions} body listings for put
         * @param {string} facilityId ID of facility you want to patch a listing of
         * @param {string} tenantArticleId tenant ID of the articles listing you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchFacilityListing(body: ListingPatchActions, facilityId: string, tenantArticleId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<Listing>> {
            const localVarFetchArgs = CoreListingsApiFetchParamCreator(configuration).patchFacilityListing(body, facilityId, tenantArticleId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />This endpoint is deprecated. Use /api/stocks endpoints instead. Adds new partial stocks, updates existing partial stocks and keeps stocks that are previously present in the database.  1. If a stock exists in the patch action but not in the database it is added. 2. If a stock exists both in the patch action and in the database it is updated and the contents are merged. 3. If a stock exists only in the database, it is left untouched.
         * @summary Patches partial stocks of a listings of a facility with the given ID
         * @param {PartialStockPatchActions} body Patch set
         * @param {string} facilityId ID of facility you want to patch the partial stocks
         * @param {string} tenantArticleId ID of listing you want to get partial stocks
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchFacilityListingPartialStock(body: PartialStockPatchActions, facilityId: string, tenantArticleId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = CoreListingsApiFetchParamCreator(configuration).patchFacilityListingPartialStock(body, facilityId, tenantArticleId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * Bulk PUT for Listings. Please note: This endpoint has legacy behaviour, i.e. all PUTs fail if a single PUT fails.
         * @summary Create or Update listings of a facility with the given ID
         * @param {ListingsForReplacement} body listings for put
         * @param {string} facilityId ID of facility you want to put listings to
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putFacilityListing(body: ListingsForReplacement, facilityId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<ListingBulkOperationResult>> {
            const localVarFetchArgs = CoreListingsApiFetchParamCreator(configuration).putFacilityListing(body, facilityId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />This endpoint is deprecated. Use /api/stocks endpoints instead. Replaces the current partial stock object related to its listing
         * @summary Replace partial stocks of a listings of a facility with the given ID
         * @param {PartialStocksForReplacement} body Patch set
         * @param {string} facilityId ID of facility you want to get listing
         * @param {string} tenantArticleId ID of listing you want to get partial stocks
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putFacilityListingPartialStock(body: PartialStocksForReplacement, facilityId: string, tenantArticleId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = CoreListingsApiFetchParamCreator(configuration).putFacilityListingPartialStock(body, facilityId, tenantArticleId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Update measurementUnit
         * @param {MeasurementUnitForCreation} body
         * @param {string} measurementUnitId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateMeasurementUnit(body: MeasurementUnitForCreation, measurementUnitId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<MeasurementUnit> {
            const localVarFetchArgs = CoreListingsApiFetchParamCreator(configuration).updateMeasurementUnit(body, measurementUnitId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * CoreListingsApi - factory interface
 * @export
 */
export const CoreListingsApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Create measurementUnit
         * @param {MeasurementUnitForCreation} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createMeasurementUnit(body: MeasurementUnitForCreation, options?: any) {
            return CoreListingsApiFp(configuration).createMeasurementUnit(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary deletes a listing with the given ID of a facility with the given ID
         * @param {string} facilityId ID of facility you want to delete a listing of
         * @param {string} tenantArticleId tenant ID of the articles listing you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteFacilityListing(facilityId: string, tenantArticleId: string, options?: any) {
            return CoreListingsApiFp(configuration).deleteFacilityListing(facilityId, tenantArticleId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />This endpoint is deprecated. Use /api/stocks endpoints instead.
         * @summary Delete partial stocks of a listings of a facility with the given ID
         * @param {string} facilityId ID of facility from whom you want to delete the partial stock
         * @param {string} tenantArticleId ID of listing you want to get partial stocks
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteFacilityListingPartialStock(facilityId: string, tenantArticleId: string, options?: any) {
            return CoreListingsApiFp(configuration).deleteFacilityListingPartialStock(facilityId, tenantArticleId, options)(fetch, basePath);
        },
        /**
         *
         * @summary deletes all listings of a facility with the given ID
         * @param {string} facilityId ID of facility you want to delete all listings of
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteListingsOfFacility(facilityId: string, options?: any) {
            return CoreListingsApiFp(configuration).deleteListingsOfFacility(facilityId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Delete measurementUnit
         * @param {string} measurementUnitId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteMeasurementUnit(measurementUnitId: string, options?: any) {
            return CoreListingsApiFp(configuration).deleteMeasurementUnit(measurementUnitId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get all measurementUnits
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of measurementUnits to show
         * @param {string} [key] key of the measurementUnit
         * @param {string} [locale] Provide the localized names for the measurementUnit. If not provided the default locale is used., for example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllMeasurementUnits(startAfterId?: string, size?: number, key?: string, locale?: string, options?: any) {
            return CoreListingsApiFp(configuration).getAllMeasurementUnits(startAfterId, size, key, locale, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a facility with the given ID
         * @param {string} facilityId ID of facility you want to get listing
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of facilities to show
         * @param {Array<string>} [tenantArticleIds] Array of tenantArticleIds
         * @param {string} [scannableCode] limit results to this scannableCode
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityListing(facilityId: string, startAfterId?: string, size?: number, tenantArticleIds?: Array<string>, scannableCode?: string, options?: any) {
            return CoreListingsApiFp(configuration).getFacilityListing(facilityId, startAfterId, size, tenantArticleIds, scannableCode, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />This endpoint is deprecated. Use /api/stocks endpoints instead.
         * @summary Get a partial stocks for a listing
         * @param {string} facilityId ID of facility you want to get the partial stocks
         * @param {string} tenantArticleId ID of listing you want to get partial stocks
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityListingPartialStock(facilityId: string, tenantArticleId: string, options?: any) {
            return CoreListingsApiFp(configuration).getFacilityListingPartialStock(facilityId, tenantArticleId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a Listings with the given ID
         * @param {string} facilityId ID of facility you want to get listing
         * @param {string} tenantArticleId tenantArticleId of listing you want to get
         * @param {string} [locale] Provide the localized names and descriptions for the listing. If not provided the default locale is used., for example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getListing(facilityId: string, tenantArticleId: string, locale?: string, options?: any) {
            return CoreListingsApiFp(configuration).getListing(facilityId, tenantArticleId, locale, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a measurementUnit by its ID
         * @param {string} measurementUnitId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getMeasurementUnitByID(measurementUnitId: string, options?: any) {
            return CoreListingsApiFp(configuration).getMeasurementUnitByID(measurementUnitId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Update a listing with the given ID of a facility with the given ID
         * @param {ListingPatchActions} body listings for put
         * @param {string} facilityId ID of facility you want to patch a listing of
         * @param {string} tenantArticleId tenant ID of the articles listing you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchFacilityListing(body: ListingPatchActions, facilityId: string, tenantArticleId: string, options?: any) {
            return CoreListingsApiFp(configuration).patchFacilityListing(body, facilityId, tenantArticleId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />This endpoint is deprecated. Use /api/stocks endpoints instead. Adds new partial stocks, updates existing partial stocks and keeps stocks that are previously present in the database.  1. If a stock exists in the patch action but not in the database it is added. 2. If a stock exists both in the patch action and in the database it is updated and the contents are merged. 3. If a stock exists only in the database, it is left untouched.
         * @summary Patches partial stocks of a listings of a facility with the given ID
         * @param {PartialStockPatchActions} body Patch set
         * @param {string} facilityId ID of facility you want to patch the partial stocks
         * @param {string} tenantArticleId ID of listing you want to get partial stocks
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchFacilityListingPartialStock(body: PartialStockPatchActions, facilityId: string, tenantArticleId: string, options?: any) {
            return CoreListingsApiFp(configuration).patchFacilityListingPartialStock(body, facilityId, tenantArticleId, options)(fetch, basePath);
        },
        /**
         * Bulk PUT for Listings. Please note: This endpoint has legacy behaviour, i.e. all PUTs fail if a single PUT fails.
         * @summary Create or Update listings of a facility with the given ID
         * @param {ListingsForReplacement} body listings for put
         * @param {string} facilityId ID of facility you want to put listings to
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putFacilityListing(body: ListingsForReplacement, facilityId: string, options?: any) {
            return CoreListingsApiFp(configuration).putFacilityListing(body, facilityId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />This endpoint is deprecated. Use /api/stocks endpoints instead. Replaces the current partial stock object related to its listing
         * @summary Replace partial stocks of a listings of a facility with the given ID
         * @param {PartialStocksForReplacement} body Patch set
         * @param {string} facilityId ID of facility you want to get listing
         * @param {string} tenantArticleId ID of listing you want to get partial stocks
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putFacilityListingPartialStock(body: PartialStocksForReplacement, facilityId: string, tenantArticleId: string, options?: any) {
            return CoreListingsApiFp(configuration).putFacilityListingPartialStock(body, facilityId, tenantArticleId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Update measurementUnit
         * @param {MeasurementUnitForCreation} body
         * @param {string} measurementUnitId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateMeasurementUnit(body: MeasurementUnitForCreation, measurementUnitId: string, options?: any) {
            return CoreListingsApiFp(configuration).updateMeasurementUnit(body, measurementUnitId, options)(fetch, basePath);
        },
    };
};

/**
 * CoreListingsApi - object-oriented interface
 * @export
 * @class CoreListingsApi
 * @extends {BaseAPI}
 */
export class CoreListingsApi extends BaseAPI {
    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Create measurementUnit
     * @param {MeasurementUnitForCreation} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreListingsApi
     */
    public createMeasurementUnit(body: MeasurementUnitForCreation, options?: any) {
        return CoreListingsApiFp(this.configuration).createMeasurementUnit(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary deletes a listing with the given ID of a facility with the given ID
     * @param {string} facilityId ID of facility you want to delete a listing of
     * @param {string} tenantArticleId tenant ID of the articles listing you want to delete
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreListingsApi
     */
    public deleteFacilityListing(facilityId: string, tenantArticleId: string, options?: any) {
        return CoreListingsApiFp(this.configuration).deleteFacilityListing(facilityId, tenantArticleId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />This endpoint is deprecated. Use /api/stocks endpoints instead.
     * @summary Delete partial stocks of a listings of a facility with the given ID
     * @param {string} facilityId ID of facility from whom you want to delete the partial stock
     * @param {string} tenantArticleId ID of listing you want to get partial stocks
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreListingsApi
     */
    public deleteFacilityListingPartialStock(facilityId: string, tenantArticleId: string, options?: any) {
        return CoreListingsApiFp(this.configuration).deleteFacilityListingPartialStock(facilityId, tenantArticleId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary deletes all listings of a facility with the given ID
     * @param {string} facilityId ID of facility you want to delete all listings of
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreListingsApi
     */
    public deleteListingsOfFacility(facilityId: string, options?: any) {
        return CoreListingsApiFp(this.configuration).deleteListingsOfFacility(facilityId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Delete measurementUnit
     * @param {string} measurementUnitId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreListingsApi
     */
    public deleteMeasurementUnit(measurementUnitId: string, options?: any) {
        return CoreListingsApiFp(this.configuration).deleteMeasurementUnit(measurementUnitId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Get all measurementUnits
     * @param {string} [startAfterId] all entities after given Id
     * @param {number} [size] number of measurementUnits to show
     * @param {string} [key] key of the measurementUnit
     * @param {string} [locale] Provide the localized names for the measurementUnit. If not provided the default locale is used., for example de_DE.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreListingsApi
     */
    public getAllMeasurementUnits(startAfterId?: string, size?: number, key?: string, locale?: string, options?: any) {
        return CoreListingsApiFp(this.configuration).getAllMeasurementUnits(startAfterId, size, key, locale, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a facility with the given ID
     * @param {string} facilityId ID of facility you want to get listing
     * @param {string} [startAfterId] all entities after given Id
     * @param {number} [size] number of facilities to show
     * @param {Array<string>} [tenantArticleIds] Array of tenantArticleIds
     * @param {string} [scannableCode] limit results to this scannableCode
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreListingsApi
     */
    public getFacilityListing(facilityId: string, startAfterId?: string, size?: number, tenantArticleIds?: Array<string>, scannableCode?: string, options?: any) {
        return CoreListingsApiFp(this.configuration).getFacilityListing(facilityId, startAfterId, size, tenantArticleIds, scannableCode, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />This endpoint is deprecated. Use /api/stocks endpoints instead.
     * @summary Get a partial stocks for a listing
     * @param {string} facilityId ID of facility you want to get the partial stocks
     * @param {string} tenantArticleId ID of listing you want to get partial stocks
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreListingsApi
     */
    public getFacilityListingPartialStock(facilityId: string, tenantArticleId: string, options?: any) {
        return CoreListingsApiFp(this.configuration).getFacilityListingPartialStock(facilityId, tenantArticleId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a Listings with the given ID
     * @param {string} facilityId ID of facility you want to get listing
     * @param {string} tenantArticleId tenantArticleId of listing you want to get
     * @param {string} [locale] Provide the localized names and descriptions for the listing. If not provided the default locale is used., for example de_DE.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreListingsApi
     */
    public getListing(facilityId: string, tenantArticleId: string, locale?: string, options?: any) {
        return CoreListingsApiFp(this.configuration).getListing(facilityId, tenantArticleId, locale, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Get a measurementUnit by its ID
     * @param {string} measurementUnitId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreListingsApi
     */
    public getMeasurementUnitByID(measurementUnitId: string, options?: any) {
        return CoreListingsApiFp(this.configuration).getMeasurementUnitByID(measurementUnitId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Update a listing with the given ID of a facility with the given ID
     * @param {ListingPatchActions} body listings for put
     * @param {string} facilityId ID of facility you want to patch a listing of
     * @param {string} tenantArticleId tenant ID of the articles listing you want to patch
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreListingsApi
     */
    public patchFacilityListing(body: ListingPatchActions, facilityId: string, tenantArticleId: string, options?: any) {
        return CoreListingsApiFp(this.configuration).patchFacilityListing(body, facilityId, tenantArticleId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />This endpoint is deprecated. Use /api/stocks endpoints instead. Adds new partial stocks, updates existing partial stocks and keeps stocks that are previously present in the database.  1. If a stock exists in the patch action but not in the database it is added. 2. If a stock exists both in the patch action and in the database it is updated and the contents are merged. 3. If a stock exists only in the database, it is left untouched.
     * @summary Patches partial stocks of a listings of a facility with the given ID
     * @param {PartialStockPatchActions} body Patch set
     * @param {string} facilityId ID of facility you want to patch the partial stocks
     * @param {string} tenantArticleId ID of listing you want to get partial stocks
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreListingsApi
     */
    public patchFacilityListingPartialStock(body: PartialStockPatchActions, facilityId: string, tenantArticleId: string, options?: any) {
        return CoreListingsApiFp(this.configuration).patchFacilityListingPartialStock(body, facilityId, tenantArticleId, options)(this.fetch, this.basePath);
    }

    /**
     * Bulk PUT for Listings. Please note: This endpoint has legacy behaviour, i.e. all PUTs fail if a single PUT fails.
     * @summary Create or Update listings of a facility with the given ID
     * @param {ListingsForReplacement} body listings for put
     * @param {string} facilityId ID of facility you want to put listings to
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreListingsApi
     */
    public putFacilityListing(body: ListingsForReplacement, facilityId: string, options?: any) {
        return CoreListingsApiFp(this.configuration).putFacilityListing(body, facilityId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />This endpoint is deprecated. Use /api/stocks endpoints instead. Replaces the current partial stock object related to its listing
     * @summary Replace partial stocks of a listings of a facility with the given ID
     * @param {PartialStocksForReplacement} body Patch set
     * @param {string} facilityId ID of facility you want to get listing
     * @param {string} tenantArticleId ID of listing you want to get partial stocks
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreListingsApi
     */
    public putFacilityListingPartialStock(body: PartialStocksForReplacement, facilityId: string, tenantArticleId: string, options?: any) {
        return CoreListingsApiFp(this.configuration).putFacilityListingPartialStock(body, facilityId, tenantArticleId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Update measurementUnit
     * @param {MeasurementUnitForCreation} body
     * @param {string} measurementUnitId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreListingsApi
     */
    public updateMeasurementUnit(body: MeasurementUnitForCreation, measurementUnitId: string, options?: any) {
        return CoreListingsApiFp(this.configuration).updateMeasurementUnit(body, measurementUnitId, options)(this.fetch, this.basePath);
    }

}
/**
 * CoreNotificationCenterApi - fetch parameter creator
 * @export
 */
export const CoreNotificationCenterApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Deletes a notification center config channel.
         * @param {string} channelId
         * @param {number} version
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteNotificationCenterConfigChannel(channelId: string, version: number, options: any = {}): FetchArgs {
            // verify required parameter 'channelId' is not null or undefined
            if (channelId === null || channelId === undefined) {
                throw new RequiredError('channelId','Required parameter channelId was null or undefined when calling deleteNotificationCenterConfigChannel.');
            }
            // verify required parameter 'version' is not null or undefined
            if (version === null || version === undefined) {
                throw new RequiredError('version','Required parameter version was null or undefined when calling deleteNotificationCenterConfigChannel.');
            }
            const localVarPath = `/api/configurations/notifications/channels/{channelId}`
                .replace(`{${"channelId"}}`, encodeURIComponent(String(channelId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (version !== undefined) {
                localVarQueryParameter['version'] = version;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Deletes a notification center facility config channel.
         * @param {string} facilityRef
         * @param {string} channelId
         * @param {number} version
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteNotificationCenterFacilityConfigChannel(facilityRef: string, channelId: string, version: number, options: any = {}): FetchArgs {
            // verify required parameter 'facilityRef' is not null or undefined
            if (facilityRef === null || facilityRef === undefined) {
                throw new RequiredError('facilityRef','Required parameter facilityRef was null or undefined when calling deleteNotificationCenterFacilityConfigChannel.');
            }
            // verify required parameter 'channelId' is not null or undefined
            if (channelId === null || channelId === undefined) {
                throw new RequiredError('channelId','Required parameter channelId was null or undefined when calling deleteNotificationCenterFacilityConfigChannel.');
            }
            // verify required parameter 'version' is not null or undefined
            if (version === null || version === undefined) {
                throw new RequiredError('version','Required parameter version was null or undefined when calling deleteNotificationCenterFacilityConfigChannel.');
            }
            const localVarPath = `/api/facilities/{facilityRef}/configurations/notifications/channels/{channelId}`
                .replace(`{${"facilityRef"}}`, encodeURIComponent(String(facilityRef)))
                .replace(`{${"channelId"}}`, encodeURIComponent(String(channelId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (version !== undefined) {
                localVarQueryParameter['version'] = version;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Executes an action to manipulate the notification center configuration.
         * @param {NotificationsActionsBody} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        executeNotificationCenterConfigAction(body: NotificationsActionsBody, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling executeNotificationCenterConfigAction.');
            }
            const localVarPath = `/api/configurations/notifications/actions`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"NotificationsActionsBody" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Executes an action to manipulate the notification center facility configuration.
         * @param {NotificationsActionsBody1} body
         * @param {string} facilityRef
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        executeNotificationCenterFacilityConfigAction(body: NotificationsActionsBody1, facilityRef: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling executeNotificationCenterFacilityConfigAction.');
            }
            // verify required parameter 'facilityRef' is not null or undefined
            if (facilityRef === null || facilityRef === undefined) {
                throw new RequiredError('facilityRef','Required parameter facilityRef was null or undefined when calling executeNotificationCenterFacilityConfigAction.');
            }
            const localVarPath = `/api/facilities/{facilityRef}/configurations/notifications/actions`
                .replace(`{${"facilityRef"}}`, encodeURIComponent(String(facilityRef)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"NotificationsActionsBody1" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Returns the notification center configuration.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getNotificationCenterConfig(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/notifications`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Returns the notification center facility configuration.
         * @param {string} facilityRef
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getNotificationCenterFacilityConfig(facilityRef: string, options: any = {}): FetchArgs {
            // verify required parameter 'facilityRef' is not null or undefined
            if (facilityRef === null || facilityRef === undefined) {
                throw new RequiredError('facilityRef','Required parameter facilityRef was null or undefined when calling getNotificationCenterFacilityConfig.');
            }
            const localVarPath = `/api/facilities/{facilityRef}/configurations/notifications`
                .replace(`{${"facilityRef"}}`, encodeURIComponent(String(facilityRef)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Creates or updates an existing notification center configuration.
         * @param {ConfigurationsNotificationsBody} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertNotificationCenterConfig(body: ConfigurationsNotificationsBody, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling upsertNotificationCenterConfig.');
            }
            const localVarPath = `/api/configurations/notifications`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ConfigurationsNotificationsBody" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Creates or updates an existing notification center facility configuration.
         * @param {ConfigurationsNotificationsBody1} body
         * @param {string} facilityRef
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertNotificationCenterFacilityConfig(body: ConfigurationsNotificationsBody1, facilityRef: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling upsertNotificationCenterFacilityConfig.');
            }
            // verify required parameter 'facilityRef' is not null or undefined
            if (facilityRef === null || facilityRef === undefined) {
                throw new RequiredError('facilityRef','Required parameter facilityRef was null or undefined when calling upsertNotificationCenterFacilityConfig.');
            }
            const localVarPath = `/api/facilities/{facilityRef}/configurations/notifications`
                .replace(`{${"facilityRef"}}`, encodeURIComponent(String(facilityRef)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ConfigurationsNotificationsBody1" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * CoreNotificationCenterApi - functional programming interface
 * @export
 */
export const CoreNotificationCenterApiFp = function(configuration?: Configuration) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Deletes a notification center config channel.
         * @param {string} channelId
         * @param {number} version
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteNotificationCenterConfigChannel(channelId: string, version: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = CoreNotificationCenterApiFetchParamCreator(configuration).deleteNotificationCenterConfigChannel(channelId, version, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Deletes a notification center facility config channel.
         * @param {string} facilityRef
         * @param {string} channelId
         * @param {number} version
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteNotificationCenterFacilityConfigChannel(facilityRef: string, channelId: string, version: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = CoreNotificationCenterApiFetchParamCreator(configuration).deleteNotificationCenterFacilityConfigChannel(facilityRef, channelId, version, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Executes an action to manipulate the notification center configuration.
         * @param {NotificationsActionsBody} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        executeNotificationCenterConfigAction(body: NotificationsActionsBody, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<NotificationCenterConfig> {
            const localVarFetchArgs = CoreNotificationCenterApiFetchParamCreator(configuration).executeNotificationCenterConfigAction(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Executes an action to manipulate the notification center facility configuration.
         * @param {NotificationsActionsBody1} body
         * @param {string} facilityRef
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        executeNotificationCenterFacilityConfigAction(body: NotificationsActionsBody1, facilityRef: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<NotificationCenterConfig> {
            const localVarFetchArgs = CoreNotificationCenterApiFetchParamCreator(configuration).executeNotificationCenterFacilityConfigAction(body, facilityRef, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Returns the notification center configuration.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getNotificationCenterConfig(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<NotificationCenterConfig> {
            const localVarFetchArgs = CoreNotificationCenterApiFetchParamCreator(configuration).getNotificationCenterConfig(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Returns the notification center facility configuration.
         * @param {string} facilityRef
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getNotificationCenterFacilityConfig(facilityRef: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<NotificationCenterConfig> {
            const localVarFetchArgs = CoreNotificationCenterApiFetchParamCreator(configuration).getNotificationCenterFacilityConfig(facilityRef, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Creates or updates an existing notification center configuration.
         * @param {ConfigurationsNotificationsBody} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertNotificationCenterConfig(body: ConfigurationsNotificationsBody, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<NotificationCenterConfig> {
            const localVarFetchArgs = CoreNotificationCenterApiFetchParamCreator(configuration).upsertNotificationCenterConfig(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Creates or updates an existing notification center facility configuration.
         * @param {ConfigurationsNotificationsBody1} body
         * @param {string} facilityRef
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertNotificationCenterFacilityConfig(body: ConfigurationsNotificationsBody1, facilityRef: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<NotificationCenterConfig> {
            const localVarFetchArgs = CoreNotificationCenterApiFetchParamCreator(configuration).upsertNotificationCenterFacilityConfig(body, facilityRef, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * CoreNotificationCenterApi - factory interface
 * @export
 */
export const CoreNotificationCenterApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Deletes a notification center config channel.
         * @param {string} channelId
         * @param {number} version
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteNotificationCenterConfigChannel(channelId: string, version: number, options?: any) {
            return CoreNotificationCenterApiFp(configuration).deleteNotificationCenterConfigChannel(channelId, version, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Deletes a notification center facility config channel.
         * @param {string} facilityRef
         * @param {string} channelId
         * @param {number} version
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteNotificationCenterFacilityConfigChannel(facilityRef: string, channelId: string, version: number, options?: any) {
            return CoreNotificationCenterApiFp(configuration).deleteNotificationCenterFacilityConfigChannel(facilityRef, channelId, version, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Executes an action to manipulate the notification center configuration.
         * @param {NotificationsActionsBody} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        executeNotificationCenterConfigAction(body: NotificationsActionsBody, options?: any) {
            return CoreNotificationCenterApiFp(configuration).executeNotificationCenterConfigAction(body, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Executes an action to manipulate the notification center facility configuration.
         * @param {NotificationsActionsBody1} body
         * @param {string} facilityRef
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        executeNotificationCenterFacilityConfigAction(body: NotificationsActionsBody1, facilityRef: string, options?: any) {
            return CoreNotificationCenterApiFp(configuration).executeNotificationCenterFacilityConfigAction(body, facilityRef, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Returns the notification center configuration.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getNotificationCenterConfig(options?: any) {
            return CoreNotificationCenterApiFp(configuration).getNotificationCenterConfig(options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Returns the notification center facility configuration.
         * @param {string} facilityRef
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getNotificationCenterFacilityConfig(facilityRef: string, options?: any) {
            return CoreNotificationCenterApiFp(configuration).getNotificationCenterFacilityConfig(facilityRef, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Creates or updates an existing notification center configuration.
         * @param {ConfigurationsNotificationsBody} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertNotificationCenterConfig(body: ConfigurationsNotificationsBody, options?: any) {
            return CoreNotificationCenterApiFp(configuration).upsertNotificationCenterConfig(body, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Creates or updates an existing notification center facility configuration.
         * @param {ConfigurationsNotificationsBody1} body
         * @param {string} facilityRef
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertNotificationCenterFacilityConfig(body: ConfigurationsNotificationsBody1, facilityRef: string, options?: any) {
            return CoreNotificationCenterApiFp(configuration).upsertNotificationCenterFacilityConfig(body, facilityRef, options)(fetch, basePath);
        },
    };
};

/**
 * CoreNotificationCenterApi - object-oriented interface
 * @export
 * @class CoreNotificationCenterApi
 * @extends {BaseAPI}
 */
export class CoreNotificationCenterApi extends BaseAPI {
    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Deletes a notification center config channel.
     * @param {string} channelId
     * @param {number} version
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreNotificationCenterApi
     */
    public deleteNotificationCenterConfigChannel(channelId: string, version: number, options?: any) {
        return CoreNotificationCenterApiFp(this.configuration).deleteNotificationCenterConfigChannel(channelId, version, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Deletes a notification center facility config channel.
     * @param {string} facilityRef
     * @param {string} channelId
     * @param {number} version
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreNotificationCenterApi
     */
    public deleteNotificationCenterFacilityConfigChannel(facilityRef: string, channelId: string, version: number, options?: any) {
        return CoreNotificationCenterApiFp(this.configuration).deleteNotificationCenterFacilityConfigChannel(facilityRef, channelId, version, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Executes an action to manipulate the notification center configuration.
     * @param {NotificationsActionsBody} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreNotificationCenterApi
     */
    public executeNotificationCenterConfigAction(body: NotificationsActionsBody, options?: any) {
        return CoreNotificationCenterApiFp(this.configuration).executeNotificationCenterConfigAction(body, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Executes an action to manipulate the notification center facility configuration.
     * @param {NotificationsActionsBody1} body
     * @param {string} facilityRef
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreNotificationCenterApi
     */
    public executeNotificationCenterFacilityConfigAction(body: NotificationsActionsBody1, facilityRef: string, options?: any) {
        return CoreNotificationCenterApiFp(this.configuration).executeNotificationCenterFacilityConfigAction(body, facilityRef, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Returns the notification center configuration.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreNotificationCenterApi
     */
    public getNotificationCenterConfig(options?: any) {
        return CoreNotificationCenterApiFp(this.configuration).getNotificationCenterConfig(options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Returns the notification center facility configuration.
     * @param {string} facilityRef
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreNotificationCenterApi
     */
    public getNotificationCenterFacilityConfig(facilityRef: string, options?: any) {
        return CoreNotificationCenterApiFp(this.configuration).getNotificationCenterFacilityConfig(facilityRef, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Creates or updates an existing notification center configuration.
     * @param {ConfigurationsNotificationsBody} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreNotificationCenterApi
     */
    public upsertNotificationCenterConfig(body: ConfigurationsNotificationsBody, options?: any) {
        return CoreNotificationCenterApiFp(this.configuration).upsertNotificationCenterConfig(body, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Creates or updates an existing notification center facility configuration.
     * @param {ConfigurationsNotificationsBody1} body
     * @param {string} facilityRef
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreNotificationCenterApi
     */
    public upsertNotificationCenterFacilityConfig(body: ConfigurationsNotificationsBody1, facilityRef: string, options?: any) {
        return CoreNotificationCenterApiFp(this.configuration).upsertNotificationCenterFacilityConfig(body, facilityRef, options)(this.fetch, this.basePath);
    }

}
/**
 * CoreProcessesApi - fetch parameter creator
 * @export
 */
export const CoreProcessesApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Create a new document on this process
         * @param {ExternalDocumentForCreation} body
         * @param {string} processId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addDocumentToProcess(body: ExternalDocumentForCreation, processId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling addDocumentToProcess.');
            }
            // verify required parameter 'processId' is not null or undefined
            if (processId === null || processId === undefined) {
                throw new RequiredError('processId','Required parameter processId was null or undefined when calling addDocumentToProcess.');
            }
            const localVarPath = `/api/processes/{processId}/documents`
                .replace(`{${"processId"}}`, encodeURIComponent(String(processId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ExternalDocumentForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Read a document on this process
         * @param {string} processId
         * @param {string} documentId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        downloadDocumentInProcess(processId: string, documentId: string, options: any = {}): FetchArgs {
            // verify required parameter 'processId' is not null or undefined
            if (processId === null || processId === undefined) {
                throw new RequiredError('processId','Required parameter processId was null or undefined when calling downloadDocumentInProcess.');
            }
            // verify required parameter 'documentId' is not null or undefined
            if (documentId === null || documentId === undefined) {
                throw new RequiredError('documentId','Required parameter documentId was null or undefined when calling downloadDocumentInProcess.');
            }
            const localVarPath = `/api/processes/{processId}/documents/{documentId}/file`
                .replace(`{${"processId"}}`, encodeURIComponent(String(processId)))
                .replace(`{${"documentId"}}`, encodeURIComponent(String(documentId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Download a document
         * @param {string} documentId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        downloadProcessDocument(documentId: string, options: any = {}): FetchArgs {
            // verify required parameter 'documentId' is not null or undefined
            if (documentId === null || documentId === undefined) {
                throw new RequiredError('documentId','Required parameter documentId was null or undefined when calling downloadProcessDocument.');
            }
            const localVarPath = `/api/documents/{documentId}/file`
                .replace(`{${"documentId"}}`, encodeURIComponent(String(documentId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Return all brands
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllBrands(startAfterId?: string, size?: number, options: any = {}): FetchArgs {
            const localVarPath = `/api/brands`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Return all processes
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {Array<string>} [status] Reference to the status you want to get the corresponding processes
         * @param {Array<string>} [operativeStatus] Reference to the operativeStatus you want to get the corresponding processes
         * @param {string} [tenantOrderId] Perform full text search base on the tenantOrderId
         * @param {Date} [startTargetTime] Return the Processes which have related pickjobs with a targettime on or after this date
         * @param {Date} [endTargetTime] Return the Processes which have related pickjobs with a targettime on or before this date
         * @param {Date} [startDate] Return the Processes created on or after this date
         * @param {Date} [endDate] Return the Processes created on or before this date
         * @param {Array<string>} [facilityRefs] Id&#x27;s of the facilities from which you want to get the processes
         * @param {Array<string>} [countries] Consumer country codes from which you want to get the processes
         * @param {Array<string>} [facilityCountries] Facility country codes from which you want to get the processes
         * @param {Array<string>} [brandRefs] Brand ids for which you want to get the processes
         * @param {Array<string>} [serviceLevels] Order delivery preferences service level
         * @param {Array<string>} [serviceTypes] Whether an order is click and collect or delivery
         * @param {Array<string>} [orderDomainStatus] Reference to the orderDomainStatus you want to get the corresponding processes
         * @param {Array<string>} [routingDomainStatus] Reference to the routingDomainStatus you want to get the corresponding processes
         * @param {Array<string>} [pickingDomainStatus] Reference to the pickingDomainStatus you want to get the corresponding processes
         * @param {Array<string>} [packingDomainStatus] Reference to the packingDomainStatus you want to get the corresponding processes
         * @param {Array<string>} [shippingDomainStatus] Reference to the shippingDomainStatus you want to get the corresponding processes
         * @param {Array<string>} [handoverDomainStatus] Reference to the handoverDomainStatus you want to get the corresponding processes
         * @param {Array<string>} [returnDomainStatus] Reference to the returnDomainStatus you want to get the corresponding processes
         * @param {Array<string>} [stickers] Stickers attached to a order
         * @param {string} [searchTerm] Perform full text search over all searchable attributes
         * @param {SortParameterName} [sortBy] SortingParameter name for the query
         * @param {SortDirection} [sortByDirection] Sorting direction for the query
         * @param {boolean} [locked] @deprecated Use orderStatus instead
         * @param {OrderStatus} [orderStatus] Order status for the query
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllProcesses(startAfterId?: string, size?: number, status?: Array<string>, operativeStatus?: Array<string>, tenantOrderId?: string, startTargetTime?: Date, endTargetTime?: Date, startDate?: Date, endDate?: Date, facilityRefs?: Array<string>, countries?: Array<string>, facilityCountries?: Array<string>, brandRefs?: Array<string>, serviceLevels?: Array<string>, serviceTypes?: Array<string>, orderDomainStatus?: Array<string>, routingDomainStatus?: Array<string>, pickingDomainStatus?: Array<string>, packingDomainStatus?: Array<string>, shippingDomainStatus?: Array<string>, handoverDomainStatus?: Array<string>, returnDomainStatus?: Array<string>, stickers?: Array<string>, searchTerm?: string, sortBy?: SortParameterName, sortByDirection?: SortDirection, locked?: boolean, orderStatus?: OrderStatus, options: any = {}): FetchArgs {
            const localVarPath = `/api/processes`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            if (status) {
                localVarQueryParameter['status'] = status;
            }

            if (operativeStatus) {
                localVarQueryParameter['operativeStatus'] = operativeStatus;
            }

            if (tenantOrderId !== undefined) {
                localVarQueryParameter['tenantOrderId'] = tenantOrderId;
            }

            if (startTargetTime !== undefined) {
                localVarQueryParameter['startTargetTime'] = (startTargetTime as any).toISOString();
            }

            if (endTargetTime !== undefined) {
                localVarQueryParameter['endTargetTime'] = (endTargetTime as any).toISOString();
            }

            if (startDate !== undefined) {
                localVarQueryParameter['startDate'] = (startDate as any).toISOString();
            }

            if (endDate !== undefined) {
                localVarQueryParameter['endDate'] = (endDate as any).toISOString();
            }

            if (facilityRefs) {
                localVarQueryParameter['facilityRefs'] = facilityRefs;
            }

            if (countries) {
                localVarQueryParameter['countries'] = countries;
            }

            if (facilityCountries) {
                localVarQueryParameter['facilityCountries'] = facilityCountries;
            }

            if (brandRefs) {
                localVarQueryParameter['brandRefs'] = brandRefs;
            }

            if (serviceLevels) {
                localVarQueryParameter['serviceLevels'] = serviceLevels;
            }

            if (serviceTypes) {
                localVarQueryParameter['serviceTypes'] = serviceTypes;
            }

            if (orderDomainStatus) {
                localVarQueryParameter['orderDomainStatus'] = orderDomainStatus;
            }

            if (routingDomainStatus) {
                localVarQueryParameter['routingDomainStatus'] = routingDomainStatus;
            }

            if (pickingDomainStatus) {
                localVarQueryParameter['pickingDomainStatus'] = pickingDomainStatus;
            }

            if (packingDomainStatus) {
                localVarQueryParameter['packingDomainStatus'] = packingDomainStatus;
            }

            if (shippingDomainStatus) {
                localVarQueryParameter['shippingDomainStatus'] = shippingDomainStatus;
            }

            if (handoverDomainStatus) {
                localVarQueryParameter['handoverDomainStatus'] = handoverDomainStatus;
            }

            if (returnDomainStatus) {
                localVarQueryParameter['returnDomainStatus'] = returnDomainStatus;
            }

            if (stickers) {
                localVarQueryParameter['stickers'] = stickers;
            }

            if (searchTerm !== undefined) {
                localVarQueryParameter['searchTerm'] = searchTerm;
            }

            if (sortBy !== undefined) {
                localVarQueryParameter['sortBy'] = sortBy;
            }

            if (sortByDirection !== undefined) {
                localVarQueryParameter['sortByDirection'] = sortByDirection;
            }

            if (locked !== undefined) {
                localVarQueryParameter['locked'] = locked;
            }

            if (orderStatus !== undefined) {
                localVarQueryParameter['orderStatus'] = orderStatus;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a process by its ID
         * @param {string} processId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getProcessByID(processId: string, options: any = {}): FetchArgs {
            // verify required parameter 'processId' is not null or undefined
            if (processId === null || processId === undefined) {
                throw new RequiredError('processId','Required parameter processId was null or undefined when calling getProcessByID.');
            }
            const localVarPath = `/api/processes/{processId}`
                .replace(`{${"processId"}}`, encodeURIComponent(String(processId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Returns a process belonging to the given parameters. At least one parameter needs to be supplied.
         * @param {string} [tenantOrderId]
         * @param {string} [orderRef]
         * @param {string} [pickJobRef]
         * @param {string} [shipmentRef]
         * @param {string} [handoverJobRef]
         * @param {string} [returnRef]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getProcesses(tenantOrderId?: string, orderRef?: string, pickJobRef?: string, shipmentRef?: string, handoverJobRef?: string, returnRef?: string, options: any = {}): FetchArgs {
            const localVarPath = `/api/process`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (tenantOrderId !== undefined) {
                localVarQueryParameter['tenantOrderId'] = tenantOrderId;
            }

            if (orderRef !== undefined) {
                localVarQueryParameter['orderRef'] = orderRef;
            }

            if (pickJobRef !== undefined) {
                localVarQueryParameter['pickJobRef'] = pickJobRef;
            }

            if (shipmentRef !== undefined) {
                localVarQueryParameter['shipmentRef'] = shipmentRef;
            }

            if (handoverJobRef !== undefined) {
                localVarQueryParameter['handoverJobRef'] = handoverJobRef;
            }

            if (returnRef !== undefined) {
                localVarQueryParameter['returnRef'] = returnRef;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Patches a process with the given ID
         * @param {ProcessPatchActions} body Patch set
         * @param {string} processId ID of process you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchProcess(body: ProcessPatchActions, processId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling patchProcess.');
            }
            // verify required parameter 'processId' is not null or undefined
            if (processId === null || processId === undefined) {
                throw new RequiredError('processId','Required parameter processId was null or undefined when calling patchProcess.');
            }
            const localVarPath = `/api/processes/{processId}`
                .replace(`{${"processId"}}`, encodeURIComponent(String(processId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ProcessPatchActions" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Reroutes a process with the given ID
         * @param {string} processId ID of process you want to reroute
         * @param {number} version Version of process you want to reroute
         * @param {string} [rerouteDescriptionId] The id of the rerouteDescription
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postProcess(processId: string, version: number, rerouteDescriptionId?: string, options: any = {}): FetchArgs {
            // verify required parameter 'processId' is not null or undefined
            if (processId === null || processId === undefined) {
                throw new RequiredError('processId','Required parameter processId was null or undefined when calling postProcess.');
            }
            // verify required parameter 'version' is not null or undefined
            if (version === null || version === undefined) {
                throw new RequiredError('version','Required parameter version was null or undefined when calling postProcess.');
            }
            const localVarPath = `/api/processes/{processId}/reroute`
                .replace(`{${"processId"}}`, encodeURIComponent(String(processId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (version !== undefined) {
                localVarQueryParameter['version'] = version;
            }

            if (rerouteDescriptionId !== undefined) {
                localVarQueryParameter['rerouteDescriptionId'] = rerouteDescriptionId;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Read meta information about document on this process
         * @param {string} processId
         * @param {string} documentId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        readDocumentMetaInProcess(processId: string, documentId: string, options: any = {}): FetchArgs {
            // verify required parameter 'processId' is not null or undefined
            if (processId === null || processId === undefined) {
                throw new RequiredError('processId','Required parameter processId was null or undefined when calling readDocumentMetaInProcess.');
            }
            // verify required parameter 'documentId' is not null or undefined
            if (documentId === null || documentId === undefined) {
                throw new RequiredError('documentId','Required parameter documentId was null or undefined when calling readDocumentMetaInProcess.');
            }
            const localVarPath = `/api/processes/{processId}/documents/{documentId}`
                .replace(`{${"processId"}}`, encodeURIComponent(String(processId)))
                .replace(`{${"documentId"}}`, encodeURIComponent(String(documentId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary triggers the retry of not routable plans
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        triggerRetryNotRoutable(options: any = {}): FetchArgs {
            const localVarPath = `/api/processes/retrynotroutable`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Update a document on this process
         * @param {ExternalDocumentForUpdate} body
         * @param {string} processId
         * @param {string} documentId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateDocumentInProcess(body: ExternalDocumentForUpdate, processId: string, documentId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling updateDocumentInProcess.');
            }
            // verify required parameter 'processId' is not null or undefined
            if (processId === null || processId === undefined) {
                throw new RequiredError('processId','Required parameter processId was null or undefined when calling updateDocumentInProcess.');
            }
            // verify required parameter 'documentId' is not null or undefined
            if (documentId === null || documentId === undefined) {
                throw new RequiredError('documentId','Required parameter documentId was null or undefined when calling updateDocumentInProcess.');
            }
            const localVarPath = `/api/processes/{processId}/documents/{documentId}/file`
                .replace(`{${"processId"}}`, encodeURIComponent(String(processId)))
                .replace(`{${"documentId"}}`, encodeURIComponent(String(documentId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ExternalDocumentForUpdate" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * CoreProcessesApi - functional programming interface
 * @export
 */
export const CoreProcessesApiFp = function(configuration?: Configuration) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Create a new document on this process
         * @param {ExternalDocumentForCreation} body
         * @param {string} processId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addDocumentToProcess(body: ExternalDocumentForCreation, processId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ExternalDocument> {
            const localVarFetchArgs = CoreProcessesApiFetchParamCreator(configuration).addDocumentToProcess(body, processId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Read a document on this process
         * @param {string} processId
         * @param {string} documentId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        downloadDocumentInProcess(processId: string, documentId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = CoreProcessesApiFetchParamCreator(configuration).downloadDocumentInProcess(processId, documentId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Download a document
         * @param {string} documentId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        downloadProcessDocument(documentId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = CoreProcessesApiFetchParamCreator(configuration).downloadProcessDocument(documentId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Return all brands
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllBrands(startAfterId?: string, size?: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<StrippedBrands> {
            const localVarFetchArgs = CoreProcessesApiFetchParamCreator(configuration).getAllBrands(startAfterId, size, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Return all processes
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {Array<string>} [status] Reference to the status you want to get the corresponding processes
         * @param {Array<string>} [operativeStatus] Reference to the operativeStatus you want to get the corresponding processes
         * @param {string} [tenantOrderId] Perform full text search base on the tenantOrderId
         * @param {Date} [startTargetTime] Return the Processes which have related pickjobs with a targettime on or after this date
         * @param {Date} [endTargetTime] Return the Processes which have related pickjobs with a targettime on or before this date
         * @param {Date} [startDate] Return the Processes created on or after this date
         * @param {Date} [endDate] Return the Processes created on or before this date
         * @param {Array<string>} [facilityRefs] Id&#x27;s of the facilities from which you want to get the processes
         * @param {Array<string>} [countries] Consumer country codes from which you want to get the processes
         * @param {Array<string>} [facilityCountries] Facility country codes from which you want to get the processes
         * @param {Array<string>} [brandRefs] Brand ids for which you want to get the processes
         * @param {Array<string>} [serviceLevels] Order delivery preferences service level
         * @param {Array<string>} [serviceTypes] Whether an order is click and collect or delivery
         * @param {Array<string>} [orderDomainStatus] Reference to the orderDomainStatus you want to get the corresponding processes
         * @param {Array<string>} [routingDomainStatus] Reference to the routingDomainStatus you want to get the corresponding processes
         * @param {Array<string>} [pickingDomainStatus] Reference to the pickingDomainStatus you want to get the corresponding processes
         * @param {Array<string>} [packingDomainStatus] Reference to the packingDomainStatus you want to get the corresponding processes
         * @param {Array<string>} [shippingDomainStatus] Reference to the shippingDomainStatus you want to get the corresponding processes
         * @param {Array<string>} [handoverDomainStatus] Reference to the handoverDomainStatus you want to get the corresponding processes
         * @param {Array<string>} [returnDomainStatus] Reference to the returnDomainStatus you want to get the corresponding processes
         * @param {Array<string>} [stickers] Stickers attached to a order
         * @param {string} [searchTerm] Perform full text search over all searchable attributes
         * @param {SortParameterName} [sortBy] SortingParameter name for the query
         * @param {SortDirection} [sortByDirection] Sorting direction for the query
         * @param {boolean} [locked] @deprecated Use orderStatus instead
         * @param {OrderStatus} [orderStatus] Order status for the query
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllProcesses(startAfterId?: string, size?: number, status?: Array<string>, operativeStatus?: Array<string>, tenantOrderId?: string, startTargetTime?: Date, endTargetTime?: Date, startDate?: Date, endDate?: Date, facilityRefs?: Array<string>, countries?: Array<string>, facilityCountries?: Array<string>, brandRefs?: Array<string>, serviceLevels?: Array<string>, serviceTypes?: Array<string>, orderDomainStatus?: Array<string>, routingDomainStatus?: Array<string>, pickingDomainStatus?: Array<string>, packingDomainStatus?: Array<string>, shippingDomainStatus?: Array<string>, handoverDomainStatus?: Array<string>, returnDomainStatus?: Array<string>, stickers?: Array<string>, searchTerm?: string, sortBy?: SortParameterName, sortByDirection?: SortDirection, locked?: boolean, orderStatus?: OrderStatus, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Processes> {
            const localVarFetchArgs = CoreProcessesApiFetchParamCreator(configuration).getAllProcesses(startAfterId, size, status, operativeStatus, tenantOrderId, startTargetTime, endTargetTime, startDate, endDate, facilityRefs, countries, facilityCountries, brandRefs, serviceLevels, serviceTypes, orderDomainStatus, routingDomainStatus, pickingDomainStatus, packingDomainStatus, shippingDomainStatus, handoverDomainStatus, returnDomainStatus, stickers, searchTerm, sortBy, sortByDirection, locked, orderStatus, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a process by its ID
         * @param {string} processId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getProcessByID(processId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Process> {
            const localVarFetchArgs = CoreProcessesApiFetchParamCreator(configuration).getProcessByID(processId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Returns a process belonging to the given parameters. At least one parameter needs to be supplied.
         * @param {string} [tenantOrderId]
         * @param {string} [orderRef]
         * @param {string} [pickJobRef]
         * @param {string} [shipmentRef]
         * @param {string} [handoverJobRef]
         * @param {string} [returnRef]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getProcesses(tenantOrderId?: string, orderRef?: string, pickJobRef?: string, shipmentRef?: string, handoverJobRef?: string, returnRef?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Process> {
            const localVarFetchArgs = CoreProcessesApiFetchParamCreator(configuration).getProcesses(tenantOrderId, orderRef, pickJobRef, shipmentRef, handoverJobRef, returnRef, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Patches a process with the given ID
         * @param {ProcessPatchActions} body Patch set
         * @param {string} processId ID of process you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchProcess(body: ProcessPatchActions, processId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Process> {
            const localVarFetchArgs = CoreProcessesApiFetchParamCreator(configuration).patchProcess(body, processId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Reroutes a process with the given ID
         * @param {string} processId ID of process you want to reroute
         * @param {number} version Version of process you want to reroute
         * @param {string} [rerouteDescriptionId] The id of the rerouteDescription
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postProcess(processId: string, version: number, rerouteDescriptionId?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Process> {
            const localVarFetchArgs = CoreProcessesApiFetchParamCreator(configuration).postProcess(processId, version, rerouteDescriptionId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Read meta information about document on this process
         * @param {string} processId
         * @param {string} documentId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        readDocumentMetaInProcess(processId: string, documentId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ExternalDocument> {
            const localVarFetchArgs = CoreProcessesApiFetchParamCreator(configuration).readDocumentMetaInProcess(processId, documentId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary triggers the retry of not routable plans
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        triggerRetryNotRoutable(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = CoreProcessesApiFetchParamCreator(configuration).triggerRetryNotRoutable(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Update a document on this process
         * @param {ExternalDocumentForUpdate} body
         * @param {string} processId
         * @param {string} documentId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateDocumentInProcess(body: ExternalDocumentForUpdate, processId: string, documentId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ExternalDocument> {
            const localVarFetchArgs = CoreProcessesApiFetchParamCreator(configuration).updateDocumentInProcess(body, processId, documentId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * CoreProcessesApi - factory interface
 * @export
 */
export const CoreProcessesApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Create a new document on this process
         * @param {ExternalDocumentForCreation} body
         * @param {string} processId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addDocumentToProcess(body: ExternalDocumentForCreation, processId: string, options?: any) {
            return CoreProcessesApiFp(configuration).addDocumentToProcess(body, processId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Read a document on this process
         * @param {string} processId
         * @param {string} documentId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        downloadDocumentInProcess(processId: string, documentId: string, options?: any) {
            return CoreProcessesApiFp(configuration).downloadDocumentInProcess(processId, documentId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Download a document
         * @param {string} documentId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        downloadProcessDocument(documentId: string, options?: any) {
            return CoreProcessesApiFp(configuration).downloadProcessDocument(documentId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Return all brands
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllBrands(startAfterId?: string, size?: number, options?: any) {
            return CoreProcessesApiFp(configuration).getAllBrands(startAfterId, size, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Return all processes
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {Array<string>} [status] Reference to the status you want to get the corresponding processes
         * @param {Array<string>} [operativeStatus] Reference to the operativeStatus you want to get the corresponding processes
         * @param {string} [tenantOrderId] Perform full text search base on the tenantOrderId
         * @param {Date} [startTargetTime] Return the Processes which have related pickjobs with a targettime on or after this date
         * @param {Date} [endTargetTime] Return the Processes which have related pickjobs with a targettime on or before this date
         * @param {Date} [startDate] Return the Processes created on or after this date
         * @param {Date} [endDate] Return the Processes created on or before this date
         * @param {Array<string>} [facilityRefs] Id&#x27;s of the facilities from which you want to get the processes
         * @param {Array<string>} [countries] Consumer country codes from which you want to get the processes
         * @param {Array<string>} [facilityCountries] Facility country codes from which you want to get the processes
         * @param {Array<string>} [brandRefs] Brand ids for which you want to get the processes
         * @param {Array<string>} [serviceLevels] Order delivery preferences service level
         * @param {Array<string>} [serviceTypes] Whether an order is click and collect or delivery
         * @param {Array<string>} [orderDomainStatus] Reference to the orderDomainStatus you want to get the corresponding processes
         * @param {Array<string>} [routingDomainStatus] Reference to the routingDomainStatus you want to get the corresponding processes
         * @param {Array<string>} [pickingDomainStatus] Reference to the pickingDomainStatus you want to get the corresponding processes
         * @param {Array<string>} [packingDomainStatus] Reference to the packingDomainStatus you want to get the corresponding processes
         * @param {Array<string>} [shippingDomainStatus] Reference to the shippingDomainStatus you want to get the corresponding processes
         * @param {Array<string>} [handoverDomainStatus] Reference to the handoverDomainStatus you want to get the corresponding processes
         * @param {Array<string>} [returnDomainStatus] Reference to the returnDomainStatus you want to get the corresponding processes
         * @param {Array<string>} [stickers] Stickers attached to a order
         * @param {string} [searchTerm] Perform full text search over all searchable attributes
         * @param {SortParameterName} [sortBy] SortingParameter name for the query
         * @param {SortDirection} [sortByDirection] Sorting direction for the query
         * @param {boolean} [locked] @deprecated Use orderStatus instead
         * @param {OrderStatus} [orderStatus] Order status for the query
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllProcesses(startAfterId?: string, size?: number, status?: Array<string>, operativeStatus?: Array<string>, tenantOrderId?: string, startTargetTime?: Date, endTargetTime?: Date, startDate?: Date, endDate?: Date, facilityRefs?: Array<string>, countries?: Array<string>, facilityCountries?: Array<string>, brandRefs?: Array<string>, serviceLevels?: Array<string>, serviceTypes?: Array<string>, orderDomainStatus?: Array<string>, routingDomainStatus?: Array<string>, pickingDomainStatus?: Array<string>, packingDomainStatus?: Array<string>, shippingDomainStatus?: Array<string>, handoverDomainStatus?: Array<string>, returnDomainStatus?: Array<string>, stickers?: Array<string>, searchTerm?: string, sortBy?: SortParameterName, sortByDirection?: SortDirection, locked?: boolean, orderStatus?: OrderStatus, options?: any) {
            return CoreProcessesApiFp(configuration).getAllProcesses(startAfterId, size, status, operativeStatus, tenantOrderId, startTargetTime, endTargetTime, startDate, endDate, facilityRefs, countries, facilityCountries, brandRefs, serviceLevels, serviceTypes, orderDomainStatus, routingDomainStatus, pickingDomainStatus, packingDomainStatus, shippingDomainStatus, handoverDomainStatus, returnDomainStatus, stickers, searchTerm, sortBy, sortByDirection, locked, orderStatus, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a process by its ID
         * @param {string} processId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getProcessByID(processId: string, options?: any) {
            return CoreProcessesApiFp(configuration).getProcessByID(processId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Returns a process belonging to the given parameters. At least one parameter needs to be supplied.
         * @param {string} [tenantOrderId]
         * @param {string} [orderRef]
         * @param {string} [pickJobRef]
         * @param {string} [shipmentRef]
         * @param {string} [handoverJobRef]
         * @param {string} [returnRef]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getProcesses(tenantOrderId?: string, orderRef?: string, pickJobRef?: string, shipmentRef?: string, handoverJobRef?: string, returnRef?: string, options?: any) {
            return CoreProcessesApiFp(configuration).getProcesses(tenantOrderId, orderRef, pickJobRef, shipmentRef, handoverJobRef, returnRef, options)(fetch, basePath);
        },
        /**
         *
         * @summary Patches a process with the given ID
         * @param {ProcessPatchActions} body Patch set
         * @param {string} processId ID of process you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchProcess(body: ProcessPatchActions, processId: string, options?: any) {
            return CoreProcessesApiFp(configuration).patchProcess(body, processId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Reroutes a process with the given ID
         * @param {string} processId ID of process you want to reroute
         * @param {number} version Version of process you want to reroute
         * @param {string} [rerouteDescriptionId] The id of the rerouteDescription
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postProcess(processId: string, version: number, rerouteDescriptionId?: string, options?: any) {
            return CoreProcessesApiFp(configuration).postProcess(processId, version, rerouteDescriptionId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Read meta information about document on this process
         * @param {string} processId
         * @param {string} documentId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        readDocumentMetaInProcess(processId: string, documentId: string, options?: any) {
            return CoreProcessesApiFp(configuration).readDocumentMetaInProcess(processId, documentId, options)(fetch, basePath);
        },
        /**
         *
         * @summary triggers the retry of not routable plans
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        triggerRetryNotRoutable(options?: any) {
            return CoreProcessesApiFp(configuration).triggerRetryNotRoutable(options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Update a document on this process
         * @param {ExternalDocumentForUpdate} body
         * @param {string} processId
         * @param {string} documentId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateDocumentInProcess(body: ExternalDocumentForUpdate, processId: string, documentId: string, options?: any) {
            return CoreProcessesApiFp(configuration).updateDocumentInProcess(body, processId, documentId, options)(fetch, basePath);
        },
    };
};

/**
 * CoreProcessesApi - object-oriented interface
 * @export
 * @class CoreProcessesApi
 * @extends {BaseAPI}
 */
export class CoreProcessesApi extends BaseAPI {
    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Create a new document on this process
     * @param {ExternalDocumentForCreation} body
     * @param {string} processId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreProcessesApi
     */
    public addDocumentToProcess(body: ExternalDocumentForCreation, processId: string, options?: any) {
        return CoreProcessesApiFp(this.configuration).addDocumentToProcess(body, processId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Read a document on this process
     * @param {string} processId
     * @param {string} documentId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreProcessesApi
     */
    public downloadDocumentInProcess(processId: string, documentId: string, options?: any) {
        return CoreProcessesApiFp(this.configuration).downloadDocumentInProcess(processId, documentId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Download a document
     * @param {string} documentId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreProcessesApi
     */
    public downloadProcessDocument(documentId: string, options?: any) {
        return CoreProcessesApiFp(this.configuration).downloadProcessDocument(documentId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Return all brands
     * @param {string} [startAfterId] all entities after given Id
     * @param {number} [size] number of entities to show
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreProcessesApi
     */
    public getAllBrands(startAfterId?: string, size?: number, options?: any) {
        return CoreProcessesApiFp(this.configuration).getAllBrands(startAfterId, size, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Return all processes
     * @param {string} [startAfterId] all entities after given Id
     * @param {number} [size] number of entities to show
     * @param {Array<string>} [status] Reference to the status you want to get the corresponding processes
     * @param {Array<string>} [operativeStatus] Reference to the operativeStatus you want to get the corresponding processes
     * @param {string} [tenantOrderId] Perform full text search base on the tenantOrderId
     * @param {Date} [startTargetTime] Return the Processes which have related pickjobs with a targettime on or after this date
     * @param {Date} [endTargetTime] Return the Processes which have related pickjobs with a targettime on or before this date
     * @param {Date} [startDate] Return the Processes created on or after this date
     * @param {Date} [endDate] Return the Processes created on or before this date
     * @param {Array<string>} [facilityRefs] Id&#x27;s of the facilities from which you want to get the processes
     * @param {Array<string>} [countries] Consumer country codes from which you want to get the processes
     * @param {Array<string>} [facilityCountries] Facility country codes from which you want to get the processes
     * @param {Array<string>} [brandRefs] Brand ids for which you want to get the processes
     * @param {Array<string>} [serviceLevels] Order delivery preferences service level
     * @param {Array<string>} [serviceTypes] Whether an order is click and collect or delivery
     * @param {Array<string>} [orderDomainStatus] Reference to the orderDomainStatus you want to get the corresponding processes
     * @param {Array<string>} [routingDomainStatus] Reference to the routingDomainStatus you want to get the corresponding processes
     * @param {Array<string>} [pickingDomainStatus] Reference to the pickingDomainStatus you want to get the corresponding processes
     * @param {Array<string>} [packingDomainStatus] Reference to the packingDomainStatus you want to get the corresponding processes
     * @param {Array<string>} [shippingDomainStatus] Reference to the shippingDomainStatus you want to get the corresponding processes
     * @param {Array<string>} [handoverDomainStatus] Reference to the handoverDomainStatus you want to get the corresponding processes
     * @param {Array<string>} [returnDomainStatus] Reference to the returnDomainStatus you want to get the corresponding processes
     * @param {Array<string>} [stickers] Stickers attached to a order
     * @param {string} [searchTerm] Perform full text search over all searchable attributes
     * @param {SortParameterName} [sortBy] SortingParameter name for the query
     * @param {SortDirection} [sortByDirection] Sorting direction for the query
     * @param {boolean} [locked] @deprecated Use orderStatus instead
     * @param {OrderStatus} [orderStatus] Order status for the query
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreProcessesApi
     */
    public getAllProcesses(startAfterId?: string, size?: number, status?: Array<string>, operativeStatus?: Array<string>, tenantOrderId?: string, startTargetTime?: Date, endTargetTime?: Date, startDate?: Date, endDate?: Date, facilityRefs?: Array<string>, countries?: Array<string>, facilityCountries?: Array<string>, brandRefs?: Array<string>, serviceLevels?: Array<string>, serviceTypes?: Array<string>, orderDomainStatus?: Array<string>, routingDomainStatus?: Array<string>, pickingDomainStatus?: Array<string>, packingDomainStatus?: Array<string>, shippingDomainStatus?: Array<string>, handoverDomainStatus?: Array<string>, returnDomainStatus?: Array<string>, stickers?: Array<string>, searchTerm?: string, sortBy?: SortParameterName, sortByDirection?: SortDirection, locked?: boolean, orderStatus?: OrderStatus, options?: any) {
        return CoreProcessesApiFp(this.configuration).getAllProcesses(startAfterId, size, status, operativeStatus, tenantOrderId, startTargetTime, endTargetTime, startDate, endDate, facilityRefs, countries, facilityCountries, brandRefs, serviceLevels, serviceTypes, orderDomainStatus, routingDomainStatus, pickingDomainStatus, packingDomainStatus, shippingDomainStatus, handoverDomainStatus, returnDomainStatus, stickers, searchTerm, sortBy, sortByDirection, locked, orderStatus, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Get a process by its ID
     * @param {string} processId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreProcessesApi
     */
    public getProcessByID(processId: string, options?: any) {
        return CoreProcessesApiFp(this.configuration).getProcessByID(processId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Returns a process belonging to the given parameters. At least one parameter needs to be supplied.
     * @param {string} [tenantOrderId]
     * @param {string} [orderRef]
     * @param {string} [pickJobRef]
     * @param {string} [shipmentRef]
     * @param {string} [handoverJobRef]
     * @param {string} [returnRef]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreProcessesApi
     */
    public getProcesses(tenantOrderId?: string, orderRef?: string, pickJobRef?: string, shipmentRef?: string, handoverJobRef?: string, returnRef?: string, options?: any) {
        return CoreProcessesApiFp(this.configuration).getProcesses(tenantOrderId, orderRef, pickJobRef, shipmentRef, handoverJobRef, returnRef, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Patches a process with the given ID
     * @param {ProcessPatchActions} body Patch set
     * @param {string} processId ID of process you want to patch
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreProcessesApi
     */
    public patchProcess(body: ProcessPatchActions, processId: string, options?: any) {
        return CoreProcessesApiFp(this.configuration).patchProcess(body, processId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Reroutes a process with the given ID
     * @param {string} processId ID of process you want to reroute
     * @param {number} version Version of process you want to reroute
     * @param {string} [rerouteDescriptionId] The id of the rerouteDescription
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreProcessesApi
     */
    public postProcess(processId: string, version: number, rerouteDescriptionId?: string, options?: any) {
        return CoreProcessesApiFp(this.configuration).postProcess(processId, version, rerouteDescriptionId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Read meta information about document on this process
     * @param {string} processId
     * @param {string} documentId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreProcessesApi
     */
    public readDocumentMetaInProcess(processId: string, documentId: string, options?: any) {
        return CoreProcessesApiFp(this.configuration).readDocumentMetaInProcess(processId, documentId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary triggers the retry of not routable plans
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreProcessesApi
     */
    public triggerRetryNotRoutable(options?: any) {
        return CoreProcessesApiFp(this.configuration).triggerRetryNotRoutable(options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Update a document on this process
     * @param {ExternalDocumentForUpdate} body
     * @param {string} processId
     * @param {string} documentId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreProcessesApi
     */
    public updateDocumentInProcess(body: ExternalDocumentForUpdate, processId: string, documentId: string, options?: any) {
        return CoreProcessesApiFp(this.configuration).updateDocumentInProcess(body, processId, documentId, options)(this.fetch, this.basePath);
    }

}
/**
 * CoreProcessesExternalActionsApi - fetch parameter creator
 * @export
 */
export const CoreProcessesExternalActionsApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Delete an external action with the given id.
         * @param {string} externalActionId ID of the external action that you want delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteExternalAction(externalActionId: string, options: any = {}): FetchArgs {
            // verify required parameter 'externalActionId' is not null or undefined
            if (externalActionId === null || externalActionId === undefined) {
                throw new RequiredError('externalActionId','Required parameter externalActionId was null or undefined when calling deleteExternalAction.');
            }
            const localVarPath = `/api/externalactions/{externalActionId}`
                .replace(`{${"externalActionId"}}`, encodeURIComponent(String(externalActionId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />Returns an external action with the given id if found.
         * @summary Get an external action
         * @param {string} externalActionId Id of the external action you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getExternalAction(externalActionId: string, options: any = {}): FetchArgs {
            // verify required parameter 'externalActionId' is not null or undefined
            if (externalActionId === null || externalActionId === undefined) {
                throw new RequiredError('externalActionId','Required parameter externalActionId was null or undefined when calling getExternalAction.');
            }
            const localVarPath = `/api/externalactions/{externalActionId}`
                .replace(`{${"externalActionId"}}`, encodeURIComponent(String(externalActionId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />Returns a list with all external actions.
         * @summary Get the external actions related to a process
         * @param {string} [startAfterId] all entities after given Id.
         * @param {number} [size] number of entities to show
         * @param {Array<string>} [groups] Filter by the given group or groups
         * @param {string} [processRef] Filter by the given processRef
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getExternalActions(startAfterId?: string, size?: number, groups?: Array<string>, processRef?: string, options: any = {}): FetchArgs {
            const localVarPath = `/api/externalactions`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            if (groups) {
                localVarQueryParameter['groups'] = groups;
            }

            if (processRef !== undefined) {
                localVarQueryParameter['processRef'] = processRef;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Creates a new external action for a process.
         * @summary Create an external action
         * @param {ExternalActionForCreation} body The external action to be created
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postExternalAction(body: ExternalActionForCreation, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling postExternalAction.');
            }
            const localVarPath = `/api/externalactions`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ExternalActionForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />Replaces the external action with the provided in the body.
         * @summary Replace an external action
         * @param {ExternalActionForReplacement} body Updates an external action
         * @param {string} externalActionId ID of the external action that you want update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putExternalAction(body: ExternalActionForReplacement, externalActionId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putExternalAction.');
            }
            // verify required parameter 'externalActionId' is not null or undefined
            if (externalActionId === null || externalActionId === undefined) {
                throw new RequiredError('externalActionId','Required parameter externalActionId was null or undefined when calling putExternalAction.');
            }
            const localVarPath = `/api/externalactions/{externalActionId}`
                .replace(`{${"externalActionId"}}`, encodeURIComponent(String(externalActionId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ExternalActionForReplacement" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * CoreProcessesExternalActionsApi - functional programming interface
 * @export
 */
export const CoreProcessesExternalActionsApiFp = function(configuration?: Configuration) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Delete an external action with the given id.
         * @param {string} externalActionId ID of the external action that you want delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteExternalAction(externalActionId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = CoreProcessesExternalActionsApiFetchParamCreator(configuration).deleteExternalAction(externalActionId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />Returns an external action with the given id if found.
         * @summary Get an external action
         * @param {string} externalActionId Id of the external action you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getExternalAction(externalActionId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<ExternalAction>> {
            const localVarFetchArgs = CoreProcessesExternalActionsApiFetchParamCreator(configuration).getExternalAction(externalActionId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />Returns a list with all external actions.
         * @summary Get the external actions related to a process
         * @param {string} [startAfterId] all entities after given Id.
         * @param {number} [size] number of entities to show
         * @param {Array<string>} [groups] Filter by the given group or groups
         * @param {string} [processRef] Filter by the given processRef
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getExternalActions(startAfterId?: string, size?: number, groups?: Array<string>, processRef?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<ExternalAction>> {
            const localVarFetchArgs = CoreProcessesExternalActionsApiFetchParamCreator(configuration).getExternalActions(startAfterId, size, groups, processRef, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * Creates a new external action for a process.
         * @summary Create an external action
         * @param {ExternalActionForCreation} body The external action to be created
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postExternalAction(body: ExternalActionForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ExternalAction> {
            const localVarFetchArgs = CoreProcessesExternalActionsApiFetchParamCreator(configuration).postExternalAction(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />Replaces the external action with the provided in the body.
         * @summary Replace an external action
         * @param {ExternalActionForReplacement} body Updates an external action
         * @param {string} externalActionId ID of the external action that you want update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putExternalAction(body: ExternalActionForReplacement, externalActionId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<ExternalAction>> {
            const localVarFetchArgs = CoreProcessesExternalActionsApiFetchParamCreator(configuration).putExternalAction(body, externalActionId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * CoreProcessesExternalActionsApi - factory interface
 * @export
 */
export const CoreProcessesExternalActionsApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Delete an external action with the given id.
         * @param {string} externalActionId ID of the external action that you want delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteExternalAction(externalActionId: string, options?: any) {
            return CoreProcessesExternalActionsApiFp(configuration).deleteExternalAction(externalActionId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />Returns an external action with the given id if found.
         * @summary Get an external action
         * @param {string} externalActionId Id of the external action you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getExternalAction(externalActionId: string, options?: any) {
            return CoreProcessesExternalActionsApiFp(configuration).getExternalAction(externalActionId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />Returns a list with all external actions.
         * @summary Get the external actions related to a process
         * @param {string} [startAfterId] all entities after given Id.
         * @param {number} [size] number of entities to show
         * @param {Array<string>} [groups] Filter by the given group or groups
         * @param {string} [processRef] Filter by the given processRef
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getExternalActions(startAfterId?: string, size?: number, groups?: Array<string>, processRef?: string, options?: any) {
            return CoreProcessesExternalActionsApiFp(configuration).getExternalActions(startAfterId, size, groups, processRef, options)(fetch, basePath);
        },
        /**
         * Creates a new external action for a process.
         * @summary Create an external action
         * @param {ExternalActionForCreation} body The external action to be created
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postExternalAction(body: ExternalActionForCreation, options?: any) {
            return CoreProcessesExternalActionsApiFp(configuration).postExternalAction(body, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />Replaces the external action with the provided in the body.
         * @summary Replace an external action
         * @param {ExternalActionForReplacement} body Updates an external action
         * @param {string} externalActionId ID of the external action that you want update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putExternalAction(body: ExternalActionForReplacement, externalActionId: string, options?: any) {
            return CoreProcessesExternalActionsApiFp(configuration).putExternalAction(body, externalActionId, options)(fetch, basePath);
        },
    };
};

/**
 * CoreProcessesExternalActionsApi - object-oriented interface
 * @export
 * @class CoreProcessesExternalActionsApi
 * @extends {BaseAPI}
 */
export class CoreProcessesExternalActionsApi extends BaseAPI {
    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Delete an external action with the given id.
     * @param {string} externalActionId ID of the external action that you want delete
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreProcessesExternalActionsApi
     */
    public deleteExternalAction(externalActionId: string, options?: any) {
        return CoreProcessesExternalActionsApiFp(this.configuration).deleteExternalAction(externalActionId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />Returns an external action with the given id if found.
     * @summary Get an external action
     * @param {string} externalActionId Id of the external action you want to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreProcessesExternalActionsApi
     */
    public getExternalAction(externalActionId: string, options?: any) {
        return CoreProcessesExternalActionsApiFp(this.configuration).getExternalAction(externalActionId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />Returns a list with all external actions.
     * @summary Get the external actions related to a process
     * @param {string} [startAfterId] all entities after given Id.
     * @param {number} [size] number of entities to show
     * @param {Array<string>} [groups] Filter by the given group or groups
     * @param {string} [processRef] Filter by the given processRef
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreProcessesExternalActionsApi
     */
    public getExternalActions(startAfterId?: string, size?: number, groups?: Array<string>, processRef?: string, options?: any) {
        return CoreProcessesExternalActionsApiFp(this.configuration).getExternalActions(startAfterId, size, groups, processRef, options)(this.fetch, this.basePath);
    }

    /**
     * Creates a new external action for a process.
     * @summary Create an external action
     * @param {ExternalActionForCreation} body The external action to be created
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreProcessesExternalActionsApi
     */
    public postExternalAction(body: ExternalActionForCreation, options?: any) {
        return CoreProcessesExternalActionsApiFp(this.configuration).postExternalAction(body, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />Replaces the external action with the provided in the body.
     * @summary Replace an external action
     * @param {ExternalActionForReplacement} body Updates an external action
     * @param {string} externalActionId ID of the external action that you want update
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreProcessesExternalActionsApi
     */
    public putExternalAction(body: ExternalActionForReplacement, externalActionId: string, options?: any) {
        return CoreProcessesExternalActionsApiFp(this.configuration).putExternalAction(body, externalActionId, options)(this.fetch, this.basePath);
    }

}
/**
 * CoreProcessesExternalActionsLogsApi - fetch parameter creator
 * @export
 */
export const CoreProcessesExternalActionsLogsApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />Returns the logs related with the given external action.
         * @summary Get the logs for an external action
         * @param {string} externalActionId Id of the external action you want to get the logs from
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getExternalActionLogs(externalActionId: string, startAfterId?: string, size?: number, options: any = {}): FetchArgs {
            // verify required parameter 'externalActionId' is not null or undefined
            if (externalActionId === null || externalActionId === undefined) {
                throw new RequiredError('externalActionId','Required parameter externalActionId was null or undefined when calling getExternalActionLogs.');
            }
            const localVarPath = `/api/externalactions/{externalActionId}/logs`
                .replace(`{${"externalActionId"}}`, encodeURIComponent(String(externalActionId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Creates a new external action log.
         * @summary Creates a log for an external action
         * @param {ExternalActionLogForCreation} body The external action log to be created
         * @param {string} externalActionId ID of the external action you want to create the log for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postExternalActionLog(body: ExternalActionLogForCreation, externalActionId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling postExternalActionLog.');
            }
            // verify required parameter 'externalActionId' is not null or undefined
            if (externalActionId === null || externalActionId === undefined) {
                throw new RequiredError('externalActionId','Required parameter externalActionId was null or undefined when calling postExternalActionLog.');
            }
            const localVarPath = `/api/externalactions/{externalActionId}/logs`
                .replace(`{${"externalActionId"}}`, encodeURIComponent(String(externalActionId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ExternalActionLogForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * CoreProcessesExternalActionsLogsApi - functional programming interface
 * @export
 */
export const CoreProcessesExternalActionsLogsApiFp = function(configuration?: Configuration) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />Returns the logs related with the given external action.
         * @summary Get the logs for an external action
         * @param {string} externalActionId Id of the external action you want to get the logs from
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getExternalActionLogs(externalActionId: string, startAfterId?: string, size?: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<ExternalActionLogs>> {
            const localVarFetchArgs = CoreProcessesExternalActionsLogsApiFetchParamCreator(configuration).getExternalActionLogs(externalActionId, startAfterId, size, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * Creates a new external action log.
         * @summary Creates a log for an external action
         * @param {ExternalActionLogForCreation} body The external action log to be created
         * @param {string} externalActionId ID of the external action you want to create the log for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postExternalActionLog(body: ExternalActionLogForCreation, externalActionId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ExternalActionLog> {
            const localVarFetchArgs = CoreProcessesExternalActionsLogsApiFetchParamCreator(configuration).postExternalActionLog(body, externalActionId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * CoreProcessesExternalActionsLogsApi - factory interface
 * @export
 */
export const CoreProcessesExternalActionsLogsApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />Returns the logs related with the given external action.
         * @summary Get the logs for an external action
         * @param {string} externalActionId Id of the external action you want to get the logs from
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getExternalActionLogs(externalActionId: string, startAfterId?: string, size?: number, options?: any) {
            return CoreProcessesExternalActionsLogsApiFp(configuration).getExternalActionLogs(externalActionId, startAfterId, size, options)(fetch, basePath);
        },
        /**
         * Creates a new external action log.
         * @summary Creates a log for an external action
         * @param {ExternalActionLogForCreation} body The external action log to be created
         * @param {string} externalActionId ID of the external action you want to create the log for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postExternalActionLog(body: ExternalActionLogForCreation, externalActionId: string, options?: any) {
            return CoreProcessesExternalActionsLogsApiFp(configuration).postExternalActionLog(body, externalActionId, options)(fetch, basePath);
        },
    };
};

/**
 * CoreProcessesExternalActionsLogsApi - object-oriented interface
 * @export
 * @class CoreProcessesExternalActionsLogsApi
 * @extends {BaseAPI}
 */
export class CoreProcessesExternalActionsLogsApi extends BaseAPI {
    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />Returns the logs related with the given external action.
     * @summary Get the logs for an external action
     * @param {string} externalActionId Id of the external action you want to get the logs from
     * @param {string} [startAfterId] all entities after given Id
     * @param {number} [size] number of entities to show
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreProcessesExternalActionsLogsApi
     */
    public getExternalActionLogs(externalActionId: string, startAfterId?: string, size?: number, options?: any) {
        return CoreProcessesExternalActionsLogsApiFp(this.configuration).getExternalActionLogs(externalActionId, startAfterId, size, options)(this.fetch, this.basePath);
    }

    /**
     * Creates a new external action log.
     * @summary Creates a log for an external action
     * @param {ExternalActionLogForCreation} body The external action log to be created
     * @param {string} externalActionId ID of the external action you want to create the log for
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreProcessesExternalActionsLogsApi
     */
    public postExternalActionLog(body: ExternalActionLogForCreation, externalActionId: string, options?: any) {
        return CoreProcessesExternalActionsLogsApiFp(this.configuration).postExternalActionLog(body, externalActionId, options)(this.fetch, this.basePath);
    }

}
/**
 * CoreRemoteConfigurationApi - fetch parameter creator
 * @export
 */
export const CoreRemoteConfigurationApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary add a new scope to a remote configuration
         * @param {string} id Reference to the remote config you want to change
         * @param {AddRemoteConfigurationScopeParameter} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addRemoteConfigurationScope(id: string, body?: AddRemoteConfigurationScopeParameter, options: any = {}): FetchArgs {
            // verify required parameter 'id' is not null or undefined
            if (id === null || id === undefined) {
                throw new RequiredError('id','Required parameter id was null or undefined when calling addRemoteConfigurationScope.');
            }
            const localVarPath = `/api/remoteconfigs/{id}/scopes`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"AddRemoteConfigurationScopeParameter" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Create a new remote configuration
         * @param {RemoteConfigurationForCreation} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createRemoteConfiguration(body?: RemoteConfigurationForCreation, options: any = {}): FetchArgs {
            const localVarPath = `/api/remoteconfigs`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"RemoteConfigurationForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Delete a single remote configuration
         * @param {string} id Reference to the remote config you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteRemoteConfiguration(id: string, options: any = {}): FetchArgs {
            // verify required parameter 'id' is not null or undefined
            if (id === null || id === undefined) {
                throw new RequiredError('id','Required parameter id was null or undefined when calling deleteRemoteConfiguration.');
            }
            const localVarPath = `/api/remoteconfigs/{id}`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Delete a scope from a given remote configuration
         * @param {string} id Reference to the remote config you want to alter
         * @param {string} scopeId Reference to the remote config scope you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteScopeFromRemoteConfiguration(id: string, scopeId: string, options: any = {}): FetchArgs {
            // verify required parameter 'id' is not null or undefined
            if (id === null || id === undefined) {
                throw new RequiredError('id','Required parameter id was null or undefined when calling deleteScopeFromRemoteConfiguration.');
            }
            // verify required parameter 'scopeId' is not null or undefined
            if (scopeId === null || scopeId === undefined) {
                throw new RequiredError('scopeId','Required parameter scopeId was null or undefined when calling deleteScopeFromRemoteConfiguration.');
            }
            const localVarPath = `/api/remoteconfigs/{id}/scopes/{scopeId}`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)))
                .replace(`{${"scopeId"}}`, encodeURIComponent(String(scopeId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get all remote configurations
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {string} [facilityId] facility to filter to
         * @param {Array<string>} [groups] groups to filter to
         * @param {string} [userId] userId to filter to
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllRemoteConfigurations(startAfterId?: string, size?: number, facilityId?: string, groups?: Array<string>, userId?: string, options: any = {}): FetchArgs {
            const localVarPath = `/api/remoteconfigs`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            if (facilityId !== undefined) {
                localVarQueryParameter['facilityId'] = facilityId;
            }

            if (groups) {
                localVarQueryParameter['groups'] = groups;
            }

            if (userId !== undefined) {
                localVarQueryParameter['userId'] = userId;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a single remote configuration
         * @param {string} id Reference to the remote config you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRemoteConfiguration(id: string, options: any = {}): FetchArgs {
            // verify required parameter 'id' is not null or undefined
            if (id === null || id === undefined) {
                throw new RequiredError('id','Required parameter id was null or undefined when calling getRemoteConfiguration.');
            }
            const localVarPath = `/api/remoteconfigs/{id}`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Override a single remote configuration
         * @param {string} id Reference to the remote config you want to change
         * @param {RemoteConfigurationForPut} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putRemoteConfiguration(id: string, body?: RemoteConfigurationForPut, options: any = {}): FetchArgs {
            // verify required parameter 'id' is not null or undefined
            if (id === null || id === undefined) {
                throw new RequiredError('id','Required parameter id was null or undefined when calling putRemoteConfiguration.');
            }
            const localVarPath = `/api/remoteconfigs/{id}`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"RemoteConfigurationForPut" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Update a single remote configuration
         * @param {string} id Reference to the remote config you want to change
         * @param {RemoteConfigurationForUpdate} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateRemoteConfiguration(id: string, body?: RemoteConfigurationForUpdate, options: any = {}): FetchArgs {
            // verify required parameter 'id' is not null or undefined
            if (id === null || id === undefined) {
                throw new RequiredError('id','Required parameter id was null or undefined when calling updateRemoteConfiguration.');
            }
            const localVarPath = `/api/remoteconfigs/{id}`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"RemoteConfigurationForUpdate" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * CoreRemoteConfigurationApi - functional programming interface
 * @export
 */
export const CoreRemoteConfigurationApiFp = function(configuration?: Configuration) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary add a new scope to a remote configuration
         * @param {string} id Reference to the remote config you want to change
         * @param {AddRemoteConfigurationScopeParameter} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addRemoteConfigurationScope(id: string, body?: AddRemoteConfigurationScopeParameter, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<RemoteConfiguration> {
            const localVarFetchArgs = CoreRemoteConfigurationApiFetchParamCreator(configuration).addRemoteConfigurationScope(id, body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Create a new remote configuration
         * @param {RemoteConfigurationForCreation} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createRemoteConfiguration(body?: RemoteConfigurationForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<RemoteConfiguration> {
            const localVarFetchArgs = CoreRemoteConfigurationApiFetchParamCreator(configuration).createRemoteConfiguration(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Delete a single remote configuration
         * @param {string} id Reference to the remote config you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteRemoteConfiguration(id: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = CoreRemoteConfigurationApiFetchParamCreator(configuration).deleteRemoteConfiguration(id, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Delete a scope from a given remote configuration
         * @param {string} id Reference to the remote config you want to alter
         * @param {string} scopeId Reference to the remote config scope you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteScopeFromRemoteConfiguration(id: string, scopeId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<RemoteConfiguration> {
            const localVarFetchArgs = CoreRemoteConfigurationApiFetchParamCreator(configuration).deleteScopeFromRemoteConfiguration(id, scopeId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get all remote configurations
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {string} [facilityId] facility to filter to
         * @param {Array<string>} [groups] groups to filter to
         * @param {string} [userId] userId to filter to
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllRemoteConfigurations(startAfterId?: string, size?: number, facilityId?: string, groups?: Array<string>, userId?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<RemoteConfiguration>> {
            const localVarFetchArgs = CoreRemoteConfigurationApiFetchParamCreator(configuration).getAllRemoteConfigurations(startAfterId, size, facilityId, groups, userId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a single remote configuration
         * @param {string} id Reference to the remote config you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRemoteConfiguration(id: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<RemoteConfiguration> {
            const localVarFetchArgs = CoreRemoteConfigurationApiFetchParamCreator(configuration).getRemoteConfiguration(id, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Override a single remote configuration
         * @param {string} id Reference to the remote config you want to change
         * @param {RemoteConfigurationForPut} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putRemoteConfiguration(id: string, body?: RemoteConfigurationForPut, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = CoreRemoteConfigurationApiFetchParamCreator(configuration).putRemoteConfiguration(id, body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Update a single remote configuration
         * @param {string} id Reference to the remote config you want to change
         * @param {RemoteConfigurationForUpdate} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateRemoteConfiguration(id: string, body?: RemoteConfigurationForUpdate, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = CoreRemoteConfigurationApiFetchParamCreator(configuration).updateRemoteConfiguration(id, body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * CoreRemoteConfigurationApi - factory interface
 * @export
 */
export const CoreRemoteConfigurationApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary add a new scope to a remote configuration
         * @param {string} id Reference to the remote config you want to change
         * @param {AddRemoteConfigurationScopeParameter} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addRemoteConfigurationScope(id: string, body?: AddRemoteConfigurationScopeParameter, options?: any) {
            return CoreRemoteConfigurationApiFp(configuration).addRemoteConfigurationScope(id, body, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Create a new remote configuration
         * @param {RemoteConfigurationForCreation} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createRemoteConfiguration(body?: RemoteConfigurationForCreation, options?: any) {
            return CoreRemoteConfigurationApiFp(configuration).createRemoteConfiguration(body, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Delete a single remote configuration
         * @param {string} id Reference to the remote config you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteRemoteConfiguration(id: string, options?: any) {
            return CoreRemoteConfigurationApiFp(configuration).deleteRemoteConfiguration(id, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Delete a scope from a given remote configuration
         * @param {string} id Reference to the remote config you want to alter
         * @param {string} scopeId Reference to the remote config scope you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteScopeFromRemoteConfiguration(id: string, scopeId: string, options?: any) {
            return CoreRemoteConfigurationApiFp(configuration).deleteScopeFromRemoteConfiguration(id, scopeId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get all remote configurations
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {string} [facilityId] facility to filter to
         * @param {Array<string>} [groups] groups to filter to
         * @param {string} [userId] userId to filter to
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllRemoteConfigurations(startAfterId?: string, size?: number, facilityId?: string, groups?: Array<string>, userId?: string, options?: any) {
            return CoreRemoteConfigurationApiFp(configuration).getAllRemoteConfigurations(startAfterId, size, facilityId, groups, userId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a single remote configuration
         * @param {string} id Reference to the remote config you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRemoteConfiguration(id: string, options?: any) {
            return CoreRemoteConfigurationApiFp(configuration).getRemoteConfiguration(id, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Override a single remote configuration
         * @param {string} id Reference to the remote config you want to change
         * @param {RemoteConfigurationForPut} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putRemoteConfiguration(id: string, body?: RemoteConfigurationForPut, options?: any) {
            return CoreRemoteConfigurationApiFp(configuration).putRemoteConfiguration(id, body, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Update a single remote configuration
         * @param {string} id Reference to the remote config you want to change
         * @param {RemoteConfigurationForUpdate} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateRemoteConfiguration(id: string, body?: RemoteConfigurationForUpdate, options?: any) {
            return CoreRemoteConfigurationApiFp(configuration).updateRemoteConfiguration(id, body, options)(fetch, basePath);
        },
    };
};

/**
 * CoreRemoteConfigurationApi - object-oriented interface
 * @export
 * @class CoreRemoteConfigurationApi
 * @extends {BaseAPI}
 */
export class CoreRemoteConfigurationApi extends BaseAPI {
    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary add a new scope to a remote configuration
     * @param {string} id Reference to the remote config you want to change
     * @param {AddRemoteConfigurationScopeParameter} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreRemoteConfigurationApi
     */
    public addRemoteConfigurationScope(id: string, body?: AddRemoteConfigurationScopeParameter, options?: any) {
        return CoreRemoteConfigurationApiFp(this.configuration).addRemoteConfigurationScope(id, body, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Create a new remote configuration
     * @param {RemoteConfigurationForCreation} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreRemoteConfigurationApi
     */
    public createRemoteConfiguration(body?: RemoteConfigurationForCreation, options?: any) {
        return CoreRemoteConfigurationApiFp(this.configuration).createRemoteConfiguration(body, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Delete a single remote configuration
     * @param {string} id Reference to the remote config you want to delete
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreRemoteConfigurationApi
     */
    public deleteRemoteConfiguration(id: string, options?: any) {
        return CoreRemoteConfigurationApiFp(this.configuration).deleteRemoteConfiguration(id, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Delete a scope from a given remote configuration
     * @param {string} id Reference to the remote config you want to alter
     * @param {string} scopeId Reference to the remote config scope you want to delete
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreRemoteConfigurationApi
     */
    public deleteScopeFromRemoteConfiguration(id: string, scopeId: string, options?: any) {
        return CoreRemoteConfigurationApiFp(this.configuration).deleteScopeFromRemoteConfiguration(id, scopeId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Get all remote configurations
     * @param {string} [startAfterId] all entities after given Id
     * @param {number} [size] number of entities to show
     * @param {string} [facilityId] facility to filter to
     * @param {Array<string>} [groups] groups to filter to
     * @param {string} [userId] userId to filter to
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreRemoteConfigurationApi
     */
    public getAllRemoteConfigurations(startAfterId?: string, size?: number, facilityId?: string, groups?: Array<string>, userId?: string, options?: any) {
        return CoreRemoteConfigurationApiFp(this.configuration).getAllRemoteConfigurations(startAfterId, size, facilityId, groups, userId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Get a single remote configuration
     * @param {string} id Reference to the remote config you want to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreRemoteConfigurationApi
     */
    public getRemoteConfiguration(id: string, options?: any) {
        return CoreRemoteConfigurationApiFp(this.configuration).getRemoteConfiguration(id, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Override a single remote configuration
     * @param {string} id Reference to the remote config you want to change
     * @param {RemoteConfigurationForPut} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreRemoteConfigurationApi
     */
    public putRemoteConfiguration(id: string, body?: RemoteConfigurationForPut, options?: any) {
        return CoreRemoteConfigurationApiFp(this.configuration).putRemoteConfiguration(id, body, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Update a single remote configuration
     * @param {string} id Reference to the remote config you want to change
     * @param {RemoteConfigurationForUpdate} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreRemoteConfigurationApi
     */
    public updateRemoteConfiguration(id: string, body?: RemoteConfigurationForUpdate, options?: any) {
        return CoreRemoteConfigurationApiFp(this.configuration).updateRemoteConfiguration(id, body, options)(this.fetch, this.basePath);
    }

}
/**
 * CoreTagsApi - fetch parameter creator
 * @export
 */
export const CoreTagsApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *
         * @summary Add a new tag
         * @param {TagForCreation} body Tag object
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addTag(body: TagForCreation, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling addTag.');
            }
            const localVarPath = `/api/tags`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"TagForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a tag with the given key
         * @param {string} tagRef Id of the tag you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTag(tagRef: string, options: any = {}): FetchArgs {
            // verify required parameter 'tagRef' is not null or undefined
            if (tagRef === null || tagRef === undefined) {
                throw new RequiredError('tagRef','Required parameter tagRef was null or undefined when calling getTag.');
            }
            const localVarPath = `/api/tags/{tagRef}`
                .replace(`{${"tagRef"}}`, encodeURIComponent(String(tagRef)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Returns all tags
         * @param {string} [startAfterId] all entities
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTags(startAfterId?: string, size?: number, options: any = {}): FetchArgs {
            const localVarPath = `/api/tags`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Update a tag with the given key
         * @param {TagPatchActions} body Tag patch action
         * @param {string} tagRef Id of the tag you want to update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putTag(body: TagPatchActions, tagRef: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putTag.');
            }
            // verify required parameter 'tagRef' is not null or undefined
            if (tagRef === null || tagRef === undefined) {
                throw new RequiredError('tagRef','Required parameter tagRef was null or undefined when calling putTag.');
            }
            const localVarPath = `/api/tags/{tagRef}`
                .replace(`{${"tagRef"}}`, encodeURIComponent(String(tagRef)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"TagPatchActions" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * CoreTagsApi - functional programming interface
 * @export
 */
export const CoreTagsApiFp = function(configuration?: Configuration) {
    return {
        /**
         *
         * @summary Add a new tag
         * @param {TagForCreation} body Tag object
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addTag(body: TagForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Tag> {
            const localVarFetchArgs = CoreTagsApiFetchParamCreator(configuration).addTag(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a tag with the given key
         * @param {string} tagRef Id of the tag you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTag(tagRef: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Tag> {
            const localVarFetchArgs = CoreTagsApiFetchParamCreator(configuration).getTag(tagRef, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Returns all tags
         * @param {string} [startAfterId] all entities
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTags(startAfterId?: string, size?: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<StrippedTags> {
            const localVarFetchArgs = CoreTagsApiFetchParamCreator(configuration).getTags(startAfterId, size, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Update a tag with the given key
         * @param {TagPatchActions} body Tag patch action
         * @param {string} tagRef Id of the tag you want to update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putTag(body: TagPatchActions, tagRef: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Tag> {
            const localVarFetchArgs = CoreTagsApiFetchParamCreator(configuration).putTag(body, tagRef, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * CoreTagsApi - factory interface
 * @export
 */
export const CoreTagsApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         *
         * @summary Add a new tag
         * @param {TagForCreation} body Tag object
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addTag(body: TagForCreation, options?: any) {
            return CoreTagsApiFp(configuration).addTag(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a tag with the given key
         * @param {string} tagRef Id of the tag you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTag(tagRef: string, options?: any) {
            return CoreTagsApiFp(configuration).getTag(tagRef, options)(fetch, basePath);
        },
        /**
         *
         * @summary Returns all tags
         * @param {string} [startAfterId] all entities
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTags(startAfterId?: string, size?: number, options?: any) {
            return CoreTagsApiFp(configuration).getTags(startAfterId, size, options)(fetch, basePath);
        },
        /**
         *
         * @summary Update a tag with the given key
         * @param {TagPatchActions} body Tag patch action
         * @param {string} tagRef Id of the tag you want to update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putTag(body: TagPatchActions, tagRef: string, options?: any) {
            return CoreTagsApiFp(configuration).putTag(body, tagRef, options)(fetch, basePath);
        },
    };
};

/**
 * CoreTagsApi - object-oriented interface
 * @export
 * @class CoreTagsApi
 * @extends {BaseAPI}
 */
export class CoreTagsApi extends BaseAPI {
    /**
     *
     * @summary Add a new tag
     * @param {TagForCreation} body Tag object
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreTagsApi
     */
    public addTag(body: TagForCreation, options?: any) {
        return CoreTagsApiFp(this.configuration).addTag(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a tag with the given key
     * @param {string} tagRef Id of the tag you want to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreTagsApi
     */
    public getTag(tagRef: string, options?: any) {
        return CoreTagsApiFp(this.configuration).getTag(tagRef, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Returns all tags
     * @param {string} [startAfterId] all entities
     * @param {number} [size] number of entities to show
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreTagsApi
     */
    public getTags(startAfterId?: string, size?: number, options?: any) {
        return CoreTagsApiFp(this.configuration).getTags(startAfterId, size, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Update a tag with the given key
     * @param {TagPatchActions} body Tag patch action
     * @param {string} tagRef Id of the tag you want to update
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreTagsApi
     */
    public putTag(body: TagPatchActions, tagRef: string, options?: any) {
        return CoreTagsApiFp(this.configuration).putTag(body, tagRef, options)(this.fetch, this.basePath);
    }

}
/**
 * CoreUserManagementApi - fetch parameter creator
 * @export
 */
export const CoreUserManagementApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *
         * @summary Create a new user
         * @param {UserForCreation} body User object
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createUser(body: UserForCreation, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling createUser.');
            }
            const localVarPath = `/api/users`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"UserForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Removes an assigned facility from the user
         * @param {string} userId User ID from whom you want to delete the facility
         * @param {string} assignedFacilityId Facility id you want to delete from the user
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteAssignedFacilities(userId: string, assignedFacilityId: string, options: any = {}): FetchArgs {
            // verify required parameter 'userId' is not null or undefined
            if (userId === null || userId === undefined) {
                throw new RequiredError('userId','Required parameter userId was null or undefined when calling deleteAssignedFacilities.');
            }
            // verify required parameter 'assignedFacilityId' is not null or undefined
            if (assignedFacilityId === null || assignedFacilityId === undefined) {
                throw new RequiredError('assignedFacilityId','Required parameter assignedFacilityId was null or undefined when calling deleteAssignedFacilities.');
            }
            const localVarPath = `/api/users/{userId}/assignedFacilities/{assignedFacilityId}`
                .replace(`{${"userId"}}`, encodeURIComponent(String(userId)))
                .replace(`{${"assignedFacilityId"}}`, encodeURIComponent(String(assignedFacilityId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Deletes a User with the given ID
         * @param {string} userId user ID of the user you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteUser(userId: string, options: any = {}): FetchArgs {
            // verify required parameter 'userId' is not null or undefined
            if (userId === null || userId === undefined) {
                throw new RequiredError('userId','Required parameter userId was null or undefined when calling deleteUser.');
            }
            const localVarPath = `/api/users/{userId}`
                .replace(`{${"userId"}}`, encodeURIComponent(String(userId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Return all users
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {UserOrderBy} [orderBy] query users orderBy
         * @param {string} [facilityId] filter by facility id
         * @param {boolean} [includeAdminUsers] include admin users without a facility
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllUsers(startAfterId?: string, size?: number, orderBy?: UserOrderBy, facilityId?: string, includeAdminUsers?: boolean, options: any = {}): FetchArgs {
            const localVarPath = `/api/users`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            if (orderBy !== undefined) {
                localVarQueryParameter['orderBy'] = orderBy;
            }

            if (facilityId !== undefined) {
                localVarQueryParameter['facilityId'] = facilityId;
            }

            if (includeAdminUsers !== undefined) {
                localVarQueryParameter['includeAdminUsers'] = includeAdminUsers;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a User with the given ID
         * @param {string} userId ID of User you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getUser(userId: string, options: any = {}): FetchArgs {
            // verify required parameter 'userId' is not null or undefined
            if (userId === null || userId === undefined) {
                throw new RequiredError('userId','Required parameter userId was null or undefined when calling getUser.');
            }
            const localVarPath = `/api/users/{userId}`
                .replace(`{${"userId"}}`, encodeURIComponent(String(userId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a User with the given ID
         * @param {string} userId ID of User you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getUserRoles(userId: string, options: any = {}): FetchArgs {
            // verify required parameter 'userId' is not null or undefined
            if (userId === null || userId === undefined) {
                throw new RequiredError('userId','Required parameter userId was null or undefined when calling getUserRoles.');
            }
            const localVarPath = `/api/users/{userId}/permissions`
                .replace(`{${"userId"}}`, encodeURIComponent(String(userId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Patch an existing user with the given ID
         * @param {UserPatchActions} body ModifyUser object
         * @param {string} userId ID of the user you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchUser(body: UserPatchActions, userId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling patchUser.');
            }
            // verify required parameter 'userId' is not null or undefined
            if (userId === null || userId === undefined) {
                throw new RequiredError('userId','Required parameter userId was null or undefined when calling patchUser.');
            }
            const localVarPath = `/api/users/{userId}`
                .replace(`{${"userId"}}`, encodeURIComponent(String(userId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"UserPatchActions" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Assigns a facility to an user
         * @param {UserAssignedFacilityForCreation} body The facility you want to assign the user
         * @param {string} userId ID of User you want to assign a facility
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postAssignedFacilities(body: UserAssignedFacilityForCreation, userId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling postAssignedFacilities.');
            }
            // verify required parameter 'userId' is not null or undefined
            if (userId === null || userId === undefined) {
                throw new RequiredError('userId','Required parameter userId was null or undefined when calling postAssignedFacilities.');
            }
            const localVarPath = `/api/users/{userId}/assignedFacilities`
                .replace(`{${"userId"}}`, encodeURIComponent(String(userId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"UserAssignedFacilityForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated, will be replaced by /api/configurations/tenant
         * @summary Sets the branding
         * @param {Branding} body Branding object
         * @param {string} clientName Identifier for the client you want to set the branding for.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putBranding(body: Branding, clientName: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putBranding.');
            }
            // verify required parameter 'clientName' is not null or undefined
            if (clientName === null || clientName === undefined) {
                throw new RequiredError('clientName','Required parameter clientName was null or undefined when calling putBranding.');
            }
            const localVarPath = `/api/users/branding/{clientName}`
                .replace(`{${"clientName"}}`, encodeURIComponent(String(clientName)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"Branding" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated, image upload is no longer supported
         * @summary Sign an upload request for a given template
         * @param {string} templateId The id of the template to sign the request
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        signTransloaditRequest(templateId: string, options: any = {}): FetchArgs {
            // verify required parameter 'templateId' is not null or undefined
            if (templateId === null || templateId === undefined) {
                throw new RequiredError('templateId','Required parameter templateId was null or undefined when calling signTransloaditRequest.');
            }
            const localVarPath = `/api/users/sign/transloadit/{templateId}`
                .replace(`{${"templateId"}}`, encodeURIComponent(String(templateId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * CoreUserManagementApi - functional programming interface
 * @export
 */
export const CoreUserManagementApiFp = function(configuration?: Configuration) {
    return {
        /**
         *
         * @summary Create a new user
         * @param {UserForCreation} body User object
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createUser(body: UserForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = CoreUserManagementApiFetchParamCreator(configuration).createUser(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Removes an assigned facility from the user
         * @param {string} userId User ID from whom you want to delete the facility
         * @param {string} assignedFacilityId Facility id you want to delete from the user
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteAssignedFacilities(userId: string, assignedFacilityId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = CoreUserManagementApiFetchParamCreator(configuration).deleteAssignedFacilities(userId, assignedFacilityId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Deletes a User with the given ID
         * @param {string} userId user ID of the user you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteUser(userId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = CoreUserManagementApiFetchParamCreator(configuration).deleteUser(userId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Return all users
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {UserOrderBy} [orderBy] query users orderBy
         * @param {string} [facilityId] filter by facility id
         * @param {boolean} [includeAdminUsers] include admin users without a facility
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllUsers(startAfterId?: string, size?: number, orderBy?: UserOrderBy, facilityId?: string, includeAdminUsers?: boolean, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<StrippedUsers> {
            const localVarFetchArgs = CoreUserManagementApiFetchParamCreator(configuration).getAllUsers(startAfterId, size, orderBy, facilityId, includeAdminUsers, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a User with the given ID
         * @param {string} userId ID of User you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getUser(userId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<User> {
            const localVarFetchArgs = CoreUserManagementApiFetchParamCreator(configuration).getUser(userId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a User with the given ID
         * @param {string} userId ID of User you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getUserRoles(userId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Roles> {
            const localVarFetchArgs = CoreUserManagementApiFetchParamCreator(configuration).getUserRoles(userId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Patch an existing user with the given ID
         * @param {UserPatchActions} body ModifyUser object
         * @param {string} userId ID of the user you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchUser(body: UserPatchActions, userId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<User> {
            const localVarFetchArgs = CoreUserManagementApiFetchParamCreator(configuration).patchUser(body, userId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Assigns a facility to an user
         * @param {UserAssignedFacilityForCreation} body The facility you want to assign the user
         * @param {string} userId ID of User you want to assign a facility
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postAssignedFacilities(body: UserAssignedFacilityForCreation, userId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = CoreUserManagementApiFetchParamCreator(configuration).postAssignedFacilities(body, userId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated, will be replaced by /api/configurations/tenant
         * @summary Sets the branding
         * @param {Branding} body Branding object
         * @param {string} clientName Identifier for the client you want to set the branding for.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putBranding(body: Branding, clientName: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = CoreUserManagementApiFetchParamCreator(configuration).putBranding(body, clientName, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated, image upload is no longer supported
         * @summary Sign an upload request for a given template
         * @param {string} templateId The id of the template to sign the request
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        signTransloaditRequest(templateId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = CoreUserManagementApiFetchParamCreator(configuration).signTransloaditRequest(templateId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * CoreUserManagementApi - factory interface
 * @export
 */
export const CoreUserManagementApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         *
         * @summary Create a new user
         * @param {UserForCreation} body User object
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createUser(body: UserForCreation, options?: any) {
            return CoreUserManagementApiFp(configuration).createUser(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Removes an assigned facility from the user
         * @param {string} userId User ID from whom you want to delete the facility
         * @param {string} assignedFacilityId Facility id you want to delete from the user
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteAssignedFacilities(userId: string, assignedFacilityId: string, options?: any) {
            return CoreUserManagementApiFp(configuration).deleteAssignedFacilities(userId, assignedFacilityId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Deletes a User with the given ID
         * @param {string} userId user ID of the user you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteUser(userId: string, options?: any) {
            return CoreUserManagementApiFp(configuration).deleteUser(userId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Return all users
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {UserOrderBy} [orderBy] query users orderBy
         * @param {string} [facilityId] filter by facility id
         * @param {boolean} [includeAdminUsers] include admin users without a facility
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllUsers(startAfterId?: string, size?: number, orderBy?: UserOrderBy, facilityId?: string, includeAdminUsers?: boolean, options?: any) {
            return CoreUserManagementApiFp(configuration).getAllUsers(startAfterId, size, orderBy, facilityId, includeAdminUsers, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a User with the given ID
         * @param {string} userId ID of User you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getUser(userId: string, options?: any) {
            return CoreUserManagementApiFp(configuration).getUser(userId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a User with the given ID
         * @param {string} userId ID of User you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getUserRoles(userId: string, options?: any) {
            return CoreUserManagementApiFp(configuration).getUserRoles(userId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Patch an existing user with the given ID
         * @param {UserPatchActions} body ModifyUser object
         * @param {string} userId ID of the user you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchUser(body: UserPatchActions, userId: string, options?: any) {
            return CoreUserManagementApiFp(configuration).patchUser(body, userId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Assigns a facility to an user
         * @param {UserAssignedFacilityForCreation} body The facility you want to assign the user
         * @param {string} userId ID of User you want to assign a facility
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postAssignedFacilities(body: UserAssignedFacilityForCreation, userId: string, options?: any) {
            return CoreUserManagementApiFp(configuration).postAssignedFacilities(body, userId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated, will be replaced by /api/configurations/tenant
         * @summary Sets the branding
         * @param {Branding} body Branding object
         * @param {string} clientName Identifier for the client you want to set the branding for.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putBranding(body: Branding, clientName: string, options?: any) {
            return CoreUserManagementApiFp(configuration).putBranding(body, clientName, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated, image upload is no longer supported
         * @summary Sign an upload request for a given template
         * @param {string} templateId The id of the template to sign the request
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        signTransloaditRequest(templateId: string, options?: any) {
            return CoreUserManagementApiFp(configuration).signTransloaditRequest(templateId, options)(fetch, basePath);
        },
    };
};

/**
 * CoreUserManagementApi - object-oriented interface
 * @export
 * @class CoreUserManagementApi
 * @extends {BaseAPI}
 */
export class CoreUserManagementApi extends BaseAPI {
    /**
     *
     * @summary Create a new user
     * @param {UserForCreation} body User object
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreUserManagementApi
     */
    public createUser(body: UserForCreation, options?: any) {
        return CoreUserManagementApiFp(this.configuration).createUser(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Removes an assigned facility from the user
     * @param {string} userId User ID from whom you want to delete the facility
     * @param {string} assignedFacilityId Facility id you want to delete from the user
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreUserManagementApi
     */
    public deleteAssignedFacilities(userId: string, assignedFacilityId: string, options?: any) {
        return CoreUserManagementApiFp(this.configuration).deleteAssignedFacilities(userId, assignedFacilityId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Deletes a User with the given ID
     * @param {string} userId user ID of the user you want to delete
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreUserManagementApi
     */
    public deleteUser(userId: string, options?: any) {
        return CoreUserManagementApiFp(this.configuration).deleteUser(userId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Return all users
     * @param {string} [startAfterId] all entities after given Id
     * @param {number} [size] number of entities to show
     * @param {UserOrderBy} [orderBy] query users orderBy
     * @param {string} [facilityId] filter by facility id
     * @param {boolean} [includeAdminUsers] include admin users without a facility
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreUserManagementApi
     */
    public getAllUsers(startAfterId?: string, size?: number, orderBy?: UserOrderBy, facilityId?: string, includeAdminUsers?: boolean, options?: any) {
        return CoreUserManagementApiFp(this.configuration).getAllUsers(startAfterId, size, orderBy, facilityId, includeAdminUsers, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a User with the given ID
     * @param {string} userId ID of User you want to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreUserManagementApi
     */
    public getUser(userId: string, options?: any) {
        return CoreUserManagementApiFp(this.configuration).getUser(userId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a User with the given ID
     * @param {string} userId ID of User you want to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreUserManagementApi
     */
    public getUserRoles(userId: string, options?: any) {
        return CoreUserManagementApiFp(this.configuration).getUserRoles(userId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Patch an existing user with the given ID
     * @param {UserPatchActions} body ModifyUser object
     * @param {string} userId ID of the user you want to patch
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreUserManagementApi
     */
    public patchUser(body: UserPatchActions, userId: string, options?: any) {
        return CoreUserManagementApiFp(this.configuration).patchUser(body, userId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Assigns a facility to an user
     * @param {UserAssignedFacilityForCreation} body The facility you want to assign the user
     * @param {string} userId ID of User you want to assign a facility
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreUserManagementApi
     */
    public postAssignedFacilities(body: UserAssignedFacilityForCreation, userId: string, options?: any) {
        return CoreUserManagementApiFp(this.configuration).postAssignedFacilities(body, userId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated, will be replaced by /api/configurations/tenant
     * @summary Sets the branding
     * @param {Branding} body Branding object
     * @param {string} clientName Identifier for the client you want to set the branding for.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreUserManagementApi
     */
    public putBranding(body: Branding, clientName: string, options?: any) {
        return CoreUserManagementApiFp(this.configuration).putBranding(body, clientName, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated, image upload is no longer supported
     * @summary Sign an upload request for a given template
     * @param {string} templateId The id of the template to sign the request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreUserManagementApi
     */
    public signTransloaditRequest(templateId: string, options?: any) {
        return CoreUserManagementApiFp(this.configuration).signTransloaditRequest(templateId, options)(this.fetch, this.basePath);
    }

}
/**
 * CoreValidationsApi - fetch parameter creator
 * @export
 */
export const CoreValidationsApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *
         * @summary Validate a given postal code for a given country
         * @param {PostalCodeValidation} body Branding object
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        validatePostalCode(body: PostalCodeValidation, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling validatePostalCode.');
            }
            const localVarPath = `/api/validations/postalcodes`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"PostalCodeValidation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * CoreValidationsApi - functional programming interface
 * @export
 */
export const CoreValidationsApiFp = function(configuration?: Configuration) {
    return {
        /**
         *
         * @summary Validate a given postal code for a given country
         * @param {PostalCodeValidation} body Branding object
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        validatePostalCode(body: PostalCodeValidation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = CoreValidationsApiFetchParamCreator(configuration).validatePostalCode(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * CoreValidationsApi - factory interface
 * @export
 */
export const CoreValidationsApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         *
         * @summary Validate a given postal code for a given country
         * @param {PostalCodeValidation} body Branding object
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        validatePostalCode(body: PostalCodeValidation, options?: any) {
            return CoreValidationsApiFp(configuration).validatePostalCode(body, options)(fetch, basePath);
        },
    };
};

/**
 * CoreValidationsApi - object-oriented interface
 * @export
 * @class CoreValidationsApi
 * @extends {BaseAPI}
 */
export class CoreValidationsApi extends BaseAPI {
    /**
     *
     * @summary Validate a given postal code for a given country
     * @param {PostalCodeValidation} body Branding object
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoreValidationsApi
     */
    public validatePostalCode(body: PostalCodeValidation, options?: any) {
        return CoreValidationsApiFp(this.configuration).validatePostalCode(body, options)(this.fetch, this.basePath);
    }

}
/**
 * DOMSCancelationReasonsApi - fetch parameter creator
 * @export
 */
export const DOMSCancelationReasonsApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Delete a cancelation reason
         * @param {string} cancelationReasonId ID of the cancelation reason you intend to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteCancelationReason(cancelationReasonId: string, options: any = {}): FetchArgs {
            // verify required parameter 'cancelationReasonId' is not null or undefined
            if (cancelationReasonId === null || cancelationReasonId === undefined) {
                throw new RequiredError('cancelationReasonId','Required parameter cancelationReasonId was null or undefined when calling deleteCancelationReason.');
            }
            const localVarPath = `/api/cancelationreasons/{cancelationReasonId}`
                .replace(`{${"cancelationReasonId"}}`, encodeURIComponent(String(cancelationReasonId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a cancelation reason with the given id
         * @param {string} cancelationReasonId Id of the cancelation reason you wish to retrieve
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCancelationReasonById(cancelationReasonId: string, options: any = {}): FetchArgs {
            // verify required parameter 'cancelationReasonId' is not null or undefined
            if (cancelationReasonId === null || cancelationReasonId === undefined) {
                throw new RequiredError('cancelationReasonId','Required parameter cancelationReasonId was null or undefined when calling getCancelationReasonById.');
            }
            const localVarPath = `/api/cancelationreasons/{cancelationReasonId}`
                .replace(`{${"cancelationReasonId"}}`, encodeURIComponent(String(cancelationReasonId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get a list with all cancelation reasons
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCancelationReasons(startAfterId?: string, size?: number, options: any = {}): FetchArgs {
            const localVarPath = `/api/cancelationreasons`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Post a new cancelation reason
         * @param {CancelationReasonForCreation} body Cancelation reason
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postCancelationReason(body: CancelationReasonForCreation, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling postCancelationReason.');
            }
            const localVarPath = `/api/cancelationreasons`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"CancelationReasonForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Update a reroute description
         * @param {string} cancelationReasonId ID of the cancelation reason you intend to modify
         * @param {CancelationReasonForModification} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putCancelationReason(cancelationReasonId: string, body?: CancelationReasonForModification, options: any = {}): FetchArgs {
            // verify required parameter 'cancelationReasonId' is not null or undefined
            if (cancelationReasonId === null || cancelationReasonId === undefined) {
                throw new RequiredError('cancelationReasonId','Required parameter cancelationReasonId was null or undefined when calling putCancelationReason.');
            }
            const localVarPath = `/api/cancelationreasons/{cancelationReasonId}`
                .replace(`{${"cancelationReasonId"}}`, encodeURIComponent(String(cancelationReasonId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"CancelationReasonForModification" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * DOMSCancelationReasonsApi - functional programming interface
 * @export
 */
export const DOMSCancelationReasonsApiFp = function(configuration?: Configuration) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Delete a cancelation reason
         * @param {string} cancelationReasonId ID of the cancelation reason you intend to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteCancelationReason(cancelationReasonId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = DOMSCancelationReasonsApiFetchParamCreator(configuration).deleteCancelationReason(cancelationReasonId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a cancelation reason with the given id
         * @param {string} cancelationReasonId Id of the cancelation reason you wish to retrieve
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCancelationReasonById(cancelationReasonId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CancelationReason> {
            const localVarFetchArgs = DOMSCancelationReasonsApiFetchParamCreator(configuration).getCancelationReasonById(cancelationReasonId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get a list with all cancelation reasons
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCancelationReasons(startAfterId?: string, size?: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CancelationReasons> {
            const localVarFetchArgs = DOMSCancelationReasonsApiFetchParamCreator(configuration).getCancelationReasons(startAfterId, size, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Post a new cancelation reason
         * @param {CancelationReasonForCreation} body Cancelation reason
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postCancelationReason(body: CancelationReasonForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CancelationReason> {
            const localVarFetchArgs = DOMSCancelationReasonsApiFetchParamCreator(configuration).postCancelationReason(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Update a reroute description
         * @param {string} cancelationReasonId ID of the cancelation reason you intend to modify
         * @param {CancelationReasonForModification} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putCancelationReason(cancelationReasonId: string, body?: CancelationReasonForModification, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CancelationReason> {
            const localVarFetchArgs = DOMSCancelationReasonsApiFetchParamCreator(configuration).putCancelationReason(cancelationReasonId, body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * DOMSCancelationReasonsApi - factory interface
 * @export
 */
export const DOMSCancelationReasonsApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Delete a cancelation reason
         * @param {string} cancelationReasonId ID of the cancelation reason you intend to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteCancelationReason(cancelationReasonId: string, options?: any) {
            return DOMSCancelationReasonsApiFp(configuration).deleteCancelationReason(cancelationReasonId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a cancelation reason with the given id
         * @param {string} cancelationReasonId Id of the cancelation reason you wish to retrieve
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCancelationReasonById(cancelationReasonId: string, options?: any) {
            return DOMSCancelationReasonsApiFp(configuration).getCancelationReasonById(cancelationReasonId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get a list with all cancelation reasons
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCancelationReasons(startAfterId?: string, size?: number, options?: any) {
            return DOMSCancelationReasonsApiFp(configuration).getCancelationReasons(startAfterId, size, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Post a new cancelation reason
         * @param {CancelationReasonForCreation} body Cancelation reason
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postCancelationReason(body: CancelationReasonForCreation, options?: any) {
            return DOMSCancelationReasonsApiFp(configuration).postCancelationReason(body, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Update a reroute description
         * @param {string} cancelationReasonId ID of the cancelation reason you intend to modify
         * @param {CancelationReasonForModification} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putCancelationReason(cancelationReasonId: string, body?: CancelationReasonForModification, options?: any) {
            return DOMSCancelationReasonsApiFp(configuration).putCancelationReason(cancelationReasonId, body, options)(fetch, basePath);
        },
    };
};

/**
 * DOMSCancelationReasonsApi - object-oriented interface
 * @export
 * @class DOMSCancelationReasonsApi
 * @extends {BaseAPI}
 */
export class DOMSCancelationReasonsApi extends BaseAPI {
    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Delete a cancelation reason
     * @param {string} cancelationReasonId ID of the cancelation reason you intend to delete
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSCancelationReasonsApi
     */
    public deleteCancelationReason(cancelationReasonId: string, options?: any) {
        return DOMSCancelationReasonsApiFp(this.configuration).deleteCancelationReason(cancelationReasonId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Get a cancelation reason with the given id
     * @param {string} cancelationReasonId Id of the cancelation reason you wish to retrieve
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSCancelationReasonsApi
     */
    public getCancelationReasonById(cancelationReasonId: string, options?: any) {
        return DOMSCancelationReasonsApiFp(this.configuration).getCancelationReasonById(cancelationReasonId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get a list with all cancelation reasons
     * @param {string} [startAfterId] all entities after given Id
     * @param {number} [size] number of entities to show
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSCancelationReasonsApi
     */
    public getCancelationReasons(startAfterId?: string, size?: number, options?: any) {
        return DOMSCancelationReasonsApiFp(this.configuration).getCancelationReasons(startAfterId, size, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Post a new cancelation reason
     * @param {CancelationReasonForCreation} body Cancelation reason
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSCancelationReasonsApi
     */
    public postCancelationReason(body: CancelationReasonForCreation, options?: any) {
        return DOMSCancelationReasonsApiFp(this.configuration).postCancelationReason(body, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Update a reroute description
     * @param {string} cancelationReasonId ID of the cancelation reason you intend to modify
     * @param {CancelationReasonForModification} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSCancelationReasonsApi
     */
    public putCancelationReason(cancelationReasonId: string, body?: CancelationReasonForModification, options?: any) {
        return DOMSCancelationReasonsApiFp(this.configuration).putCancelationReason(cancelationReasonId, body, options)(this.fetch, this.basePath);
    }

}
/**
 * DOMSCheckoutOptionsApi - fetch parameter creator
 * @export
 */
export const DOMSCheckoutOptionsApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary This endpoint is to be used to get information about the possible delivery of items
         * @param {CheckoutOptionsDeliveryTimePointRequest} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        checkoutOptionsTimepoint(body: CheckoutOptionsDeliveryTimePointRequest, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling checkoutOptionsTimepoint.');
            }
            const localVarPath = `/api/promises/checkoutoptions/delivery/timepoint`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"CheckoutOptionsDeliveryTimePointRequest" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * The list of items depicts the items you would like to get information about their earliest possbile delivery. The provided list of tenant article ids are considered individual (as if not in a basket together, but seperately ordered). Additionally you can add information about the address these items should be delivered to to further refine the response.
         * @summary delivery/earliest
         * @param {CheckoutOptionsDeliveryEarliestRequest} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        checkoutoptionDeliveryEarliest(body: CheckoutOptionsDeliveryEarliestRequest, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling checkoutoptionDeliveryEarliest.');
            }
            const localVarPath = `/api/promises/checkoutoptions/delivery/earliest`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"CheckoutOptionsDeliveryEarliestRequest" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * The basket attribute depicts the items you would like to get details about their possbile delivery. All the provided tenantArticleIds within the basket are considered together (as if they are in the same basket/order). Additionally you can add information about the address these items should be delivered to to further refine the quality of the response.
         * @summary delivery/timeperiod
         * @param {CheckoutOptionsDeliveryTimePeriodRequest} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        checkoutoptionDeliveryTimePeriod(body: CheckoutOptionsDeliveryTimePeriodRequest, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling checkoutoptionDeliveryTimePeriod.');
            }
            const localVarPath = `/api/promises/checkoutoptions/delivery/timeperiod`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"CheckoutOptionsDeliveryTimePeriodRequest" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated: use /api/promises instead
         * @summary Provides information which kind of fulfillment is possible under given circumstances.
         * @param {FulfillabilityQuery} body Representation that describes the fulfillability query
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        queryFulfillability(body: FulfillabilityQuery, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling queryFulfillability.');
            }
            const localVarPath = `/api/fulfillability`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"FulfillabilityQuery" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated: use /api/promises instead
         * @summary Provides information which kind of fulfillment is possible under given circumstances.
         * @param {FulfillabilityClickAndCollectQuery} body Representation that describes the fulfillability query
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        queryFulfillabilityClickAndCollect(body: FulfillabilityClickAndCollectQuery, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling queryFulfillabilityClickAndCollect.');
            }
            const localVarPath = `/api/fulfillability/clickandcollect`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"FulfillabilityClickAndCollectQuery" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated: use /api/promises instead
         * @summary Provides information which kind of fulfillment is possible under given circumstances.
         * @param {FulfillabilityShipFromStoreQuery} body Representation that describes the fulfillability query
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        queryFulfillabilityShipFromStore(body: FulfillabilityShipFromStoreQuery, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling queryFulfillabilityShipFromStore.');
            }
            const localVarPath = `/api/fulfillability/shipfromstore`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"FulfillabilityShipFromStoreQuery" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * DOMSCheckoutOptionsApi - functional programming interface
 * @export
 */
export const DOMSCheckoutOptionsApiFp = function(configuration?: Configuration) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary This endpoint is to be used to get information about the possible delivery of items
         * @param {CheckoutOptionsDeliveryTimePointRequest} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        checkoutOptionsTimepoint(body: CheckoutOptionsDeliveryTimePointRequest, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CheckoutOptionsDeliveryTimePointResponse> {
            const localVarFetchArgs = DOMSCheckoutOptionsApiFetchParamCreator(configuration).checkoutOptionsTimepoint(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * The list of items depicts the items you would like to get information about their earliest possbile delivery. The provided list of tenant article ids are considered individual (as if not in a basket together, but seperately ordered). Additionally you can add information about the address these items should be delivered to to further refine the response.
         * @summary delivery/earliest
         * @param {CheckoutOptionsDeliveryEarliestRequest} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        checkoutoptionDeliveryEarliest(body: CheckoutOptionsDeliveryEarliestRequest, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CheckoutOptionsDeliveryEarliestResponse> {
            const localVarFetchArgs = DOMSCheckoutOptionsApiFetchParamCreator(configuration).checkoutoptionDeliveryEarliest(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * The basket attribute depicts the items you would like to get details about their possbile delivery. All the provided tenantArticleIds within the basket are considered together (as if they are in the same basket/order). Additionally you can add information about the address these items should be delivered to to further refine the quality of the response.
         * @summary delivery/timeperiod
         * @param {CheckoutOptionsDeliveryTimePeriodRequest} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        checkoutoptionDeliveryTimePeriod(body: CheckoutOptionsDeliveryTimePeriodRequest, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CheckoutOptionsDeliveryTimePeriodResponse> {
            const localVarFetchArgs = DOMSCheckoutOptionsApiFetchParamCreator(configuration).checkoutoptionDeliveryTimePeriod(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated: use /api/promises instead
         * @summary Provides information which kind of fulfillment is possible under given circumstances.
         * @param {FulfillabilityQuery} body Representation that describes the fulfillability query
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        queryFulfillability(body: FulfillabilityQuery, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Fulfillability> {
            const localVarFetchArgs = DOMSCheckoutOptionsApiFetchParamCreator(configuration).queryFulfillability(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated: use /api/promises instead
         * @summary Provides information which kind of fulfillment is possible under given circumstances.
         * @param {FulfillabilityClickAndCollectQuery} body Representation that describes the fulfillability query
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        queryFulfillabilityClickAndCollect(body: FulfillabilityClickAndCollectQuery, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FulfillabilityResult> {
            const localVarFetchArgs = DOMSCheckoutOptionsApiFetchParamCreator(configuration).queryFulfillabilityClickAndCollect(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated: use /api/promises instead
         * @summary Provides information which kind of fulfillment is possible under given circumstances.
         * @param {FulfillabilityShipFromStoreQuery} body Representation that describes the fulfillability query
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        queryFulfillabilityShipFromStore(body: FulfillabilityShipFromStoreQuery, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FulfillabilityResult> {
            const localVarFetchArgs = DOMSCheckoutOptionsApiFetchParamCreator(configuration).queryFulfillabilityShipFromStore(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * DOMSCheckoutOptionsApi - factory interface
 * @export
 */
export const DOMSCheckoutOptionsApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary This endpoint is to be used to get information about the possible delivery of items
         * @param {CheckoutOptionsDeliveryTimePointRequest} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        checkoutOptionsTimepoint(body: CheckoutOptionsDeliveryTimePointRequest, options?: any) {
            return DOMSCheckoutOptionsApiFp(configuration).checkoutOptionsTimepoint(body, options)(fetch, basePath);
        },
        /**
         * The list of items depicts the items you would like to get information about their earliest possbile delivery. The provided list of tenant article ids are considered individual (as if not in a basket together, but seperately ordered). Additionally you can add information about the address these items should be delivered to to further refine the response.
         * @summary delivery/earliest
         * @param {CheckoutOptionsDeliveryEarliestRequest} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        checkoutoptionDeliveryEarliest(body: CheckoutOptionsDeliveryEarliestRequest, options?: any) {
            return DOMSCheckoutOptionsApiFp(configuration).checkoutoptionDeliveryEarliest(body, options)(fetch, basePath);
        },
        /**
         * The basket attribute depicts the items you would like to get details about their possbile delivery. All the provided tenantArticleIds within the basket are considered together (as if they are in the same basket/order). Additionally you can add information about the address these items should be delivered to to further refine the quality of the response.
         * @summary delivery/timeperiod
         * @param {CheckoutOptionsDeliveryTimePeriodRequest} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        checkoutoptionDeliveryTimePeriod(body: CheckoutOptionsDeliveryTimePeriodRequest, options?: any) {
            return DOMSCheckoutOptionsApiFp(configuration).checkoutoptionDeliveryTimePeriod(body, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated: use /api/promises instead
         * @summary Provides information which kind of fulfillment is possible under given circumstances.
         * @param {FulfillabilityQuery} body Representation that describes the fulfillability query
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        queryFulfillability(body: FulfillabilityQuery, options?: any) {
            return DOMSCheckoutOptionsApiFp(configuration).queryFulfillability(body, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated: use /api/promises instead
         * @summary Provides information which kind of fulfillment is possible under given circumstances.
         * @param {FulfillabilityClickAndCollectQuery} body Representation that describes the fulfillability query
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        queryFulfillabilityClickAndCollect(body: FulfillabilityClickAndCollectQuery, options?: any) {
            return DOMSCheckoutOptionsApiFp(configuration).queryFulfillabilityClickAndCollect(body, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated: use /api/promises instead
         * @summary Provides information which kind of fulfillment is possible under given circumstances.
         * @param {FulfillabilityShipFromStoreQuery} body Representation that describes the fulfillability query
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        queryFulfillabilityShipFromStore(body: FulfillabilityShipFromStoreQuery, options?: any) {
            return DOMSCheckoutOptionsApiFp(configuration).queryFulfillabilityShipFromStore(body, options)(fetch, basePath);
        },
    };
};

/**
 * DOMSCheckoutOptionsApi - object-oriented interface
 * @export
 * @class DOMSCheckoutOptionsApi
 * @extends {BaseAPI}
 */
export class DOMSCheckoutOptionsApi extends BaseAPI {
    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary This endpoint is to be used to get information about the possible delivery of items
     * @param {CheckoutOptionsDeliveryTimePointRequest} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSCheckoutOptionsApi
     */
    public checkoutOptionsTimepoint(body: CheckoutOptionsDeliveryTimePointRequest, options?: any) {
        return DOMSCheckoutOptionsApiFp(this.configuration).checkoutOptionsTimepoint(body, options)(this.fetch, this.basePath);
    }

    /**
     * The list of items depicts the items you would like to get information about their earliest possbile delivery. The provided list of tenant article ids are considered individual (as if not in a basket together, but seperately ordered). Additionally you can add information about the address these items should be delivered to to further refine the response.
     * @summary delivery/earliest
     * @param {CheckoutOptionsDeliveryEarliestRequest} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSCheckoutOptionsApi
     */
    public checkoutoptionDeliveryEarliest(body: CheckoutOptionsDeliveryEarliestRequest, options?: any) {
        return DOMSCheckoutOptionsApiFp(this.configuration).checkoutoptionDeliveryEarliest(body, options)(this.fetch, this.basePath);
    }

    /**
     * The basket attribute depicts the items you would like to get details about their possbile delivery. All the provided tenantArticleIds within the basket are considered together (as if they are in the same basket/order). Additionally you can add information about the address these items should be delivered to to further refine the quality of the response.
     * @summary delivery/timeperiod
     * @param {CheckoutOptionsDeliveryTimePeriodRequest} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSCheckoutOptionsApi
     */
    public checkoutoptionDeliveryTimePeriod(body: CheckoutOptionsDeliveryTimePeriodRequest, options?: any) {
        return DOMSCheckoutOptionsApiFp(this.configuration).checkoutoptionDeliveryTimePeriod(body, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated: use /api/promises instead
     * @summary Provides information which kind of fulfillment is possible under given circumstances.
     * @param {FulfillabilityQuery} body Representation that describes the fulfillability query
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSCheckoutOptionsApi
     */
    public queryFulfillability(body: FulfillabilityQuery, options?: any) {
        return DOMSCheckoutOptionsApiFp(this.configuration).queryFulfillability(body, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated: use /api/promises instead
     * @summary Provides information which kind of fulfillment is possible under given circumstances.
     * @param {FulfillabilityClickAndCollectQuery} body Representation that describes the fulfillability query
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSCheckoutOptionsApi
     */
    public queryFulfillabilityClickAndCollect(body: FulfillabilityClickAndCollectQuery, options?: any) {
        return DOMSCheckoutOptionsApiFp(this.configuration).queryFulfillabilityClickAndCollect(body, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated: use /api/promises instead
     * @summary Provides information which kind of fulfillment is possible under given circumstances.
     * @param {FulfillabilityShipFromStoreQuery} body Representation that describes the fulfillability query
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSCheckoutOptionsApi
     */
    public queryFulfillabilityShipFromStore(body: FulfillabilityShipFromStoreQuery, options?: any) {
        return DOMSCheckoutOptionsApiFp(this.configuration).queryFulfillabilityShipFromStore(body, options)(this.fetch, this.basePath);
    }

}
/**
 * DOMSOrdersApi - fetch parameter creator
 * @export
 */
export const DOMSOrdersApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *
         * @summary Add a new order for future fulfillment
         * @param {OrderForCreation} body Order object supplied by your shop instance
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addOrder(body: OrderForCreation, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling addOrder.');
            }
            const localVarPath = `/api/orders`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"OrderForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated: Use /actions with \"CANCEL\" instead.
         * @summary Cancel an order with the given ID
         * @param {string} orderId ID of order you want to cancel
         * @param {OrderIdCancelBody} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        cancelOrder(orderId: string, body?: OrderIdCancelBody, options: any = {}): FetchArgs {
            // verify required parameter 'orderId' is not null or undefined
            if (orderId === null || orderId === undefined) {
                throw new RequiredError('orderId','Required parameter orderId was null or undefined when calling cancelOrder.');
            }
            const localVarPath = `/api/orders/{orderId}/cancel`
                .replace(`{${"orderId"}}`, encodeURIComponent(String(orderId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"OrderIdCancelBody" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Return all orders
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {string} [tenantOrderId] filter orders by tenantOrderId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllOrders(startAfterId?: string, size?: number, tenantOrderId?: string, options: any = {}): FetchArgs {
            const localVarPath = `/api/orders`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            if (tenantOrderId !== undefined) {
                localVarQueryParameter['tenantOrderId'] = tenantOrderId;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a order with the given ID
         * @param {string} orderId ID of order you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOrder(orderId: string, options: any = {}): FetchArgs {
            // verify required parameter 'orderId' is not null or undefined
            if (orderId === null || orderId === undefined) {
                throw new RequiredError('orderId','Required parameter orderId was null or undefined when calling getOrder.');
            }
            const localVarPath = `/api/orders/{orderId}`
                .replace(`{${"orderId"}}`, encodeURIComponent(String(orderId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Read tag configuration for orders
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOrderTagConfiguration(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/tags/order`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a tenant promises config
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPromisesConfiguration(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/promises`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Call a single action on a given order
         * @param {string} orderId Reference to the order you want to call the action for
         * @param {OrderActionsParameter} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        orderAction(orderId: string, body?: OrderActionsParameter, options: any = {}): FetchArgs {
            // verify required parameter 'orderId' is not null or undefined
            if (orderId === null || orderId === undefined) {
                throw new RequiredError('orderId','Required parameter orderId was null or undefined when calling orderAction.');
            }
            const localVarPath = `/api/orders/{orderId}/actions`
                .replace(`{${"orderId"}}`, encodeURIComponent(String(orderId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"OrderActionsParameter" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Evaluate a checkout options input against the DOMS
         * @param {CheckoutOptionsInput} body The CheckoutOptionsInput
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postCheckoutOptions(body: CheckoutOptionsInput, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling postCheckoutOptions.');
            }
            const localVarPath = `/api/promises/checkoutoptions`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"CheckoutOptionsInput" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Add a new order for future fulfillment
         * @param {OrderForCreation} body Order object supplied by your shop instance
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postDeliveryPromise(body: OrderForCreation, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling postDeliveryPromise.');
            }
            const localVarPath = `/api/promises/deliverypromise`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"OrderForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Change the tag configuration for orders
         * @param {OrderTagConfiguration} body Desired Tag Configuration for orders
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putOrderTagConfigurations(body: OrderTagConfiguration, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putOrderTagConfigurations.');
            }
            const localVarPath = `/api/configurations/tags/order`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"OrderTagConfiguration" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Change the tenant wide promises configuration
         * @param {PromisesConfiguration} body Desired promises configuration to put
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putPromisesConfiguration(body: PromisesConfiguration, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putPromisesConfiguration.');
            }
            const localVarPath = `/api/configurations/promises`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"PromisesConfiguration" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * DOMSOrdersApi - functional programming interface
 * @export
 */
export const DOMSOrdersApiFp = function(configuration?: Configuration) {
    return {
        /**
         *
         * @summary Add a new order for future fulfillment
         * @param {OrderForCreation} body Order object supplied by your shop instance
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addOrder(body: OrderForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Order> {
            const localVarFetchArgs = DOMSOrdersApiFetchParamCreator(configuration).addOrder(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated: Use /actions with \"CANCEL\" instead.
         * @summary Cancel an order with the given ID
         * @param {string} orderId ID of order you want to cancel
         * @param {OrderIdCancelBody} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        cancelOrder(orderId: string, body?: OrderIdCancelBody, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Order> {
            const localVarFetchArgs = DOMSOrdersApiFetchParamCreator(configuration).cancelOrder(orderId, body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Return all orders
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {string} [tenantOrderId] filter orders by tenantOrderId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllOrders(startAfterId?: string, size?: number, tenantOrderId?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<StrippedOrders> {
            const localVarFetchArgs = DOMSOrdersApiFetchParamCreator(configuration).getAllOrders(startAfterId, size, tenantOrderId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a order with the given ID
         * @param {string} orderId ID of order you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOrder(orderId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Order> {
            const localVarFetchArgs = DOMSOrdersApiFetchParamCreator(configuration).getOrder(orderId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Read tag configuration for orders
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOrderTagConfiguration(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<OrderTagConfiguration> {
            const localVarFetchArgs = DOMSOrdersApiFetchParamCreator(configuration).getOrderTagConfiguration(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a tenant promises config
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPromisesConfiguration(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PromisesConfiguration> {
            const localVarFetchArgs = DOMSOrdersApiFetchParamCreator(configuration).getPromisesConfiguration(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Call a single action on a given order
         * @param {string} orderId Reference to the order you want to call the action for
         * @param {OrderActionsParameter} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        orderAction(orderId: string, body?: OrderActionsParameter, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Order> {
            const localVarFetchArgs = DOMSOrdersApiFetchParamCreator(configuration).orderAction(orderId, body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Evaluate a checkout options input against the DOMS
         * @param {CheckoutOptionsInput} body The CheckoutOptionsInput
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postCheckoutOptions(body: CheckoutOptionsInput, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<InlineResponse2001> {
            const localVarFetchArgs = DOMSOrdersApiFetchParamCreator(configuration).postCheckoutOptions(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Add a new order for future fulfillment
         * @param {OrderForCreation} body Order object supplied by your shop instance
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postDeliveryPromise(body: OrderForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ResponseForDeliveryPromise> {
            const localVarFetchArgs = DOMSOrdersApiFetchParamCreator(configuration).postDeliveryPromise(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Change the tag configuration for orders
         * @param {OrderTagConfiguration} body Desired Tag Configuration for orders
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putOrderTagConfigurations(body: OrderTagConfiguration, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<OrderTagConfiguration> {
            const localVarFetchArgs = DOMSOrdersApiFetchParamCreator(configuration).putOrderTagConfigurations(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Change the tenant wide promises configuration
         * @param {PromisesConfiguration} body Desired promises configuration to put
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putPromisesConfiguration(body: PromisesConfiguration, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PromisesConfiguration> {
            const localVarFetchArgs = DOMSOrdersApiFetchParamCreator(configuration).putPromisesConfiguration(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * DOMSOrdersApi - factory interface
 * @export
 */
export const DOMSOrdersApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         *
         * @summary Add a new order for future fulfillment
         * @param {OrderForCreation} body Order object supplied by your shop instance
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addOrder(body: OrderForCreation, options?: any) {
            return DOMSOrdersApiFp(configuration).addOrder(body, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated: Use /actions with \"CANCEL\" instead.
         * @summary Cancel an order with the given ID
         * @param {string} orderId ID of order you want to cancel
         * @param {OrderIdCancelBody} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        cancelOrder(orderId: string, body?: OrderIdCancelBody, options?: any) {
            return DOMSOrdersApiFp(configuration).cancelOrder(orderId, body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Return all orders
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {string} [tenantOrderId] filter orders by tenantOrderId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllOrders(startAfterId?: string, size?: number, tenantOrderId?: string, options?: any) {
            return DOMSOrdersApiFp(configuration).getAllOrders(startAfterId, size, tenantOrderId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a order with the given ID
         * @param {string} orderId ID of order you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOrder(orderId: string, options?: any) {
            return DOMSOrdersApiFp(configuration).getOrder(orderId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Read tag configuration for orders
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOrderTagConfiguration(options?: any) {
            return DOMSOrdersApiFp(configuration).getOrderTagConfiguration(options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a tenant promises config
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPromisesConfiguration(options?: any) {
            return DOMSOrdersApiFp(configuration).getPromisesConfiguration(options)(fetch, basePath);
        },
        /**
         *
         * @summary Call a single action on a given order
         * @param {string} orderId Reference to the order you want to call the action for
         * @param {OrderActionsParameter} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        orderAction(orderId: string, body?: OrderActionsParameter, options?: any) {
            return DOMSOrdersApiFp(configuration).orderAction(orderId, body, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Evaluate a checkout options input against the DOMS
         * @param {CheckoutOptionsInput} body The CheckoutOptionsInput
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postCheckoutOptions(body: CheckoutOptionsInput, options?: any) {
            return DOMSOrdersApiFp(configuration).postCheckoutOptions(body, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Add a new order for future fulfillment
         * @param {OrderForCreation} body Order object supplied by your shop instance
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postDeliveryPromise(body: OrderForCreation, options?: any) {
            return DOMSOrdersApiFp(configuration).postDeliveryPromise(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Change the tag configuration for orders
         * @param {OrderTagConfiguration} body Desired Tag Configuration for orders
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putOrderTagConfigurations(body: OrderTagConfiguration, options?: any) {
            return DOMSOrdersApiFp(configuration).putOrderTagConfigurations(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Change the tenant wide promises configuration
         * @param {PromisesConfiguration} body Desired promises configuration to put
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putPromisesConfiguration(body: PromisesConfiguration, options?: any) {
            return DOMSOrdersApiFp(configuration).putPromisesConfiguration(body, options)(fetch, basePath);
        },
    };
};

/**
 * DOMSOrdersApi - object-oriented interface
 * @export
 * @class DOMSOrdersApi
 * @extends {BaseAPI}
 */
export class DOMSOrdersApi extends BaseAPI {
    /**
     *
     * @summary Add a new order for future fulfillment
     * @param {OrderForCreation} body Order object supplied by your shop instance
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSOrdersApi
     */
    public addOrder(body: OrderForCreation, options?: any) {
        return DOMSOrdersApiFp(this.configuration).addOrder(body, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated: Use /actions with \"CANCEL\" instead.
     * @summary Cancel an order with the given ID
     * @param {string} orderId ID of order you want to cancel
     * @param {OrderIdCancelBody} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSOrdersApi
     */
    public cancelOrder(orderId: string, body?: OrderIdCancelBody, options?: any) {
        return DOMSOrdersApiFp(this.configuration).cancelOrder(orderId, body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Return all orders
     * @param {string} [startAfterId] all entities after given Id
     * @param {number} [size] number of entities to show
     * @param {string} [tenantOrderId] filter orders by tenantOrderId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSOrdersApi
     */
    public getAllOrders(startAfterId?: string, size?: number, tenantOrderId?: string, options?: any) {
        return DOMSOrdersApiFp(this.configuration).getAllOrders(startAfterId, size, tenantOrderId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a order with the given ID
     * @param {string} orderId ID of order you want to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSOrdersApi
     */
    public getOrder(orderId: string, options?: any) {
        return DOMSOrdersApiFp(this.configuration).getOrder(orderId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Read tag configuration for orders
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSOrdersApi
     */
    public getOrderTagConfiguration(options?: any) {
        return DOMSOrdersApiFp(this.configuration).getOrderTagConfiguration(options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a tenant promises config
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSOrdersApi
     */
    public getPromisesConfiguration(options?: any) {
        return DOMSOrdersApiFp(this.configuration).getPromisesConfiguration(options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Call a single action on a given order
     * @param {string} orderId Reference to the order you want to call the action for
     * @param {OrderActionsParameter} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSOrdersApi
     */
    public orderAction(orderId: string, body?: OrderActionsParameter, options?: any) {
        return DOMSOrdersApiFp(this.configuration).orderAction(orderId, body, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Evaluate a checkout options input against the DOMS
     * @param {CheckoutOptionsInput} body The CheckoutOptionsInput
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSOrdersApi
     */
    public postCheckoutOptions(body: CheckoutOptionsInput, options?: any) {
        return DOMSOrdersApiFp(this.configuration).postCheckoutOptions(body, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Add a new order for future fulfillment
     * @param {OrderForCreation} body Order object supplied by your shop instance
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSOrdersApi
     */
    public postDeliveryPromise(body: OrderForCreation, options?: any) {
        return DOMSOrdersApiFp(this.configuration).postDeliveryPromise(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Change the tag configuration for orders
     * @param {OrderTagConfiguration} body Desired Tag Configuration for orders
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSOrdersApi
     */
    public putOrderTagConfigurations(body: OrderTagConfiguration, options?: any) {
        return DOMSOrdersApiFp(this.configuration).putOrderTagConfigurations(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Change the tenant wide promises configuration
     * @param {PromisesConfiguration} body Desired promises configuration to put
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSOrdersApi
     */
    public putPromisesConfiguration(body: PromisesConfiguration, options?: any) {
        return DOMSOrdersApiFp(this.configuration).putPromisesConfiguration(body, options)(this.fetch, this.basePath);
    }

}
/**
 * DOMSRoutingPlansApi - fetch parameter creator
 * @export
 */
export const DOMSRoutingPlansApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Delete a reroute description
         * @param {string} rerouteDescriptionId ID of the reroute description you intend to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteRerouteDescription(rerouteDescriptionId: string, options: any = {}): FetchArgs {
            // verify required parameter 'rerouteDescriptionId' is not null or undefined
            if (rerouteDescriptionId === null || rerouteDescriptionId === undefined) {
                throw new RequiredError('rerouteDescriptionId','Required parameter rerouteDescriptionId was null or undefined when calling deleteRerouteDescription.');
            }
            const localVarPath = `/api/reroutedescriptions/{rerouteDescriptionId}`
                .replace(`{${"rerouteDescriptionId"}}`, encodeURIComponent(String(rerouteDescriptionId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Delete a toolkit fence
         * @param {string} toolkitFenceId ID of the toolkit fence you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteToolkitFence(toolkitFenceId: string, options: any = {}): FetchArgs {
            // verify required parameter 'toolkitFenceId' is not null or undefined
            if (toolkitFenceId === null || toolkitFenceId === undefined) {
                throw new RequiredError('toolkitFenceId','Required parameter toolkitFenceId was null or undefined when calling deleteToolkitFence.');
            }
            const localVarPath = `/api/configurations/routing/toolkit/fences/{toolkitFenceId}`
                .replace(`{${"toolkitFenceId"}}`, encodeURIComponent(String(toolkitFenceId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Delete a toolkit rating
         * @param {string} toolkitRatingId ID of the toolkit rating you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteToolkitRating(toolkitRatingId: string, options: any = {}): FetchArgs {
            // verify required parameter 'toolkitRatingId' is not null or undefined
            if (toolkitRatingId === null || toolkitRatingId === undefined) {
                throw new RequiredError('toolkitRatingId','Required parameter toolkitRatingId was null or undefined when calling deleteToolkitRating.');
            }
            const localVarPath = `/api/configurations/routing/toolkit/ratings/{toolkitRatingId}`
                .replace(`{${"toolkitRatingId"}}`, encodeURIComponent(String(toolkitRatingId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a tenant capacity planning timeframe configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCapacityPlanningTimeframeConfiguration(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/capacityplanningtimeframe`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get decision log of a routing plan with the given ID
         * @param {string} routingplanId ID of the routing plan you want to get it&#x27;s decision log
         * @param {number} routingRun ID of the decision log you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDecisionlog(routingplanId: string, routingRun: number, options: any = {}): FetchArgs {
            // verify required parameter 'routingplanId' is not null or undefined
            if (routingplanId === null || routingplanId === undefined) {
                throw new RequiredError('routingplanId','Required parameter routingplanId was null or undefined when calling getDecisionlog.');
            }
            // verify required parameter 'routingRun' is not null or undefined
            if (routingRun === null || routingRun === undefined) {
                throw new RequiredError('routingRun','Required parameter routingRun was null or undefined when calling getDecisionlog.');
            }
            const localVarPath = `/api/routingplans/{routingplanId}/decisionlogs/{routingRun}`
                .replace(`{${"routingplanId"}}`, encodeURIComponent(String(routingplanId)))
                .replace(`{${"routingRun"}}`, encodeURIComponent(String(routingRun)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated, use GlobalManualRerouteConfiguration in /api/configurations/routing
         * @summary Get a tenant manual order reroute config
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getManualRerouteConfiguration(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/routing/manualreroute`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get the tenant wide order routing configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOrderRoutingConfiguration(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/orderrouting`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a reroute description with the given key
         * @param {string} rerouteDescriptionId Id of the reroute description you wish to retrieve
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRerouteDescriptionById(rerouteDescriptionId: string, options: any = {}): FetchArgs {
            // verify required parameter 'rerouteDescriptionId' is not null or undefined
            if (rerouteDescriptionId === null || rerouteDescriptionId === undefined) {
                throw new RequiredError('rerouteDescriptionId','Required parameter rerouteDescriptionId was null or undefined when calling getRerouteDescriptionById.');
            }
            const localVarPath = `/api/reroutedescriptions/{rerouteDescriptionId}`
                .replace(`{${"rerouteDescriptionId"}}`, encodeURIComponent(String(rerouteDescriptionId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a list with all reroute descriptions
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRerouteDescriptions(startAfterId?: string, size?: number, options: any = {}): FetchArgs {
            const localVarPath = `/api/reroutedescriptions`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a tenant reroute short pick config
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRerouteShortPickConfiguration(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/routing/rerouteshortpick`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a tenant reroute time triggered config
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRerouteTimeTriggeredConfiguration(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/routing/reroutetimetriggered`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a tenant routing config
         * @param {number} [version] Provide  to get an older version of the configuration
         * @param {string} [locale] Provide the localized names and descriptions for the routing configuration. If not provided the default locale is used., for example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRoutingConfiguration(version?: number, locale?: string, options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/routing`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (version !== undefined) {
                localVarQueryParameter['version'] = version;
            }

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a routing plan with the given ID
         * @param {string} routingplanId ID of the routing plan want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRoutingPlan(routingplanId: string, options: any = {}): FetchArgs {
            // verify required parameter 'routingplanId' is not null or undefined
            if (routingplanId === null || routingplanId === undefined) {
                throw new RequiredError('routingplanId','Required parameter routingplanId was null or undefined when calling getRoutingPlan.');
            }
            const localVarPath = `/api/routingplans/{routingplanId}`
                .replace(`{${"routingplanId"}}`, encodeURIComponent(String(routingplanId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a routing plan regarding to orderRef
         * @param {string} [orderRef] Reference to the order you want to get the corresponding routing plan.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRoutingPlanBaseOnOrderRef(orderRef?: string, options: any = {}): FetchArgs {
            const localVarPath = `/api/routingplans`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (orderRef !== undefined) {
                localVarQueryParameter['orderRef'] = orderRef;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a tag with the given key
         * @param {string} toolkitFenceId Id of the toolkit fence you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getToolkitFenceById(toolkitFenceId: string, options: any = {}): FetchArgs {
            // verify required parameter 'toolkitFenceId' is not null or undefined
            if (toolkitFenceId === null || toolkitFenceId === undefined) {
                throw new RequiredError('toolkitFenceId','Required parameter toolkitFenceId was null or undefined when calling getToolkitFenceById.');
            }
            const localVarPath = `/api/configurations/routing/toolkit/fences/{toolkitFenceId}`
                .replace(`{${"toolkitFenceId"}}`, encodeURIComponent(String(toolkitFenceId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Returns all toolkit fences
         * @param {string} [startAfterId] all entities
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getToolkitFences(startAfterId?: string, size?: number, options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/routing/toolkit/fences`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a tag with the given key
         * @param {string} toolkitRatingId Id of the tag you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getToolkitRatingById(toolkitRatingId: string, options: any = {}): FetchArgs {
            // verify required parameter 'toolkitRatingId' is not null or undefined
            if (toolkitRatingId === null || toolkitRatingId === undefined) {
                throw new RequiredError('toolkitRatingId','Required parameter toolkitRatingId was null or undefined when calling getToolkitRatingById.');
            }
            const localVarPath = `/api/configurations/routing/toolkit/ratings/{toolkitRatingId}`
                .replace(`{${"toolkitRatingId"}}`, encodeURIComponent(String(toolkitRatingId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Returns all toolkit ratings
         * @param {string} [startAfterId] all entities
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getToolkitRatings(startAfterId?: string, size?: number, options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/routing/toolkit/ratings`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Important: You can only change the name and the description for fences, ratings and prioritizations of type CUSTOM. For Fences and Ratings provided by fulfillmenttools you can not change the fields 'name' and 'description'.
         * @summary Patches routing configuration
         * @param {RoutingConfigurationsPatchActions} body Patch set
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchRoutingConfig(body: RoutingConfigurationsPatchActions, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling patchRoutingConfig.');
            }
            const localVarPath = `/api/configurations/routing`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"RoutingConfigurationsPatchActions" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Patches a routing plan with the given ID
         * @param {RoutingPlanPatchActions} body Patch set
         * @param {string} routingplanId ID of routing plan you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchRoutingPlan(body: RoutingPlanPatchActions, routingplanId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling patchRoutingPlan.');
            }
            // verify required parameter 'routingplanId' is not null or undefined
            if (routingplanId === null || routingplanId === undefined) {
                throw new RequiredError('routingplanId','Required parameter routingplanId was null or undefined when calling patchRoutingPlan.');
            }
            const localVarPath = `/api/routingplans/{routingplanId}`
                .replace(`{${"routingplanId"}}`, encodeURIComponent(String(routingplanId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"RoutingPlanPatchActions" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Post a new RerouteDescription
         * @param {RerouteDescriptionForCreation} body The RerouteDescription
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postRerouteDescription(body: RerouteDescriptionForCreation, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling postRerouteDescription.');
            }
            const localVarPath = `/api/reroutedescriptions`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"RerouteDescriptionForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Creates a toolkit fence
         * @param {ToolkitFenceForCreation} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postToolkitFence(body?: ToolkitFenceForCreation, options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/routing/toolkit/fences`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ToolkitFenceForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Creates a toolkit rating
         * @param {ToolkitRatingForCreation} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postToolkitRating(body?: ToolkitRatingForCreation, options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/routing/toolkit/ratings`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ToolkitRatingForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Update capacity planning timeframe configuration of a tenant
         * @param {CapacityPlanningTimeframeConfiguration} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putCapacityPlanningTimeframeConfiguration(body: CapacityPlanningTimeframeConfiguration, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putCapacityPlanningTimeframeConfiguration.');
            }
            const localVarPath = `/api/configurations/capacityplanningtimeframe`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"CapacityPlanningTimeframeConfiguration" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated, use GlobalManualRerouteConfiguration in /api/configurations/routing
         * @summary Update manual order reroute configuration of a tenant
         * @param {ManualRerouteConfiguration} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putManualRerouteConfiguration(body: ManualRerouteConfiguration, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putManualRerouteConfiguration.');
            }
            const localVarPath = `/api/configurations/routing/manualreroute`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ManualRerouteConfiguration" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Change the tenant wide order routing configuration
         * @param {OrderRoutingConfiguration} body Desired order routing configuration to create/update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putOrderRoutingConfiguration(body: OrderRoutingConfiguration, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putOrderRoutingConfiguration.');
            }
            const localVarPath = `/api/configurations/orderrouting`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"OrderRoutingConfiguration" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Update a reroute description
         * @param {string} rerouteDescriptionId ID of the reroute description you intend to modify
         * @param {RerouteDescriptionForModification} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putRerouteDescription(rerouteDescriptionId: string, body?: RerouteDescriptionForModification, options: any = {}): FetchArgs {
            // verify required parameter 'rerouteDescriptionId' is not null or undefined
            if (rerouteDescriptionId === null || rerouteDescriptionId === undefined) {
                throw new RequiredError('rerouteDescriptionId','Required parameter rerouteDescriptionId was null or undefined when calling putRerouteDescription.');
            }
            const localVarPath = `/api/reroutedescriptions/{rerouteDescriptionId}`
                .replace(`{${"rerouteDescriptionId"}}`, encodeURIComponent(String(rerouteDescriptionId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"RerouteDescriptionForModification" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Update reroute short pick configuration of a tenant
         * @param {RerouteShortPickConfiguration} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putRerouteShortPickConfiguration(body: RerouteShortPickConfiguration, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putRerouteShortPickConfiguration.');
            }
            const localVarPath = `/api/configurations/routing/rerouteshortpick`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"RerouteShortPickConfiguration" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Update reroute time triggered configuration of a tenant
         * @param {RerouteTimeTriggeredConfiguration} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putRerouteTimeTriggeredConfiguration(body: RerouteTimeTriggeredConfiguration, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putRerouteTimeTriggeredConfiguration.');
            }
            const localVarPath = `/api/configurations/routing/reroutetimetriggered`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"RerouteTimeTriggeredConfiguration" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Important: You can only change the name and the description for fences, ratings and prioritizations of type CUSTOM. For Fences and Ratings provided by fulfillmenttools you can not change the fields 'name' and 'description'. <br> Also you can not delete an existing fulfillmenttools Fence or Rating by calling this endpoint.
         * @summary Update routing configuration of a tenant
         * @param {RoutingConfiguration} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putRoutingConfiguration(body: RoutingConfiguration, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putRoutingConfiguration.');
            }
            const localVarPath = `/api/configurations/routing`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"RoutingConfiguration" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Update a toolkit fence
         * @param {string} toolkitFenceId ID of the toolkit fence you want to update
         * @param {ToolkitFenceForModification} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putToolkitFence(toolkitFenceId: string, body?: ToolkitFenceForModification, options: any = {}): FetchArgs {
            // verify required parameter 'toolkitFenceId' is not null or undefined
            if (toolkitFenceId === null || toolkitFenceId === undefined) {
                throw new RequiredError('toolkitFenceId','Required parameter toolkitFenceId was null or undefined when calling putToolkitFence.');
            }
            const localVarPath = `/api/configurations/routing/toolkit/fences/{toolkitFenceId}`
                .replace(`{${"toolkitFenceId"}}`, encodeURIComponent(String(toolkitFenceId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ToolkitFenceForModification" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Update a toolkit rating
         * @param {string} toolkitRatingId ID of the toolkit rating you want to update
         * @param {ToolkitRatingForModification} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putToolkitRating(toolkitRatingId: string, body?: ToolkitRatingForModification, options: any = {}): FetchArgs {
            // verify required parameter 'toolkitRatingId' is not null or undefined
            if (toolkitRatingId === null || toolkitRatingId === undefined) {
                throw new RequiredError('toolkitRatingId','Required parameter toolkitRatingId was null or undefined when calling putToolkitRating.');
            }
            const localVarPath = `/api/configurations/routing/toolkit/ratings/{toolkitRatingId}`
                .replace(`{${"toolkitRatingId"}}`, encodeURIComponent(String(toolkitRatingId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ToolkitRatingForModification" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Triggers rerouting of failed routing plans
         * @param {RerouteRoutingPlan} body An object, that can contain either lists of identifiers for which a reroute should be executed or an option to reroute every reroutable plan.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        reRoute(body: RerouteRoutingPlan, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling reRoute.');
            }
            const localVarPath = `/api/routing/commands/reroute`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"RerouteRoutingPlan" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * DOMSRoutingPlansApi - functional programming interface
 * @export
 */
export const DOMSRoutingPlansApiFp = function(configuration?: Configuration) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Delete a reroute description
         * @param {string} rerouteDescriptionId ID of the reroute description you intend to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteRerouteDescription(rerouteDescriptionId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).deleteRerouteDescription(rerouteDescriptionId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Delete a toolkit fence
         * @param {string} toolkitFenceId ID of the toolkit fence you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteToolkitFence(toolkitFenceId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).deleteToolkitFence(toolkitFenceId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Delete a toolkit rating
         * @param {string} toolkitRatingId ID of the toolkit rating you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteToolkitRating(toolkitRatingId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).deleteToolkitRating(toolkitRatingId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a tenant capacity planning timeframe configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCapacityPlanningTimeframeConfiguration(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CapacityPlanningTimeframeConfiguration> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).getCapacityPlanningTimeframeConfiguration(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get decision log of a routing plan with the given ID
         * @param {string} routingplanId ID of the routing plan you want to get it&#x27;s decision log
         * @param {number} routingRun ID of the decision log you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDecisionlog(routingplanId: string, routingRun: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<DecisionLog> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).getDecisionlog(routingplanId, routingRun, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated, use GlobalManualRerouteConfiguration in /api/configurations/routing
         * @summary Get a tenant manual order reroute config
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getManualRerouteConfiguration(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ManualRerouteConfiguration> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).getManualRerouteConfiguration(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get the tenant wide order routing configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOrderRoutingConfiguration(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<OrderRoutingConfiguration> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).getOrderRoutingConfiguration(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a reroute description with the given key
         * @param {string} rerouteDescriptionId Id of the reroute description you wish to retrieve
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRerouteDescriptionById(rerouteDescriptionId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<RerouteDescription> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).getRerouteDescriptionById(rerouteDescriptionId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a list with all reroute descriptions
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRerouteDescriptions(startAfterId?: string, size?: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<RerouteDescriptions> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).getRerouteDescriptions(startAfterId, size, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a tenant reroute short pick config
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRerouteShortPickConfiguration(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<RerouteShortPickConfiguration> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).getRerouteShortPickConfiguration(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a tenant reroute time triggered config
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRerouteTimeTriggeredConfiguration(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<RerouteTimeTriggeredConfiguration> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).getRerouteTimeTriggeredConfiguration(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a tenant routing config
         * @param {number} [version] Provide  to get an older version of the configuration
         * @param {string} [locale] Provide the localized names and descriptions for the routing configuration. If not provided the default locale is used., for example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRoutingConfiguration(version?: number, locale?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<RoutingConfiguration> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).getRoutingConfiguration(version, locale, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a routing plan with the given ID
         * @param {string} routingplanId ID of the routing plan want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRoutingPlan(routingplanId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<RoutingPlan> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).getRoutingPlan(routingplanId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a routing plan regarding to orderRef
         * @param {string} [orderRef] Reference to the order you want to get the corresponding routing plan.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRoutingPlanBaseOnOrderRef(orderRef?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<RoutingPlans> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).getRoutingPlanBaseOnOrderRef(orderRef, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a tag with the given key
         * @param {string} toolkitFenceId Id of the toolkit fence you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getToolkitFenceById(toolkitFenceId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ToolkitFence> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).getToolkitFenceById(toolkitFenceId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Returns all toolkit fences
         * @param {string} [startAfterId] all entities
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getToolkitFences(startAfterId?: string, size?: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ToolkitFencesTransporter> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).getToolkitFences(startAfterId, size, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a tag with the given key
         * @param {string} toolkitRatingId Id of the tag you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getToolkitRatingById(toolkitRatingId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ToolkitRating> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).getToolkitRatingById(toolkitRatingId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Returns all toolkit ratings
         * @param {string} [startAfterId] all entities
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getToolkitRatings(startAfterId?: string, size?: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ToolkitRatingTransporter> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).getToolkitRatings(startAfterId, size, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * Important: You can only change the name and the description for fences, ratings and prioritizations of type CUSTOM. For Fences and Ratings provided by fulfillmenttools you can not change the fields 'name' and 'description'.
         * @summary Patches routing configuration
         * @param {RoutingConfigurationsPatchActions} body Patch set
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchRoutingConfig(body: RoutingConfigurationsPatchActions, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<RoutingConfiguration> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).patchRoutingConfig(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Patches a routing plan with the given ID
         * @param {RoutingPlanPatchActions} body Patch set
         * @param {string} routingplanId ID of routing plan you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchRoutingPlan(body: RoutingPlanPatchActions, routingplanId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<RoutingPlan> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).patchRoutingPlan(body, routingplanId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Post a new RerouteDescription
         * @param {RerouteDescriptionForCreation} body The RerouteDescription
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postRerouteDescription(body: RerouteDescriptionForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<RerouteDescription> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).postRerouteDescription(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Creates a toolkit fence
         * @param {ToolkitFenceForCreation} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postToolkitFence(body?: ToolkitFenceForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<ToolkitFence>> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).postToolkitFence(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Creates a toolkit rating
         * @param {ToolkitRatingForCreation} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postToolkitRating(body?: ToolkitRatingForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<ToolkitRating>> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).postToolkitRating(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Update capacity planning timeframe configuration of a tenant
         * @param {CapacityPlanningTimeframeConfiguration} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putCapacityPlanningTimeframeConfiguration(body: CapacityPlanningTimeframeConfiguration, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CapacityPlanningTimeframeConfiguration> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).putCapacityPlanningTimeframeConfiguration(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated, use GlobalManualRerouteConfiguration in /api/configurations/routing
         * @summary Update manual order reroute configuration of a tenant
         * @param {ManualRerouteConfiguration} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putManualRerouteConfiguration(body: ManualRerouteConfiguration, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ManualRerouteConfiguration> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).putManualRerouteConfiguration(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Change the tenant wide order routing configuration
         * @param {OrderRoutingConfiguration} body Desired order routing configuration to create/update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putOrderRoutingConfiguration(body: OrderRoutingConfiguration, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<OrderRoutingConfiguration> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).putOrderRoutingConfiguration(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Update a reroute description
         * @param {string} rerouteDescriptionId ID of the reroute description you intend to modify
         * @param {RerouteDescriptionForModification} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putRerouteDescription(rerouteDescriptionId: string, body?: RerouteDescriptionForModification, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<RerouteDescription> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).putRerouteDescription(rerouteDescriptionId, body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Update reroute short pick configuration of a tenant
         * @param {RerouteShortPickConfiguration} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putRerouteShortPickConfiguration(body: RerouteShortPickConfiguration, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<RerouteShortPickConfiguration> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).putRerouteShortPickConfiguration(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Update reroute time triggered configuration of a tenant
         * @param {RerouteTimeTriggeredConfiguration} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putRerouteTimeTriggeredConfiguration(body: RerouteTimeTriggeredConfiguration, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<RerouteTimeTriggeredConfiguration> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).putRerouteTimeTriggeredConfiguration(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * Important: You can only change the name and the description for fences, ratings and prioritizations of type CUSTOM. For Fences and Ratings provided by fulfillmenttools you can not change the fields 'name' and 'description'. <br> Also you can not delete an existing fulfillmenttools Fence or Rating by calling this endpoint.
         * @summary Update routing configuration of a tenant
         * @param {RoutingConfiguration} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putRoutingConfiguration(body: RoutingConfiguration, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<RoutingConfiguration> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).putRoutingConfiguration(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Update a toolkit fence
         * @param {string} toolkitFenceId ID of the toolkit fence you want to update
         * @param {ToolkitFenceForModification} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putToolkitFence(toolkitFenceId: string, body?: ToolkitFenceForModification, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ToolkitFence> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).putToolkitFence(toolkitFenceId, body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Update a toolkit rating
         * @param {string} toolkitRatingId ID of the toolkit rating you want to update
         * @param {ToolkitRatingForModification} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putToolkitRating(toolkitRatingId: string, body?: ToolkitRatingForModification, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ToolkitRating> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).putToolkitRating(toolkitRatingId, body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Triggers rerouting of failed routing plans
         * @param {RerouteRoutingPlan} body An object, that can contain either lists of identifiers for which a reroute should be executed or an option to reroute every reroutable plan.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        reRoute(body: RerouteRoutingPlan, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = DOMSRoutingPlansApiFetchParamCreator(configuration).reRoute(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * DOMSRoutingPlansApi - factory interface
 * @export
 */
export const DOMSRoutingPlansApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Delete a reroute description
         * @param {string} rerouteDescriptionId ID of the reroute description you intend to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteRerouteDescription(rerouteDescriptionId: string, options?: any) {
            return DOMSRoutingPlansApiFp(configuration).deleteRerouteDescription(rerouteDescriptionId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Delete a toolkit fence
         * @param {string} toolkitFenceId ID of the toolkit fence you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteToolkitFence(toolkitFenceId: string, options?: any) {
            return DOMSRoutingPlansApiFp(configuration).deleteToolkitFence(toolkitFenceId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Delete a toolkit rating
         * @param {string} toolkitRatingId ID of the toolkit rating you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteToolkitRating(toolkitRatingId: string, options?: any) {
            return DOMSRoutingPlansApiFp(configuration).deleteToolkitRating(toolkitRatingId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a tenant capacity planning timeframe configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCapacityPlanningTimeframeConfiguration(options?: any) {
            return DOMSRoutingPlansApiFp(configuration).getCapacityPlanningTimeframeConfiguration(options)(fetch, basePath);
        },
        /**
         *
         * @summary Get decision log of a routing plan with the given ID
         * @param {string} routingplanId ID of the routing plan you want to get it&#x27;s decision log
         * @param {number} routingRun ID of the decision log you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDecisionlog(routingplanId: string, routingRun: number, options?: any) {
            return DOMSRoutingPlansApiFp(configuration).getDecisionlog(routingplanId, routingRun, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated, use GlobalManualRerouteConfiguration in /api/configurations/routing
         * @summary Get a tenant manual order reroute config
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getManualRerouteConfiguration(options?: any) {
            return DOMSRoutingPlansApiFp(configuration).getManualRerouteConfiguration(options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get the tenant wide order routing configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOrderRoutingConfiguration(options?: any) {
            return DOMSRoutingPlansApiFp(configuration).getOrderRoutingConfiguration(options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a reroute description with the given key
         * @param {string} rerouteDescriptionId Id of the reroute description you wish to retrieve
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRerouteDescriptionById(rerouteDescriptionId: string, options?: any) {
            return DOMSRoutingPlansApiFp(configuration).getRerouteDescriptionById(rerouteDescriptionId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a list with all reroute descriptions
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRerouteDescriptions(startAfterId?: string, size?: number, options?: any) {
            return DOMSRoutingPlansApiFp(configuration).getRerouteDescriptions(startAfterId, size, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a tenant reroute short pick config
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRerouteShortPickConfiguration(options?: any) {
            return DOMSRoutingPlansApiFp(configuration).getRerouteShortPickConfiguration(options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a tenant reroute time triggered config
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRerouteTimeTriggeredConfiguration(options?: any) {
            return DOMSRoutingPlansApiFp(configuration).getRerouteTimeTriggeredConfiguration(options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a tenant routing config
         * @param {number} [version] Provide  to get an older version of the configuration
         * @param {string} [locale] Provide the localized names and descriptions for the routing configuration. If not provided the default locale is used., for example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRoutingConfiguration(version?: number, locale?: string, options?: any) {
            return DOMSRoutingPlansApiFp(configuration).getRoutingConfiguration(version, locale, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a routing plan with the given ID
         * @param {string} routingplanId ID of the routing plan want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRoutingPlan(routingplanId: string, options?: any) {
            return DOMSRoutingPlansApiFp(configuration).getRoutingPlan(routingplanId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a routing plan regarding to orderRef
         * @param {string} [orderRef] Reference to the order you want to get the corresponding routing plan.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRoutingPlanBaseOnOrderRef(orderRef?: string, options?: any) {
            return DOMSRoutingPlansApiFp(configuration).getRoutingPlanBaseOnOrderRef(orderRef, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a tag with the given key
         * @param {string} toolkitFenceId Id of the toolkit fence you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getToolkitFenceById(toolkitFenceId: string, options?: any) {
            return DOMSRoutingPlansApiFp(configuration).getToolkitFenceById(toolkitFenceId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Returns all toolkit fences
         * @param {string} [startAfterId] all entities
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getToolkitFences(startAfterId?: string, size?: number, options?: any) {
            return DOMSRoutingPlansApiFp(configuration).getToolkitFences(startAfterId, size, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a tag with the given key
         * @param {string} toolkitRatingId Id of the tag you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getToolkitRatingById(toolkitRatingId: string, options?: any) {
            return DOMSRoutingPlansApiFp(configuration).getToolkitRatingById(toolkitRatingId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Returns all toolkit ratings
         * @param {string} [startAfterId] all entities
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getToolkitRatings(startAfterId?: string, size?: number, options?: any) {
            return DOMSRoutingPlansApiFp(configuration).getToolkitRatings(startAfterId, size, options)(fetch, basePath);
        },
        /**
         * Important: You can only change the name and the description for fences, ratings and prioritizations of type CUSTOM. For Fences and Ratings provided by fulfillmenttools you can not change the fields 'name' and 'description'.
         * @summary Patches routing configuration
         * @param {RoutingConfigurationsPatchActions} body Patch set
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchRoutingConfig(body: RoutingConfigurationsPatchActions, options?: any) {
            return DOMSRoutingPlansApiFp(configuration).patchRoutingConfig(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Patches a routing plan with the given ID
         * @param {RoutingPlanPatchActions} body Patch set
         * @param {string} routingplanId ID of routing plan you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchRoutingPlan(body: RoutingPlanPatchActions, routingplanId: string, options?: any) {
            return DOMSRoutingPlansApiFp(configuration).patchRoutingPlan(body, routingplanId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Post a new RerouteDescription
         * @param {RerouteDescriptionForCreation} body The RerouteDescription
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postRerouteDescription(body: RerouteDescriptionForCreation, options?: any) {
            return DOMSRoutingPlansApiFp(configuration).postRerouteDescription(body, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Creates a toolkit fence
         * @param {ToolkitFenceForCreation} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postToolkitFence(body?: ToolkitFenceForCreation, options?: any) {
            return DOMSRoutingPlansApiFp(configuration).postToolkitFence(body, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Creates a toolkit rating
         * @param {ToolkitRatingForCreation} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postToolkitRating(body?: ToolkitRatingForCreation, options?: any) {
            return DOMSRoutingPlansApiFp(configuration).postToolkitRating(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Update capacity planning timeframe configuration of a tenant
         * @param {CapacityPlanningTimeframeConfiguration} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putCapacityPlanningTimeframeConfiguration(body: CapacityPlanningTimeframeConfiguration, options?: any) {
            return DOMSRoutingPlansApiFp(configuration).putCapacityPlanningTimeframeConfiguration(body, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated, use GlobalManualRerouteConfiguration in /api/configurations/routing
         * @summary Update manual order reroute configuration of a tenant
         * @param {ManualRerouteConfiguration} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putManualRerouteConfiguration(body: ManualRerouteConfiguration, options?: any) {
            return DOMSRoutingPlansApiFp(configuration).putManualRerouteConfiguration(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Change the tenant wide order routing configuration
         * @param {OrderRoutingConfiguration} body Desired order routing configuration to create/update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putOrderRoutingConfiguration(body: OrderRoutingConfiguration, options?: any) {
            return DOMSRoutingPlansApiFp(configuration).putOrderRoutingConfiguration(body, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Update a reroute description
         * @param {string} rerouteDescriptionId ID of the reroute description you intend to modify
         * @param {RerouteDescriptionForModification} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putRerouteDescription(rerouteDescriptionId: string, body?: RerouteDescriptionForModification, options?: any) {
            return DOMSRoutingPlansApiFp(configuration).putRerouteDescription(rerouteDescriptionId, body, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Update reroute short pick configuration of a tenant
         * @param {RerouteShortPickConfiguration} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putRerouteShortPickConfiguration(body: RerouteShortPickConfiguration, options?: any) {
            return DOMSRoutingPlansApiFp(configuration).putRerouteShortPickConfiguration(body, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Update reroute time triggered configuration of a tenant
         * @param {RerouteTimeTriggeredConfiguration} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putRerouteTimeTriggeredConfiguration(body: RerouteTimeTriggeredConfiguration, options?: any) {
            return DOMSRoutingPlansApiFp(configuration).putRerouteTimeTriggeredConfiguration(body, options)(fetch, basePath);
        },
        /**
         * Important: You can only change the name and the description for fences, ratings and prioritizations of type CUSTOM. For Fences and Ratings provided by fulfillmenttools you can not change the fields 'name' and 'description'. <br> Also you can not delete an existing fulfillmenttools Fence or Rating by calling this endpoint.
         * @summary Update routing configuration of a tenant
         * @param {RoutingConfiguration} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putRoutingConfiguration(body: RoutingConfiguration, options?: any) {
            return DOMSRoutingPlansApiFp(configuration).putRoutingConfiguration(body, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Update a toolkit fence
         * @param {string} toolkitFenceId ID of the toolkit fence you want to update
         * @param {ToolkitFenceForModification} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putToolkitFence(toolkitFenceId: string, body?: ToolkitFenceForModification, options?: any) {
            return DOMSRoutingPlansApiFp(configuration).putToolkitFence(toolkitFenceId, body, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Update a toolkit rating
         * @param {string} toolkitRatingId ID of the toolkit rating you want to update
         * @param {ToolkitRatingForModification} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putToolkitRating(toolkitRatingId: string, body?: ToolkitRatingForModification, options?: any) {
            return DOMSRoutingPlansApiFp(configuration).putToolkitRating(toolkitRatingId, body, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Triggers rerouting of failed routing plans
         * @param {RerouteRoutingPlan} body An object, that can contain either lists of identifiers for which a reroute should be executed or an option to reroute every reroutable plan.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        reRoute(body: RerouteRoutingPlan, options?: any) {
            return DOMSRoutingPlansApiFp(configuration).reRoute(body, options)(fetch, basePath);
        },
    };
};

/**
 * DOMSRoutingPlansApi - object-oriented interface
 * @export
 * @class DOMSRoutingPlansApi
 * @extends {BaseAPI}
 */
export class DOMSRoutingPlansApi extends BaseAPI {
    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Delete a reroute description
     * @param {string} rerouteDescriptionId ID of the reroute description you intend to delete
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public deleteRerouteDescription(rerouteDescriptionId: string, options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).deleteRerouteDescription(rerouteDescriptionId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Delete a toolkit fence
     * @param {string} toolkitFenceId ID of the toolkit fence you want to delete
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public deleteToolkitFence(toolkitFenceId: string, options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).deleteToolkitFence(toolkitFenceId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Delete a toolkit rating
     * @param {string} toolkitRatingId ID of the toolkit rating you want to delete
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public deleteToolkitRating(toolkitRatingId: string, options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).deleteToolkitRating(toolkitRatingId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a tenant capacity planning timeframe configuration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public getCapacityPlanningTimeframeConfiguration(options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).getCapacityPlanningTimeframeConfiguration(options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get decision log of a routing plan with the given ID
     * @param {string} routingplanId ID of the routing plan you want to get it&#x27;s decision log
     * @param {number} routingRun ID of the decision log you want to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public getDecisionlog(routingplanId: string, routingRun: number, options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).getDecisionlog(routingplanId, routingRun, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated, use GlobalManualRerouteConfiguration in /api/configurations/routing
     * @summary Get a tenant manual order reroute config
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public getManualRerouteConfiguration(options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).getManualRerouteConfiguration(options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Get the tenant wide order routing configuration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public getOrderRoutingConfiguration(options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).getOrderRoutingConfiguration(options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Get a reroute description with the given key
     * @param {string} rerouteDescriptionId Id of the reroute description you wish to retrieve
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public getRerouteDescriptionById(rerouteDescriptionId: string, options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).getRerouteDescriptionById(rerouteDescriptionId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Get a list with all reroute descriptions
     * @param {string} [startAfterId] all entities after given Id
     * @param {number} [size] number of entities to show
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public getRerouteDescriptions(startAfterId?: string, size?: number, options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).getRerouteDescriptions(startAfterId, size, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Get a tenant reroute short pick config
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public getRerouteShortPickConfiguration(options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).getRerouteShortPickConfiguration(options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Get a tenant reroute time triggered config
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public getRerouteTimeTriggeredConfiguration(options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).getRerouteTimeTriggeredConfiguration(options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a tenant routing config
     * @param {number} [version] Provide  to get an older version of the configuration
     * @param {string} [locale] Provide the localized names and descriptions for the routing configuration. If not provided the default locale is used., for example de_DE.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public getRoutingConfiguration(version?: number, locale?: string, options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).getRoutingConfiguration(version, locale, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a routing plan with the given ID
     * @param {string} routingplanId ID of the routing plan want to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public getRoutingPlan(routingplanId: string, options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).getRoutingPlan(routingplanId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a routing plan regarding to orderRef
     * @param {string} [orderRef] Reference to the order you want to get the corresponding routing plan.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public getRoutingPlanBaseOnOrderRef(orderRef?: string, options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).getRoutingPlanBaseOnOrderRef(orderRef, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Get a tag with the given key
     * @param {string} toolkitFenceId Id of the toolkit fence you want to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public getToolkitFenceById(toolkitFenceId: string, options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).getToolkitFenceById(toolkitFenceId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Returns all toolkit fences
     * @param {string} [startAfterId] all entities
     * @param {number} [size] number of entities to show
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public getToolkitFences(startAfterId?: string, size?: number, options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).getToolkitFences(startAfterId, size, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Get a tag with the given key
     * @param {string} toolkitRatingId Id of the tag you want to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public getToolkitRatingById(toolkitRatingId: string, options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).getToolkitRatingById(toolkitRatingId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Returns all toolkit ratings
     * @param {string} [startAfterId] all entities
     * @param {number} [size] number of entities to show
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public getToolkitRatings(startAfterId?: string, size?: number, options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).getToolkitRatings(startAfterId, size, options)(this.fetch, this.basePath);
    }

    /**
     * Important: You can only change the name and the description for fences, ratings and prioritizations of type CUSTOM. For Fences and Ratings provided by fulfillmenttools you can not change the fields 'name' and 'description'.
     * @summary Patches routing configuration
     * @param {RoutingConfigurationsPatchActions} body Patch set
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public patchRoutingConfig(body: RoutingConfigurationsPatchActions, options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).patchRoutingConfig(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Patches a routing plan with the given ID
     * @param {RoutingPlanPatchActions} body Patch set
     * @param {string} routingplanId ID of routing plan you want to patch
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public patchRoutingPlan(body: RoutingPlanPatchActions, routingplanId: string, options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).patchRoutingPlan(body, routingplanId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Post a new RerouteDescription
     * @param {RerouteDescriptionForCreation} body The RerouteDescription
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public postRerouteDescription(body: RerouteDescriptionForCreation, options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).postRerouteDescription(body, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Creates a toolkit fence
     * @param {ToolkitFenceForCreation} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public postToolkitFence(body?: ToolkitFenceForCreation, options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).postToolkitFence(body, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Creates a toolkit rating
     * @param {ToolkitRatingForCreation} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public postToolkitRating(body?: ToolkitRatingForCreation, options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).postToolkitRating(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Update capacity planning timeframe configuration of a tenant
     * @param {CapacityPlanningTimeframeConfiguration} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public putCapacityPlanningTimeframeConfiguration(body: CapacityPlanningTimeframeConfiguration, options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).putCapacityPlanningTimeframeConfiguration(body, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated, use GlobalManualRerouteConfiguration in /api/configurations/routing
     * @summary Update manual order reroute configuration of a tenant
     * @param {ManualRerouteConfiguration} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public putManualRerouteConfiguration(body: ManualRerouteConfiguration, options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).putManualRerouteConfiguration(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Change the tenant wide order routing configuration
     * @param {OrderRoutingConfiguration} body Desired order routing configuration to create/update
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public putOrderRoutingConfiguration(body: OrderRoutingConfiguration, options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).putOrderRoutingConfiguration(body, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Update a reroute description
     * @param {string} rerouteDescriptionId ID of the reroute description you intend to modify
     * @param {RerouteDescriptionForModification} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public putRerouteDescription(rerouteDescriptionId: string, body?: RerouteDescriptionForModification, options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).putRerouteDescription(rerouteDescriptionId, body, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Update reroute short pick configuration of a tenant
     * @param {RerouteShortPickConfiguration} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public putRerouteShortPickConfiguration(body: RerouteShortPickConfiguration, options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).putRerouteShortPickConfiguration(body, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Update reroute time triggered configuration of a tenant
     * @param {RerouteTimeTriggeredConfiguration} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public putRerouteTimeTriggeredConfiguration(body: RerouteTimeTriggeredConfiguration, options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).putRerouteTimeTriggeredConfiguration(body, options)(this.fetch, this.basePath);
    }

    /**
     * Important: You can only change the name and the description for fences, ratings and prioritizations of type CUSTOM. For Fences and Ratings provided by fulfillmenttools you can not change the fields 'name' and 'description'. <br> Also you can not delete an existing fulfillmenttools Fence or Rating by calling this endpoint.
     * @summary Update routing configuration of a tenant
     * @param {RoutingConfiguration} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public putRoutingConfiguration(body: RoutingConfiguration, options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).putRoutingConfiguration(body, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Update a toolkit fence
     * @param {string} toolkitFenceId ID of the toolkit fence you want to update
     * @param {ToolkitFenceForModification} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public putToolkitFence(toolkitFenceId: string, body?: ToolkitFenceForModification, options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).putToolkitFence(toolkitFenceId, body, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Update a toolkit rating
     * @param {string} toolkitRatingId ID of the toolkit rating you want to update
     * @param {ToolkitRatingForModification} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public putToolkitRating(toolkitRatingId: string, body?: ToolkitRatingForModification, options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).putToolkitRating(toolkitRatingId, body, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Triggers rerouting of failed routing plans
     * @param {RerouteRoutingPlan} body An object, that can contain either lists of identifiers for which a reroute should be executed or an option to reroute every reroutable plan.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DOMSRoutingPlansApi
     */
    public reRoute(body: RerouteRoutingPlan, options?: any) {
        return DOMSRoutingPlansApiFp(this.configuration).reRoute(body, options)(this.fetch, this.basePath);
    }

}
/**
 * FulfillmentOperationsCustomServicesApi - fetch parameter creator
 * @export
 */
export const FulfillmentOperationsCustomServicesApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Add a ServiceJobLink to an ServiceJobLInk inside the LinkedServiceJobs
         * @param {ServiceJobLinkForAdding} body Desired ServiceJobLink to add
         * @param {string} linkedServiceJobsId ID of LinkedServiceJobs you want to alter
         * @param {string} serviceJobLinkId ID of ServiceJobLink you want to add the new ServiceJobLink underneath
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addNestedServiceJobLink(body: ServiceJobLinkForAdding, linkedServiceJobsId: string, serviceJobLinkId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling addNestedServiceJobLink.');
            }
            // verify required parameter 'linkedServiceJobsId' is not null or undefined
            if (linkedServiceJobsId === null || linkedServiceJobsId === undefined) {
                throw new RequiredError('linkedServiceJobsId','Required parameter linkedServiceJobsId was null or undefined when calling addNestedServiceJobLink.');
            }
            // verify required parameter 'serviceJobLinkId' is not null or undefined
            if (serviceJobLinkId === null || serviceJobLinkId === undefined) {
                throw new RequiredError('serviceJobLinkId','Required parameter serviceJobLinkId was null or undefined when calling addNestedServiceJobLink.');
            }
            const localVarPath = `/api/linkedservicejobs/{linkedServiceJobsId}/servicejoblinks/{serviceJobLinkId}`
                .replace(`{${"linkedServiceJobsId"}}`, encodeURIComponent(String(linkedServiceJobsId)))
                .replace(`{${"serviceJobLinkId"}}`, encodeURIComponent(String(serviceJobLinkId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ServiceJobLinkForAdding" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Add a ServiceJobLink to an LinkedServiceJobs on root level
         * @param {ServiceJobLinkForAdding} body Desired ServiceJobLink to add
         * @param {string} linkedServiceJobsId ID of LinkedServiceJobs you want to alter
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addServiceJobLink(body: ServiceJobLinkForAdding, linkedServiceJobsId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling addServiceJobLink.');
            }
            // verify required parameter 'linkedServiceJobsId' is not null or undefined
            if (linkedServiceJobsId === null || linkedServiceJobsId === undefined) {
                throw new RequiredError('linkedServiceJobsId','Required parameter linkedServiceJobsId was null or undefined when calling addServiceJobLink.');
            }
            const localVarPath = `/api/linkedservicejobs/{linkedServiceJobsId}/servicejoblinks`
                .replace(`{${"linkedServiceJobsId"}}`, encodeURIComponent(String(linkedServiceJobsId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ServiceJobLinkForAdding" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Create a service job
         * @param {ServiceJobForCreation} body Desired service job to create
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createServiceJob(body: ServiceJobForCreation, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling createServiceJob.');
            }
            const localVarPath = `/api/servicejobs`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ServiceJobForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get LinkedServiceJobs
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {Array<string>} [facilityIds] facilities to filter to
         * @param {Array<string>} [status] Reference to the statuses you want to get the corresponding linked service jobs
         * @param {LinkedServiceJobsOrderBy} [orderBy] sort order
         * @param {LinkedServiceJobsFilterChannel} [channel] type of channel you want to filter for
         * @param {Date} [startTargetTime] Start target date range for linked service jobs
         * @param {Date} [endTargetTime] End target date range for linked service jobs
         * @param {string} [searchTerm] Search term you want to get the corresponding linked service jobs. Search will be performed on multiple fields, like tenantOrderId, consumerName, tenantArticleId and more
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLinkedServiceJobs(startAfterId?: string, size?: number, facilityIds?: Array<string>, status?: Array<string>, orderBy?: LinkedServiceJobsOrderBy, channel?: LinkedServiceJobsFilterChannel, startTargetTime?: Date, endTargetTime?: Date, searchTerm?: string, options: any = {}): FetchArgs {
            const localVarPath = `/api/linkedservicejobs`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            if (facilityIds) {
                localVarQueryParameter['facilityIds'] = facilityIds;
            }

            if (status) {
                localVarQueryParameter['status'] = status;
            }

            if (orderBy !== undefined) {
                localVarQueryParameter['orderBy'] = orderBy;
            }

            if (channel !== undefined) {
                localVarQueryParameter['channel'] = channel;
            }

            if (startTargetTime !== undefined) {
                localVarQueryParameter['startTargetTime'] = (startTargetTime as any).toISOString();
            }

            if (endTargetTime !== undefined) {
                localVarQueryParameter['endTargetTime'] = (endTargetTime as any).toISOString();
            }

            if (searchTerm !== undefined) {
                localVarQueryParameter['searchTerm'] = searchTerm;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get requested LinkedServiceJobs
         * @param {string} linkedServiceJobsId ID of LinkedServiceJobs you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLinkedServiceJobsById(linkedServiceJobsId: string, options: any = {}): FetchArgs {
            // verify required parameter 'linkedServiceJobsId' is not null or undefined
            if (linkedServiceJobsId === null || linkedServiceJobsId === undefined) {
                throw new RequiredError('linkedServiceJobsId','Required parameter linkedServiceJobsId was null or undefined when calling getLinkedServiceJobsById.');
            }
            const localVarPath = `/api/linkedservicejobs/{linkedServiceJobsId}`
                .replace(`{${"linkedServiceJobsId"}}`, encodeURIComponent(String(linkedServiceJobsId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get requested service job
         * @param {string} serviceJobId ID of service job you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getServiceJob(serviceJobId: string, options: any = {}): FetchArgs {
            // verify required parameter 'serviceJobId' is not null or undefined
            if (serviceJobId === null || serviceJobId === undefined) {
                throw new RequiredError('serviceJobId','Required parameter serviceJobId was null or undefined when calling getServiceJob.');
            }
            const localVarPath = `/api/servicejobs/{serviceJobId}`
                .replace(`{${"serviceJobId"}}`, encodeURIComponent(String(serviceJobId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get Service Jobs
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {string} [facilityRef] Reference of the facility you want to filter for
         * @param {Array<string>} [status] Reference to the statuses you want to get the corresponding service job
         * @param {ServiceJobFilterChannel} [channel] Type of channel you want to filter for
         * @param {Date} [startTargetTime] Start target date range for service jobs
         * @param {Date} [endTargetTime] End target date range for service jobs
         * @param {string} [searchTerm] Search term you want to get the corresponding service jobs. Search will be performed on multiple fields, like tenantOrderId, consumerName, tenantArticleId and more
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getServiceJobs(startAfterId?: string, size?: number, facilityRef?: string, status?: Array<string>, channel?: ServiceJobFilterChannel, startTargetTime?: Date, endTargetTime?: Date, searchTerm?: string, options: any = {}): FetchArgs {
            const localVarPath = `/api/servicejobs`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            if (facilityRef !== undefined) {
                localVarQueryParameter['facilityRef'] = facilityRef;
            }

            if (status) {
                localVarQueryParameter['status'] = status;
            }

            if (channel !== undefined) {
                localVarQueryParameter['channel'] = channel;
            }

            if (startTargetTime !== undefined) {
                localVarQueryParameter['startTargetTime'] = (startTargetTime as any).toISOString();
            }

            if (endTargetTime !== undefined) {
                localVarQueryParameter['endTargetTime'] = (endTargetTime as any).toISOString();
            }

            if (searchTerm !== undefined) {
                localVarQueryParameter['searchTerm'] = searchTerm;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Update a service job
         * @param {ServiceJobActionsParameter} body Desired change to a service job
         * @param {string} serviceJobId ID of service job you want to update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateServiceJob(body: ServiceJobActionsParameter, serviceJobId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling updateServiceJob.');
            }
            // verify required parameter 'serviceJobId' is not null or undefined
            if (serviceJobId === null || serviceJobId === undefined) {
                throw new RequiredError('serviceJobId','Required parameter serviceJobId was null or undefined when calling updateServiceJob.');
            }
            const localVarPath = `/api/servicejobs/{serviceJobId}/actions`
                .replace(`{${"serviceJobId"}}`, encodeURIComponent(String(serviceJobId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ServiceJobActionsParameter" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * FulfillmentOperationsCustomServicesApi - functional programming interface
 * @export
 */
export const FulfillmentOperationsCustomServicesApiFp = function(configuration?: Configuration) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Add a ServiceJobLink to an ServiceJobLInk inside the LinkedServiceJobs
         * @param {ServiceJobLinkForAdding} body Desired ServiceJobLink to add
         * @param {string} linkedServiceJobsId ID of LinkedServiceJobs you want to alter
         * @param {string} serviceJobLinkId ID of ServiceJobLink you want to add the new ServiceJobLink underneath
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addNestedServiceJobLink(body: ServiceJobLinkForAdding, linkedServiceJobsId: string, serviceJobLinkId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<LinkedServiceJobs> {
            const localVarFetchArgs = FulfillmentOperationsCustomServicesApiFetchParamCreator(configuration).addNestedServiceJobLink(body, linkedServiceJobsId, serviceJobLinkId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Add a ServiceJobLink to an LinkedServiceJobs on root level
         * @param {ServiceJobLinkForAdding} body Desired ServiceJobLink to add
         * @param {string} linkedServiceJobsId ID of LinkedServiceJobs you want to alter
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addServiceJobLink(body: ServiceJobLinkForAdding, linkedServiceJobsId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<LinkedServiceJobs> {
            const localVarFetchArgs = FulfillmentOperationsCustomServicesApiFetchParamCreator(configuration).addServiceJobLink(body, linkedServiceJobsId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Create a service job
         * @param {ServiceJobForCreation} body Desired service job to create
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createServiceJob(body: ServiceJobForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ServiceJob> {
            const localVarFetchArgs = FulfillmentOperationsCustomServicesApiFetchParamCreator(configuration).createServiceJob(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get LinkedServiceJobs
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {Array<string>} [facilityIds] facilities to filter to
         * @param {Array<string>} [status] Reference to the statuses you want to get the corresponding linked service jobs
         * @param {LinkedServiceJobsOrderBy} [orderBy] sort order
         * @param {LinkedServiceJobsFilterChannel} [channel] type of channel you want to filter for
         * @param {Date} [startTargetTime] Start target date range for linked service jobs
         * @param {Date} [endTargetTime] End target date range for linked service jobs
         * @param {string} [searchTerm] Search term you want to get the corresponding linked service jobs. Search will be performed on multiple fields, like tenantOrderId, consumerName, tenantArticleId and more
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLinkedServiceJobs(startAfterId?: string, size?: number, facilityIds?: Array<string>, status?: Array<string>, orderBy?: LinkedServiceJobsOrderBy, channel?: LinkedServiceJobsFilterChannel, startTargetTime?: Date, endTargetTime?: Date, searchTerm?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<LinkedServiceJobsPaginatedResult> {
            const localVarFetchArgs = FulfillmentOperationsCustomServicesApiFetchParamCreator(configuration).getLinkedServiceJobs(startAfterId, size, facilityIds, status, orderBy, channel, startTargetTime, endTargetTime, searchTerm, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get requested LinkedServiceJobs
         * @param {string} linkedServiceJobsId ID of LinkedServiceJobs you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLinkedServiceJobsById(linkedServiceJobsId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<LinkedServiceJobs> {
            const localVarFetchArgs = FulfillmentOperationsCustomServicesApiFetchParamCreator(configuration).getLinkedServiceJobsById(linkedServiceJobsId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get requested service job
         * @param {string} serviceJobId ID of service job you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getServiceJob(serviceJobId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ServiceJob> {
            const localVarFetchArgs = FulfillmentOperationsCustomServicesApiFetchParamCreator(configuration).getServiceJob(serviceJobId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get Service Jobs
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {string} [facilityRef] Reference of the facility you want to filter for
         * @param {Array<string>} [status] Reference to the statuses you want to get the corresponding service job
         * @param {ServiceJobFilterChannel} [channel] Type of channel you want to filter for
         * @param {Date} [startTargetTime] Start target date range for service jobs
         * @param {Date} [endTargetTime] End target date range for service jobs
         * @param {string} [searchTerm] Search term you want to get the corresponding service jobs. Search will be performed on multiple fields, like tenantOrderId, consumerName, tenantArticleId and more
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getServiceJobs(startAfterId?: string, size?: number, facilityRef?: string, status?: Array<string>, channel?: ServiceJobFilterChannel, startTargetTime?: Date, endTargetTime?: Date, searchTerm?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ServiceJobs> {
            const localVarFetchArgs = FulfillmentOperationsCustomServicesApiFetchParamCreator(configuration).getServiceJobs(startAfterId, size, facilityRef, status, channel, startTargetTime, endTargetTime, searchTerm, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Update a service job
         * @param {ServiceJobActionsParameter} body Desired change to a service job
         * @param {string} serviceJobId ID of service job you want to update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateServiceJob(body: ServiceJobActionsParameter, serviceJobId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ServiceJob> {
            const localVarFetchArgs = FulfillmentOperationsCustomServicesApiFetchParamCreator(configuration).updateServiceJob(body, serviceJobId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * FulfillmentOperationsCustomServicesApi - factory interface
 * @export
 */
export const FulfillmentOperationsCustomServicesApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Add a ServiceJobLink to an ServiceJobLInk inside the LinkedServiceJobs
         * @param {ServiceJobLinkForAdding} body Desired ServiceJobLink to add
         * @param {string} linkedServiceJobsId ID of LinkedServiceJobs you want to alter
         * @param {string} serviceJobLinkId ID of ServiceJobLink you want to add the new ServiceJobLink underneath
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addNestedServiceJobLink(body: ServiceJobLinkForAdding, linkedServiceJobsId: string, serviceJobLinkId: string, options?: any) {
            return FulfillmentOperationsCustomServicesApiFp(configuration).addNestedServiceJobLink(body, linkedServiceJobsId, serviceJobLinkId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Add a ServiceJobLink to an LinkedServiceJobs on root level
         * @param {ServiceJobLinkForAdding} body Desired ServiceJobLink to add
         * @param {string} linkedServiceJobsId ID of LinkedServiceJobs you want to alter
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addServiceJobLink(body: ServiceJobLinkForAdding, linkedServiceJobsId: string, options?: any) {
            return FulfillmentOperationsCustomServicesApiFp(configuration).addServiceJobLink(body, linkedServiceJobsId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Create a service job
         * @param {ServiceJobForCreation} body Desired service job to create
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createServiceJob(body: ServiceJobForCreation, options?: any) {
            return FulfillmentOperationsCustomServicesApiFp(configuration).createServiceJob(body, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get LinkedServiceJobs
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {Array<string>} [facilityIds] facilities to filter to
         * @param {Array<string>} [status] Reference to the statuses you want to get the corresponding linked service jobs
         * @param {LinkedServiceJobsOrderBy} [orderBy] sort order
         * @param {LinkedServiceJobsFilterChannel} [channel] type of channel you want to filter for
         * @param {Date} [startTargetTime] Start target date range for linked service jobs
         * @param {Date} [endTargetTime] End target date range for linked service jobs
         * @param {string} [searchTerm] Search term you want to get the corresponding linked service jobs. Search will be performed on multiple fields, like tenantOrderId, consumerName, tenantArticleId and more
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLinkedServiceJobs(startAfterId?: string, size?: number, facilityIds?: Array<string>, status?: Array<string>, orderBy?: LinkedServiceJobsOrderBy, channel?: LinkedServiceJobsFilterChannel, startTargetTime?: Date, endTargetTime?: Date, searchTerm?: string, options?: any) {
            return FulfillmentOperationsCustomServicesApiFp(configuration).getLinkedServiceJobs(startAfterId, size, facilityIds, status, orderBy, channel, startTargetTime, endTargetTime, searchTerm, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get requested LinkedServiceJobs
         * @param {string} linkedServiceJobsId ID of LinkedServiceJobs you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLinkedServiceJobsById(linkedServiceJobsId: string, options?: any) {
            return FulfillmentOperationsCustomServicesApiFp(configuration).getLinkedServiceJobsById(linkedServiceJobsId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get requested service job
         * @param {string} serviceJobId ID of service job you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getServiceJob(serviceJobId: string, options?: any) {
            return FulfillmentOperationsCustomServicesApiFp(configuration).getServiceJob(serviceJobId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get Service Jobs
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {string} [facilityRef] Reference of the facility you want to filter for
         * @param {Array<string>} [status] Reference to the statuses you want to get the corresponding service job
         * @param {ServiceJobFilterChannel} [channel] Type of channel you want to filter for
         * @param {Date} [startTargetTime] Start target date range for service jobs
         * @param {Date} [endTargetTime] End target date range for service jobs
         * @param {string} [searchTerm] Search term you want to get the corresponding service jobs. Search will be performed on multiple fields, like tenantOrderId, consumerName, tenantArticleId and more
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getServiceJobs(startAfterId?: string, size?: number, facilityRef?: string, status?: Array<string>, channel?: ServiceJobFilterChannel, startTargetTime?: Date, endTargetTime?: Date, searchTerm?: string, options?: any) {
            return FulfillmentOperationsCustomServicesApiFp(configuration).getServiceJobs(startAfterId, size, facilityRef, status, channel, startTargetTime, endTargetTime, searchTerm, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Update a service job
         * @param {ServiceJobActionsParameter} body Desired change to a service job
         * @param {string} serviceJobId ID of service job you want to update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateServiceJob(body: ServiceJobActionsParameter, serviceJobId: string, options?: any) {
            return FulfillmentOperationsCustomServicesApiFp(configuration).updateServiceJob(body, serviceJobId, options)(fetch, basePath);
        },
    };
};

/**
 * FulfillmentOperationsCustomServicesApi - object-oriented interface
 * @export
 * @class FulfillmentOperationsCustomServicesApi
 * @extends {BaseAPI}
 */
export class FulfillmentOperationsCustomServicesApi extends BaseAPI {
    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Add a ServiceJobLink to an ServiceJobLInk inside the LinkedServiceJobs
     * @param {ServiceJobLinkForAdding} body Desired ServiceJobLink to add
     * @param {string} linkedServiceJobsId ID of LinkedServiceJobs you want to alter
     * @param {string} serviceJobLinkId ID of ServiceJobLink you want to add the new ServiceJobLink underneath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsCustomServicesApi
     */
    public addNestedServiceJobLink(body: ServiceJobLinkForAdding, linkedServiceJobsId: string, serviceJobLinkId: string, options?: any) {
        return FulfillmentOperationsCustomServicesApiFp(this.configuration).addNestedServiceJobLink(body, linkedServiceJobsId, serviceJobLinkId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Add a ServiceJobLink to an LinkedServiceJobs on root level
     * @param {ServiceJobLinkForAdding} body Desired ServiceJobLink to add
     * @param {string} linkedServiceJobsId ID of LinkedServiceJobs you want to alter
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsCustomServicesApi
     */
    public addServiceJobLink(body: ServiceJobLinkForAdding, linkedServiceJobsId: string, options?: any) {
        return FulfillmentOperationsCustomServicesApiFp(this.configuration).addServiceJobLink(body, linkedServiceJobsId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Create a service job
     * @param {ServiceJobForCreation} body Desired service job to create
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsCustomServicesApi
     */
    public createServiceJob(body: ServiceJobForCreation, options?: any) {
        return FulfillmentOperationsCustomServicesApiFp(this.configuration).createServiceJob(body, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get LinkedServiceJobs
     * @param {string} [startAfterId] all entities after given Id
     * @param {number} [size] number of entities to show
     * @param {Array<string>} [facilityIds] facilities to filter to
     * @param {Array<string>} [status] Reference to the statuses you want to get the corresponding linked service jobs
     * @param {LinkedServiceJobsOrderBy} [orderBy] sort order
     * @param {LinkedServiceJobsFilterChannel} [channel] type of channel you want to filter for
     * @param {Date} [startTargetTime] Start target date range for linked service jobs
     * @param {Date} [endTargetTime] End target date range for linked service jobs
     * @param {string} [searchTerm] Search term you want to get the corresponding linked service jobs. Search will be performed on multiple fields, like tenantOrderId, consumerName, tenantArticleId and more
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsCustomServicesApi
     */
    public getLinkedServiceJobs(startAfterId?: string, size?: number, facilityIds?: Array<string>, status?: Array<string>, orderBy?: LinkedServiceJobsOrderBy, channel?: LinkedServiceJobsFilterChannel, startTargetTime?: Date, endTargetTime?: Date, searchTerm?: string, options?: any) {
        return FulfillmentOperationsCustomServicesApiFp(this.configuration).getLinkedServiceJobs(startAfterId, size, facilityIds, status, orderBy, channel, startTargetTime, endTargetTime, searchTerm, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get requested LinkedServiceJobs
     * @param {string} linkedServiceJobsId ID of LinkedServiceJobs you want to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsCustomServicesApi
     */
    public getLinkedServiceJobsById(linkedServiceJobsId: string, options?: any) {
        return FulfillmentOperationsCustomServicesApiFp(this.configuration).getLinkedServiceJobsById(linkedServiceJobsId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get requested service job
     * @param {string} serviceJobId ID of service job you want to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsCustomServicesApi
     */
    public getServiceJob(serviceJobId: string, options?: any) {
        return FulfillmentOperationsCustomServicesApiFp(this.configuration).getServiceJob(serviceJobId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get Service Jobs
     * @param {string} [startAfterId] all entities after given Id
     * @param {number} [size] number of entities to show
     * @param {string} [facilityRef] Reference of the facility you want to filter for
     * @param {Array<string>} [status] Reference to the statuses you want to get the corresponding service job
     * @param {ServiceJobFilterChannel} [channel] Type of channel you want to filter for
     * @param {Date} [startTargetTime] Start target date range for service jobs
     * @param {Date} [endTargetTime] End target date range for service jobs
     * @param {string} [searchTerm] Search term you want to get the corresponding service jobs. Search will be performed on multiple fields, like tenantOrderId, consumerName, tenantArticleId and more
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsCustomServicesApi
     */
    public getServiceJobs(startAfterId?: string, size?: number, facilityRef?: string, status?: Array<string>, channel?: ServiceJobFilterChannel, startTargetTime?: Date, endTargetTime?: Date, searchTerm?: string, options?: any) {
        return FulfillmentOperationsCustomServicesApiFp(this.configuration).getServiceJobs(startAfterId, size, facilityRef, status, channel, startTargetTime, endTargetTime, searchTerm, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Update a service job
     * @param {ServiceJobActionsParameter} body Desired change to a service job
     * @param {string} serviceJobId ID of service job you want to update
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsCustomServicesApi
     */
    public updateServiceJob(body: ServiceJobActionsParameter, serviceJobId: string, options?: any) {
        return FulfillmentOperationsCustomServicesApiFp(this.configuration).updateServiceJob(body, serviceJobId, options)(this.fetch, this.basePath);
    }

}
/**
 * FulfillmentOperationsHandoverApi - fetch parameter creator
 * @export
 */
export const FulfillmentOperationsHandoverApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *
         * @summary Add a new handoverjob
         * @param {HandoverjobForCreation} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addHandoverjob(body: HandoverjobForCreation, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling addHandoverjob.');
            }
            const localVarPath = `/api/handoverjobs`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"HandoverjobForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Return all handoverjobs
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {string} [pickJobRef] This query can be used to find handoverjobs for a referenced pickjob
         * @param {string} [shipmentRef] This query can be used to find handoverjobs for a referenced shipment
         * @param {string} [facilityRef] Reference to the facility you want to get the corresponding handoverJobs
         * @param {Array<string>} [status] Reference to the status you want to get the corresponding handoverJobs
         * @param {Array<string>} [carrierRefs] Reference to the carriers you want to get the corresponding handoverJobs
         * @param {string} [channel] Reference to the channel you want to get the corresponding handoverJobs
         * @param {boolean} [anonymized] Parameter to filter anonymized handover jobs
         * @param {string} [searchTerm] Perform full text search over all searchable attributes
         * @param {Date} [startTargetTime] Start date range for pick jobs
         * @param {Date} [endTargetTime] End date range for pick jobs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllHandoverjobs(startAfterId?: string, size?: number, pickJobRef?: string, shipmentRef?: string, facilityRef?: string, status?: Array<string>, carrierRefs?: Array<string>, channel?: string, anonymized?: boolean, searchTerm?: string, startTargetTime?: Date, endTargetTime?: Date, options: any = {}): FetchArgs {
            const localVarPath = `/api/handoverjobs`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            if (pickJobRef !== undefined) {
                localVarQueryParameter['pickJobRef'] = pickJobRef;
            }

            if (shipmentRef !== undefined) {
                localVarQueryParameter['shipmentRef'] = shipmentRef;
            }

            if (facilityRef !== undefined) {
                localVarQueryParameter['facilityRef'] = facilityRef;
            }

            if (status) {
                localVarQueryParameter['status'] = status;
            }

            if (carrierRefs) {
                localVarQueryParameter['carrierRefs'] = carrierRefs;
            }

            if (channel !== undefined) {
                localVarQueryParameter['channel'] = channel;
            }

            if (anonymized !== undefined) {
                localVarQueryParameter['anonymized'] = anonymized;
            }

            if (searchTerm !== undefined) {
                localVarQueryParameter['searchTerm'] = searchTerm;
            }

            if (startTargetTime !== undefined) {
                localVarQueryParameter['startTargetTime'] = (startTargetTime as any).toISOString();
            }

            if (endTargetTime !== undefined) {
                localVarQueryParameter['endTargetTime'] = (endTargetTime as any).toISOString();
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get all tenant wide refuse reasons
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllRefuseReasons(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/handover/refusereasons`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Read handover configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getHandoverConfiguration(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/handover`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Read tag configuration for handoverJobs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getHandoverJobTagConfiguration(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/tags/handoverjob`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a Handoverjob with the given ID
         * @param {string} handoverjobId ID of the handoverjob you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getHandoverjob(handoverjobId: string, options: any = {}): FetchArgs {
            // verify required parameter 'handoverjobId' is not null or undefined
            if (handoverjobId === null || handoverjobId === undefined) {
                throw new RequiredError('handoverjobId','Required parameter handoverjobId was null or undefined when calling getHandoverjob.');
            }
            const localVarPath = `/api/handoverjobs/{handoverjobId}`
                .replace(`{${"handoverjobId"}}`, encodeURIComponent(String(handoverjobId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Call a single action on a given Handover job
         * @param {string} handoverJobId Reference to the handover job you want to call the action for
         * @param {HandoverJobActionsParameter} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        handoverJobAction(handoverJobId: string, body?: HandoverJobActionsParameter, options: any = {}): FetchArgs {
            // verify required parameter 'handoverJobId' is not null or undefined
            if (handoverJobId === null || handoverJobId === undefined) {
                throw new RequiredError('handoverJobId','Required parameter handoverJobId was null or undefined when calling handoverJobAction.');
            }
            const localVarPath = `/api/handoverjobs/{handoverJobId}/actions`
                .replace(`{${"handoverJobId"}}`, encodeURIComponent(String(handoverJobId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"HandoverJobActionsParameter" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Patches a handoverjob with the given ID
         * @param {HandoverjobPatchActions} body Patch set
         * @param {string} handoverjobId ID of handoverjob you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchHandoverjob(body: HandoverjobPatchActions, handoverjobId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling patchHandoverjob.');
            }
            // verify required parameter 'handoverjobId' is not null or undefined
            if (handoverjobId === null || handoverjobId === undefined) {
                throw new RequiredError('handoverjobId','Required parameter handoverjobId was null or undefined when calling patchHandoverjob.');
            }
            const localVarPath = `/api/handoverjobs/{handoverjobId}`
                .replace(`{${"handoverjobId"}}`, encodeURIComponent(String(handoverjobId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"HandoverjobPatchActions" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Change the tag configuration for HandoverJobs
         * @param {HandoverJobTagConfiguration} body Desired Tag Configuration for HandoverJobs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putHandoverTagConfigurations(body: HandoverJobTagConfiguration, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putHandoverTagConfigurations.');
            }
            const localVarPath = `/api/configurations/tags/handoverjob`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"HandoverJobTagConfiguration" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Change the handover configuration
         * @param {HandoverConfigurationForCreate} body Desired HandoverConfiguration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertHandoverConfiguration(body: HandoverConfigurationForCreate, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling upsertHandoverConfiguration.');
            }
            const localVarPath = `/api/configurations/handover`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"HandoverConfigurationForCreate" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * FulfillmentOperationsHandoverApi - functional programming interface
 * @export
 */
export const FulfillmentOperationsHandoverApiFp = function(configuration?: Configuration) {
    return {
        /**
         *
         * @summary Add a new handoverjob
         * @param {HandoverjobForCreation} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addHandoverjob(body: HandoverjobForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Handoverjob> {
            const localVarFetchArgs = FulfillmentOperationsHandoverApiFetchParamCreator(configuration).addHandoverjob(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Return all handoverjobs
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {string} [pickJobRef] This query can be used to find handoverjobs for a referenced pickjob
         * @param {string} [shipmentRef] This query can be used to find handoverjobs for a referenced shipment
         * @param {string} [facilityRef] Reference to the facility you want to get the corresponding handoverJobs
         * @param {Array<string>} [status] Reference to the status you want to get the corresponding handoverJobs
         * @param {Array<string>} [carrierRefs] Reference to the carriers you want to get the corresponding handoverJobs
         * @param {string} [channel] Reference to the channel you want to get the corresponding handoverJobs
         * @param {boolean} [anonymized] Parameter to filter anonymized handover jobs
         * @param {string} [searchTerm] Perform full text search over all searchable attributes
         * @param {Date} [startTargetTime] Start date range for pick jobs
         * @param {Date} [endTargetTime] End date range for pick jobs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllHandoverjobs(startAfterId?: string, size?: number, pickJobRef?: string, shipmentRef?: string, facilityRef?: string, status?: Array<string>, carrierRefs?: Array<string>, channel?: string, anonymized?: boolean, searchTerm?: string, startTargetTime?: Date, endTargetTime?: Date, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<StrippedHandoverjobs> {
            const localVarFetchArgs = FulfillmentOperationsHandoverApiFetchParamCreator(configuration).getAllHandoverjobs(startAfterId, size, pickJobRef, shipmentRef, facilityRef, status, carrierRefs, channel, anonymized, searchTerm, startTargetTime, endTargetTime, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get all tenant wide refuse reasons
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllRefuseReasons(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<AvailableRefusedReason>> {
            const localVarFetchArgs = FulfillmentOperationsHandoverApiFetchParamCreator(configuration).getAllRefuseReasons(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Read handover configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getHandoverConfiguration(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<HandoverConfiguration> {
            const localVarFetchArgs = FulfillmentOperationsHandoverApiFetchParamCreator(configuration).getHandoverConfiguration(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Read tag configuration for handoverJobs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getHandoverJobTagConfiguration(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<HandoverJobTagConfiguration> {
            const localVarFetchArgs = FulfillmentOperationsHandoverApiFetchParamCreator(configuration).getHandoverJobTagConfiguration(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a Handoverjob with the given ID
         * @param {string} handoverjobId ID of the handoverjob you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getHandoverjob(handoverjobId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Handoverjob> {
            const localVarFetchArgs = FulfillmentOperationsHandoverApiFetchParamCreator(configuration).getHandoverjob(handoverjobId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Call a single action on a given Handover job
         * @param {string} handoverJobId Reference to the handover job you want to call the action for
         * @param {HandoverJobActionsParameter} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        handoverJobAction(handoverJobId: string, body?: HandoverJobActionsParameter, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Handoverjob> {
            const localVarFetchArgs = FulfillmentOperationsHandoverApiFetchParamCreator(configuration).handoverJobAction(handoverJobId, body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Patches a handoverjob with the given ID
         * @param {HandoverjobPatchActions} body Patch set
         * @param {string} handoverjobId ID of handoverjob you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchHandoverjob(body: HandoverjobPatchActions, handoverjobId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Handoverjob> {
            const localVarFetchArgs = FulfillmentOperationsHandoverApiFetchParamCreator(configuration).patchHandoverjob(body, handoverjobId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Change the tag configuration for HandoverJobs
         * @param {HandoverJobTagConfiguration} body Desired Tag Configuration for HandoverJobs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putHandoverTagConfigurations(body: HandoverJobTagConfiguration, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<HandoverJobTagConfiguration> {
            const localVarFetchArgs = FulfillmentOperationsHandoverApiFetchParamCreator(configuration).putHandoverTagConfigurations(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Change the handover configuration
         * @param {HandoverConfigurationForCreate} body Desired HandoverConfiguration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertHandoverConfiguration(body: HandoverConfigurationForCreate, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<HandoverConfiguration> {
            const localVarFetchArgs = FulfillmentOperationsHandoverApiFetchParamCreator(configuration).upsertHandoverConfiguration(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * FulfillmentOperationsHandoverApi - factory interface
 * @export
 */
export const FulfillmentOperationsHandoverApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         *
         * @summary Add a new handoverjob
         * @param {HandoverjobForCreation} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addHandoverjob(body: HandoverjobForCreation, options?: any) {
            return FulfillmentOperationsHandoverApiFp(configuration).addHandoverjob(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Return all handoverjobs
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {string} [pickJobRef] This query can be used to find handoverjobs for a referenced pickjob
         * @param {string} [shipmentRef] This query can be used to find handoverjobs for a referenced shipment
         * @param {string} [facilityRef] Reference to the facility you want to get the corresponding handoverJobs
         * @param {Array<string>} [status] Reference to the status you want to get the corresponding handoverJobs
         * @param {Array<string>} [carrierRefs] Reference to the carriers you want to get the corresponding handoverJobs
         * @param {string} [channel] Reference to the channel you want to get the corresponding handoverJobs
         * @param {boolean} [anonymized] Parameter to filter anonymized handover jobs
         * @param {string} [searchTerm] Perform full text search over all searchable attributes
         * @param {Date} [startTargetTime] Start date range for pick jobs
         * @param {Date} [endTargetTime] End date range for pick jobs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllHandoverjobs(startAfterId?: string, size?: number, pickJobRef?: string, shipmentRef?: string, facilityRef?: string, status?: Array<string>, carrierRefs?: Array<string>, channel?: string, anonymized?: boolean, searchTerm?: string, startTargetTime?: Date, endTargetTime?: Date, options?: any) {
            return FulfillmentOperationsHandoverApiFp(configuration).getAllHandoverjobs(startAfterId, size, pickJobRef, shipmentRef, facilityRef, status, carrierRefs, channel, anonymized, searchTerm, startTargetTime, endTargetTime, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get all tenant wide refuse reasons
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllRefuseReasons(options?: any) {
            return FulfillmentOperationsHandoverApiFp(configuration).getAllRefuseReasons(options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Read handover configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getHandoverConfiguration(options?: any) {
            return FulfillmentOperationsHandoverApiFp(configuration).getHandoverConfiguration(options)(fetch, basePath);
        },
        /**
         *
         * @summary Read tag configuration for handoverJobs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getHandoverJobTagConfiguration(options?: any) {
            return FulfillmentOperationsHandoverApiFp(configuration).getHandoverJobTagConfiguration(options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a Handoverjob with the given ID
         * @param {string} handoverjobId ID of the handoverjob you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getHandoverjob(handoverjobId: string, options?: any) {
            return FulfillmentOperationsHandoverApiFp(configuration).getHandoverjob(handoverjobId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Call a single action on a given Handover job
         * @param {string} handoverJobId Reference to the handover job you want to call the action for
         * @param {HandoverJobActionsParameter} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        handoverJobAction(handoverJobId: string, body?: HandoverJobActionsParameter, options?: any) {
            return FulfillmentOperationsHandoverApiFp(configuration).handoverJobAction(handoverJobId, body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Patches a handoverjob with the given ID
         * @param {HandoverjobPatchActions} body Patch set
         * @param {string} handoverjobId ID of handoverjob you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchHandoverjob(body: HandoverjobPatchActions, handoverjobId: string, options?: any) {
            return FulfillmentOperationsHandoverApiFp(configuration).patchHandoverjob(body, handoverjobId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Change the tag configuration for HandoverJobs
         * @param {HandoverJobTagConfiguration} body Desired Tag Configuration for HandoverJobs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putHandoverTagConfigurations(body: HandoverJobTagConfiguration, options?: any) {
            return FulfillmentOperationsHandoverApiFp(configuration).putHandoverTagConfigurations(body, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Change the handover configuration
         * @param {HandoverConfigurationForCreate} body Desired HandoverConfiguration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertHandoverConfiguration(body: HandoverConfigurationForCreate, options?: any) {
            return FulfillmentOperationsHandoverApiFp(configuration).upsertHandoverConfiguration(body, options)(fetch, basePath);
        },
    };
};

/**
 * FulfillmentOperationsHandoverApi - object-oriented interface
 * @export
 * @class FulfillmentOperationsHandoverApi
 * @extends {BaseAPI}
 */
export class FulfillmentOperationsHandoverApi extends BaseAPI {
    /**
     *
     * @summary Add a new handoverjob
     * @param {HandoverjobForCreation} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsHandoverApi
     */
    public addHandoverjob(body: HandoverjobForCreation, options?: any) {
        return FulfillmentOperationsHandoverApiFp(this.configuration).addHandoverjob(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Return all handoverjobs
     * @param {string} [startAfterId] all entities after given Id
     * @param {number} [size] number of entities to show
     * @param {string} [pickJobRef] This query can be used to find handoverjobs for a referenced pickjob
     * @param {string} [shipmentRef] This query can be used to find handoverjobs for a referenced shipment
     * @param {string} [facilityRef] Reference to the facility you want to get the corresponding handoverJobs
     * @param {Array<string>} [status] Reference to the status you want to get the corresponding handoverJobs
     * @param {Array<string>} [carrierRefs] Reference to the carriers you want to get the corresponding handoverJobs
     * @param {string} [channel] Reference to the channel you want to get the corresponding handoverJobs
     * @param {boolean} [anonymized] Parameter to filter anonymized handover jobs
     * @param {string} [searchTerm] Perform full text search over all searchable attributes
     * @param {Date} [startTargetTime] Start date range for pick jobs
     * @param {Date} [endTargetTime] End date range for pick jobs
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsHandoverApi
     */
    public getAllHandoverjobs(startAfterId?: string, size?: number, pickJobRef?: string, shipmentRef?: string, facilityRef?: string, status?: Array<string>, carrierRefs?: Array<string>, channel?: string, anonymized?: boolean, searchTerm?: string, startTargetTime?: Date, endTargetTime?: Date, options?: any) {
        return FulfillmentOperationsHandoverApiFp(this.configuration).getAllHandoverjobs(startAfterId, size, pickJobRef, shipmentRef, facilityRef, status, carrierRefs, channel, anonymized, searchTerm, startTargetTime, endTargetTime, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get all tenant wide refuse reasons
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsHandoverApi
     */
    public getAllRefuseReasons(options?: any) {
        return FulfillmentOperationsHandoverApiFp(this.configuration).getAllRefuseReasons(options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Read handover configuration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsHandoverApi
     */
    public getHandoverConfiguration(options?: any) {
        return FulfillmentOperationsHandoverApiFp(this.configuration).getHandoverConfiguration(options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Read tag configuration for handoverJobs
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsHandoverApi
     */
    public getHandoverJobTagConfiguration(options?: any) {
        return FulfillmentOperationsHandoverApiFp(this.configuration).getHandoverJobTagConfiguration(options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a Handoverjob with the given ID
     * @param {string} handoverjobId ID of the handoverjob you want to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsHandoverApi
     */
    public getHandoverjob(handoverjobId: string, options?: any) {
        return FulfillmentOperationsHandoverApiFp(this.configuration).getHandoverjob(handoverjobId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Call a single action on a given Handover job
     * @param {string} handoverJobId Reference to the handover job you want to call the action for
     * @param {HandoverJobActionsParameter} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsHandoverApi
     */
    public handoverJobAction(handoverJobId: string, body?: HandoverJobActionsParameter, options?: any) {
        return FulfillmentOperationsHandoverApiFp(this.configuration).handoverJobAction(handoverJobId, body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Patches a handoverjob with the given ID
     * @param {HandoverjobPatchActions} body Patch set
     * @param {string} handoverjobId ID of handoverjob you want to patch
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsHandoverApi
     */
    public patchHandoverjob(body: HandoverjobPatchActions, handoverjobId: string, options?: any) {
        return FulfillmentOperationsHandoverApiFp(this.configuration).patchHandoverjob(body, handoverjobId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Change the tag configuration for HandoverJobs
     * @param {HandoverJobTagConfiguration} body Desired Tag Configuration for HandoverJobs
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsHandoverApi
     */
    public putHandoverTagConfigurations(body: HandoverJobTagConfiguration, options?: any) {
        return FulfillmentOperationsHandoverApiFp(this.configuration).putHandoverTagConfigurations(body, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Change the handover configuration
     * @param {HandoverConfigurationForCreate} body Desired HandoverConfiguration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsHandoverApi
     */
    public upsertHandoverConfiguration(body: HandoverConfigurationForCreate, options?: any) {
        return FulfillmentOperationsHandoverApiFp(this.configuration).upsertHandoverConfiguration(body, options)(this.fetch, this.basePath);
    }

}
/**
 * FulfillmentOperationsOperativeProcessApi - fetch parameter creator
 * @export
 */
export const FulfillmentOperationsOperativeProcessApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get operativeProcess by ID
         * @param {string} operativeProcessId id of the operativeProcess you want to retrieve
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOperativeProcessById(operativeProcessId: string, options: any = {}): FetchArgs {
            // verify required parameter 'operativeProcessId' is not null or undefined
            if (operativeProcessId === null || operativeProcessId === undefined) {
                throw new RequiredError('operativeProcessId','Required parameter operativeProcessId was null or undefined when calling getOperativeProcessById.');
            }
            const localVarPath = `/api/operativeprocesses/{operativeProcessId}`
                .replace(`{${"operativeProcessId"}}`, encodeURIComponent(String(operativeProcessId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get all operativeProcesses
         * @param {string} facilityId facility to filter the results
         * @param {string} [startAfterId] entity to start after
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOperativeProcesses(facilityId: string, startAfterId?: string, size?: number, options: any = {}): FetchArgs {
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling getOperativeProcesses.');
            }
            const localVarPath = `/api/operativeprocesses`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (facilityId !== undefined) {
                localVarQueryParameter['facilityId'] = facilityId;
            }

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * FulfillmentOperationsOperativeProcessApi - functional programming interface
 * @export
 */
export const FulfillmentOperationsOperativeProcessApiFp = function(configuration?: Configuration) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get operativeProcess by ID
         * @param {string} operativeProcessId id of the operativeProcess you want to retrieve
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOperativeProcessById(operativeProcessId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<OperativeProcess> {
            const localVarFetchArgs = FulfillmentOperationsOperativeProcessApiFetchParamCreator(configuration).getOperativeProcessById(operativeProcessId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get all operativeProcesses
         * @param {string} facilityId facility to filter the results
         * @param {string} [startAfterId] entity to start after
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOperativeProcesses(facilityId: string, startAfterId?: string, size?: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<OperativeProcess>> {
            const localVarFetchArgs = FulfillmentOperationsOperativeProcessApiFetchParamCreator(configuration).getOperativeProcesses(facilityId, startAfterId, size, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * FulfillmentOperationsOperativeProcessApi - factory interface
 * @export
 */
export const FulfillmentOperationsOperativeProcessApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get operativeProcess by ID
         * @param {string} operativeProcessId id of the operativeProcess you want to retrieve
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOperativeProcessById(operativeProcessId: string, options?: any) {
            return FulfillmentOperationsOperativeProcessApiFp(configuration).getOperativeProcessById(operativeProcessId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get all operativeProcesses
         * @param {string} facilityId facility to filter the results
         * @param {string} [startAfterId] entity to start after
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOperativeProcesses(facilityId: string, startAfterId?: string, size?: number, options?: any) {
            return FulfillmentOperationsOperativeProcessApiFp(configuration).getOperativeProcesses(facilityId, startAfterId, size, options)(fetch, basePath);
        },
    };
};

/**
 * FulfillmentOperationsOperativeProcessApi - object-oriented interface
 * @export
 * @class FulfillmentOperationsOperativeProcessApi
 * @extends {BaseAPI}
 */
export class FulfillmentOperationsOperativeProcessApi extends BaseAPI {
    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get operativeProcess by ID
     * @param {string} operativeProcessId id of the operativeProcess you want to retrieve
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsOperativeProcessApi
     */
    public getOperativeProcessById(operativeProcessId: string, options?: any) {
        return FulfillmentOperationsOperativeProcessApiFp(this.configuration).getOperativeProcessById(operativeProcessId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get all operativeProcesses
     * @param {string} facilityId facility to filter the results
     * @param {string} [startAfterId] entity to start after
     * @param {number} [size] number of entities to show
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsOperativeProcessApi
     */
    public getOperativeProcesses(facilityId: string, startAfterId?: string, size?: number, options?: any) {
        return FulfillmentOperationsOperativeProcessApiFp(this.configuration).getOperativeProcesses(facilityId, startAfterId, size, options)(this.fetch, this.basePath);
    }

}
/**
 * FulfillmentOperationsPackingApi - fetch parameter creator
 * @export
 */
export const FulfillmentOperationsPackingApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *
         * @summary Add a new pack job
         * @param {PackJobForCreation} body Pack job object
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addPackJob(body: PackJobForCreation, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling addPackJob.');
            }
            const localVarPath = `/api/packjobs`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"PackJobForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Add a new packing container type
         * @param {PackingContainerTypeForCreation} body Packing type object
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addPackingContainerType(body: PackingContainerTypeForCreation, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling addPackingContainerType.');
            }
            const localVarPath = `/api/packingcontainertypes`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"PackingContainerTypeForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />Creating new packingSourceContainer.
         * @summary Add a new packingSourceContainer
         * @param {PackingSourceContainerForCreation} body Packing type object
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addPackingSourceContainer(body: PackingSourceContainerForCreation, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling addPackingSourceContainer.');
            }
            const localVarPath = `/api/packingsourcecontainers`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"PackingSourceContainerForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Add a new packing container
         * @param {PackingTargetContainerForCreation} body Packing Container object
         * @param {string} packJobId ID of the pack job you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addTargetContainers(body: PackingTargetContainerForCreation, packJobId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling addTargetContainers.');
            }
            // verify required parameter 'packJobId' is not null or undefined
            if (packJobId === null || packJobId === undefined) {
                throw new RequiredError('packJobId','Required parameter packJobId was null or undefined when calling addTargetContainers.');
            }
            const localVarPath = `/api/packjobs/{packJobId}/targetcontainers`
                .replace(`{${"packJobId"}}`, encodeURIComponent(String(packJobId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"PackingTargetContainerForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Add a new packing container line item
         * @param {PackingTargetContainerLineItemForCreation} body Packing Container line item object
         * @param {string} packJobId ID of the pack job you want to get
         * @param {string} targetcontainerId ID of the container you want to add new line item to it
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addTargetcontainer(body: PackingTargetContainerLineItemForCreation, packJobId: string, targetcontainerId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling addTargetcontainer.');
            }
            // verify required parameter 'packJobId' is not null or undefined
            if (packJobId === null || packJobId === undefined) {
                throw new RequiredError('packJobId','Required parameter packJobId was null or undefined when calling addTargetcontainer.');
            }
            // verify required parameter 'targetcontainerId' is not null or undefined
            if (targetcontainerId === null || targetcontainerId === undefined) {
                throw new RequiredError('targetcontainerId','Required parameter targetcontainerId was null or undefined when calling addTargetcontainer.');
            }
            const localVarPath = `/api/packjobs/{packJobId}/targetcontainers/{targetcontainerId}`
                .replace(`{${"packJobId"}}`, encodeURIComponent(String(packJobId)))
                .replace(`{${"targetcontainerId"}}`, encodeURIComponent(String(targetcontainerId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"PackingTargetContainerLineItemForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary deletes a lineItem of a packing container with the given ID
         * @param {string} packJobId ID of corresponding packJob you want to patch
         * @param {string} targetcontainerId ID of container you want to patch
         * @param {string} lineItemId ID of line item you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteLineItemTargetContainers(packJobId: string, targetcontainerId: string, lineItemId: string, options: any = {}): FetchArgs {
            // verify required parameter 'packJobId' is not null or undefined
            if (packJobId === null || packJobId === undefined) {
                throw new RequiredError('packJobId','Required parameter packJobId was null or undefined when calling deleteLineItemTargetContainers.');
            }
            // verify required parameter 'targetcontainerId' is not null or undefined
            if (targetcontainerId === null || targetcontainerId === undefined) {
                throw new RequiredError('targetcontainerId','Required parameter targetcontainerId was null or undefined when calling deleteLineItemTargetContainers.');
            }
            // verify required parameter 'lineItemId' is not null or undefined
            if (lineItemId === null || lineItemId === undefined) {
                throw new RequiredError('lineItemId','Required parameter lineItemId was null or undefined when calling deleteLineItemTargetContainers.');
            }
            const localVarPath = `/api/packjobs/{packJobId}/targetcontainers/{targetcontainerId}/lineitems/{lineItemId}`
                .replace(`{${"packJobId"}}`, encodeURIComponent(String(packJobId)))
                .replace(`{${"targetcontainerId"}}`, encodeURIComponent(String(targetcontainerId)))
                .replace(`{${"lineItemId"}}`, encodeURIComponent(String(lineItemId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary deletes a packing target container with the given ID
         * @param {string} packJobId ID of corresponding packJob you want to patch
         * @param {string} targetcontainerId ID of container you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deletePackingTargetContainer(packJobId: string, targetcontainerId: string, options: any = {}): FetchArgs {
            // verify required parameter 'packJobId' is not null or undefined
            if (packJobId === null || packJobId === undefined) {
                throw new RequiredError('packJobId','Required parameter packJobId was null or undefined when calling deletePackingTargetContainer.');
            }
            // verify required parameter 'targetcontainerId' is not null or undefined
            if (targetcontainerId === null || targetcontainerId === undefined) {
                throw new RequiredError('targetcontainerId','Required parameter targetcontainerId was null or undefined when calling deletePackingTargetContainer.');
            }
            const localVarPath = `/api/packjobs/{packJobId}/targetcontainers/{targetcontainerId}`
                .replace(`{${"packJobId"}}`, encodeURIComponent(String(packJobId)))
                .replace(`{${"targetcontainerId"}}`, encodeURIComponent(String(targetcontainerId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get all packing container on given packJob
         * @param {string} packJobId ID of the pack job you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllTargetcontainers(packJobId: string, options: any = {}): FetchArgs {
            // verify required parameter 'packJobId' is not null or undefined
            if (packJobId === null || packJobId === undefined) {
                throw new RequiredError('packJobId','Required parameter packJobId was null or undefined when calling getAllTargetcontainers.');
            }
            const localVarPath = `/api/packjobs/{packJobId}/targetcontainers`
                .replace(`{${"packJobId"}}`, encodeURIComponent(String(packJobId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get packing information for given Tag
         * @param {Array<TagReference>} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getNeedsPacking(body?: Array<TagReference>, options: any = {}): FetchArgs {
            const localVarPath = `/api/tags/packing/needspacking`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"Array&lt;TagReference&gt;" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a pack job with the given ID
         * @param {string} packJobId ID of the pack job you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackJob(packJobId: string, options: any = {}): FetchArgs {
            // verify required parameter 'packJobId' is not null or undefined
            if (packJobId === null || packJobId === undefined) {
                throw new RequiredError('packJobId','Required parameter packJobId was null or undefined when calling getPackJob.');
            }
            const localVarPath = `/api/packjobs/{packJobId}`
                .replace(`{${"packJobId"}}`, encodeURIComponent(String(packJobId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a deliverynote for the pack job with the given ID
         * @param {string} packJobId ID of the pack job for which you want to get a deliverynote
         * @param {string} [locale] Provide the localized values for the delivery note. If not provided the default locale is used. For example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackJobDeliveryNote(packJobId: string, locale?: string, options: any = {}): FetchArgs {
            // verify required parameter 'packJobId' is not null or undefined
            if (packJobId === null || packJobId === undefined) {
                throw new RequiredError('packJobId','Required parameter packJobId was null or undefined when calling getPackJobDeliveryNote.');
            }
            const localVarPath = `/api/packjobs/{packJobId}/deliverynote`
                .replace(`{${"packJobId"}}`, encodeURIComponent(String(packJobId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a pack job document handling information with the given ID
         * @param {string} packJobId ID of the pack job you want to get document handling information
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackJobDocumentHandling(packJobId: string, options: any = {}): FetchArgs {
            // verify required parameter 'packJobId' is not null or undefined
            if (packJobId === null || packJobId === undefined) {
                throw new RequiredError('packJobId','Required parameter packJobId was null or undefined when calling getPackJobDocumentHandling.');
            }
            const localVarPath = `/api/packjobs/{packJobId}/documenthandling`
                .replace(`{${"packJobId"}}`, encodeURIComponent(String(packJobId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Read tag configuration for the specified section
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackJobTagConfiguration(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/tags/packjob`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get all pack jobs
         * @param {number} [size] number of entities to show
         * @param {string} [startAfterId] all entities after given Id
         * @param {boolean} [anonymized] Parameter to filter anonymized pack jobs
         * @param {Array<string>} [status] Reference to the status you want to get the corresponding pickjobs
         * @param {string} [facilityRef] Reference to the facility you want to get the corresponding packjobs
         * @param {string} [searchTerm] Term by which to search through the fields
         * @param {string} [channel] Reference to the channel you want to get the corresponding packjobs
         * @param {Array<string>} [sourceContainerCodes] filter by  packingsourcecontainer containing codes
         * @param {string} [orderBy] query packjobs orderBy
         * @param {Date} [startTargetTime] Start date range for pack jobs
         * @param {Date} [endTargetTime] End date range for pack jobs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackJobs(size?: number, startAfterId?: string, anonymized?: boolean, status?: Array<string>, facilityRef?: string, searchTerm?: string, channel?: string, sourceContainerCodes?: Array<string>, orderBy?: string, startTargetTime?: Date, endTargetTime?: Date, options: any = {}): FetchArgs {
            const localVarPath = `/api/packjobs`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (anonymized !== undefined) {
                localVarQueryParameter['anonymized'] = anonymized;
            }

            if (status) {
                localVarQueryParameter['status'] = status.join(COLLECTION_FORMATS["csv"]);
            }

            if (facilityRef !== undefined) {
                localVarQueryParameter['facilityRef'] = facilityRef;
            }

            if (searchTerm !== undefined) {
                localVarQueryParameter['searchTerm'] = searchTerm;
            }

            if (channel !== undefined) {
                localVarQueryParameter['channel'] = channel;
            }

            if (sourceContainerCodes) {
                localVarQueryParameter['sourceContainerCodes'] = sourceContainerCodes;
            }

            if (orderBy !== undefined) {
                localVarQueryParameter['orderBy'] = orderBy;
            }

            if (startTargetTime !== undefined) {
                localVarQueryParameter['startTargetTime'] = (startTargetTime as any).toISOString();
            }

            if (endTargetTime !== undefined) {
                localVarQueryParameter['endTargetTime'] = (endTargetTime as any).toISOString();
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get the packing configurations
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackingConfigurations(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/packing`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated, will be replaced with /api/configurations/packing
         * @summary Get the packing container requirement configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackingContainerRequirement(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/packing/containerrequired`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a packing container type by its id
         * @param {string} packingContainerTypeId id of entity
         * @param {string} [locale] Provide the localized values for the entity. If not provided the default locale is used. For example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackingContainerType(packingContainerTypeId: string, locale?: string, options: any = {}): FetchArgs {
            // verify required parameter 'packingContainerTypeId' is not null or undefined
            if (packingContainerTypeId === null || packingContainerTypeId === undefined) {
                throw new RequiredError('packingContainerTypeId','Required parameter packingContainerTypeId was null or undefined when calling getPackingContainerType.');
            }
            const localVarPath = `/api/packingcontainertypes/{packingContainerTypeId}`
                .replace(`{${"packingContainerTypeId"}}`, encodeURIComponent(String(packingContainerTypeId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get all packing container types
         * @param {string} [locale] Provide the localized values for the entity. If not provided the default locale is used. For example de_DE.
         * @param {string} [startAfterId] all entities after given id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackingContainerTypes(locale?: string, startAfterId?: string, size?: number, options: any = {}): FetchArgs {
            const localVarPath = `/api/packingcontainertypes`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />Get PackingSourceContainer by ID.
         * @summary Get a single packingSourceContainer
         * @param {string} packingSourceContainerId ID of the packingSourceContainer
         * @param {string} [locale] Provide the localized values for the entity. If not provided the default locale is used. For example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackingSourceContainerById(packingSourceContainerId: string, locale?: string, options: any = {}): FetchArgs {
            // verify required parameter 'packingSourceContainerId' is not null or undefined
            if (packingSourceContainerId === null || packingSourceContainerId === undefined) {
                throw new RequiredError('packingSourceContainerId','Required parameter packingSourceContainerId was null or undefined when calling getPackingSourceContainerById.');
            }
            const localVarPath = `/api/packingsourcecontainers/{packingSourceContainerId}`
                .replace(`{${"packingSourceContainerId"}}`, encodeURIComponent(String(packingSourceContainerId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Listing packingSourceContainer.
         * @summary Get all packingSourceContainers
         * @param {string} facilityRef filter by facilityRef
         * @param {string} [locale] Provide the localized values for the entity. If not provided the default locale is used. For example de_DE.
         * @param {string} [startAfterId] all entities after given id
         * @param {number} [size] number of entities to show
         * @param {string} [packJobRef] filter by packJobRef
         * @param {Array<string>} [codes] filter by scannablecodes
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackingSourceContainers(facilityRef: string, locale?: string, startAfterId?: string, size?: number, packJobRef?: string, codes?: Array<string>, options: any = {}): FetchArgs {
            // verify required parameter 'facilityRef' is not null or undefined
            if (facilityRef === null || facilityRef === undefined) {
                throw new RequiredError('facilityRef','Required parameter facilityRef was null or undefined when calling getPackingSourceContainers.');
            }
            const localVarPath = `/api/packingsourcecontainers`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            if (packJobRef !== undefined) {
                localVarQueryParameter['packJobRef'] = packJobRef;
            }

            if (facilityRef !== undefined) {
                localVarQueryParameter['facilityRef'] = facilityRef;
            }

            if (codes) {
                localVarQueryParameter['codes'] = codes;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get the return note for the packjob with the given ID
         * @param {string} packJobId ID of the PackJob
         * @param {string} [locale] Provide the localized values for the delivery note. If not provided the default locale is used. For example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getReturnNotesForPackJob(packJobId: string, locale?: string, options: any = {}): FetchArgs {
            // verify required parameter 'packJobId' is not null or undefined
            if (packJobId === null || packJobId === undefined) {
                throw new RequiredError('packJobId','Required parameter packJobId was null or undefined when calling getReturnNotesForPackJob.');
            }
            const localVarPath = `/api/packjobs/{packJobId}/returnnote`
                .replace(`{${"packJobId"}}`, encodeURIComponent(String(packJobId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get a packing target container with the given ID on given packJob
         * @param {string} packJobId ID of the pack job you want to get
         * @param {string} targetcontainerId ID of the target container you want to get
         * @param {string} [locale] Provide the localized values for the entity. If not provided the default locale is used. For example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTargetcontainer(packJobId: string, targetcontainerId: string, locale?: string, options: any = {}): FetchArgs {
            // verify required parameter 'packJobId' is not null or undefined
            if (packJobId === null || packJobId === undefined) {
                throw new RequiredError('packJobId','Required parameter packJobId was null or undefined when calling getTargetcontainer.');
            }
            // verify required parameter 'targetcontainerId' is not null or undefined
            if (targetcontainerId === null || targetcontainerId === undefined) {
                throw new RequiredError('targetcontainerId','Required parameter targetcontainerId was null or undefined when calling getTargetcontainer.');
            }
            const localVarPath = `/api/packjobs/{packJobId}/targetcontainers/{targetcontainerId}`
                .replace(`{${"packJobId"}}`, encodeURIComponent(String(packJobId)))
                .replace(`{${"targetcontainerId"}}`, encodeURIComponent(String(targetcontainerId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Patches a pack job with the given ID
         * @param {PackJobPatchActions} body Patch set
         * @param {string} packJobId ID of the packjob you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchPackJob(body: PackJobPatchActions, packJobId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling patchPackJob.');
            }
            // verify required parameter 'packJobId' is not null or undefined
            if (packJobId === null || packJobId === undefined) {
                throw new RequiredError('packJobId','Required parameter packJobId was null or undefined when calling patchPackJob.');
            }
            const localVarPath = `/api/packjobs/{packJobId}`
                .replace(`{${"packJobId"}}`, encodeURIComponent(String(packJobId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"PackJobPatchActions" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Patch line item of a packing container
         * @summary Patches a packing container with the given ID
         * @param {PackingTargetContainerActionsParameter} body Patch set
         * @param {string} packJobId ID of corresponding packJob you want to patch
         * @param {string} targetcontainerId ID of container you want to patch
         * @param {string} lineItemId ID of line item you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchTargetContainerLineItem(body: PackingTargetContainerActionsParameter, packJobId: string, targetcontainerId: string, lineItemId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling patchTargetContainerLineItem.');
            }
            // verify required parameter 'packJobId' is not null or undefined
            if (packJobId === null || packJobId === undefined) {
                throw new RequiredError('packJobId','Required parameter packJobId was null or undefined when calling patchTargetContainerLineItem.');
            }
            // verify required parameter 'targetcontainerId' is not null or undefined
            if (targetcontainerId === null || targetcontainerId === undefined) {
                throw new RequiredError('targetcontainerId','Required parameter targetcontainerId was null or undefined when calling patchTargetContainerLineItem.');
            }
            // verify required parameter 'lineItemId' is not null or undefined
            if (lineItemId === null || lineItemId === undefined) {
                throw new RequiredError('lineItemId','Required parameter lineItemId was null or undefined when calling patchTargetContainerLineItem.');
            }
            const localVarPath = `/api/packjobs/{packJobId}/targetcontainers/{targetcontainerId}/lineitems/{lineItemId}`
                .replace(`{${"packJobId"}}`, encodeURIComponent(String(packJobId)))
                .replace(`{${"targetcontainerId"}}`, encodeURIComponent(String(targetcontainerId)))
                .replace(`{${"lineItemId"}}`, encodeURIComponent(String(lineItemId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"PackingTargetContainerActionsParameter" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Patches a packing container with the given ID
         * @param {PackingTargetContainerPatchActions} body Patch set
         * @param {string} packJobId ID of corresponding packJob you want to patch
         * @param {string} targetcontainerId ID of container you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchTargetcontainer(body: PackingTargetContainerPatchActions, packJobId: string, targetcontainerId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling patchTargetcontainer.');
            }
            // verify required parameter 'packJobId' is not null or undefined
            if (packJobId === null || packJobId === undefined) {
                throw new RequiredError('packJobId','Required parameter packJobId was null or undefined when calling patchTargetcontainer.');
            }
            // verify required parameter 'targetcontainerId' is not null or undefined
            if (targetcontainerId === null || targetcontainerId === undefined) {
                throw new RequiredError('targetcontainerId','Required parameter targetcontainerId was null or undefined when calling patchTargetcontainer.');
            }
            const localVarPath = `/api/packjobs/{packJobId}/targetcontainers/{targetcontainerId}`
                .replace(`{${"packJobId"}}`, encodeURIComponent(String(packJobId)))
                .replace(`{${"targetcontainerId"}}`, encodeURIComponent(String(targetcontainerId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"PackingTargetContainerPatchActions" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Change the tag configuration for packjobs
         * @param {PackJobTagConfiguration} body Desired PackJobTagConfiguration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putPackJobTagConfiguration(body: PackJobTagConfiguration, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putPackJobTagConfiguration.');
            }
            const localVarPath = `/api/configurations/tags/packjob`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"PackJobTagConfiguration" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated, will be replaced with /api/configurations/packing
         * @summary Change the tenant wide packing container requirement configuration
         * @param {PackingContainerRequiredConfiguration} body Validation picking scan code to activate/deactivate
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putPackingContainerRequirement(body: PackingContainerRequiredConfiguration, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putPackingContainerRequirement.');
            }
            const localVarPath = `/api/configurations/packing/containerrequired`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"PackingContainerRequiredConfiguration" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Patches a PackingContainerType with the given ID
         * @param {PackingContainerTypePatchActions} body Patch set
         * @param {string} packingContainerTypeId ID of the packingcontainertype you want to change
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updatePackingContainerType(body: PackingContainerTypePatchActions, packingContainerTypeId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling updatePackingContainerType.');
            }
            // verify required parameter 'packingContainerTypeId' is not null or undefined
            if (packingContainerTypeId === null || packingContainerTypeId === undefined) {
                throw new RequiredError('packingContainerTypeId','Required parameter packingContainerTypeId was null or undefined when calling updatePackingContainerType.');
            }
            const localVarPath = `/api/packingcontainertypes/{packingContainerTypeId}`
                .replace(`{${"packingContainerTypeId"}}`, encodeURIComponent(String(packingContainerTypeId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"PackingContainerTypePatchActions" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Change the tenant wide packing central configuration
         * @param {PackingConfigurations} body create/update packing central configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertPackingConfigurations(body: PackingConfigurations, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling upsertPackingConfigurations.');
            }
            const localVarPath = `/api/configurations/packing`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"PackingConfigurations" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * FulfillmentOperationsPackingApi - functional programming interface
 * @export
 */
export const FulfillmentOperationsPackingApiFp = function(configuration?: Configuration) {
    return {
        /**
         *
         * @summary Add a new pack job
         * @param {PackJobForCreation} body Pack job object
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addPackJob(body: PackJobForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PackJob> {
            const localVarFetchArgs = FulfillmentOperationsPackingApiFetchParamCreator(configuration).addPackJob(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Add a new packing container type
         * @param {PackingContainerTypeForCreation} body Packing type object
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addPackingContainerType(body: PackingContainerTypeForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PackingContainerType> {
            const localVarFetchArgs = FulfillmentOperationsPackingApiFetchParamCreator(configuration).addPackingContainerType(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />Creating new packingSourceContainer.
         * @summary Add a new packingSourceContainer
         * @param {PackingSourceContainerForCreation} body Packing type object
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addPackingSourceContainer(body: PackingSourceContainerForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PackingSourceContainer> {
            const localVarFetchArgs = FulfillmentOperationsPackingApiFetchParamCreator(configuration).addPackingSourceContainer(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Add a new packing container
         * @param {PackingTargetContainerForCreation} body Packing Container object
         * @param {string} packJobId ID of the pack job you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addTargetContainers(body: PackingTargetContainerForCreation, packJobId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PackingTargetContainer> {
            const localVarFetchArgs = FulfillmentOperationsPackingApiFetchParamCreator(configuration).addTargetContainers(body, packJobId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Add a new packing container line item
         * @param {PackingTargetContainerLineItemForCreation} body Packing Container line item object
         * @param {string} packJobId ID of the pack job you want to get
         * @param {string} targetcontainerId ID of the container you want to add new line item to it
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addTargetcontainer(body: PackingTargetContainerLineItemForCreation, packJobId: string, targetcontainerId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PackingTargetContainer> {
            const localVarFetchArgs = FulfillmentOperationsPackingApiFetchParamCreator(configuration).addTargetcontainer(body, packJobId, targetcontainerId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary deletes a lineItem of a packing container with the given ID
         * @param {string} packJobId ID of corresponding packJob you want to patch
         * @param {string} targetcontainerId ID of container you want to patch
         * @param {string} lineItemId ID of line item you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteLineItemTargetContainers(packJobId: string, targetcontainerId: string, lineItemId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = FulfillmentOperationsPackingApiFetchParamCreator(configuration).deleteLineItemTargetContainers(packJobId, targetcontainerId, lineItemId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary deletes a packing target container with the given ID
         * @param {string} packJobId ID of corresponding packJob you want to patch
         * @param {string} targetcontainerId ID of container you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deletePackingTargetContainer(packJobId: string, targetcontainerId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = FulfillmentOperationsPackingApiFetchParamCreator(configuration).deletePackingTargetContainer(packJobId, targetcontainerId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get all packing container on given packJob
         * @param {string} packJobId ID of the pack job you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllTargetcontainers(packJobId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<PackingTargetContainer>> {
            const localVarFetchArgs = FulfillmentOperationsPackingApiFetchParamCreator(configuration).getAllTargetcontainers(packJobId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get packing information for given Tag
         * @param {Array<TagReference>} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getNeedsPacking(body?: Array<TagReference>, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<NeedsPacking>> {
            const localVarFetchArgs = FulfillmentOperationsPackingApiFetchParamCreator(configuration).getNeedsPacking(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a pack job with the given ID
         * @param {string} packJobId ID of the pack job you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackJob(packJobId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PackJob> {
            const localVarFetchArgs = FulfillmentOperationsPackingApiFetchParamCreator(configuration).getPackJob(packJobId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a deliverynote for the pack job with the given ID
         * @param {string} packJobId ID of the pack job for which you want to get a deliverynote
         * @param {string} [locale] Provide the localized values for the delivery note. If not provided the default locale is used. For example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackJobDeliveryNote(packJobId: string, locale?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = FulfillmentOperationsPackingApiFetchParamCreator(configuration).getPackJobDeliveryNote(packJobId, locale, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a pack job document handling information with the given ID
         * @param {string} packJobId ID of the pack job you want to get document handling information
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackJobDocumentHandling(packJobId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<DocumentHandling> {
            const localVarFetchArgs = FulfillmentOperationsPackingApiFetchParamCreator(configuration).getPackJobDocumentHandling(packJobId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Read tag configuration for the specified section
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackJobTagConfiguration(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PackJobTagConfiguration> {
            const localVarFetchArgs = FulfillmentOperationsPackingApiFetchParamCreator(configuration).getPackJobTagConfiguration(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get all pack jobs
         * @param {number} [size] number of entities to show
         * @param {string} [startAfterId] all entities after given Id
         * @param {boolean} [anonymized] Parameter to filter anonymized pack jobs
         * @param {Array<string>} [status] Reference to the status you want to get the corresponding pickjobs
         * @param {string} [facilityRef] Reference to the facility you want to get the corresponding packjobs
         * @param {string} [searchTerm] Term by which to search through the fields
         * @param {string} [channel] Reference to the channel you want to get the corresponding packjobs
         * @param {Array<string>} [sourceContainerCodes] filter by  packingsourcecontainer containing codes
         * @param {string} [orderBy] query packjobs orderBy
         * @param {Date} [startTargetTime] Start date range for pack jobs
         * @param {Date} [endTargetTime] End date range for pack jobs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackJobs(size?: number, startAfterId?: string, anonymized?: boolean, status?: Array<string>, facilityRef?: string, searchTerm?: string, channel?: string, sourceContainerCodes?: Array<string>, orderBy?: string, startTargetTime?: Date, endTargetTime?: Date, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PackJobs> {
            const localVarFetchArgs = FulfillmentOperationsPackingApiFetchParamCreator(configuration).getPackJobs(size, startAfterId, anonymized, status, facilityRef, searchTerm, channel, sourceContainerCodes, orderBy, startTargetTime, endTargetTime, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get the packing configurations
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackingConfigurations(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PackingConfigurations> {
            const localVarFetchArgs = FulfillmentOperationsPackingApiFetchParamCreator(configuration).getPackingConfigurations(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated, will be replaced with /api/configurations/packing
         * @summary Get the packing container requirement configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackingContainerRequirement(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PackingContainerRequiredConfiguration> {
            const localVarFetchArgs = FulfillmentOperationsPackingApiFetchParamCreator(configuration).getPackingContainerRequirement(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a packing container type by its id
         * @param {string} packingContainerTypeId id of entity
         * @param {string} [locale] Provide the localized values for the entity. If not provided the default locale is used. For example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackingContainerType(packingContainerTypeId: string, locale?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PackingContainerType> {
            const localVarFetchArgs = FulfillmentOperationsPackingApiFetchParamCreator(configuration).getPackingContainerType(packingContainerTypeId, locale, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get all packing container types
         * @param {string} [locale] Provide the localized values for the entity. If not provided the default locale is used. For example de_DE.
         * @param {string} [startAfterId] all entities after given id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackingContainerTypes(locale?: string, startAfterId?: string, size?: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<PackingContainerType>> {
            const localVarFetchArgs = FulfillmentOperationsPackingApiFetchParamCreator(configuration).getPackingContainerTypes(locale, startAfterId, size, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />Get PackingSourceContainer by ID.
         * @summary Get a single packingSourceContainer
         * @param {string} packingSourceContainerId ID of the packingSourceContainer
         * @param {string} [locale] Provide the localized values for the entity. If not provided the default locale is used. For example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackingSourceContainerById(packingSourceContainerId: string, locale?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<PackingSourceContainer>> {
            const localVarFetchArgs = FulfillmentOperationsPackingApiFetchParamCreator(configuration).getPackingSourceContainerById(packingSourceContainerId, locale, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Listing packingSourceContainer.
         * @summary Get all packingSourceContainers
         * @param {string} facilityRef filter by facilityRef
         * @param {string} [locale] Provide the localized values for the entity. If not provided the default locale is used. For example de_DE.
         * @param {string} [startAfterId] all entities after given id
         * @param {number} [size] number of entities to show
         * @param {string} [packJobRef] filter by packJobRef
         * @param {Array<string>} [codes] filter by scannablecodes
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackingSourceContainers(facilityRef: string, locale?: string, startAfterId?: string, size?: number, packJobRef?: string, codes?: Array<string>, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<PaginatedPackingSourceContainers>> {
            const localVarFetchArgs = FulfillmentOperationsPackingApiFetchParamCreator(configuration).getPackingSourceContainers(facilityRef, locale, startAfterId, size, packJobRef, codes, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get the return note for the packjob with the given ID
         * @param {string} packJobId ID of the PackJob
         * @param {string} [locale] Provide the localized values for the delivery note. If not provided the default locale is used. For example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getReturnNotesForPackJob(packJobId: string, locale?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = FulfillmentOperationsPackingApiFetchParamCreator(configuration).getReturnNotesForPackJob(packJobId, locale, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get a packing target container with the given ID on given packJob
         * @param {string} packJobId ID of the pack job you want to get
         * @param {string} targetcontainerId ID of the target container you want to get
         * @param {string} [locale] Provide the localized values for the entity. If not provided the default locale is used. For example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTargetcontainer(packJobId: string, targetcontainerId: string, locale?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PackingTargetContainer> {
            const localVarFetchArgs = FulfillmentOperationsPackingApiFetchParamCreator(configuration).getTargetcontainer(packJobId, targetcontainerId, locale, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Patches a pack job with the given ID
         * @param {PackJobPatchActions} body Patch set
         * @param {string} packJobId ID of the packjob you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchPackJob(body: PackJobPatchActions, packJobId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PackJob> {
            const localVarFetchArgs = FulfillmentOperationsPackingApiFetchParamCreator(configuration).patchPackJob(body, packJobId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Patch line item of a packing container
         * @summary Patches a packing container with the given ID
         * @param {PackingTargetContainerActionsParameter} body Patch set
         * @param {string} packJobId ID of corresponding packJob you want to patch
         * @param {string} targetcontainerId ID of container you want to patch
         * @param {string} lineItemId ID of line item you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchTargetContainerLineItem(body: PackingTargetContainerActionsParameter, packJobId: string, targetcontainerId: string, lineItemId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PackingTargetContainer> {
            const localVarFetchArgs = FulfillmentOperationsPackingApiFetchParamCreator(configuration).patchTargetContainerLineItem(body, packJobId, targetcontainerId, lineItemId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Patches a packing container with the given ID
         * @param {PackingTargetContainerPatchActions} body Patch set
         * @param {string} packJobId ID of corresponding packJob you want to patch
         * @param {string} targetcontainerId ID of container you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchTargetcontainer(body: PackingTargetContainerPatchActions, packJobId: string, targetcontainerId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PackingTargetContainer> {
            const localVarFetchArgs = FulfillmentOperationsPackingApiFetchParamCreator(configuration).patchTargetcontainer(body, packJobId, targetcontainerId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Change the tag configuration for packjobs
         * @param {PackJobTagConfiguration} body Desired PackJobTagConfiguration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putPackJobTagConfiguration(body: PackJobTagConfiguration, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PackJobTagConfiguration> {
            const localVarFetchArgs = FulfillmentOperationsPackingApiFetchParamCreator(configuration).putPackJobTagConfiguration(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated, will be replaced with /api/configurations/packing
         * @summary Change the tenant wide packing container requirement configuration
         * @param {PackingContainerRequiredConfiguration} body Validation picking scan code to activate/deactivate
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putPackingContainerRequirement(body: PackingContainerRequiredConfiguration, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PackingContainerRequiredConfiguration> {
            const localVarFetchArgs = FulfillmentOperationsPackingApiFetchParamCreator(configuration).putPackingContainerRequirement(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Patches a PackingContainerType with the given ID
         * @param {PackingContainerTypePatchActions} body Patch set
         * @param {string} packingContainerTypeId ID of the packingcontainertype you want to change
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updatePackingContainerType(body: PackingContainerTypePatchActions, packingContainerTypeId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PackingContainerType> {
            const localVarFetchArgs = FulfillmentOperationsPackingApiFetchParamCreator(configuration).updatePackingContainerType(body, packingContainerTypeId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Change the tenant wide packing central configuration
         * @param {PackingConfigurations} body create/update packing central configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertPackingConfigurations(body: PackingConfigurations, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PackingConfigurations> {
            const localVarFetchArgs = FulfillmentOperationsPackingApiFetchParamCreator(configuration).upsertPackingConfigurations(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * FulfillmentOperationsPackingApi - factory interface
 * @export
 */
export const FulfillmentOperationsPackingApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         *
         * @summary Add a new pack job
         * @param {PackJobForCreation} body Pack job object
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addPackJob(body: PackJobForCreation, options?: any) {
            return FulfillmentOperationsPackingApiFp(configuration).addPackJob(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Add a new packing container type
         * @param {PackingContainerTypeForCreation} body Packing type object
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addPackingContainerType(body: PackingContainerTypeForCreation, options?: any) {
            return FulfillmentOperationsPackingApiFp(configuration).addPackingContainerType(body, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />Creating new packingSourceContainer.
         * @summary Add a new packingSourceContainer
         * @param {PackingSourceContainerForCreation} body Packing type object
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addPackingSourceContainer(body: PackingSourceContainerForCreation, options?: any) {
            return FulfillmentOperationsPackingApiFp(configuration).addPackingSourceContainer(body, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Add a new packing container
         * @param {PackingTargetContainerForCreation} body Packing Container object
         * @param {string} packJobId ID of the pack job you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addTargetContainers(body: PackingTargetContainerForCreation, packJobId: string, options?: any) {
            return FulfillmentOperationsPackingApiFp(configuration).addTargetContainers(body, packJobId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Add a new packing container line item
         * @param {PackingTargetContainerLineItemForCreation} body Packing Container line item object
         * @param {string} packJobId ID of the pack job you want to get
         * @param {string} targetcontainerId ID of the container you want to add new line item to it
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addTargetcontainer(body: PackingTargetContainerLineItemForCreation, packJobId: string, targetcontainerId: string, options?: any) {
            return FulfillmentOperationsPackingApiFp(configuration).addTargetcontainer(body, packJobId, targetcontainerId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary deletes a lineItem of a packing container with the given ID
         * @param {string} packJobId ID of corresponding packJob you want to patch
         * @param {string} targetcontainerId ID of container you want to patch
         * @param {string} lineItemId ID of line item you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteLineItemTargetContainers(packJobId: string, targetcontainerId: string, lineItemId: string, options?: any) {
            return FulfillmentOperationsPackingApiFp(configuration).deleteLineItemTargetContainers(packJobId, targetcontainerId, lineItemId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary deletes a packing target container with the given ID
         * @param {string} packJobId ID of corresponding packJob you want to patch
         * @param {string} targetcontainerId ID of container you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deletePackingTargetContainer(packJobId: string, targetcontainerId: string, options?: any) {
            return FulfillmentOperationsPackingApiFp(configuration).deletePackingTargetContainer(packJobId, targetcontainerId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get all packing container on given packJob
         * @param {string} packJobId ID of the pack job you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllTargetcontainers(packJobId: string, options?: any) {
            return FulfillmentOperationsPackingApiFp(configuration).getAllTargetcontainers(packJobId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get packing information for given Tag
         * @param {Array<TagReference>} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getNeedsPacking(body?: Array<TagReference>, options?: any) {
            return FulfillmentOperationsPackingApiFp(configuration).getNeedsPacking(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a pack job with the given ID
         * @param {string} packJobId ID of the pack job you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackJob(packJobId: string, options?: any) {
            return FulfillmentOperationsPackingApiFp(configuration).getPackJob(packJobId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a deliverynote for the pack job with the given ID
         * @param {string} packJobId ID of the pack job for which you want to get a deliverynote
         * @param {string} [locale] Provide the localized values for the delivery note. If not provided the default locale is used. For example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackJobDeliveryNote(packJobId: string, locale?: string, options?: any) {
            return FulfillmentOperationsPackingApiFp(configuration).getPackJobDeliveryNote(packJobId, locale, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a pack job document handling information with the given ID
         * @param {string} packJobId ID of the pack job you want to get document handling information
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackJobDocumentHandling(packJobId: string, options?: any) {
            return FulfillmentOperationsPackingApiFp(configuration).getPackJobDocumentHandling(packJobId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Read tag configuration for the specified section
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackJobTagConfiguration(options?: any) {
            return FulfillmentOperationsPackingApiFp(configuration).getPackJobTagConfiguration(options)(fetch, basePath);
        },
        /**
         *
         * @summary Get all pack jobs
         * @param {number} [size] number of entities to show
         * @param {string} [startAfterId] all entities after given Id
         * @param {boolean} [anonymized] Parameter to filter anonymized pack jobs
         * @param {Array<string>} [status] Reference to the status you want to get the corresponding pickjobs
         * @param {string} [facilityRef] Reference to the facility you want to get the corresponding packjobs
         * @param {string} [searchTerm] Term by which to search through the fields
         * @param {string} [channel] Reference to the channel you want to get the corresponding packjobs
         * @param {Array<string>} [sourceContainerCodes] filter by  packingsourcecontainer containing codes
         * @param {string} [orderBy] query packjobs orderBy
         * @param {Date} [startTargetTime] Start date range for pack jobs
         * @param {Date} [endTargetTime] End date range for pack jobs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackJobs(size?: number, startAfterId?: string, anonymized?: boolean, status?: Array<string>, facilityRef?: string, searchTerm?: string, channel?: string, sourceContainerCodes?: Array<string>, orderBy?: string, startTargetTime?: Date, endTargetTime?: Date, options?: any) {
            return FulfillmentOperationsPackingApiFp(configuration).getPackJobs(size, startAfterId, anonymized, status, facilityRef, searchTerm, channel, sourceContainerCodes, orderBy, startTargetTime, endTargetTime, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get the packing configurations
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackingConfigurations(options?: any) {
            return FulfillmentOperationsPackingApiFp(configuration).getPackingConfigurations(options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated, will be replaced with /api/configurations/packing
         * @summary Get the packing container requirement configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackingContainerRequirement(options?: any) {
            return FulfillmentOperationsPackingApiFp(configuration).getPackingContainerRequirement(options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a packing container type by its id
         * @param {string} packingContainerTypeId id of entity
         * @param {string} [locale] Provide the localized values for the entity. If not provided the default locale is used. For example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackingContainerType(packingContainerTypeId: string, locale?: string, options?: any) {
            return FulfillmentOperationsPackingApiFp(configuration).getPackingContainerType(packingContainerTypeId, locale, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get all packing container types
         * @param {string} [locale] Provide the localized values for the entity. If not provided the default locale is used. For example de_DE.
         * @param {string} [startAfterId] all entities after given id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackingContainerTypes(locale?: string, startAfterId?: string, size?: number, options?: any) {
            return FulfillmentOperationsPackingApiFp(configuration).getPackingContainerTypes(locale, startAfterId, size, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />Get PackingSourceContainer by ID.
         * @summary Get a single packingSourceContainer
         * @param {string} packingSourceContainerId ID of the packingSourceContainer
         * @param {string} [locale] Provide the localized values for the entity. If not provided the default locale is used. For example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackingSourceContainerById(packingSourceContainerId: string, locale?: string, options?: any) {
            return FulfillmentOperationsPackingApiFp(configuration).getPackingSourceContainerById(packingSourceContainerId, locale, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Listing packingSourceContainer.
         * @summary Get all packingSourceContainers
         * @param {string} facilityRef filter by facilityRef
         * @param {string} [locale] Provide the localized values for the entity. If not provided the default locale is used. For example de_DE.
         * @param {string} [startAfterId] all entities after given id
         * @param {number} [size] number of entities to show
         * @param {string} [packJobRef] filter by packJobRef
         * @param {Array<string>} [codes] filter by scannablecodes
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPackingSourceContainers(facilityRef: string, locale?: string, startAfterId?: string, size?: number, packJobRef?: string, codes?: Array<string>, options?: any) {
            return FulfillmentOperationsPackingApiFp(configuration).getPackingSourceContainers(facilityRef, locale, startAfterId, size, packJobRef, codes, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get the return note for the packjob with the given ID
         * @param {string} packJobId ID of the PackJob
         * @param {string} [locale] Provide the localized values for the delivery note. If not provided the default locale is used. For example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getReturnNotesForPackJob(packJobId: string, locale?: string, options?: any) {
            return FulfillmentOperationsPackingApiFp(configuration).getReturnNotesForPackJob(packJobId, locale, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get a packing target container with the given ID on given packJob
         * @param {string} packJobId ID of the pack job you want to get
         * @param {string} targetcontainerId ID of the target container you want to get
         * @param {string} [locale] Provide the localized values for the entity. If not provided the default locale is used. For example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTargetcontainer(packJobId: string, targetcontainerId: string, locale?: string, options?: any) {
            return FulfillmentOperationsPackingApiFp(configuration).getTargetcontainer(packJobId, targetcontainerId, locale, options)(fetch, basePath);
        },
        /**
         *
         * @summary Patches a pack job with the given ID
         * @param {PackJobPatchActions} body Patch set
         * @param {string} packJobId ID of the packjob you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchPackJob(body: PackJobPatchActions, packJobId: string, options?: any) {
            return FulfillmentOperationsPackingApiFp(configuration).patchPackJob(body, packJobId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Patch line item of a packing container
         * @summary Patches a packing container with the given ID
         * @param {PackingTargetContainerActionsParameter} body Patch set
         * @param {string} packJobId ID of corresponding packJob you want to patch
         * @param {string} targetcontainerId ID of container you want to patch
         * @param {string} lineItemId ID of line item you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchTargetContainerLineItem(body: PackingTargetContainerActionsParameter, packJobId: string, targetcontainerId: string, lineItemId: string, options?: any) {
            return FulfillmentOperationsPackingApiFp(configuration).patchTargetContainerLineItem(body, packJobId, targetcontainerId, lineItemId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Patches a packing container with the given ID
         * @param {PackingTargetContainerPatchActions} body Patch set
         * @param {string} packJobId ID of corresponding packJob you want to patch
         * @param {string} targetcontainerId ID of container you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchTargetcontainer(body: PackingTargetContainerPatchActions, packJobId: string, targetcontainerId: string, options?: any) {
            return FulfillmentOperationsPackingApiFp(configuration).patchTargetcontainer(body, packJobId, targetcontainerId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Change the tag configuration for packjobs
         * @param {PackJobTagConfiguration} body Desired PackJobTagConfiguration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putPackJobTagConfiguration(body: PackJobTagConfiguration, options?: any) {
            return FulfillmentOperationsPackingApiFp(configuration).putPackJobTagConfiguration(body, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated, will be replaced with /api/configurations/packing
         * @summary Change the tenant wide packing container requirement configuration
         * @param {PackingContainerRequiredConfiguration} body Validation picking scan code to activate/deactivate
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putPackingContainerRequirement(body: PackingContainerRequiredConfiguration, options?: any) {
            return FulfillmentOperationsPackingApiFp(configuration).putPackingContainerRequirement(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Patches a PackingContainerType with the given ID
         * @param {PackingContainerTypePatchActions} body Patch set
         * @param {string} packingContainerTypeId ID of the packingcontainertype you want to change
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updatePackingContainerType(body: PackingContainerTypePatchActions, packingContainerTypeId: string, options?: any) {
            return FulfillmentOperationsPackingApiFp(configuration).updatePackingContainerType(body, packingContainerTypeId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Change the tenant wide packing central configuration
         * @param {PackingConfigurations} body create/update packing central configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertPackingConfigurations(body: PackingConfigurations, options?: any) {
            return FulfillmentOperationsPackingApiFp(configuration).upsertPackingConfigurations(body, options)(fetch, basePath);
        },
    };
};

/**
 * FulfillmentOperationsPackingApi - object-oriented interface
 * @export
 * @class FulfillmentOperationsPackingApi
 * @extends {BaseAPI}
 */
export class FulfillmentOperationsPackingApi extends BaseAPI {
    /**
     *
     * @summary Add a new pack job
     * @param {PackJobForCreation} body Pack job object
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPackingApi
     */
    public addPackJob(body: PackJobForCreation, options?: any) {
        return FulfillmentOperationsPackingApiFp(this.configuration).addPackJob(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Add a new packing container type
     * @param {PackingContainerTypeForCreation} body Packing type object
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPackingApi
     */
    public addPackingContainerType(body: PackingContainerTypeForCreation, options?: any) {
        return FulfillmentOperationsPackingApiFp(this.configuration).addPackingContainerType(body, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />Creating new packingSourceContainer.
     * @summary Add a new packingSourceContainer
     * @param {PackingSourceContainerForCreation} body Packing type object
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPackingApi
     */
    public addPackingSourceContainer(body: PackingSourceContainerForCreation, options?: any) {
        return FulfillmentOperationsPackingApiFp(this.configuration).addPackingSourceContainer(body, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Add a new packing container
     * @param {PackingTargetContainerForCreation} body Packing Container object
     * @param {string} packJobId ID of the pack job you want to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPackingApi
     */
    public addTargetContainers(body: PackingTargetContainerForCreation, packJobId: string, options?: any) {
        return FulfillmentOperationsPackingApiFp(this.configuration).addTargetContainers(body, packJobId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Add a new packing container line item
     * @param {PackingTargetContainerLineItemForCreation} body Packing Container line item object
     * @param {string} packJobId ID of the pack job you want to get
     * @param {string} targetcontainerId ID of the container you want to add new line item to it
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPackingApi
     */
    public addTargetcontainer(body: PackingTargetContainerLineItemForCreation, packJobId: string, targetcontainerId: string, options?: any) {
        return FulfillmentOperationsPackingApiFp(this.configuration).addTargetcontainer(body, packJobId, targetcontainerId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary deletes a lineItem of a packing container with the given ID
     * @param {string} packJobId ID of corresponding packJob you want to patch
     * @param {string} targetcontainerId ID of container you want to patch
     * @param {string} lineItemId ID of line item you want to patch
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPackingApi
     */
    public deleteLineItemTargetContainers(packJobId: string, targetcontainerId: string, lineItemId: string, options?: any) {
        return FulfillmentOperationsPackingApiFp(this.configuration).deleteLineItemTargetContainers(packJobId, targetcontainerId, lineItemId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary deletes a packing target container with the given ID
     * @param {string} packJobId ID of corresponding packJob you want to patch
     * @param {string} targetcontainerId ID of container you want to delete
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPackingApi
     */
    public deletePackingTargetContainer(packJobId: string, targetcontainerId: string, options?: any) {
        return FulfillmentOperationsPackingApiFp(this.configuration).deletePackingTargetContainer(packJobId, targetcontainerId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get all packing container on given packJob
     * @param {string} packJobId ID of the pack job you want to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPackingApi
     */
    public getAllTargetcontainers(packJobId: string, options?: any) {
        return FulfillmentOperationsPackingApiFp(this.configuration).getAllTargetcontainers(packJobId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get packing information for given Tag
     * @param {Array<TagReference>} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPackingApi
     */
    public getNeedsPacking(body?: Array<TagReference>, options?: any) {
        return FulfillmentOperationsPackingApiFp(this.configuration).getNeedsPacking(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a pack job with the given ID
     * @param {string} packJobId ID of the pack job you want to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPackingApi
     */
    public getPackJob(packJobId: string, options?: any) {
        return FulfillmentOperationsPackingApiFp(this.configuration).getPackJob(packJobId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a deliverynote for the pack job with the given ID
     * @param {string} packJobId ID of the pack job for which you want to get a deliverynote
     * @param {string} [locale] Provide the localized values for the delivery note. If not provided the default locale is used. For example de_DE.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPackingApi
     */
    public getPackJobDeliveryNote(packJobId: string, locale?: string, options?: any) {
        return FulfillmentOperationsPackingApiFp(this.configuration).getPackJobDeliveryNote(packJobId, locale, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a pack job document handling information with the given ID
     * @param {string} packJobId ID of the pack job you want to get document handling information
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPackingApi
     */
    public getPackJobDocumentHandling(packJobId: string, options?: any) {
        return FulfillmentOperationsPackingApiFp(this.configuration).getPackJobDocumentHandling(packJobId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Read tag configuration for the specified section
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPackingApi
     */
    public getPackJobTagConfiguration(options?: any) {
        return FulfillmentOperationsPackingApiFp(this.configuration).getPackJobTagConfiguration(options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get all pack jobs
     * @param {number} [size] number of entities to show
     * @param {string} [startAfterId] all entities after given Id
     * @param {boolean} [anonymized] Parameter to filter anonymized pack jobs
     * @param {Array<string>} [status] Reference to the status you want to get the corresponding pickjobs
     * @param {string} [facilityRef] Reference to the facility you want to get the corresponding packjobs
     * @param {string} [searchTerm] Term by which to search through the fields
     * @param {string} [channel] Reference to the channel you want to get the corresponding packjobs
     * @param {Array<string>} [sourceContainerCodes] filter by  packingsourcecontainer containing codes
     * @param {string} [orderBy] query packjobs orderBy
     * @param {Date} [startTargetTime] Start date range for pack jobs
     * @param {Date} [endTargetTime] End date range for pack jobs
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPackingApi
     */
    public getPackJobs(size?: number, startAfterId?: string, anonymized?: boolean, status?: Array<string>, facilityRef?: string, searchTerm?: string, channel?: string, sourceContainerCodes?: Array<string>, orderBy?: string, startTargetTime?: Date, endTargetTime?: Date, options?: any) {
        return FulfillmentOperationsPackingApiFp(this.configuration).getPackJobs(size, startAfterId, anonymized, status, facilityRef, searchTerm, channel, sourceContainerCodes, orderBy, startTargetTime, endTargetTime, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get the packing configurations
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPackingApi
     */
    public getPackingConfigurations(options?: any) {
        return FulfillmentOperationsPackingApiFp(this.configuration).getPackingConfigurations(options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated, will be replaced with /api/configurations/packing
     * @summary Get the packing container requirement configuration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPackingApi
     */
    public getPackingContainerRequirement(options?: any) {
        return FulfillmentOperationsPackingApiFp(this.configuration).getPackingContainerRequirement(options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a packing container type by its id
     * @param {string} packingContainerTypeId id of entity
     * @param {string} [locale] Provide the localized values for the entity. If not provided the default locale is used. For example de_DE.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPackingApi
     */
    public getPackingContainerType(packingContainerTypeId: string, locale?: string, options?: any) {
        return FulfillmentOperationsPackingApiFp(this.configuration).getPackingContainerType(packingContainerTypeId, locale, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get all packing container types
     * @param {string} [locale] Provide the localized values for the entity. If not provided the default locale is used. For example de_DE.
     * @param {string} [startAfterId] all entities after given id
     * @param {number} [size] number of entities to show
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPackingApi
     */
    public getPackingContainerTypes(locale?: string, startAfterId?: string, size?: number, options?: any) {
        return FulfillmentOperationsPackingApiFp(this.configuration).getPackingContainerTypes(locale, startAfterId, size, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />Get PackingSourceContainer by ID.
     * @summary Get a single packingSourceContainer
     * @param {string} packingSourceContainerId ID of the packingSourceContainer
     * @param {string} [locale] Provide the localized values for the entity. If not provided the default locale is used. For example de_DE.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPackingApi
     */
    public getPackingSourceContainerById(packingSourceContainerId: string, locale?: string, options?: any) {
        return FulfillmentOperationsPackingApiFp(this.configuration).getPackingSourceContainerById(packingSourceContainerId, locale, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Listing packingSourceContainer.
     * @summary Get all packingSourceContainers
     * @param {string} facilityRef filter by facilityRef
     * @param {string} [locale] Provide the localized values for the entity. If not provided the default locale is used. For example de_DE.
     * @param {string} [startAfterId] all entities after given id
     * @param {number} [size] number of entities to show
     * @param {string} [packJobRef] filter by packJobRef
     * @param {Array<string>} [codes] filter by scannablecodes
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPackingApi
     */
    public getPackingSourceContainers(facilityRef: string, locale?: string, startAfterId?: string, size?: number, packJobRef?: string, codes?: Array<string>, options?: any) {
        return FulfillmentOperationsPackingApiFp(this.configuration).getPackingSourceContainers(facilityRef, locale, startAfterId, size, packJobRef, codes, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get the return note for the packjob with the given ID
     * @param {string} packJobId ID of the PackJob
     * @param {string} [locale] Provide the localized values for the delivery note. If not provided the default locale is used. For example de_DE.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPackingApi
     */
    public getReturnNotesForPackJob(packJobId: string, locale?: string, options?: any) {
        return FulfillmentOperationsPackingApiFp(this.configuration).getReturnNotesForPackJob(packJobId, locale, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get a packing target container with the given ID on given packJob
     * @param {string} packJobId ID of the pack job you want to get
     * @param {string} targetcontainerId ID of the target container you want to get
     * @param {string} [locale] Provide the localized values for the entity. If not provided the default locale is used. For example de_DE.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPackingApi
     */
    public getTargetcontainer(packJobId: string, targetcontainerId: string, locale?: string, options?: any) {
        return FulfillmentOperationsPackingApiFp(this.configuration).getTargetcontainer(packJobId, targetcontainerId, locale, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Patches a pack job with the given ID
     * @param {PackJobPatchActions} body Patch set
     * @param {string} packJobId ID of the packjob you want to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPackingApi
     */
    public patchPackJob(body: PackJobPatchActions, packJobId: string, options?: any) {
        return FulfillmentOperationsPackingApiFp(this.configuration).patchPackJob(body, packJobId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Patch line item of a packing container
     * @summary Patches a packing container with the given ID
     * @param {PackingTargetContainerActionsParameter} body Patch set
     * @param {string} packJobId ID of corresponding packJob you want to patch
     * @param {string} targetcontainerId ID of container you want to patch
     * @param {string} lineItemId ID of line item you want to patch
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPackingApi
     */
    public patchTargetContainerLineItem(body: PackingTargetContainerActionsParameter, packJobId: string, targetcontainerId: string, lineItemId: string, options?: any) {
        return FulfillmentOperationsPackingApiFp(this.configuration).patchTargetContainerLineItem(body, packJobId, targetcontainerId, lineItemId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Patches a packing container with the given ID
     * @param {PackingTargetContainerPatchActions} body Patch set
     * @param {string} packJobId ID of corresponding packJob you want to patch
     * @param {string} targetcontainerId ID of container you want to patch
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPackingApi
     */
    public patchTargetcontainer(body: PackingTargetContainerPatchActions, packJobId: string, targetcontainerId: string, options?: any) {
        return FulfillmentOperationsPackingApiFp(this.configuration).patchTargetcontainer(body, packJobId, targetcontainerId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Change the tag configuration for packjobs
     * @param {PackJobTagConfiguration} body Desired PackJobTagConfiguration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPackingApi
     */
    public putPackJobTagConfiguration(body: PackJobTagConfiguration, options?: any) {
        return FulfillmentOperationsPackingApiFp(this.configuration).putPackJobTagConfiguration(body, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Deprecated, will be replaced with /api/configurations/packing
     * @summary Change the tenant wide packing container requirement configuration
     * @param {PackingContainerRequiredConfiguration} body Validation picking scan code to activate/deactivate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPackingApi
     */
    public putPackingContainerRequirement(body: PackingContainerRequiredConfiguration, options?: any) {
        return FulfillmentOperationsPackingApiFp(this.configuration).putPackingContainerRequirement(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Patches a PackingContainerType with the given ID
     * @param {PackingContainerTypePatchActions} body Patch set
     * @param {string} packingContainerTypeId ID of the packingcontainertype you want to change
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPackingApi
     */
    public updatePackingContainerType(body: PackingContainerTypePatchActions, packingContainerTypeId: string, options?: any) {
        return FulfillmentOperationsPackingApiFp(this.configuration).updatePackingContainerType(body, packingContainerTypeId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Change the tenant wide packing central configuration
     * @param {PackingConfigurations} body create/update packing central configuration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPackingApi
     */
    public upsertPackingConfigurations(body: PackingConfigurations, options?: any) {
        return FulfillmentOperationsPackingApiFp(this.configuration).upsertPackingConfigurations(body, options)(this.fetch, this.basePath);
    }

}
/**
 * FulfillmentOperationsPickingApi - fetch parameter creator
 * @export
 */
export const FulfillmentOperationsPickingApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *
         * @summary Add new load units
         * @param {LoadUnitsForCreation} body Representation that describes the unit load
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addLoadUnit(body: LoadUnitsForCreation, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling addLoadUnit.');
            }
            const localVarPath = `/api/loadunits`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"LoadUnitsForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Add a new pick job for fulfillment
         * @param {PickJobForCreation} body Pick job object
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addPickJob(body: PickJobForCreation, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling addPickJob.');
            }
            const localVarPath = `/api/pickjobs`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"PickJobForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Add a new load unit for pick job
         * @param {PickingLoadUnitForCreation} body Pick job load unit object
         * @param {string} pickJobId Reference to the pick job you want to get the corresponding loadunits
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addPickJobLoadUnits(body: PickingLoadUnitForCreation, pickJobId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling addPickJobLoadUnits.');
            }
            // verify required parameter 'pickJobId' is not null or undefined
            if (pickJobId === null || pickJobId === undefined) {
                throw new RequiredError('pickJobId','Required parameter pickJobId was null or undefined when calling addPickJobLoadUnits.');
            }
            const localVarPath = `/api/pickjobs/{pickJobId}/loadunits`
                .replace(`{${"pickJobId"}}`, encodeURIComponent(String(pickJobId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"PickingLoadUnitForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Add a new PickRun
         * @param {PickRunForCreation} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addPickRun(body: PickRunForCreation, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling addPickRun.');
            }
            const localVarPath = `/api/pickruns`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"PickRunForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Create new load unit type
         * @param {LoadUnitTypeForCreation} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createLoadUnitTypes(body: LoadUnitTypeForCreation, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling createLoadUnitTypes.');
            }
            const localVarPath = `/api/loadunittypes`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"LoadUnitTypeForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Delete load unit
         * @param {string} loadUnitId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteLoadUnit(loadUnitId: string, options: any = {}): FetchArgs {
            // verify required parameter 'loadUnitId' is not null or undefined
            if (loadUnitId === null || loadUnitId === undefined) {
                throw new RequiredError('loadUnitId','Required parameter loadUnitId was null or undefined when calling deleteLoadUnit.');
            }
            const localVarPath = `/api/loadunits/{loadUnitId}`
                .replace(`{${"loadUnitId"}}`, encodeURIComponent(String(loadUnitId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Delete loadunits by pickJobRef
         * @param {string} [pickJobRef] Reference to the pickJob of which you want to delete the loadUnits
         * @param {Array<string>} [id] Load unit ids
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteLoadUnits(pickJobRef?: string, id?: Array<string>, options: any = {}): FetchArgs {
            const localVarPath = `/api/loadunits`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (pickJobRef !== undefined) {
                localVarQueryParameter['pickJobRef'] = pickJobRef;
            }

            if (id) {
                localVarQueryParameter['id'] = id;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary deletes substitutes for the given tenant article id
         * @param {string} tenantArticleId the tenant article ID the subsitutes should be deleted for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSubstitutesForTenantArticleId(tenantArticleId: string, options: any = {}): FetchArgs {
            // verify required parameter 'tenantArticleId' is not null or undefined
            if (tenantArticleId === null || tenantArticleId === undefined) {
                throw new RequiredError('tenantArticleId','Required parameter tenantArticleId was null or undefined when calling deleteSubstitutesForTenantArticleId.');
            }
            const localVarPath = `/api/substitutes/{tenantArticleId}`
                .replace(`{${"tenantArticleId"}}`, encodeURIComponent(String(tenantArticleId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Return all load units
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of loadUnits to show
         * @param {string} [pickJobRef] query load units with the given pickJobRef
         * @param {string} [locale] Provide the localized names and descriptions for the routing configuration. If not provided the default locale is used., for example de_DE
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllLoadUnits(startAfterId?: string, size?: number, pickJobRef?: string, locale?: string, options: any = {}): FetchArgs {
            const localVarPath = `/api/loadunits`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            if (pickJobRef !== undefined) {
                localVarQueryParameter['pickJobRef'] = pickJobRef;
            }

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a tenant wide cutoff time config
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCutoffTimeConfiguration(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/cutofftime`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get the current configuration for tenant wide default picking times
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDefaultPickingTimesConfiguration(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/pickingtimes`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a tenant fulfillment process buffer configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFulfillmentProcessBufferConfiguration(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/fulfillmentprocessbuffer`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a loadUnit by its ID
         * @param {string} loadUnitId
         * @param {string} [locale] Provide the localized names and descriptions for the routing configuration. If not provided the default locale is used., for example de_DE
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLoadUnitByID(loadUnitId: string, locale?: string, options: any = {}): FetchArgs {
            // verify required parameter 'loadUnitId' is not null or undefined
            if (loadUnitId === null || loadUnitId === undefined) {
                throw new RequiredError('loadUnitId','Required parameter loadUnitId was null or undefined when calling getLoadUnitByID.');
            }
            const localVarPath = `/api/loadunits/{loadUnitId}`
                .replace(`{${"loadUnitId"}}`, encodeURIComponent(String(loadUnitId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get the load unit configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLoadUnitConfiguration(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/loadunit`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a loadUnitType by its ID
         * @param {string} loadUnitTypeId
         * @param {string} [locale] Provide the localized names and descriptions for the routing configuration. If not provided the default locale is used., for example de_DE
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLoadUnitTypeByID(loadUnitTypeId: string, locale?: string, options: any = {}): FetchArgs {
            // verify required parameter 'loadUnitTypeId' is not null or undefined
            if (loadUnitTypeId === null || loadUnitTypeId === undefined) {
                throw new RequiredError('loadUnitTypeId','Required parameter loadUnitTypeId was null or undefined when calling getLoadUnitTypeByID.');
            }
            const localVarPath = `/api/loadunittypes/{loadUnitTypeId}`
                .replace(`{${"loadUnitTypeId"}}`, encodeURIComponent(String(loadUnitTypeId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get all load unit types
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {string} [locale] Provide the localized names and descriptions for the routing configuration. If not provided the default locale is used., for example de_DE
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLoadUnitTypes(startAfterId?: string, size?: number, locale?: string, options: any = {}): FetchArgs {
            const localVarPath = `/api/loadunittypes`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a pick job with the given ID
         * @param {string} pickJobId ID of the pickjob you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPickJob(pickJobId: string, options: any = {}): FetchArgs {
            // verify required parameter 'pickJobId' is not null or undefined
            if (pickJobId === null || pickJobId === undefined) {
                throw new RequiredError('pickJobId','Required parameter pickJobId was null or undefined when calling getPickJob.');
            }
            const localVarPath = `/api/pickjobs/{pickJobId}`
                .replace(`{${"pickJobId"}}`, encodeURIComponent(String(pickJobId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a deliverynote for the pick job with the given ID
         * @param {string} pickJobId ID of the pick job for which you want to get a deliverynote
         * @param {string} [locale] Provide the localized values for the delivery note. If not provided the default locale is used. For example de_DE
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPickJobDeliveryNote(pickJobId: string, locale?: string, options: any = {}): FetchArgs {
            // verify required parameter 'pickJobId' is not null or undefined
            if (pickJobId === null || pickJobId === undefined) {
                throw new RequiredError('pickJobId','Required parameter pickJobId was null or undefined when calling getPickJobDeliveryNote.');
            }
            const localVarPath = `/api/pickjobs/{pickJobId}/deliverynote`
                .replace(`{${"pickJobId"}}`, encodeURIComponent(String(pickJobId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a pick job document handling information with the given ID
         * @param {string} pickJobId ID of the pick job you want to get document handling information
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPickJobDocumentHandling(pickJobId: string, options: any = {}): FetchArgs {
            // verify required parameter 'pickJobId' is not null or undefined
            if (pickJobId === null || pickJobId === undefined) {
                throw new RequiredError('pickJobId','Required parameter pickJobId was null or undefined when calling getPickJobDocumentHandling.');
            }
            const localVarPath = `/api/pickjobs/{pickJobId}/documenthandling`
                .replace(`{${"pickJobId"}}`, encodeURIComponent(String(pickJobId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Read tag configuration for pickjobs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPickJobTagConfiguration(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/tags/pickjob`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Return a PickRun
         * @param {string} pickRunId id of pickRun
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPickRun(pickRunId: string, options: any = {}): FetchArgs {
            // verify required parameter 'pickRunId' is not null or undefined
            if (pickRunId === null || pickRunId === undefined) {
                throw new RequiredError('pickRunId','Required parameter pickRunId was null or undefined when calling getPickRun.');
            }
            const localVarPath = `/api/pickruns/{pickRunId}`
                .replace(`{${"pickRunId"}}`, encodeURIComponent(String(pickRunId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get the picking configurations
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPickingConfigurations(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/picking`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get the resulting substitutes for a specific tenantArticleId.
         * @param {string} tenantArticleId the tenantArticleId substitutes are requested for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getResultingSubstitutesForTenantArticleId(tenantArticleId: string, options: any = {}): FetchArgs {
            // verify required parameter 'tenantArticleId' is not null or undefined
            if (tenantArticleId === null || tenantArticleId === undefined) {
                throw new RequiredError('tenantArticleId','Required parameter tenantArticleId was null or undefined when calling getResultingSubstitutesForTenantArticleId.');
            }
            const localVarPath = `/api/substitutes`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (tenantArticleId !== undefined) {
                localVarQueryParameter['tenantArticleId'] = tenantArticleId;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get the return note for the pickjob with the given ID
         * @param {string} pickjobId ID of the Pickjob
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getReturnNotesForPickjob(pickjobId: string, options: any = {}): FetchArgs {
            // verify required parameter 'pickjobId' is not null or undefined
            if (pickjobId === null || pickjobId === undefined) {
                throw new RequiredError('pickjobId','Required parameter pickjobId was null or undefined when calling getReturnNotesForPickjob.');
            }
            const localVarPath = `/api/pickjobs/{pickjobId}/returnnote`
                .replace(`{${"pickjobId"}}`, encodeURIComponent(String(pickjobId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get the substitutes for a given tenant article id
         * @summary Get the substitutes for a given tenant article id
         * @param {string} tenantArticleId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getSubstitutesForTenantArticleId(tenantArticleId: string, options: any = {}): FetchArgs {
            // verify required parameter 'tenantArticleId' is not null or undefined
            if (tenantArticleId === null || tenantArticleId === undefined) {
                throw new RequiredError('tenantArticleId','Required parameter tenantArticleId was null or undefined when calling getSubstitutesForTenantArticleId.');
            }
            const localVarPath = `/api/substitutes/{tenantArticleId}`
                .replace(`{${"tenantArticleId"}}`, encodeURIComponent(String(tenantArticleId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get the current configuration for substitution
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getSubstitutionConfiguration(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/substitution`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />LoadUnitPatchActions: Deprecated - For future usage please use the /actions endpoints mentioned in the corresponding PatchActions LoadUnit: Partial Patch on this entity.
         * @summary Patch a loadUnit by its ID
         * @param {LoadunitsLoadUnitIdBody} body
         * @param {string} loadUnitId
         * @param {string} [locale] Provide the localized names and descriptions for the routing configuration. If not provided the default locale is used., for example de_DE
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchLoadUnitByID(body: LoadunitsLoadUnitIdBody, loadUnitId: string, locale?: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling patchLoadUnitByID.');
            }
            // verify required parameter 'loadUnitId' is not null or undefined
            if (loadUnitId === null || loadUnitId === undefined) {
                throw new RequiredError('loadUnitId','Required parameter loadUnitId was null or undefined when calling patchLoadUnitByID.');
            }
            const localVarPath = `/api/loadunits/{loadUnitId}`
                .replace(`{${"loadUnitId"}}`, encodeURIComponent(String(loadUnitId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"LoadunitsLoadUnitIdBody" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Patches a pick job with the given ID
         * @param {PickingPatchActions} body Patch set
         * @param {string} pickJobId ID of the pickjob you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchPickJob(body: PickingPatchActions, pickJobId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling patchPickJob.');
            }
            // verify required parameter 'pickJobId' is not null or undefined
            if (pickJobId === null || pickJobId === undefined) {
                throw new RequiredError('pickJobId','Required parameter pickJobId was null or undefined when calling patchPickJob.');
            }
            const localVarPath = `/api/pickjobs/{pickJobId}`
                .replace(`{${"pickJobId"}}`, encodeURIComponent(String(pickJobId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"PickingPatchActions" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @param {PickRunPatchAction} body
         * @param {string} pickRunId id of pickRun
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchPickRun(body: PickRunPatchAction, pickRunId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling patchPickRun.');
            }
            // verify required parameter 'pickRunId' is not null or undefined
            if (pickRunId === null || pickRunId === undefined) {
                throw new RequiredError('pickRunId','Required parameter pickRunId was null or undefined when calling patchPickRun.');
            }
            const localVarPath = `/api/pickruns/{pickRunId}`
                .replace(`{${"pickRunId"}}`, encodeURIComponent(String(pickRunId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"PickRunPatchAction" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Update pick jobs of a pick run
         * @param {string} pickRunId id of pickRun
         * @param {PickRunPickJobsPatchAction} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchPickRunPickJobs(pickRunId: string, body?: PickRunPickJobsPatchAction, options: any = {}): FetchArgs {
            // verify required parameter 'pickRunId' is not null or undefined
            if (pickRunId === null || pickRunId === undefined) {
                throw new RequiredError('pickRunId','Required parameter pickRunId was null or undefined when calling patchPickRunPickJobs.');
            }
            const localVarPath = `/api/pickruns/{pickRunId}/pickjobs`
                .replace(`{${"pickRunId"}}`, encodeURIComponent(String(pickRunId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"PickRunPickJobsPatchAction" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Call a single action on a given pickJob
         * @param {string} pickJobId Reference to the pick job you want to call an action for
         * @param {PickJobActionsParameter} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        pickJobAction(pickJobId: string, body?: PickJobActionsParameter, options: any = {}): FetchArgs {
            // verify required parameter 'pickJobId' is not null or undefined
            if (pickJobId === null || pickJobId === undefined) {
                throw new RequiredError('pickJobId','Required parameter pickJobId was null or undefined when calling pickJobAction.');
            }
            const localVarPath = `/api/pickjobs/{pickJobId}/actions`
                .replace(`{${"pickJobId"}}`, encodeURIComponent(String(pickJobId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"PickJobActionsParameter" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Call a single action on a given pickRun
         * @param {string} pickRunId Reference to the pick run you want to call the action for
         * @param {PickRunActionsParameter} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        pickRunAction(pickRunId: string, body?: PickRunActionsParameter, options: any = {}): FetchArgs {
            // verify required parameter 'pickRunId' is not null or undefined
            if (pickRunId === null || pickRunId === undefined) {
                throw new RequiredError('pickRunId','Required parameter pickRunId was null or undefined when calling pickRunAction.');
            }
            const localVarPath = `/api/pickruns/{pickRunId}/actions`
                .replace(`{${"pickRunId"}}`, encodeURIComponent(String(pickRunId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"PickRunActionsParameter" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Update cutoff time configuration of a tenant
         * @param {CutoffTimeConfiguration} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putCutoffTimeConfiguration(body: CutoffTimeConfiguration, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putCutoffTimeConfiguration.');
            }
            const localVarPath = `/api/configurations/cutofftime`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"CutoffTimeConfiguration" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Change the tenant wide default picking times configuration
         * @param {DefaultPickingTimesConfiguration} body Desired default picking times configuration to create/update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putDefaultPickingTimesConfiguration(body: DefaultPickingTimesConfiguration, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putDefaultPickingTimesConfiguration.');
            }
            const localVarPath = `/api/configurations/pickingtimes`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"DefaultPickingTimesConfiguration" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Update fulfillment process buffer configuration of a tenant
         * @param {FulfillmentProcessBufferConfiguration} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putFulfillmentProcessBufferConfiguration(body: FulfillmentProcessBufferConfiguration, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putFulfillmentProcessBufferConfiguration.');
            }
            const localVarPath = `/api/configurations/fulfillmentprocessbuffer`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"FulfillmentProcessBufferConfiguration" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Change the tenant wide load unit configuration
         * @param {LoadUnitConfiguration} body Desired load unit configuration to create/update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putLoadUnitConfiguration(body: LoadUnitConfiguration, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putLoadUnitConfiguration.');
            }
            const localVarPath = `/api/configurations/loadunit`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"LoadUnitConfiguration" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Change the tag configuration for Pickjobs
         * @param {PickJobTagConfiguration} body Desired Tag Configuration for Pickjobs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putPickJobTagConfigurations(body: PickJobTagConfiguration, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putPickJobTagConfigurations.');
            }
            const localVarPath = `/api/configurations/tags/pickjob`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"PickJobTagConfiguration" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Change the tenant wide picking central configuration
         * @param {PickingConfigurations} body create/update picking central configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putPickingConfigurations(body: PickingConfigurations, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putPickingConfigurations.');
            }
            const localVarPath = `/api/configurations/picking`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"PickingConfigurations" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Set possible substitutes for a tenant article ID
         * @param {SubstitutesForUpsert} body substitutes to set
         * @param {string} tenantArticleId Tenant article ID of the article the substitutes should be set for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putSubstitutesForTenantArticleID(body: SubstitutesForUpsert, tenantArticleId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putSubstitutesForTenantArticleID.');
            }
            // verify required parameter 'tenantArticleId' is not null or undefined
            if (tenantArticleId === null || tenantArticleId === undefined) {
                throw new RequiredError('tenantArticleId','Required parameter tenantArticleId was null or undefined when calling putSubstitutesForTenantArticleID.');
            }
            const localVarPath = `/api/substitutes/{tenantArticleId}`
                .replace(`{${"tenantArticleId"}}`, encodeURIComponent(String(tenantArticleId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"SubstitutesForUpsert" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Change the tenant wide substitution configuration
         * @param {SubstitutionConfiguration} body Desired substitution configuration to create/update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putSubstitutionConfiguration(body: SubstitutionConfiguration, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putSubstitutionConfiguration.');
            }
            const localVarPath = `/api/configurations/substitution`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"SubstitutionConfiguration" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Simple query interface to find load units of a pickjob
         * @param {string} pickJobId Reference to the pick job you want to get the corresponding loadunits
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        queryPickJobLoadUnits(pickJobId: string, options: any = {}): FetchArgs {
            // verify required parameter 'pickJobId' is not null or undefined
            if (pickJobId === null || pickJobId === undefined) {
                throw new RequiredError('pickJobId','Required parameter pickJobId was null or undefined when calling queryPickJobLoadUnits.');
            }
            const localVarPath = `/api/pickjobs/{pickJobId}/loadunits`
                .replace(`{${"pickJobId"}}`, encodeURIComponent(String(pickJobId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Simple query interface to find pickjobs
         * @param {string} [searchTerm] Search term you want to get the corresponding pickjobs. Search will be performed on multiple fields, like tenantOrderId, consumerName, tenantArticleId and more
         * @param {Array<string>} [carrierKeys] Reference to the carrier you want to get the corresponding pickjobs
         * @param {string} [startOrderDate] Reference to the orderDate you want to get the corresponding pickjobs
         * @param {string} [endOrderDate] Reference to the orderDate you want to get the corresponding pickjobs
         * @param {string} [orderRef] Reference to the order you want to get the corresponding pickjobs
         * @param {string} [facilityRef] Reference to the facility you want to get the corresponding pickjobs
         * @param {Array<string>} [status] Reference to the status you want to get the corresponding pickjobs
         * @param {Array<string>} [zoneRefs] Reference to the zones you want to get the corresponding pickjobs
         * @param {string} [tenantOrderId] Reference to the tenantOrderId you want to get the corresponding pickjobs
         * @param {string} [channel] The channel of the pickJob you want to filter by
         * @param {string} [consumerName] Reference to the consumer name you want to get the corresponding pickjobs
         * @param {string} [shortId] Reference to the shortId you want to get the corresponding pickjobs
         * @param {string} [articleTitle] Reference to the articleTitle you want to get the corresponding pickjobs
         * @param {boolean} [anonymized] Reference to the anonymized you want to get the corresponding pickjobs
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {string} [orderBy] query pickjobs orderBy
         * @param {Date} [startTargetTime] Start date range for pick jobs
         * @param {Date} [endTargetTime] End date range for pick jobs
         * @param {Array<string>} [pickJobRefs] Reference to pickjobs
         * @param {string} [modifiedByUsername] Reference to the user ID you want to get the corresponding pickjobs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        queryPickJobs(searchTerm?: string, carrierKeys?: Array<string>, startOrderDate?: string, endOrderDate?: string, orderRef?: string, facilityRef?: string, status?: Array<string>, zoneRefs?: Array<string>, tenantOrderId?: string, channel?: string, consumerName?: string, shortId?: string, articleTitle?: string, anonymized?: boolean, startAfterId?: string, size?: number, orderBy?: string, startTargetTime?: Date, endTargetTime?: Date, pickJobRefs?: Array<string>, modifiedByUsername?: string, options: any = {}): FetchArgs {
            const localVarPath = `/api/pickjobs`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (searchTerm !== undefined) {
                localVarQueryParameter['searchTerm'] = searchTerm;
            }

            if (carrierKeys) {
                localVarQueryParameter['carrierKeys'] = carrierKeys.join(COLLECTION_FORMATS["csv"]);
            }

            if (startOrderDate !== undefined) {
                localVarQueryParameter['startOrderDate'] = startOrderDate;
            }

            if (endOrderDate !== undefined) {
                localVarQueryParameter['endOrderDate'] = endOrderDate;
            }

            if (orderRef !== undefined) {
                localVarQueryParameter['orderRef'] = orderRef;
            }

            if (facilityRef !== undefined) {
                localVarQueryParameter['facilityRef'] = facilityRef;
            }

            if (status) {
                localVarQueryParameter['status'] = status.join(COLLECTION_FORMATS["csv"]);
            }

            if (zoneRefs) {
                localVarQueryParameter['zoneRefs'] = zoneRefs.join(COLLECTION_FORMATS["csv"]);
            }

            if (tenantOrderId !== undefined) {
                localVarQueryParameter['tenantOrderId'] = tenantOrderId;
            }

            if (channel !== undefined) {
                localVarQueryParameter['channel'] = channel;
            }

            if (consumerName !== undefined) {
                localVarQueryParameter['consumerName'] = consumerName;
            }

            if (shortId !== undefined) {
                localVarQueryParameter['shortId'] = shortId;
            }

            if (articleTitle !== undefined) {
                localVarQueryParameter['articleTitle'] = articleTitle;
            }

            if (anonymized !== undefined) {
                localVarQueryParameter['anonymized'] = anonymized;
            }

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            if (orderBy !== undefined) {
                localVarQueryParameter['orderBy'] = orderBy;
            }

            if (startTargetTime !== undefined) {
                localVarQueryParameter['startTargetTime'] = (startTargetTime as any).toISOString();
            }

            if (endTargetTime !== undefined) {
                localVarQueryParameter['endTargetTime'] = (endTargetTime as any).toISOString();
            }

            if (pickJobRefs) {
                localVarQueryParameter['pickJobRefs'] = pickJobRefs.join(COLLECTION_FORMATS["csv"]);
            }

            if (modifiedByUsername !== undefined) {
                localVarQueryParameter['modifiedByUsername'] = modifiedByUsername;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @param {string} pickJobId Reference to the pick job you to get the available substitutes for
         * @param {string} pickLineItemId Reference to the pickLineItem you to get the available substitutes for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        queryPickLineItemsSubstitutes(pickJobId: string, pickLineItemId: string, options: any = {}): FetchArgs {
            // verify required parameter 'pickJobId' is not null or undefined
            if (pickJobId === null || pickJobId === undefined) {
                throw new RequiredError('pickJobId','Required parameter pickJobId was null or undefined when calling queryPickLineItemsSubstitutes.');
            }
            // verify required parameter 'pickLineItemId' is not null or undefined
            if (pickLineItemId === null || pickLineItemId === undefined) {
                throw new RequiredError('pickLineItemId','Required parameter pickLineItemId was null or undefined when calling queryPickLineItemsSubstitutes.');
            }
            const localVarPath = `/api/pickjobs/{pickJobId}/picklineitems/{pickLineItemId}/availablesubstitutes`
                .replace(`{${"pickJobId"}}`, encodeURIComponent(String(pickJobId)))
                .replace(`{${"pickLineItemId"}}`, encodeURIComponent(String(pickLineItemId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Update load unit type
         * @param {LoadUnitTypePatchActions} body Patch set
         * @param {string} loadUnitTypeId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateLoadUnitType(body: LoadUnitTypePatchActions, loadUnitTypeId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling updateLoadUnitType.');
            }
            // verify required parameter 'loadUnitTypeId' is not null or undefined
            if (loadUnitTypeId === null || loadUnitTypeId === undefined) {
                throw new RequiredError('loadUnitTypeId','Required parameter loadUnitTypeId was null or undefined when calling updateLoadUnitType.');
            }
            const localVarPath = `/api/loadunittypes/{loadUnitTypeId}`
                .replace(`{${"loadUnitTypeId"}}`, encodeURIComponent(String(loadUnitTypeId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"LoadUnitTypePatchActions" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Upload icon for load unit type.
         * @param {NamedFile} body Base64 encoded icon to upload
         * @param {string} loadUnitTypeId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        uploadLoadUnitTypeIcon(body: NamedFile, loadUnitTypeId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling uploadLoadUnitTypeIcon.');
            }
            // verify required parameter 'loadUnitTypeId' is not null or undefined
            if (loadUnitTypeId === null || loadUnitTypeId === undefined) {
                throw new RequiredError('loadUnitTypeId','Required parameter loadUnitTypeId was null or undefined when calling uploadLoadUnitTypeIcon.');
            }
            const localVarPath = `/api/loadunittypes/{loadUnitTypeId}/icon`
                .replace(`{${"loadUnitTypeId"}}`, encodeURIComponent(String(loadUnitTypeId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"NamedFile" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * FulfillmentOperationsPickingApi - functional programming interface
 * @export
 */
export const FulfillmentOperationsPickingApiFp = function(configuration?: Configuration) {
    return {
        /**
         *
         * @summary Add new load units
         * @param {LoadUnitsForCreation} body Representation that describes the unit load
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addLoadUnit(body: LoadUnitsForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<LoadUnits> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).addLoadUnit(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Add a new pick job for fulfillment
         * @param {PickJobForCreation} body Pick job object
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addPickJob(body: PickJobForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PickJob> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).addPickJob(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Add a new load unit for pick job
         * @param {PickingLoadUnitForCreation} body Pick job load unit object
         * @param {string} pickJobId Reference to the pick job you want to get the corresponding loadunits
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addPickJobLoadUnits(body: PickingLoadUnitForCreation, pickJobId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PickingLoadUnit> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).addPickJobLoadUnits(body, pickJobId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Add a new PickRun
         * @param {PickRunForCreation} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addPickRun(body: PickRunForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PickRun> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).addPickRun(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Create new load unit type
         * @param {LoadUnitTypeForCreation} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createLoadUnitTypes(body: LoadUnitTypeForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<LoadUnitType> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).createLoadUnitTypes(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Delete load unit
         * @param {string} loadUnitId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteLoadUnit(loadUnitId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<LoadUnit> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).deleteLoadUnit(loadUnitId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Delete loadunits by pickJobRef
         * @param {string} [pickJobRef] Reference to the pickJob of which you want to delete the loadUnits
         * @param {Array<string>} [id] Load unit ids
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteLoadUnits(pickJobRef?: string, id?: Array<string>, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<LoadUnits> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).deleteLoadUnits(pickJobRef, id, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary deletes substitutes for the given tenant article id
         * @param {string} tenantArticleId the tenant article ID the subsitutes should be deleted for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSubstitutesForTenantArticleId(tenantArticleId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).deleteSubstitutesForTenantArticleId(tenantArticleId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Return all load units
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of loadUnits to show
         * @param {string} [pickJobRef] query load units with the given pickJobRef
         * @param {string} [locale] Provide the localized names and descriptions for the routing configuration. If not provided the default locale is used., for example de_DE
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllLoadUnits(startAfterId?: string, size?: number, pickJobRef?: string, locale?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<LoadUnits> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).getAllLoadUnits(startAfterId, size, pickJobRef, locale, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a tenant wide cutoff time config
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCutoffTimeConfiguration(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CutoffTimeConfiguration> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).getCutoffTimeConfiguration(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get the current configuration for tenant wide default picking times
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDefaultPickingTimesConfiguration(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<DefaultPickingTimesConfiguration> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).getDefaultPickingTimesConfiguration(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a tenant fulfillment process buffer configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFulfillmentProcessBufferConfiguration(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FulfillmentProcessBufferConfiguration> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).getFulfillmentProcessBufferConfiguration(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a loadUnit by its ID
         * @param {string} loadUnitId
         * @param {string} [locale] Provide the localized names and descriptions for the routing configuration. If not provided the default locale is used., for example de_DE
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLoadUnitByID(loadUnitId: string, locale?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<LoadUnit> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).getLoadUnitByID(loadUnitId, locale, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get the load unit configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLoadUnitConfiguration(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<LoadUnitConfiguration> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).getLoadUnitConfiguration(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a loadUnitType by its ID
         * @param {string} loadUnitTypeId
         * @param {string} [locale] Provide the localized names and descriptions for the routing configuration. If not provided the default locale is used., for example de_DE
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLoadUnitTypeByID(loadUnitTypeId: string, locale?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<LoadUnitType> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).getLoadUnitTypeByID(loadUnitTypeId, locale, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get all load unit types
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {string} [locale] Provide the localized names and descriptions for the routing configuration. If not provided the default locale is used., for example de_DE
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLoadUnitTypes(startAfterId?: string, size?: number, locale?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<LoadUnitTypes> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).getLoadUnitTypes(startAfterId, size, locale, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a pick job with the given ID
         * @param {string} pickJobId ID of the pickjob you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPickJob(pickJobId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PickJob> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).getPickJob(pickJobId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a deliverynote for the pick job with the given ID
         * @param {string} pickJobId ID of the pick job for which you want to get a deliverynote
         * @param {string} [locale] Provide the localized values for the delivery note. If not provided the default locale is used. For example de_DE
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPickJobDeliveryNote(pickJobId: string, locale?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).getPickJobDeliveryNote(pickJobId, locale, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a pick job document handling information with the given ID
         * @param {string} pickJobId ID of the pick job you want to get document handling information
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPickJobDocumentHandling(pickJobId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<DocumentHandling> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).getPickJobDocumentHandling(pickJobId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Read tag configuration for pickjobs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPickJobTagConfiguration(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PickJobTagConfiguration> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).getPickJobTagConfiguration(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Return a PickRun
         * @param {string} pickRunId id of pickRun
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPickRun(pickRunId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PickRun> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).getPickRun(pickRunId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get the picking configurations
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPickingConfigurations(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PickingConfigurations> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).getPickingConfigurations(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get the resulting substitutes for a specific tenantArticleId.
         * @param {string} tenantArticleId the tenantArticleId substitutes are requested for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getResultingSubstitutesForTenantArticleId(tenantArticleId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Substitutes> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).getResultingSubstitutesForTenantArticleId(tenantArticleId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get the return note for the pickjob with the given ID
         * @param {string} pickjobId ID of the Pickjob
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getReturnNotesForPickjob(pickjobId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).getReturnNotesForPickjob(pickjobId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * Get the substitutes for a given tenant article id
         * @summary Get the substitutes for a given tenant article id
         * @param {string} tenantArticleId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getSubstitutesForTenantArticleId(tenantArticleId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Substitutes> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).getSubstitutesForTenantArticleId(tenantArticleId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get the current configuration for substitution
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getSubstitutionConfiguration(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<SubstitutionConfiguration> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).getSubstitutionConfiguration(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />LoadUnitPatchActions: Deprecated - For future usage please use the /actions endpoints mentioned in the corresponding PatchActions LoadUnit: Partial Patch on this entity.
         * @summary Patch a loadUnit by its ID
         * @param {LoadunitsLoadUnitIdBody} body
         * @param {string} loadUnitId
         * @param {string} [locale] Provide the localized names and descriptions for the routing configuration. If not provided the default locale is used., for example de_DE
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchLoadUnitByID(body: LoadunitsLoadUnitIdBody, loadUnitId: string, locale?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<LoadUnit> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).patchLoadUnitByID(body, loadUnitId, locale, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Patches a pick job with the given ID
         * @param {PickingPatchActions} body Patch set
         * @param {string} pickJobId ID of the pickjob you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchPickJob(body: PickingPatchActions, pickJobId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PickJob> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).patchPickJob(body, pickJobId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @param {PickRunPatchAction} body
         * @param {string} pickRunId id of pickRun
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchPickRun(body: PickRunPatchAction, pickRunId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PickRun> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).patchPickRun(body, pickRunId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Update pick jobs of a pick run
         * @param {string} pickRunId id of pickRun
         * @param {PickRunPickJobsPatchAction} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchPickRunPickJobs(pickRunId: string, body?: PickRunPickJobsPatchAction, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).patchPickRunPickJobs(pickRunId, body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Call a single action on a given pickJob
         * @param {string} pickJobId Reference to the pick job you want to call an action for
         * @param {PickJobActionsParameter} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        pickJobAction(pickJobId: string, body?: PickJobActionsParameter, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PickJob> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).pickJobAction(pickJobId, body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Call a single action on a given pickRun
         * @param {string} pickRunId Reference to the pick run you want to call the action for
         * @param {PickRunActionsParameter} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        pickRunAction(pickRunId: string, body?: PickRunActionsParameter, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PickRun> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).pickRunAction(pickRunId, body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Update cutoff time configuration of a tenant
         * @param {CutoffTimeConfiguration} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putCutoffTimeConfiguration(body: CutoffTimeConfiguration, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CutoffTimeConfiguration> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).putCutoffTimeConfiguration(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Change the tenant wide default picking times configuration
         * @param {DefaultPickingTimesConfiguration} body Desired default picking times configuration to create/update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putDefaultPickingTimesConfiguration(body: DefaultPickingTimesConfiguration, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<DefaultPickingTimesConfiguration> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).putDefaultPickingTimesConfiguration(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Update fulfillment process buffer configuration of a tenant
         * @param {FulfillmentProcessBufferConfiguration} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putFulfillmentProcessBufferConfiguration(body: FulfillmentProcessBufferConfiguration, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FulfillmentProcessBufferConfiguration> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).putFulfillmentProcessBufferConfiguration(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Change the tenant wide load unit configuration
         * @param {LoadUnitConfiguration} body Desired load unit configuration to create/update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putLoadUnitConfiguration(body: LoadUnitConfiguration, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<LoadUnitConfiguration> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).putLoadUnitConfiguration(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Change the tag configuration for Pickjobs
         * @param {PickJobTagConfiguration} body Desired Tag Configuration for Pickjobs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putPickJobTagConfigurations(body: PickJobTagConfiguration, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PickJobTagConfiguration> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).putPickJobTagConfigurations(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Change the tenant wide picking central configuration
         * @param {PickingConfigurations} body create/update picking central configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putPickingConfigurations(body: PickingConfigurations, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PickingConfigurations> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).putPickingConfigurations(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Set possible substitutes for a tenant article ID
         * @param {SubstitutesForUpsert} body substitutes to set
         * @param {string} tenantArticleId Tenant article ID of the article the substitutes should be set for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putSubstitutesForTenantArticleID(body: SubstitutesForUpsert, tenantArticleId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Substitutes> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).putSubstitutesForTenantArticleID(body, tenantArticleId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Change the tenant wide substitution configuration
         * @param {SubstitutionConfiguration} body Desired substitution configuration to create/update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putSubstitutionConfiguration(body: SubstitutionConfiguration, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<SubstitutionConfiguration> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).putSubstitutionConfiguration(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Simple query interface to find load units of a pickjob
         * @param {string} pickJobId Reference to the pick job you want to get the corresponding loadunits
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        queryPickJobLoadUnits(pickJobId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<LoadUnits> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).queryPickJobLoadUnits(pickJobId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Simple query interface to find pickjobs
         * @param {string} [searchTerm] Search term you want to get the corresponding pickjobs. Search will be performed on multiple fields, like tenantOrderId, consumerName, tenantArticleId and more
         * @param {Array<string>} [carrierKeys] Reference to the carrier you want to get the corresponding pickjobs
         * @param {string} [startOrderDate] Reference to the orderDate you want to get the corresponding pickjobs
         * @param {string} [endOrderDate] Reference to the orderDate you want to get the corresponding pickjobs
         * @param {string} [orderRef] Reference to the order you want to get the corresponding pickjobs
         * @param {string} [facilityRef] Reference to the facility you want to get the corresponding pickjobs
         * @param {Array<string>} [status] Reference to the status you want to get the corresponding pickjobs
         * @param {Array<string>} [zoneRefs] Reference to the zones you want to get the corresponding pickjobs
         * @param {string} [tenantOrderId] Reference to the tenantOrderId you want to get the corresponding pickjobs
         * @param {string} [channel] The channel of the pickJob you want to filter by
         * @param {string} [consumerName] Reference to the consumer name you want to get the corresponding pickjobs
         * @param {string} [shortId] Reference to the shortId you want to get the corresponding pickjobs
         * @param {string} [articleTitle] Reference to the articleTitle you want to get the corresponding pickjobs
         * @param {boolean} [anonymized] Reference to the anonymized you want to get the corresponding pickjobs
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {string} [orderBy] query pickjobs orderBy
         * @param {Date} [startTargetTime] Start date range for pick jobs
         * @param {Date} [endTargetTime] End date range for pick jobs
         * @param {Array<string>} [pickJobRefs] Reference to pickjobs
         * @param {string} [modifiedByUsername] Reference to the user ID you want to get the corresponding pickjobs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        queryPickJobs(searchTerm?: string, carrierKeys?: Array<string>, startOrderDate?: string, endOrderDate?: string, orderRef?: string, facilityRef?: string, status?: Array<string>, zoneRefs?: Array<string>, tenantOrderId?: string, channel?: string, consumerName?: string, shortId?: string, articleTitle?: string, anonymized?: boolean, startAfterId?: string, size?: number, orderBy?: string, startTargetTime?: Date, endTargetTime?: Date, pickJobRefs?: Array<string>, modifiedByUsername?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<StrippedPickJobs> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).queryPickJobs(searchTerm, carrierKeys, startOrderDate, endOrderDate, orderRef, facilityRef, status, zoneRefs, tenantOrderId, channel, consumerName, shortId, articleTitle, anonymized, startAfterId, size, orderBy, startTargetTime, endTargetTime, pickJobRefs, modifiedByUsername, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @param {string} pickJobId Reference to the pick job you to get the available substitutes for
         * @param {string} pickLineItemId Reference to the pickLineItem you to get the available substitutes for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        queryPickLineItemsSubstitutes(pickJobId: string, pickLineItemId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ResolvedSubstitutes> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).queryPickLineItemsSubstitutes(pickJobId, pickLineItemId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Update load unit type
         * @param {LoadUnitTypePatchActions} body Patch set
         * @param {string} loadUnitTypeId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateLoadUnitType(body: LoadUnitTypePatchActions, loadUnitTypeId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<LoadUnitType> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).updateLoadUnitType(body, loadUnitTypeId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Upload icon for load unit type.
         * @param {NamedFile} body Base64 encoded icon to upload
         * @param {string} loadUnitTypeId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        uploadLoadUnitTypeIcon(body: NamedFile, loadUnitTypeId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<LoadUnitType> {
            const localVarFetchArgs = FulfillmentOperationsPickingApiFetchParamCreator(configuration).uploadLoadUnitTypeIcon(body, loadUnitTypeId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * FulfillmentOperationsPickingApi - factory interface
 * @export
 */
export const FulfillmentOperationsPickingApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         *
         * @summary Add new load units
         * @param {LoadUnitsForCreation} body Representation that describes the unit load
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addLoadUnit(body: LoadUnitsForCreation, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).addLoadUnit(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Add a new pick job for fulfillment
         * @param {PickJobForCreation} body Pick job object
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addPickJob(body: PickJobForCreation, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).addPickJob(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Add a new load unit for pick job
         * @param {PickingLoadUnitForCreation} body Pick job load unit object
         * @param {string} pickJobId Reference to the pick job you want to get the corresponding loadunits
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addPickJobLoadUnits(body: PickingLoadUnitForCreation, pickJobId: string, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).addPickJobLoadUnits(body, pickJobId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Add a new PickRun
         * @param {PickRunForCreation} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addPickRun(body: PickRunForCreation, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).addPickRun(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Create new load unit type
         * @param {LoadUnitTypeForCreation} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createLoadUnitTypes(body: LoadUnitTypeForCreation, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).createLoadUnitTypes(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Delete load unit
         * @param {string} loadUnitId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteLoadUnit(loadUnitId: string, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).deleteLoadUnit(loadUnitId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Delete loadunits by pickJobRef
         * @param {string} [pickJobRef] Reference to the pickJob of which you want to delete the loadUnits
         * @param {Array<string>} [id] Load unit ids
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteLoadUnits(pickJobRef?: string, id?: Array<string>, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).deleteLoadUnits(pickJobRef, id, options)(fetch, basePath);
        },
        /**
         *
         * @summary deletes substitutes for the given tenant article id
         * @param {string} tenantArticleId the tenant article ID the subsitutes should be deleted for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSubstitutesForTenantArticleId(tenantArticleId: string, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).deleteSubstitutesForTenantArticleId(tenantArticleId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Return all load units
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of loadUnits to show
         * @param {string} [pickJobRef] query load units with the given pickJobRef
         * @param {string} [locale] Provide the localized names and descriptions for the routing configuration. If not provided the default locale is used., for example de_DE
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllLoadUnits(startAfterId?: string, size?: number, pickJobRef?: string, locale?: string, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).getAllLoadUnits(startAfterId, size, pickJobRef, locale, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a tenant wide cutoff time config
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCutoffTimeConfiguration(options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).getCutoffTimeConfiguration(options)(fetch, basePath);
        },
        /**
         *
         * @summary Get the current configuration for tenant wide default picking times
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDefaultPickingTimesConfiguration(options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).getDefaultPickingTimesConfiguration(options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a tenant fulfillment process buffer configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFulfillmentProcessBufferConfiguration(options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).getFulfillmentProcessBufferConfiguration(options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a loadUnit by its ID
         * @param {string} loadUnitId
         * @param {string} [locale] Provide the localized names and descriptions for the routing configuration. If not provided the default locale is used., for example de_DE
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLoadUnitByID(loadUnitId: string, locale?: string, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).getLoadUnitByID(loadUnitId, locale, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get the load unit configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLoadUnitConfiguration(options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).getLoadUnitConfiguration(options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a loadUnitType by its ID
         * @param {string} loadUnitTypeId
         * @param {string} [locale] Provide the localized names and descriptions for the routing configuration. If not provided the default locale is used., for example de_DE
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLoadUnitTypeByID(loadUnitTypeId: string, locale?: string, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).getLoadUnitTypeByID(loadUnitTypeId, locale, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get all load unit types
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {string} [locale] Provide the localized names and descriptions for the routing configuration. If not provided the default locale is used., for example de_DE
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLoadUnitTypes(startAfterId?: string, size?: number, locale?: string, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).getLoadUnitTypes(startAfterId, size, locale, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a pick job with the given ID
         * @param {string} pickJobId ID of the pickjob you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPickJob(pickJobId: string, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).getPickJob(pickJobId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a deliverynote for the pick job with the given ID
         * @param {string} pickJobId ID of the pick job for which you want to get a deliverynote
         * @param {string} [locale] Provide the localized values for the delivery note. If not provided the default locale is used. For example de_DE
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPickJobDeliveryNote(pickJobId: string, locale?: string, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).getPickJobDeliveryNote(pickJobId, locale, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a pick job document handling information with the given ID
         * @param {string} pickJobId ID of the pick job you want to get document handling information
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPickJobDocumentHandling(pickJobId: string, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).getPickJobDocumentHandling(pickJobId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Read tag configuration for pickjobs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPickJobTagConfiguration(options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).getPickJobTagConfiguration(options)(fetch, basePath);
        },
        /**
         *
         * @summary Return a PickRun
         * @param {string} pickRunId id of pickRun
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPickRun(pickRunId: string, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).getPickRun(pickRunId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get the picking configurations
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPickingConfigurations(options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).getPickingConfigurations(options)(fetch, basePath);
        },
        /**
         *
         * @summary Get the resulting substitutes for a specific tenantArticleId.
         * @param {string} tenantArticleId the tenantArticleId substitutes are requested for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getResultingSubstitutesForTenantArticleId(tenantArticleId: string, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).getResultingSubstitutesForTenantArticleId(tenantArticleId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get the return note for the pickjob with the given ID
         * @param {string} pickjobId ID of the Pickjob
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getReturnNotesForPickjob(pickjobId: string, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).getReturnNotesForPickjob(pickjobId, options)(fetch, basePath);
        },
        /**
         * Get the substitutes for a given tenant article id
         * @summary Get the substitutes for a given tenant article id
         * @param {string} tenantArticleId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getSubstitutesForTenantArticleId(tenantArticleId: string, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).getSubstitutesForTenantArticleId(tenantArticleId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get the current configuration for substitution
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getSubstitutionConfiguration(options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).getSubstitutionConfiguration(options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />LoadUnitPatchActions: Deprecated - For future usage please use the /actions endpoints mentioned in the corresponding PatchActions LoadUnit: Partial Patch on this entity.
         * @summary Patch a loadUnit by its ID
         * @param {LoadunitsLoadUnitIdBody} body
         * @param {string} loadUnitId
         * @param {string} [locale] Provide the localized names and descriptions for the routing configuration. If not provided the default locale is used., for example de_DE
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchLoadUnitByID(body: LoadunitsLoadUnitIdBody, loadUnitId: string, locale?: string, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).patchLoadUnitByID(body, loadUnitId, locale, options)(fetch, basePath);
        },
        /**
         *
         * @summary Patches a pick job with the given ID
         * @param {PickingPatchActions} body Patch set
         * @param {string} pickJobId ID of the pickjob you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchPickJob(body: PickingPatchActions, pickJobId: string, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).patchPickJob(body, pickJobId, options)(fetch, basePath);
        },
        /**
         *
         * @param {PickRunPatchAction} body
         * @param {string} pickRunId id of pickRun
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchPickRun(body: PickRunPatchAction, pickRunId: string, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).patchPickRun(body, pickRunId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Update pick jobs of a pick run
         * @param {string} pickRunId id of pickRun
         * @param {PickRunPickJobsPatchAction} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchPickRunPickJobs(pickRunId: string, body?: PickRunPickJobsPatchAction, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).patchPickRunPickJobs(pickRunId, body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Call a single action on a given pickJob
         * @param {string} pickJobId Reference to the pick job you want to call an action for
         * @param {PickJobActionsParameter} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        pickJobAction(pickJobId: string, body?: PickJobActionsParameter, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).pickJobAction(pickJobId, body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Call a single action on a given pickRun
         * @param {string} pickRunId Reference to the pick run you want to call the action for
         * @param {PickRunActionsParameter} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        pickRunAction(pickRunId: string, body?: PickRunActionsParameter, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).pickRunAction(pickRunId, body, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Update cutoff time configuration of a tenant
         * @param {CutoffTimeConfiguration} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putCutoffTimeConfiguration(body: CutoffTimeConfiguration, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).putCutoffTimeConfiguration(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Change the tenant wide default picking times configuration
         * @param {DefaultPickingTimesConfiguration} body Desired default picking times configuration to create/update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putDefaultPickingTimesConfiguration(body: DefaultPickingTimesConfiguration, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).putDefaultPickingTimesConfiguration(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Update fulfillment process buffer configuration of a tenant
         * @param {FulfillmentProcessBufferConfiguration} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putFulfillmentProcessBufferConfiguration(body: FulfillmentProcessBufferConfiguration, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).putFulfillmentProcessBufferConfiguration(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Change the tenant wide load unit configuration
         * @param {LoadUnitConfiguration} body Desired load unit configuration to create/update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putLoadUnitConfiguration(body: LoadUnitConfiguration, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).putLoadUnitConfiguration(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Change the tag configuration for Pickjobs
         * @param {PickJobTagConfiguration} body Desired Tag Configuration for Pickjobs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putPickJobTagConfigurations(body: PickJobTagConfiguration, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).putPickJobTagConfigurations(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Change the tenant wide picking central configuration
         * @param {PickingConfigurations} body create/update picking central configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putPickingConfigurations(body: PickingConfigurations, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).putPickingConfigurations(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Set possible substitutes for a tenant article ID
         * @param {SubstitutesForUpsert} body substitutes to set
         * @param {string} tenantArticleId Tenant article ID of the article the substitutes should be set for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putSubstitutesForTenantArticleID(body: SubstitutesForUpsert, tenantArticleId: string, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).putSubstitutesForTenantArticleID(body, tenantArticleId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Change the tenant wide substitution configuration
         * @param {SubstitutionConfiguration} body Desired substitution configuration to create/update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putSubstitutionConfiguration(body: SubstitutionConfiguration, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).putSubstitutionConfiguration(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Simple query interface to find load units of a pickjob
         * @param {string} pickJobId Reference to the pick job you want to get the corresponding loadunits
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        queryPickJobLoadUnits(pickJobId: string, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).queryPickJobLoadUnits(pickJobId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Simple query interface to find pickjobs
         * @param {string} [searchTerm] Search term you want to get the corresponding pickjobs. Search will be performed on multiple fields, like tenantOrderId, consumerName, tenantArticleId and more
         * @param {Array<string>} [carrierKeys] Reference to the carrier you want to get the corresponding pickjobs
         * @param {string} [startOrderDate] Reference to the orderDate you want to get the corresponding pickjobs
         * @param {string} [endOrderDate] Reference to the orderDate you want to get the corresponding pickjobs
         * @param {string} [orderRef] Reference to the order you want to get the corresponding pickjobs
         * @param {string} [facilityRef] Reference to the facility you want to get the corresponding pickjobs
         * @param {Array<string>} [status] Reference to the status you want to get the corresponding pickjobs
         * @param {Array<string>} [zoneRefs] Reference to the zones you want to get the corresponding pickjobs
         * @param {string} [tenantOrderId] Reference to the tenantOrderId you want to get the corresponding pickjobs
         * @param {string} [channel] The channel of the pickJob you want to filter by
         * @param {string} [consumerName] Reference to the consumer name you want to get the corresponding pickjobs
         * @param {string} [shortId] Reference to the shortId you want to get the corresponding pickjobs
         * @param {string} [articleTitle] Reference to the articleTitle you want to get the corresponding pickjobs
         * @param {boolean} [anonymized] Reference to the anonymized you want to get the corresponding pickjobs
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {string} [orderBy] query pickjobs orderBy
         * @param {Date} [startTargetTime] Start date range for pick jobs
         * @param {Date} [endTargetTime] End date range for pick jobs
         * @param {Array<string>} [pickJobRefs] Reference to pickjobs
         * @param {string} [modifiedByUsername] Reference to the user ID you want to get the corresponding pickjobs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        queryPickJobs(searchTerm?: string, carrierKeys?: Array<string>, startOrderDate?: string, endOrderDate?: string, orderRef?: string, facilityRef?: string, status?: Array<string>, zoneRefs?: Array<string>, tenantOrderId?: string, channel?: string, consumerName?: string, shortId?: string, articleTitle?: string, anonymized?: boolean, startAfterId?: string, size?: number, orderBy?: string, startTargetTime?: Date, endTargetTime?: Date, pickJobRefs?: Array<string>, modifiedByUsername?: string, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).queryPickJobs(searchTerm, carrierKeys, startOrderDate, endOrderDate, orderRef, facilityRef, status, zoneRefs, tenantOrderId, channel, consumerName, shortId, articleTitle, anonymized, startAfterId, size, orderBy, startTargetTime, endTargetTime, pickJobRefs, modifiedByUsername, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @param {string} pickJobId Reference to the pick job you to get the available substitutes for
         * @param {string} pickLineItemId Reference to the pickLineItem you to get the available substitutes for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        queryPickLineItemsSubstitutes(pickJobId: string, pickLineItemId: string, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).queryPickLineItemsSubstitutes(pickJobId, pickLineItemId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Update load unit type
         * @param {LoadUnitTypePatchActions} body Patch set
         * @param {string} loadUnitTypeId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateLoadUnitType(body: LoadUnitTypePatchActions, loadUnitTypeId: string, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).updateLoadUnitType(body, loadUnitTypeId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Upload icon for load unit type.
         * @param {NamedFile} body Base64 encoded icon to upload
         * @param {string} loadUnitTypeId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        uploadLoadUnitTypeIcon(body: NamedFile, loadUnitTypeId: string, options?: any) {
            return FulfillmentOperationsPickingApiFp(configuration).uploadLoadUnitTypeIcon(body, loadUnitTypeId, options)(fetch, basePath);
        },
    };
};

/**
 * FulfillmentOperationsPickingApi - object-oriented interface
 * @export
 * @class FulfillmentOperationsPickingApi
 * @extends {BaseAPI}
 */
export class FulfillmentOperationsPickingApi extends BaseAPI {
    /**
     *
     * @summary Add new load units
     * @param {LoadUnitsForCreation} body Representation that describes the unit load
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public addLoadUnit(body: LoadUnitsForCreation, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).addLoadUnit(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Add a new pick job for fulfillment
     * @param {PickJobForCreation} body Pick job object
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public addPickJob(body: PickJobForCreation, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).addPickJob(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Add a new load unit for pick job
     * @param {PickingLoadUnitForCreation} body Pick job load unit object
     * @param {string} pickJobId Reference to the pick job you want to get the corresponding loadunits
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public addPickJobLoadUnits(body: PickingLoadUnitForCreation, pickJobId: string, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).addPickJobLoadUnits(body, pickJobId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Add a new PickRun
     * @param {PickRunForCreation} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public addPickRun(body: PickRunForCreation, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).addPickRun(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Create new load unit type
     * @param {LoadUnitTypeForCreation} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public createLoadUnitTypes(body: LoadUnitTypeForCreation, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).createLoadUnitTypes(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Delete load unit
     * @param {string} loadUnitId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public deleteLoadUnit(loadUnitId: string, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).deleteLoadUnit(loadUnitId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Delete loadunits by pickJobRef
     * @param {string} [pickJobRef] Reference to the pickJob of which you want to delete the loadUnits
     * @param {Array<string>} [id] Load unit ids
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public deleteLoadUnits(pickJobRef?: string, id?: Array<string>, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).deleteLoadUnits(pickJobRef, id, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary deletes substitutes for the given tenant article id
     * @param {string} tenantArticleId the tenant article ID the subsitutes should be deleted for
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public deleteSubstitutesForTenantArticleId(tenantArticleId: string, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).deleteSubstitutesForTenantArticleId(tenantArticleId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Return all load units
     * @param {string} [startAfterId] all entities after given Id
     * @param {number} [size] number of loadUnits to show
     * @param {string} [pickJobRef] query load units with the given pickJobRef
     * @param {string} [locale] Provide the localized names and descriptions for the routing configuration. If not provided the default locale is used., for example de_DE
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public getAllLoadUnits(startAfterId?: string, size?: number, pickJobRef?: string, locale?: string, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).getAllLoadUnits(startAfterId, size, pickJobRef, locale, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Get a tenant wide cutoff time config
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public getCutoffTimeConfiguration(options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).getCutoffTimeConfiguration(options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get the current configuration for tenant wide default picking times
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public getDefaultPickingTimesConfiguration(options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).getDefaultPickingTimesConfiguration(options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a tenant fulfillment process buffer configuration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public getFulfillmentProcessBufferConfiguration(options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).getFulfillmentProcessBufferConfiguration(options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a loadUnit by its ID
     * @param {string} loadUnitId
     * @param {string} [locale] Provide the localized names and descriptions for the routing configuration. If not provided the default locale is used., for example de_DE
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public getLoadUnitByID(loadUnitId: string, locale?: string, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).getLoadUnitByID(loadUnitId, locale, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get the load unit configuration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public getLoadUnitConfiguration(options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).getLoadUnitConfiguration(options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a loadUnitType by its ID
     * @param {string} loadUnitTypeId
     * @param {string} [locale] Provide the localized names and descriptions for the routing configuration. If not provided the default locale is used., for example de_DE
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public getLoadUnitTypeByID(loadUnitTypeId: string, locale?: string, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).getLoadUnitTypeByID(loadUnitTypeId, locale, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get all load unit types
     * @param {string} [startAfterId] all entities after given Id
     * @param {number} [size] number of entities to show
     * @param {string} [locale] Provide the localized names and descriptions for the routing configuration. If not provided the default locale is used., for example de_DE
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public getLoadUnitTypes(startAfterId?: string, size?: number, locale?: string, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).getLoadUnitTypes(startAfterId, size, locale, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a pick job with the given ID
     * @param {string} pickJobId ID of the pickjob you want to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public getPickJob(pickJobId: string, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).getPickJob(pickJobId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a deliverynote for the pick job with the given ID
     * @param {string} pickJobId ID of the pick job for which you want to get a deliverynote
     * @param {string} [locale] Provide the localized values for the delivery note. If not provided the default locale is used. For example de_DE
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public getPickJobDeliveryNote(pickJobId: string, locale?: string, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).getPickJobDeliveryNote(pickJobId, locale, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a pick job document handling information with the given ID
     * @param {string} pickJobId ID of the pick job you want to get document handling information
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public getPickJobDocumentHandling(pickJobId: string, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).getPickJobDocumentHandling(pickJobId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Read tag configuration for pickjobs
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public getPickJobTagConfiguration(options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).getPickJobTagConfiguration(options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Return a PickRun
     * @param {string} pickRunId id of pickRun
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public getPickRun(pickRunId: string, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).getPickRun(pickRunId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get the picking configurations
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public getPickingConfigurations(options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).getPickingConfigurations(options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get the resulting substitutes for a specific tenantArticleId.
     * @param {string} tenantArticleId the tenantArticleId substitutes are requested for
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public getResultingSubstitutesForTenantArticleId(tenantArticleId: string, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).getResultingSubstitutesForTenantArticleId(tenantArticleId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get the return note for the pickjob with the given ID
     * @param {string} pickjobId ID of the Pickjob
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public getReturnNotesForPickjob(pickjobId: string, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).getReturnNotesForPickjob(pickjobId, options)(this.fetch, this.basePath);
    }

    /**
     * Get the substitutes for a given tenant article id
     * @summary Get the substitutes for a given tenant article id
     * @param {string} tenantArticleId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public getSubstitutesForTenantArticleId(tenantArticleId: string, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).getSubstitutesForTenantArticleId(tenantArticleId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Get the current configuration for substitution
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public getSubstitutionConfiguration(options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).getSubstitutionConfiguration(options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />LoadUnitPatchActions: Deprecated - For future usage please use the /actions endpoints mentioned in the corresponding PatchActions LoadUnit: Partial Patch on this entity.
     * @summary Patch a loadUnit by its ID
     * @param {LoadunitsLoadUnitIdBody} body
     * @param {string} loadUnitId
     * @param {string} [locale] Provide the localized names and descriptions for the routing configuration. If not provided the default locale is used., for example de_DE
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public patchLoadUnitByID(body: LoadunitsLoadUnitIdBody, loadUnitId: string, locale?: string, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).patchLoadUnitByID(body, loadUnitId, locale, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Patches a pick job with the given ID
     * @param {PickingPatchActions} body Patch set
     * @param {string} pickJobId ID of the pickjob you want to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public patchPickJob(body: PickingPatchActions, pickJobId: string, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).patchPickJob(body, pickJobId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @param {PickRunPatchAction} body
     * @param {string} pickRunId id of pickRun
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public patchPickRun(body: PickRunPatchAction, pickRunId: string, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).patchPickRun(body, pickRunId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Update pick jobs of a pick run
     * @param {string} pickRunId id of pickRun
     * @param {PickRunPickJobsPatchAction} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public patchPickRunPickJobs(pickRunId: string, body?: PickRunPickJobsPatchAction, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).patchPickRunPickJobs(pickRunId, body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Call a single action on a given pickJob
     * @param {string} pickJobId Reference to the pick job you want to call an action for
     * @param {PickJobActionsParameter} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public pickJobAction(pickJobId: string, body?: PickJobActionsParameter, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).pickJobAction(pickJobId, body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Call a single action on a given pickRun
     * @param {string} pickRunId Reference to the pick run you want to call the action for
     * @param {PickRunActionsParameter} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public pickRunAction(pickRunId: string, body?: PickRunActionsParameter, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).pickRunAction(pickRunId, body, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Update cutoff time configuration of a tenant
     * @param {CutoffTimeConfiguration} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public putCutoffTimeConfiguration(body: CutoffTimeConfiguration, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).putCutoffTimeConfiguration(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Change the tenant wide default picking times configuration
     * @param {DefaultPickingTimesConfiguration} body Desired default picking times configuration to create/update
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public putDefaultPickingTimesConfiguration(body: DefaultPickingTimesConfiguration, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).putDefaultPickingTimesConfiguration(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Update fulfillment process buffer configuration of a tenant
     * @param {FulfillmentProcessBufferConfiguration} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public putFulfillmentProcessBufferConfiguration(body: FulfillmentProcessBufferConfiguration, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).putFulfillmentProcessBufferConfiguration(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Change the tenant wide load unit configuration
     * @param {LoadUnitConfiguration} body Desired load unit configuration to create/update
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public putLoadUnitConfiguration(body: LoadUnitConfiguration, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).putLoadUnitConfiguration(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Change the tag configuration for Pickjobs
     * @param {PickJobTagConfiguration} body Desired Tag Configuration for Pickjobs
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public putPickJobTagConfigurations(body: PickJobTagConfiguration, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).putPickJobTagConfigurations(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Change the tenant wide picking central configuration
     * @param {PickingConfigurations} body create/update picking central configuration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public putPickingConfigurations(body: PickingConfigurations, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).putPickingConfigurations(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Set possible substitutes for a tenant article ID
     * @param {SubstitutesForUpsert} body substitutes to set
     * @param {string} tenantArticleId Tenant article ID of the article the substitutes should be set for
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public putSubstitutesForTenantArticleID(body: SubstitutesForUpsert, tenantArticleId: string, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).putSubstitutesForTenantArticleID(body, tenantArticleId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Change the tenant wide substitution configuration
     * @param {SubstitutionConfiguration} body Desired substitution configuration to create/update
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public putSubstitutionConfiguration(body: SubstitutionConfiguration, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).putSubstitutionConfiguration(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Simple query interface to find load units of a pickjob
     * @param {string} pickJobId Reference to the pick job you want to get the corresponding loadunits
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public queryPickJobLoadUnits(pickJobId: string, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).queryPickJobLoadUnits(pickJobId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Simple query interface to find pickjobs
     * @param {string} [searchTerm] Search term you want to get the corresponding pickjobs. Search will be performed on multiple fields, like tenantOrderId, consumerName, tenantArticleId and more
     * @param {Array<string>} [carrierKeys] Reference to the carrier you want to get the corresponding pickjobs
     * @param {string} [startOrderDate] Reference to the orderDate you want to get the corresponding pickjobs
     * @param {string} [endOrderDate] Reference to the orderDate you want to get the corresponding pickjobs
     * @param {string} [orderRef] Reference to the order you want to get the corresponding pickjobs
     * @param {string} [facilityRef] Reference to the facility you want to get the corresponding pickjobs
     * @param {Array<string>} [status] Reference to the status you want to get the corresponding pickjobs
     * @param {Array<string>} [zoneRefs] Reference to the zones you want to get the corresponding pickjobs
     * @param {string} [tenantOrderId] Reference to the tenantOrderId you want to get the corresponding pickjobs
     * @param {string} [channel] The channel of the pickJob you want to filter by
     * @param {string} [consumerName] Reference to the consumer name you want to get the corresponding pickjobs
     * @param {string} [shortId] Reference to the shortId you want to get the corresponding pickjobs
     * @param {string} [articleTitle] Reference to the articleTitle you want to get the corresponding pickjobs
     * @param {boolean} [anonymized] Reference to the anonymized you want to get the corresponding pickjobs
     * @param {string} [startAfterId] all entities after given Id
     * @param {number} [size] number of entities to show
     * @param {string} [orderBy] query pickjobs orderBy
     * @param {Date} [startTargetTime] Start date range for pick jobs
     * @param {Date} [endTargetTime] End date range for pick jobs
     * @param {Array<string>} [pickJobRefs] Reference to pickjobs
     * @param {string} [modifiedByUsername] Reference to the user ID you want to get the corresponding pickjobs
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public queryPickJobs(searchTerm?: string, carrierKeys?: Array<string>, startOrderDate?: string, endOrderDate?: string, orderRef?: string, facilityRef?: string, status?: Array<string>, zoneRefs?: Array<string>, tenantOrderId?: string, channel?: string, consumerName?: string, shortId?: string, articleTitle?: string, anonymized?: boolean, startAfterId?: string, size?: number, orderBy?: string, startTargetTime?: Date, endTargetTime?: Date, pickJobRefs?: Array<string>, modifiedByUsername?: string, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).queryPickJobs(searchTerm, carrierKeys, startOrderDate, endOrderDate, orderRef, facilityRef, status, zoneRefs, tenantOrderId, channel, consumerName, shortId, articleTitle, anonymized, startAfterId, size, orderBy, startTargetTime, endTargetTime, pickJobRefs, modifiedByUsername, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @param {string} pickJobId Reference to the pick job you to get the available substitutes for
     * @param {string} pickLineItemId Reference to the pickLineItem you to get the available substitutes for
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public queryPickLineItemsSubstitutes(pickJobId: string, pickLineItemId: string, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).queryPickLineItemsSubstitutes(pickJobId, pickLineItemId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Update load unit type
     * @param {LoadUnitTypePatchActions} body Patch set
     * @param {string} loadUnitTypeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public updateLoadUnitType(body: LoadUnitTypePatchActions, loadUnitTypeId: string, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).updateLoadUnitType(body, loadUnitTypeId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Upload icon for load unit type.
     * @param {NamedFile} body Base64 encoded icon to upload
     * @param {string} loadUnitTypeId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsPickingApi
     */
    public uploadLoadUnitTypeIcon(body: NamedFile, loadUnitTypeId: string, options?: any) {
        return FulfillmentOperationsPickingApiFp(this.configuration).uploadLoadUnitTypeIcon(body, loadUnitTypeId, options)(this.fetch, this.basePath);
    }

}
/**
 * FulfillmentOperationsRestowApi - fetch parameter creator
 * @export
 */
export const FulfillmentOperationsRestowApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a restow item with the given ID
         * @param {string} restowItemId ID of the restow item you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRestowItem(restowItemId: string, options: any = {}): FetchArgs {
            // verify required parameter 'restowItemId' is not null or undefined
            if (restowItemId === null || restowItemId === undefined) {
                throw new RequiredError('restowItemId','Required parameter restowItemId was null or undefined when calling getRestowItem.');
            }
            const localVarPath = `/api/restowitems/{restowItemId}`
                .replace(`{${"restowItemId"}}`, encodeURIComponent(String(restowItemId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Patches a restow item with the given ID
         * @param {RestowItemPatchActions} body Patch set
         * @param {string} restowItemId ID of the restow item you want to update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchRestowItem(body: RestowItemPatchActions, restowItemId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling patchRestowItem.');
            }
            // verify required parameter 'restowItemId' is not null or undefined
            if (restowItemId === null || restowItemId === undefined) {
                throw new RequiredError('restowItemId','Required parameter restowItemId was null or undefined when calling patchRestowItem.');
            }
            const localVarPath = `/api/restowitems/{restowItemId}`
                .replace(`{${"restowItemId"}}`, encodeURIComponent(String(restowItemId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"RestowItemPatchActions" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Simple query interface to find restowItems
         * @param {string} [facilityRef] Reference to the facility you want to get the corresponding restows
         * @param {boolean} [restowed] Reference restowed status of the restoe items
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        queryRestowItems(facilityRef?: string, restowed?: boolean, startAfterId?: string, size?: number, options: any = {}): FetchArgs {
            const localVarPath = `/api/restowitems`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (facilityRef !== undefined) {
                localVarQueryParameter['facilityRef'] = facilityRef;
            }

            if (restowed !== undefined) {
                localVarQueryParameter['restowed'] = restowed;
            }

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * FulfillmentOperationsRestowApi - functional programming interface
 * @export
 */
export const FulfillmentOperationsRestowApiFp = function(configuration?: Configuration) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a restow item with the given ID
         * @param {string} restowItemId ID of the restow item you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRestowItem(restowItemId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<RestowItem> {
            const localVarFetchArgs = FulfillmentOperationsRestowApiFetchParamCreator(configuration).getRestowItem(restowItemId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Patches a restow item with the given ID
         * @param {RestowItemPatchActions} body Patch set
         * @param {string} restowItemId ID of the restow item you want to update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchRestowItem(body: RestowItemPatchActions, restowItemId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<RestowItem> {
            const localVarFetchArgs = FulfillmentOperationsRestowApiFetchParamCreator(configuration).patchRestowItem(body, restowItemId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Simple query interface to find restowItems
         * @param {string} [facilityRef] Reference to the facility you want to get the corresponding restows
         * @param {boolean} [restowed] Reference restowed status of the restoe items
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        queryRestowItems(facilityRef?: string, restowed?: boolean, startAfterId?: string, size?: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<RestowedItems> {
            const localVarFetchArgs = FulfillmentOperationsRestowApiFetchParamCreator(configuration).queryRestowItems(facilityRef, restowed, startAfterId, size, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * FulfillmentOperationsRestowApi - factory interface
 * @export
 */
export const FulfillmentOperationsRestowApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get a restow item with the given ID
         * @param {string} restowItemId ID of the restow item you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRestowItem(restowItemId: string, options?: any) {
            return FulfillmentOperationsRestowApiFp(configuration).getRestowItem(restowItemId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Patches a restow item with the given ID
         * @param {RestowItemPatchActions} body Patch set
         * @param {string} restowItemId ID of the restow item you want to update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchRestowItem(body: RestowItemPatchActions, restowItemId: string, options?: any) {
            return FulfillmentOperationsRestowApiFp(configuration).patchRestowItem(body, restowItemId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Simple query interface to find restowItems
         * @param {string} [facilityRef] Reference to the facility you want to get the corresponding restows
         * @param {boolean} [restowed] Reference restowed status of the restoe items
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        queryRestowItems(facilityRef?: string, restowed?: boolean, startAfterId?: string, size?: number, options?: any) {
            return FulfillmentOperationsRestowApiFp(configuration).queryRestowItems(facilityRef, restowed, startAfterId, size, options)(fetch, basePath);
        },
    };
};

/**
 * FulfillmentOperationsRestowApi - object-oriented interface
 * @export
 * @class FulfillmentOperationsRestowApi
 * @extends {BaseAPI}
 */
export class FulfillmentOperationsRestowApi extends BaseAPI {
    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Get a restow item with the given ID
     * @param {string} restowItemId ID of the restow item you want to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsRestowApi
     */
    public getRestowItem(restowItemId: string, options?: any) {
        return FulfillmentOperationsRestowApiFp(this.configuration).getRestowItem(restowItemId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Patches a restow item with the given ID
     * @param {RestowItemPatchActions} body Patch set
     * @param {string} restowItemId ID of the restow item you want to update
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsRestowApi
     */
    public patchRestowItem(body: RestowItemPatchActions, restowItemId: string, options?: any) {
        return FulfillmentOperationsRestowApiFp(this.configuration).patchRestowItem(body, restowItemId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Simple query interface to find restowItems
     * @param {string} [facilityRef] Reference to the facility you want to get the corresponding restows
     * @param {boolean} [restowed] Reference restowed status of the restoe items
     * @param {string} [startAfterId] all entities after given Id
     * @param {number} [size] number of entities to show
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsRestowApi
     */
    public queryRestowItems(facilityRef?: string, restowed?: boolean, startAfterId?: string, size?: number, options?: any) {
        return FulfillmentOperationsRestowApiFp(this.configuration).queryRestowItems(facilityRef, restowed, startAfterId, size, options)(this.fetch, this.basePath);
    }

}
/**
 * FulfillmentOperationsReturnsApi - fetch parameter creator
 * @export
 */
export const FulfillmentOperationsReturnsApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />
         * @summary Add a new return
         * @param {ReturnJobForCreation} body ReturnJob object
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addReturn(body: ReturnJobForCreation, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling addReturn.');
            }
            const localVarPath = `/api/returns`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ReturnJobForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Create a new item return for an item return job
         * @summary Creates a new ItemReturn
         * @param {AddItemReturnToItemReturnJob} body
         * @param {string} itemReturnJobId Id of the item return job to create the item return for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createItemReturn(body: AddItemReturnToItemReturnJob, itemReturnJobId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling createItemReturn.');
            }
            // verify required parameter 'itemReturnJobId' is not null or undefined
            if (itemReturnJobId === null || itemReturnJobId === undefined) {
                throw new RequiredError('itemReturnJobId','Required parameter itemReturnJobId was null or undefined when calling createItemReturn.');
            }
            const localVarPath = `/api/itemreturnjobs/{itemReturnJobId}/itemreturns`
                .replace(`{${"itemReturnJobId"}}`, encodeURIComponent(String(itemReturnJobId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"AddItemReturnToItemReturnJob" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Creates a new ItemReturnJob
         * @param {ItemReturnJobForCreation} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createItemReturnJob(body?: ItemReturnJobForCreation, options: any = {}): FetchArgs {
            const localVarPath = `/api/itemreturnjobs`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ItemReturnJobForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Delete an item return from an item return job
         * @summary Delete an item return from an item return job
         * @param {string} itemReturnJobId id of the item return job to delete the item return for
         * @param {string} itemReturnId id of the item return you want to delete
         * @param {number} itemReturnJobVersion version of the item return job to delete the item return for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteItemReturn(itemReturnJobId: string, itemReturnId: string, itemReturnJobVersion: number, options: any = {}): FetchArgs {
            // verify required parameter 'itemReturnJobId' is not null or undefined
            if (itemReturnJobId === null || itemReturnJobId === undefined) {
                throw new RequiredError('itemReturnJobId','Required parameter itemReturnJobId was null or undefined when calling deleteItemReturn.');
            }
            // verify required parameter 'itemReturnId' is not null or undefined
            if (itemReturnId === null || itemReturnId === undefined) {
                throw new RequiredError('itemReturnId','Required parameter itemReturnId was null or undefined when calling deleteItemReturn.');
            }
            // verify required parameter 'itemReturnJobVersion' is not null or undefined
            if (itemReturnJobVersion === null || itemReturnJobVersion === undefined) {
                throw new RequiredError('itemReturnJobVersion','Required parameter itemReturnJobVersion was null or undefined when calling deleteItemReturn.');
            }
            const localVarPath = `/api/itemreturnjobs/{itemReturnJobId}/itemreturns/{itemReturnId}`
                .replace(`{${"itemReturnJobId"}}`, encodeURIComponent(String(itemReturnJobId)))
                .replace(`{${"itemReturnId"}}`, encodeURIComponent(String(itemReturnId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (itemReturnJobVersion !== undefined) {
                localVarQueryParameter['itemReturnJobVersion'] = itemReturnJobVersion;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get all Item Returns
         * @param {string} [searchTerm] Search term you want to get the corresponding item returns. Search will be performed on multiple fields, including return id, tenant order id, customer name, tenant article ids, artile titles
         * @param {Array<string>} [facilityRefs] facilities to filter the results
         * @param {Array<string>} [itemReturnStatus] ItemReturnStatus of an included ItemReturn to filter the results
         * @param {Array<string>} [itemReturnLineItemStatus] ItemReturnLineItemStatus of an included itemReturnLineItem to filter the results
         * @param {string} [startAfterId] entity to start after
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        findItemReturns(searchTerm?: string, facilityRefs?: Array<string>, itemReturnStatus?: Array<string>, itemReturnLineItemStatus?: Array<string>, startAfterId?: string, size?: number, options: any = {}): FetchArgs {
            const localVarPath = `/api/itemreturns`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (searchTerm !== undefined) {
                localVarQueryParameter['searchTerm'] = searchTerm;
            }

            if (facilityRefs) {
                localVarQueryParameter['facilityRefs'] = facilityRefs;
            }

            if (itemReturnStatus) {
                localVarQueryParameter['itemReturnStatus'] = itemReturnStatus;
            }

            if (itemReturnLineItemStatus) {
                localVarQueryParameter['itemReturnLineItemStatus'] = itemReturnLineItemStatus;
            }

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get item return by id
         * @param {string} itemReturnJobId item return job to read the item return for
         * @param {string} itemReturnId id of the item return you want to read
         * @param {string} [startAfterId] entity to start after
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getItemReturn(itemReturnJobId: string, itemReturnId: string, startAfterId?: string, size?: number, options: any = {}): FetchArgs {
            // verify required parameter 'itemReturnJobId' is not null or undefined
            if (itemReturnJobId === null || itemReturnJobId === undefined) {
                throw new RequiredError('itemReturnJobId','Required parameter itemReturnJobId was null or undefined when calling getItemReturn.');
            }
            // verify required parameter 'itemReturnId' is not null or undefined
            if (itemReturnId === null || itemReturnId === undefined) {
                throw new RequiredError('itemReturnId','Required parameter itemReturnId was null or undefined when calling getItemReturn.');
            }
            const localVarPath = `/api/itemreturnjobs/{itemReturnJobId}/itemreturns/{itemReturnId}`
                .replace(`{${"itemReturnJobId"}}`, encodeURIComponent(String(itemReturnJobId)))
                .replace(`{${"itemReturnId"}}`, encodeURIComponent(String(itemReturnId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get Item Return Job by id
         * @param {string} itemReturnJobId id of the item return job
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getItemReturnJob(itemReturnJobId: string, options: any = {}): FetchArgs {
            // verify required parameter 'itemReturnJobId' is not null or undefined
            if (itemReturnJobId === null || itemReturnJobId === undefined) {
                throw new RequiredError('itemReturnJobId','Required parameter itemReturnJobId was null or undefined when calling getItemReturnJob.');
            }
            const localVarPath = `/api/itemreturnjobs/{itemReturnJobId}`
                .replace(`{${"itemReturnJobId"}}`, encodeURIComponent(String(itemReturnJobId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get all Item Return Jobs
         * @param {string} [facilityId] facility to filter the results
         * @param {Array<string>} [itemReturnJobScannableCodes] scannableCodes of the item return job to filter the results
         * @param {Array<string>} [itemReturnScannableCodes] scannableCodes of the item return to filter the results
         * @param {Array<string>} [itemReturnJobStatus] ItemReturnJobStatus to filter the results
         * @param {Array<string>} [itemReturnStatus] ItemReturnStatus of an included ItemReturn to filter the results
         * @param {string} [searchTerm] Term by which to search through the fields
         * @param {string} [startAfterId] entity to start after
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getItemReturnJobs(facilityId?: string, itemReturnJobScannableCodes?: Array<string>, itemReturnScannableCodes?: Array<string>, itemReturnJobStatus?: Array<string>, itemReturnStatus?: Array<string>, searchTerm?: string, startAfterId?: string, size?: number, options: any = {}): FetchArgs {
            const localVarPath = `/api/itemreturnjobs`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (facilityId !== undefined) {
                localVarQueryParameter['facilityId'] = facilityId;
            }

            if (itemReturnJobScannableCodes) {
                localVarQueryParameter['itemReturnJobScannableCodes'] = itemReturnJobScannableCodes;
            }

            if (itemReturnScannableCodes) {
                localVarQueryParameter['itemReturnScannableCodes'] = itemReturnScannableCodes;
            }

            if (itemReturnJobStatus) {
                localVarQueryParameter['itemReturnJobStatus'] = itemReturnJobStatus;
            }

            if (itemReturnStatus) {
                localVarQueryParameter['itemReturnStatus'] = itemReturnStatus;
            }

            if (searchTerm !== undefined) {
                localVarQueryParameter['searchTerm'] = searchTerm;
            }

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get item returns
         * @param {string} itemReturnJobId item return job to read the item return for
         * @param {string} [startAfterId] entity to start after
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getItemReturns(itemReturnJobId: string, startAfterId?: string, size?: number, options: any = {}): FetchArgs {
            // verify required parameter 'itemReturnJobId' is not null or undefined
            if (itemReturnJobId === null || itemReturnJobId === undefined) {
                throw new RequiredError('itemReturnJobId','Required parameter itemReturnJobId was null or undefined when calling getItemReturns.');
            }
            const localVarPath = `/api/itemreturnjobs/{itemReturnJobId}/itemreturns`
                .replace(`{${"itemReturnJobId"}}`, encodeURIComponent(String(itemReturnJobId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get the current configuration for returns
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getReturnConfiguration(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/return`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get Return Jobs
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show (max 500 per request)
         * @param {string} [facilityRef] Reference to the facility you want to filter for
         * @param {Array<string>} [status] Reference to the status you want to get the corresponding return jobs to
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getReturnJobs(startAfterId?: string, size?: number, facilityRef?: string, status?: Array<string>, options: any = {}): FetchArgs {
            const localVarPath = `/api/returns`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            if (facilityRef !== undefined) {
                localVarQueryParameter['facilityRef'] = facilityRef;
            }

            if (status) {
                localVarQueryParameter['status'] = status;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Will be replaced in the future with the new /itemreturnjob.
         * @summary Get return with the given return ID
         * @param {string} returnId ID of the return you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getReturnLines(returnId: string, options: any = {}): FetchArgs {
            // verify required parameter 'returnId' is not null or undefined
            if (returnId === null || returnId === undefined) {
                throw new RequiredError('returnId','Required parameter returnId was null or undefined when calling getReturnLines.');
            }
            const localVarPath = `/api/returns/{returnId}`
                .replace(`{${"returnId"}}`, encodeURIComponent(String(returnId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Actions for a ItemReturn
         * @param {string} itemReturnJobId id of the Item Return Job
         * @param {string} itemReturnId id of the Item Return
         * @param {ItemReturnActionsParameter} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        itemReturnActions(itemReturnJobId: string, itemReturnId: string, body?: ItemReturnActionsParameter, options: any = {}): FetchArgs {
            // verify required parameter 'itemReturnJobId' is not null or undefined
            if (itemReturnJobId === null || itemReturnJobId === undefined) {
                throw new RequiredError('itemReturnJobId','Required parameter itemReturnJobId was null or undefined when calling itemReturnActions.');
            }
            // verify required parameter 'itemReturnId' is not null or undefined
            if (itemReturnId === null || itemReturnId === undefined) {
                throw new RequiredError('itemReturnId','Required parameter itemReturnId was null or undefined when calling itemReturnActions.');
            }
            const localVarPath = `/api/itemreturnjobs/{itemReturnJobId}/itemreturns/{itemReturnId}/actions`
                .replace(`{${"itemReturnJobId"}}`, encodeURIComponent(String(itemReturnJobId)))
                .replace(`{${"itemReturnId"}}`, encodeURIComponent(String(itemReturnId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ItemReturnActionsParameter" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />
         * @summary Patches a return with the given ID
         * @param {ReturnPatchActions} body Patch set
         * @param {string} returnId ID of return you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchReturn(body: ReturnPatchActions, returnId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling patchReturn.');
            }
            // verify required parameter 'returnId' is not null or undefined
            if (returnId === null || returnId === undefined) {
                throw new RequiredError('returnId','Required parameter returnId was null or undefined when calling patchReturn.');
            }
            const localVarPath = `/api/returns/{returnId}`
                .replace(`{${"returnId"}}`, encodeURIComponent(String(returnId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ReturnPatchActions" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Replace returned line items of an item return of an item return job.
         * @summary replace returned line items
         * @param {string} itemReturnJobId id of the item return job the item return belongs to
         * @param {string} itemReturnId id of the item return the returned line items belong to
         * @param {ReplaceReturnedLineItems} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        replaceReturnedLineItems(itemReturnJobId: string, itemReturnId: string, body?: ReplaceReturnedLineItems, options: any = {}): FetchArgs {
            // verify required parameter 'itemReturnJobId' is not null or undefined
            if (itemReturnJobId === null || itemReturnJobId === undefined) {
                throw new RequiredError('itemReturnJobId','Required parameter itemReturnJobId was null or undefined when calling replaceReturnedLineItems.');
            }
            // verify required parameter 'itemReturnId' is not null or undefined
            if (itemReturnId === null || itemReturnId === undefined) {
                throw new RequiredError('itemReturnId','Required parameter itemReturnId was null or undefined when calling replaceReturnedLineItems.');
            }
            const localVarPath = `/api/itemreturnjobs/{itemReturnJobId}/itemreturns/{itemReturnId}/returnedlineitems`
                .replace(`{${"itemReturnJobId"}}`, encodeURIComponent(String(itemReturnJobId)))
                .replace(`{${"itemReturnId"}}`, encodeURIComponent(String(itemReturnId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ReplaceReturnedLineItems" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Updates a new ItemReturnJob
         * @param {string} itemReturnJobId id of the Item Return Job
         * @param {ItemReturnJobActionsParameter} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateItemReturnJob(itemReturnJobId: string, body?: ItemReturnJobActionsParameter, options: any = {}): FetchArgs {
            // verify required parameter 'itemReturnJobId' is not null or undefined
            if (itemReturnJobId === null || itemReturnJobId === undefined) {
                throw new RequiredError('itemReturnJobId','Required parameter itemReturnJobId was null or undefined when calling updateItemReturnJob.');
            }
            const localVarPath = `/api/itemreturnjobs/{itemReturnJobId}/actions`
                .replace(`{${"itemReturnJobId"}}`, encodeURIComponent(String(itemReturnJobId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ItemReturnJobActionsParameter" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Patch for a ItemReturn LineItem
         * @param {string} itemReturnJobId id of the Item Return Job
         * @param {string} itemReturnId id of the Item Return
         * @param {string} returnedLineItemId id of the returnedLineItem
         * @param {ItemReturnLineItemForUpdate} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateItemReturnLineItem(itemReturnJobId: string, itemReturnId: string, returnedLineItemId: string, body?: ItemReturnLineItemForUpdate, options: any = {}): FetchArgs {
            // verify required parameter 'itemReturnJobId' is not null or undefined
            if (itemReturnJobId === null || itemReturnJobId === undefined) {
                throw new RequiredError('itemReturnJobId','Required parameter itemReturnJobId was null or undefined when calling updateItemReturnLineItem.');
            }
            // verify required parameter 'itemReturnId' is not null or undefined
            if (itemReturnId === null || itemReturnId === undefined) {
                throw new RequiredError('itemReturnId','Required parameter itemReturnId was null or undefined when calling updateItemReturnLineItem.');
            }
            // verify required parameter 'returnedLineItemId' is not null or undefined
            if (returnedLineItemId === null || returnedLineItemId === undefined) {
                throw new RequiredError('returnedLineItemId','Required parameter returnedLineItemId was null or undefined when calling updateItemReturnLineItem.');
            }
            const localVarPath = `/api/itemreturnjobs/{itemReturnJobId}/itemreturns/{itemReturnId}/returnedlineitems/{returnedLineItemId}`
                .replace(`{${"itemReturnJobId"}}`, encodeURIComponent(String(itemReturnJobId)))
                .replace(`{${"itemReturnId"}}`, encodeURIComponent(String(itemReturnId)))
                .replace(`{${"returnedLineItemId"}}`, encodeURIComponent(String(returnedLineItemId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ItemReturnLineItemForUpdate" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Change the tenant wide return configuration
         * @param {ReturnConfiguration} body Desired return configuration to create/update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertReturnConfiguration(body: ReturnConfiguration, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling upsertReturnConfiguration.');
            }
            const localVarPath = `/api/configurations/return`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ReturnConfiguration" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * FulfillmentOperationsReturnsApi - functional programming interface
 * @export
 */
export const FulfillmentOperationsReturnsApiFp = function(configuration?: Configuration) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />
         * @summary Add a new return
         * @param {ReturnJobForCreation} body ReturnJob object
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addReturn(body: ReturnJobForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ReturnJob> {
            const localVarFetchArgs = FulfillmentOperationsReturnsApiFetchParamCreator(configuration).addReturn(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Create a new item return for an item return job
         * @summary Creates a new ItemReturn
         * @param {AddItemReturnToItemReturnJob} body
         * @param {string} itemReturnJobId Id of the item return job to create the item return for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createItemReturn(body: AddItemReturnToItemReturnJob, itemReturnJobId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ItemReturnJob> {
            const localVarFetchArgs = FulfillmentOperationsReturnsApiFetchParamCreator(configuration).createItemReturn(body, itemReturnJobId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Creates a new ItemReturnJob
         * @param {ItemReturnJobForCreation} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createItemReturnJob(body?: ItemReturnJobForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ItemReturnJob> {
            const localVarFetchArgs = FulfillmentOperationsReturnsApiFetchParamCreator(configuration).createItemReturnJob(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Delete an item return from an item return job
         * @summary Delete an item return from an item return job
         * @param {string} itemReturnJobId id of the item return job to delete the item return for
         * @param {string} itemReturnId id of the item return you want to delete
         * @param {number} itemReturnJobVersion version of the item return job to delete the item return for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteItemReturn(itemReturnJobId: string, itemReturnId: string, itemReturnJobVersion: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ItemReturn> {
            const localVarFetchArgs = FulfillmentOperationsReturnsApiFetchParamCreator(configuration).deleteItemReturn(itemReturnJobId, itemReturnId, itemReturnJobVersion, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get all Item Returns
         * @param {string} [searchTerm] Search term you want to get the corresponding item returns. Search will be performed on multiple fields, including return id, tenant order id, customer name, tenant article ids, artile titles
         * @param {Array<string>} [facilityRefs] facilities to filter the results
         * @param {Array<string>} [itemReturnStatus] ItemReturnStatus of an included ItemReturn to filter the results
         * @param {Array<string>} [itemReturnLineItemStatus] ItemReturnLineItemStatus of an included itemReturnLineItem to filter the results
         * @param {string} [startAfterId] entity to start after
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        findItemReturns(searchTerm?: string, facilityRefs?: Array<string>, itemReturnStatus?: Array<string>, itemReturnLineItemStatus?: Array<string>, startAfterId?: string, size?: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<ItemReturn>> {
            const localVarFetchArgs = FulfillmentOperationsReturnsApiFetchParamCreator(configuration).findItemReturns(searchTerm, facilityRefs, itemReturnStatus, itemReturnLineItemStatus, startAfterId, size, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get item return by id
         * @param {string} itemReturnJobId item return job to read the item return for
         * @param {string} itemReturnId id of the item return you want to read
         * @param {string} [startAfterId] entity to start after
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getItemReturn(itemReturnJobId: string, itemReturnId: string, startAfterId?: string, size?: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ItemReturn> {
            const localVarFetchArgs = FulfillmentOperationsReturnsApiFetchParamCreator(configuration).getItemReturn(itemReturnJobId, itemReturnId, startAfterId, size, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get Item Return Job by id
         * @param {string} itemReturnJobId id of the item return job
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getItemReturnJob(itemReturnJobId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ItemReturnJob> {
            const localVarFetchArgs = FulfillmentOperationsReturnsApiFetchParamCreator(configuration).getItemReturnJob(itemReturnJobId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get all Item Return Jobs
         * @param {string} [facilityId] facility to filter the results
         * @param {Array<string>} [itemReturnJobScannableCodes] scannableCodes of the item return job to filter the results
         * @param {Array<string>} [itemReturnScannableCodes] scannableCodes of the item return to filter the results
         * @param {Array<string>} [itemReturnJobStatus] ItemReturnJobStatus to filter the results
         * @param {Array<string>} [itemReturnStatus] ItemReturnStatus of an included ItemReturn to filter the results
         * @param {string} [searchTerm] Term by which to search through the fields
         * @param {string} [startAfterId] entity to start after
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getItemReturnJobs(facilityId?: string, itemReturnJobScannableCodes?: Array<string>, itemReturnScannableCodes?: Array<string>, itemReturnJobStatus?: Array<string>, itemReturnStatus?: Array<string>, searchTerm?: string, startAfterId?: string, size?: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<ItemReturnJob>> {
            const localVarFetchArgs = FulfillmentOperationsReturnsApiFetchParamCreator(configuration).getItemReturnJobs(facilityId, itemReturnJobScannableCodes, itemReturnScannableCodes, itemReturnJobStatus, itemReturnStatus, searchTerm, startAfterId, size, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get item returns
         * @param {string} itemReturnJobId item return job to read the item return for
         * @param {string} [startAfterId] entity to start after
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getItemReturns(itemReturnJobId: string, startAfterId?: string, size?: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<ItemReturn>> {
            const localVarFetchArgs = FulfillmentOperationsReturnsApiFetchParamCreator(configuration).getItemReturns(itemReturnJobId, startAfterId, size, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get the current configuration for returns
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getReturnConfiguration(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<LocalizedReturnConfiguration> {
            const localVarFetchArgs = FulfillmentOperationsReturnsApiFetchParamCreator(configuration).getReturnConfiguration(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get Return Jobs
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show (max 500 per request)
         * @param {string} [facilityRef] Reference to the facility you want to filter for
         * @param {Array<string>} [status] Reference to the status you want to get the corresponding return jobs to
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getReturnJobs(startAfterId?: string, size?: number, facilityRef?: string, status?: Array<string>, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ReturnJobs> {
            const localVarFetchArgs = FulfillmentOperationsReturnsApiFetchParamCreator(configuration).getReturnJobs(startAfterId, size, facilityRef, status, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Will be replaced in the future with the new /itemreturnjob.
         * @summary Get return with the given return ID
         * @param {string} returnId ID of the return you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getReturnLines(returnId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ReturnJob> {
            const localVarFetchArgs = FulfillmentOperationsReturnsApiFetchParamCreator(configuration).getReturnLines(returnId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Actions for a ItemReturn
         * @param {string} itemReturnJobId id of the Item Return Job
         * @param {string} itemReturnId id of the Item Return
         * @param {ItemReturnActionsParameter} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        itemReturnActions(itemReturnJobId: string, itemReturnId: string, body?: ItemReturnActionsParameter, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ItemReturnJob> {
            const localVarFetchArgs = FulfillmentOperationsReturnsApiFetchParamCreator(configuration).itemReturnActions(itemReturnJobId, itemReturnId, body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />
         * @summary Patches a return with the given ID
         * @param {ReturnPatchActions} body Patch set
         * @param {string} returnId ID of return you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchReturn(body: ReturnPatchActions, returnId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ReturnJob> {
            const localVarFetchArgs = FulfillmentOperationsReturnsApiFetchParamCreator(configuration).patchReturn(body, returnId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Replace returned line items of an item return of an item return job.
         * @summary replace returned line items
         * @param {string} itemReturnJobId id of the item return job the item return belongs to
         * @param {string} itemReturnId id of the item return the returned line items belong to
         * @param {ReplaceReturnedLineItems} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        replaceReturnedLineItems(itemReturnJobId: string, itemReturnId: string, body?: ReplaceReturnedLineItems, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ItemReturnJob> {
            const localVarFetchArgs = FulfillmentOperationsReturnsApiFetchParamCreator(configuration).replaceReturnedLineItems(itemReturnJobId, itemReturnId, body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Updates a new ItemReturnJob
         * @param {string} itemReturnJobId id of the Item Return Job
         * @param {ItemReturnJobActionsParameter} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateItemReturnJob(itemReturnJobId: string, body?: ItemReturnJobActionsParameter, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ItemReturnJob> {
            const localVarFetchArgs = FulfillmentOperationsReturnsApiFetchParamCreator(configuration).updateItemReturnJob(itemReturnJobId, body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Patch for a ItemReturn LineItem
         * @param {string} itemReturnJobId id of the Item Return Job
         * @param {string} itemReturnId id of the Item Return
         * @param {string} returnedLineItemId id of the returnedLineItem
         * @param {ItemReturnLineItemForUpdate} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateItemReturnLineItem(itemReturnJobId: string, itemReturnId: string, returnedLineItemId: string, body?: ItemReturnLineItemForUpdate, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ItemReturnJob> {
            const localVarFetchArgs = FulfillmentOperationsReturnsApiFetchParamCreator(configuration).updateItemReturnLineItem(itemReturnJobId, itemReturnId, returnedLineItemId, body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Change the tenant wide return configuration
         * @param {ReturnConfiguration} body Desired return configuration to create/update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertReturnConfiguration(body: ReturnConfiguration, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<LocalizedReturnConfiguration> {
            const localVarFetchArgs = FulfillmentOperationsReturnsApiFetchParamCreator(configuration).upsertReturnConfiguration(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * FulfillmentOperationsReturnsApi - factory interface
 * @export
 */
export const FulfillmentOperationsReturnsApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />
         * @summary Add a new return
         * @param {ReturnJobForCreation} body ReturnJob object
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addReturn(body: ReturnJobForCreation, options?: any) {
            return FulfillmentOperationsReturnsApiFp(configuration).addReturn(body, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Create a new item return for an item return job
         * @summary Creates a new ItemReturn
         * @param {AddItemReturnToItemReturnJob} body
         * @param {string} itemReturnJobId Id of the item return job to create the item return for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createItemReturn(body: AddItemReturnToItemReturnJob, itemReturnJobId: string, options?: any) {
            return FulfillmentOperationsReturnsApiFp(configuration).createItemReturn(body, itemReturnJobId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Creates a new ItemReturnJob
         * @param {ItemReturnJobForCreation} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createItemReturnJob(body?: ItemReturnJobForCreation, options?: any) {
            return FulfillmentOperationsReturnsApiFp(configuration).createItemReturnJob(body, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Delete an item return from an item return job
         * @summary Delete an item return from an item return job
         * @param {string} itemReturnJobId id of the item return job to delete the item return for
         * @param {string} itemReturnId id of the item return you want to delete
         * @param {number} itemReturnJobVersion version of the item return job to delete the item return for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteItemReturn(itemReturnJobId: string, itemReturnId: string, itemReturnJobVersion: number, options?: any) {
            return FulfillmentOperationsReturnsApiFp(configuration).deleteItemReturn(itemReturnJobId, itemReturnId, itemReturnJobVersion, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get all Item Returns
         * @param {string} [searchTerm] Search term you want to get the corresponding item returns. Search will be performed on multiple fields, including return id, tenant order id, customer name, tenant article ids, artile titles
         * @param {Array<string>} [facilityRefs] facilities to filter the results
         * @param {Array<string>} [itemReturnStatus] ItemReturnStatus of an included ItemReturn to filter the results
         * @param {Array<string>} [itemReturnLineItemStatus] ItemReturnLineItemStatus of an included itemReturnLineItem to filter the results
         * @param {string} [startAfterId] entity to start after
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        findItemReturns(searchTerm?: string, facilityRefs?: Array<string>, itemReturnStatus?: Array<string>, itemReturnLineItemStatus?: Array<string>, startAfterId?: string, size?: number, options?: any) {
            return FulfillmentOperationsReturnsApiFp(configuration).findItemReturns(searchTerm, facilityRefs, itemReturnStatus, itemReturnLineItemStatus, startAfterId, size, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get item return by id
         * @param {string} itemReturnJobId item return job to read the item return for
         * @param {string} itemReturnId id of the item return you want to read
         * @param {string} [startAfterId] entity to start after
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getItemReturn(itemReturnJobId: string, itemReturnId: string, startAfterId?: string, size?: number, options?: any) {
            return FulfillmentOperationsReturnsApiFp(configuration).getItemReturn(itemReturnJobId, itemReturnId, startAfterId, size, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get Item Return Job by id
         * @param {string} itemReturnJobId id of the item return job
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getItemReturnJob(itemReturnJobId: string, options?: any) {
            return FulfillmentOperationsReturnsApiFp(configuration).getItemReturnJob(itemReturnJobId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get all Item Return Jobs
         * @param {string} [facilityId] facility to filter the results
         * @param {Array<string>} [itemReturnJobScannableCodes] scannableCodes of the item return job to filter the results
         * @param {Array<string>} [itemReturnScannableCodes] scannableCodes of the item return to filter the results
         * @param {Array<string>} [itemReturnJobStatus] ItemReturnJobStatus to filter the results
         * @param {Array<string>} [itemReturnStatus] ItemReturnStatus of an included ItemReturn to filter the results
         * @param {string} [searchTerm] Term by which to search through the fields
         * @param {string} [startAfterId] entity to start after
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getItemReturnJobs(facilityId?: string, itemReturnJobScannableCodes?: Array<string>, itemReturnScannableCodes?: Array<string>, itemReturnJobStatus?: Array<string>, itemReturnStatus?: Array<string>, searchTerm?: string, startAfterId?: string, size?: number, options?: any) {
            return FulfillmentOperationsReturnsApiFp(configuration).getItemReturnJobs(facilityId, itemReturnJobScannableCodes, itemReturnScannableCodes, itemReturnJobStatus, itemReturnStatus, searchTerm, startAfterId, size, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get item returns
         * @param {string} itemReturnJobId item return job to read the item return for
         * @param {string} [startAfterId] entity to start after
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getItemReturns(itemReturnJobId: string, startAfterId?: string, size?: number, options?: any) {
            return FulfillmentOperationsReturnsApiFp(configuration).getItemReturns(itemReturnJobId, startAfterId, size, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get the current configuration for returns
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getReturnConfiguration(options?: any) {
            return FulfillmentOperationsReturnsApiFp(configuration).getReturnConfiguration(options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get Return Jobs
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show (max 500 per request)
         * @param {string} [facilityRef] Reference to the facility you want to filter for
         * @param {Array<string>} [status] Reference to the status you want to get the corresponding return jobs to
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getReturnJobs(startAfterId?: string, size?: number, facilityRef?: string, status?: Array<string>, options?: any) {
            return FulfillmentOperationsReturnsApiFp(configuration).getReturnJobs(startAfterId, size, facilityRef, status, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Will be replaced in the future with the new /itemreturnjob.
         * @summary Get return with the given return ID
         * @param {string} returnId ID of the return you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getReturnLines(returnId: string, options?: any) {
            return FulfillmentOperationsReturnsApiFp(configuration).getReturnLines(returnId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Actions for a ItemReturn
         * @param {string} itemReturnJobId id of the Item Return Job
         * @param {string} itemReturnId id of the Item Return
         * @param {ItemReturnActionsParameter} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        itemReturnActions(itemReturnJobId: string, itemReturnId: string, body?: ItemReturnActionsParameter, options?: any) {
            return FulfillmentOperationsReturnsApiFp(configuration).itemReturnActions(itemReturnJobId, itemReturnId, body, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />
         * @summary Patches a return with the given ID
         * @param {ReturnPatchActions} body Patch set
         * @param {string} returnId ID of return you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchReturn(body: ReturnPatchActions, returnId: string, options?: any) {
            return FulfillmentOperationsReturnsApiFp(configuration).patchReturn(body, returnId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Replace returned line items of an item return of an item return job.
         * @summary replace returned line items
         * @param {string} itemReturnJobId id of the item return job the item return belongs to
         * @param {string} itemReturnId id of the item return the returned line items belong to
         * @param {ReplaceReturnedLineItems} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        replaceReturnedLineItems(itemReturnJobId: string, itemReturnId: string, body?: ReplaceReturnedLineItems, options?: any) {
            return FulfillmentOperationsReturnsApiFp(configuration).replaceReturnedLineItems(itemReturnJobId, itemReturnId, body, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Updates a new ItemReturnJob
         * @param {string} itemReturnJobId id of the Item Return Job
         * @param {ItemReturnJobActionsParameter} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateItemReturnJob(itemReturnJobId: string, body?: ItemReturnJobActionsParameter, options?: any) {
            return FulfillmentOperationsReturnsApiFp(configuration).updateItemReturnJob(itemReturnJobId, body, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Patch for a ItemReturn LineItem
         * @param {string} itemReturnJobId id of the Item Return Job
         * @param {string} itemReturnId id of the Item Return
         * @param {string} returnedLineItemId id of the returnedLineItem
         * @param {ItemReturnLineItemForUpdate} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateItemReturnLineItem(itemReturnJobId: string, itemReturnId: string, returnedLineItemId: string, body?: ItemReturnLineItemForUpdate, options?: any) {
            return FulfillmentOperationsReturnsApiFp(configuration).updateItemReturnLineItem(itemReturnJobId, itemReturnId, returnedLineItemId, body, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Change the tenant wide return configuration
         * @param {ReturnConfiguration} body Desired return configuration to create/update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertReturnConfiguration(body: ReturnConfiguration, options?: any) {
            return FulfillmentOperationsReturnsApiFp(configuration).upsertReturnConfiguration(body, options)(fetch, basePath);
        },
    };
};

/**
 * FulfillmentOperationsReturnsApi - object-oriented interface
 * @export
 * @class FulfillmentOperationsReturnsApi
 * @extends {BaseAPI}
 */
export class FulfillmentOperationsReturnsApi extends BaseAPI {
    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />
     * @summary Add a new return
     * @param {ReturnJobForCreation} body ReturnJob object
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsReturnsApi
     */
    public addReturn(body: ReturnJobForCreation, options?: any) {
        return FulfillmentOperationsReturnsApiFp(this.configuration).addReturn(body, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Create a new item return for an item return job
     * @summary Creates a new ItemReturn
     * @param {AddItemReturnToItemReturnJob} body
     * @param {string} itemReturnJobId Id of the item return job to create the item return for
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsReturnsApi
     */
    public createItemReturn(body: AddItemReturnToItemReturnJob, itemReturnJobId: string, options?: any) {
        return FulfillmentOperationsReturnsApiFp(this.configuration).createItemReturn(body, itemReturnJobId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Creates a new ItemReturnJob
     * @param {ItemReturnJobForCreation} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsReturnsApi
     */
    public createItemReturnJob(body?: ItemReturnJobForCreation, options?: any) {
        return FulfillmentOperationsReturnsApiFp(this.configuration).createItemReturnJob(body, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Delete an item return from an item return job
     * @summary Delete an item return from an item return job
     * @param {string} itemReturnJobId id of the item return job to delete the item return for
     * @param {string} itemReturnId id of the item return you want to delete
     * @param {number} itemReturnJobVersion version of the item return job to delete the item return for
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsReturnsApi
     */
    public deleteItemReturn(itemReturnJobId: string, itemReturnId: string, itemReturnJobVersion: number, options?: any) {
        return FulfillmentOperationsReturnsApiFp(this.configuration).deleteItemReturn(itemReturnJobId, itemReturnId, itemReturnJobVersion, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get all Item Returns
     * @param {string} [searchTerm] Search term you want to get the corresponding item returns. Search will be performed on multiple fields, including return id, tenant order id, customer name, tenant article ids, artile titles
     * @param {Array<string>} [facilityRefs] facilities to filter the results
     * @param {Array<string>} [itemReturnStatus] ItemReturnStatus of an included ItemReturn to filter the results
     * @param {Array<string>} [itemReturnLineItemStatus] ItemReturnLineItemStatus of an included itemReturnLineItem to filter the results
     * @param {string} [startAfterId] entity to start after
     * @param {number} [size] number of entities to show
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsReturnsApi
     */
    public findItemReturns(searchTerm?: string, facilityRefs?: Array<string>, itemReturnStatus?: Array<string>, itemReturnLineItemStatus?: Array<string>, startAfterId?: string, size?: number, options?: any) {
        return FulfillmentOperationsReturnsApiFp(this.configuration).findItemReturns(searchTerm, facilityRefs, itemReturnStatus, itemReturnLineItemStatus, startAfterId, size, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get item return by id
     * @param {string} itemReturnJobId item return job to read the item return for
     * @param {string} itemReturnId id of the item return you want to read
     * @param {string} [startAfterId] entity to start after
     * @param {number} [size] number of entities to show
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsReturnsApi
     */
    public getItemReturn(itemReturnJobId: string, itemReturnId: string, startAfterId?: string, size?: number, options?: any) {
        return FulfillmentOperationsReturnsApiFp(this.configuration).getItemReturn(itemReturnJobId, itemReturnId, startAfterId, size, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get Item Return Job by id
     * @param {string} itemReturnJobId id of the item return job
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsReturnsApi
     */
    public getItemReturnJob(itemReturnJobId: string, options?: any) {
        return FulfillmentOperationsReturnsApiFp(this.configuration).getItemReturnJob(itemReturnJobId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get all Item Return Jobs
     * @param {string} [facilityId] facility to filter the results
     * @param {Array<string>} [itemReturnJobScannableCodes] scannableCodes of the item return job to filter the results
     * @param {Array<string>} [itemReturnScannableCodes] scannableCodes of the item return to filter the results
     * @param {Array<string>} [itemReturnJobStatus] ItemReturnJobStatus to filter the results
     * @param {Array<string>} [itemReturnStatus] ItemReturnStatus of an included ItemReturn to filter the results
     * @param {string} [searchTerm] Term by which to search through the fields
     * @param {string} [startAfterId] entity to start after
     * @param {number} [size] number of entities to show
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsReturnsApi
     */
    public getItemReturnJobs(facilityId?: string, itemReturnJobScannableCodes?: Array<string>, itemReturnScannableCodes?: Array<string>, itemReturnJobStatus?: Array<string>, itemReturnStatus?: Array<string>, searchTerm?: string, startAfterId?: string, size?: number, options?: any) {
        return FulfillmentOperationsReturnsApiFp(this.configuration).getItemReturnJobs(facilityId, itemReturnJobScannableCodes, itemReturnScannableCodes, itemReturnJobStatus, itemReturnStatus, searchTerm, startAfterId, size, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Get item returns
     * @param {string} itemReturnJobId item return job to read the item return for
     * @param {string} [startAfterId] entity to start after
     * @param {number} [size] number of entities to show
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsReturnsApi
     */
    public getItemReturns(itemReturnJobId: string, startAfterId?: string, size?: number, options?: any) {
        return FulfillmentOperationsReturnsApiFp(this.configuration).getItemReturns(itemReturnJobId, startAfterId, size, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Get the current configuration for returns
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsReturnsApi
     */
    public getReturnConfiguration(options?: any) {
        return FulfillmentOperationsReturnsApiFp(this.configuration).getReturnConfiguration(options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get Return Jobs
     * @param {string} [startAfterId] all entities after given Id
     * @param {number} [size] number of entities to show (max 500 per request)
     * @param {string} [facilityRef] Reference to the facility you want to filter for
     * @param {Array<string>} [status] Reference to the status you want to get the corresponding return jobs to
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsReturnsApi
     */
    public getReturnJobs(startAfterId?: string, size?: number, facilityRef?: string, status?: Array<string>, options?: any) {
        return FulfillmentOperationsReturnsApiFp(this.configuration).getReturnJobs(startAfterId, size, facilityRef, status, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Will be replaced in the future with the new /itemreturnjob.
     * @summary Get return with the given return ID
     * @param {string} returnId ID of the return you want to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsReturnsApi
     */
    public getReturnLines(returnId: string, options?: any) {
        return FulfillmentOperationsReturnsApiFp(this.configuration).getReturnLines(returnId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Actions for a ItemReturn
     * @param {string} itemReturnJobId id of the Item Return Job
     * @param {string} itemReturnId id of the Item Return
     * @param {ItemReturnActionsParameter} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsReturnsApi
     */
    public itemReturnActions(itemReturnJobId: string, itemReturnId: string, body?: ItemReturnActionsParameter, options?: any) {
        return FulfillmentOperationsReturnsApiFp(this.configuration).itemReturnActions(itemReturnJobId, itemReturnId, body, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />
     * @summary Patches a return with the given ID
     * @param {ReturnPatchActions} body Patch set
     * @param {string} returnId ID of return you want to patch
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsReturnsApi
     */
    public patchReturn(body: ReturnPatchActions, returnId: string, options?: any) {
        return FulfillmentOperationsReturnsApiFp(this.configuration).patchReturn(body, returnId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Replace returned line items of an item return of an item return job.
     * @summary replace returned line items
     * @param {string} itemReturnJobId id of the item return job the item return belongs to
     * @param {string} itemReturnId id of the item return the returned line items belong to
     * @param {ReplaceReturnedLineItems} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsReturnsApi
     */
    public replaceReturnedLineItems(itemReturnJobId: string, itemReturnId: string, body?: ReplaceReturnedLineItems, options?: any) {
        return FulfillmentOperationsReturnsApiFp(this.configuration).replaceReturnedLineItems(itemReturnJobId, itemReturnId, body, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Updates a new ItemReturnJob
     * @param {string} itemReturnJobId id of the Item Return Job
     * @param {ItemReturnJobActionsParameter} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsReturnsApi
     */
    public updateItemReturnJob(itemReturnJobId: string, body?: ItemReturnJobActionsParameter, options?: any) {
        return FulfillmentOperationsReturnsApiFp(this.configuration).updateItemReturnJob(itemReturnJobId, body, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Patch for a ItemReturn LineItem
     * @param {string} itemReturnJobId id of the Item Return Job
     * @param {string} itemReturnId id of the Item Return
     * @param {string} returnedLineItemId id of the returnedLineItem
     * @param {ItemReturnLineItemForUpdate} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsReturnsApi
     */
    public updateItemReturnLineItem(itemReturnJobId: string, itemReturnId: string, returnedLineItemId: string, body?: ItemReturnLineItemForUpdate, options?: any) {
        return FulfillmentOperationsReturnsApiFp(this.configuration).updateItemReturnLineItem(itemReturnJobId, itemReturnId, returnedLineItemId, body, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Change the tenant wide return configuration
     * @param {ReturnConfiguration} body Desired return configuration to create/update
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsReturnsApi
     */
    public upsertReturnConfiguration(body: ReturnConfiguration, options?: any) {
        return FulfillmentOperationsReturnsApiFp(this.configuration).upsertReturnConfiguration(body, options)(this.fetch, this.basePath);
    }

}
/**
 * FulfillmentOperationsShipmentsApi - fetch parameter creator
 * @export
 */
export const FulfillmentOperationsShipmentsApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *
         * @summary Creates a new parcel for a shipment
         * @param {string} shipmentId ID of shipment you want to create parcel for
         * @param {ParcelForCreation} [body] Payload of the parcel you want to create
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addParcel(shipmentId: string, body?: ParcelForCreation, options: any = {}): FetchArgs {
            // verify required parameter 'shipmentId' is not null or undefined
            if (shipmentId === null || shipmentId === undefined) {
                throw new RequiredError('shipmentId','Required parameter shipmentId was null or undefined when calling addParcel.');
            }
            const localVarPath = `/api/shipments/{shipmentId}/parcels`
                .replace(`{${"shipmentId"}}`, encodeURIComponent(String(shipmentId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ParcelForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Add a new Shipment
         * @param {ShipmentForCreation} body Shipment object supplied by your picking app
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addShipment(body: ShipmentForCreation, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling addShipment.');
            }
            const localVarPath = `/api/shipments`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ShipmentForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Create delivery note
         * @param {DeliveryNote} body
         * @param {string} [locale] Provide the localized values for the delivery note. If not provided the default locale is used. For example de_DE
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createDeliveryNote(body: DeliveryNote, locale?: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling createDeliveryNote.');
            }
            const localVarPath = `/api/deliverynotes`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"DeliveryNote" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Create return note
         * @param {ReturnNote} body
         * @param {string} [locale] Provide the localized values for the return note. If not provided the default locale is used. For example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createReturnNote(body: ReturnNote, locale?: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling createReturnNote.');
            }
            const localVarPath = `/api/returnnotes`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ReturnNote" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Delete a parcel with the given ID
         * @param {string} parcelId ID of the parcel you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteParcel(parcelId: string, options: any = {}): FetchArgs {
            // verify required parameter 'parcelId' is not null or undefined
            if (parcelId === null || parcelId === undefined) {
                throw new RequiredError('parcelId','Required parameter parcelId was null or undefined when calling deleteParcel.');
            }
            const localVarPath = `/api/parcels/{parcelId}`
                .replace(`{${"parcelId"}}`, encodeURIComponent(String(parcelId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Return all parcels
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllParcels(startAfterId?: string, size?: number, options: any = {}): FetchArgs {
            const localVarPath = `/api/parcels`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Return all shipments
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {string} [pickJobRef] This query can be used to find shipments for a referenced pickjob
         * @param {string} [facilityRef] This query can be used to find shipments belonging to the referenced facility
         * @param {string} [carrierRef] This query can be used to find shipments for a referenced carrier
         * @param {Array<string>} [carrierKeys] Find shipments with one the the given carriers
         * @param {Array<string>} [status] Find shipments in one of the given status
         * @param {Array<string>} [parcelStatus] Find shipments with parcels in one of the given status
         * @param {Date} [startTargetTime] Start date range for shipments
         * @param {Date} [endTargetTime] End date range for shipments
         * @param {boolean} [anonymized] Parameter to filter anonymized shipments
         * @param {string} [searchTerm] Fulltext search in shipment&#x27;s tenantOrderId, shortId, parcels.carrierTrackingNumber, lineItems.article.tenantArticleId, lineItems.article.title, invoiceAddress, targetAddress and customerName
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllShipments(startAfterId?: string, size?: number, pickJobRef?: string, facilityRef?: string, carrierRef?: string, carrierKeys?: Array<string>, status?: Array<string>, parcelStatus?: Array<string>, startTargetTime?: Date, endTargetTime?: Date, anonymized?: boolean, searchTerm?: string, options: any = {}): FetchArgs {
            const localVarPath = `/api/shipments`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            if (pickJobRef !== undefined) {
                localVarQueryParameter['pickJobRef'] = pickJobRef;
            }

            if (facilityRef !== undefined) {
                localVarQueryParameter['facilityRef'] = facilityRef;
            }

            if (carrierRef !== undefined) {
                localVarQueryParameter['carrierRef'] = carrierRef;
            }

            if (carrierKeys) {
                localVarQueryParameter['carrierKeys'] = carrierKeys.join(COLLECTION_FORMATS["csv"]);
            }

            if (status) {
                localVarQueryParameter['status'] = status.join(COLLECTION_FORMATS["csv"]);
            }

            if (parcelStatus) {
                localVarQueryParameter['parcelStatus'] = parcelStatus.join(COLLECTION_FORMATS["csv"]);
            }

            if (startTargetTime !== undefined) {
                localVarQueryParameter['startTargetTime'] = (startTargetTime as any).toISOString();
            }

            if (endTargetTime !== undefined) {
                localVarQueryParameter['endTargetTime'] = (endTargetTime as any).toISOString();
            }

            if (anonymized !== undefined) {
                localVarQueryParameter['anonymized'] = anonymized;
            }

            if (searchTerm !== undefined) {
                localVarQueryParameter['searchTerm'] = searchTerm;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a tenant wide delivery configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDeliveryNoteConfiguration(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/deliverynote`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a label for the parcel with the given ID
         * @param {string} parcelId ID of the parcel you want to get a label for
         * @param {string} labelDocument Within a parcel different labels can be created. The following types of labels are currently supported: all.pdf, send.pdf and return.pdf &#x3D; Parcel label plus (if configured) retoure label.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLabelForParcel(parcelId: string, labelDocument: string, options: any = {}): FetchArgs {
            // verify required parameter 'parcelId' is not null or undefined
            if (parcelId === null || parcelId === undefined) {
                throw new RequiredError('parcelId','Required parameter parcelId was null or undefined when calling getLabelForParcel.');
            }
            // verify required parameter 'labelDocument' is not null or undefined
            if (labelDocument === null || labelDocument === undefined) {
                throw new RequiredError('labelDocument','Required parameter labelDocument was null or undefined when calling getLabelForParcel.');
            }
            const localVarPath = `/api/parcels/{parcelId}/labels/{labelDocument}`
                .replace(`{${"parcelId"}}`, encodeURIComponent(String(parcelId)))
                .replace(`{${"labelDocument"}}`, encodeURIComponent(String(labelDocument)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a parcel with the given ID
         * @param {string} parcelId ID of the parcel you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getParcel(parcelId: string, options: any = {}): FetchArgs {
            // verify required parameter 'parcelId' is not null or undefined
            if (parcelId === null || parcelId === undefined) {
                throw new RequiredError('parcelId','Required parameter parcelId was null or undefined when calling getParcel.');
            }
            const localVarPath = `/api/parcels/{parcelId}`
                .replace(`{${"parcelId"}}`, encodeURIComponent(String(parcelId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get deliveryNote for a parcel
         * @param {string} parcelId ID of parcel you want to retrieve deliveryNote for
         * @param {string} [locale] Provide the localized values for the delivery note. If not provided the default locale is used. For example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getParcelDeliveryNote(parcelId: string, locale?: string, options: any = {}): FetchArgs {
            // verify required parameter 'parcelId' is not null or undefined
            if (parcelId === null || parcelId === undefined) {
                throw new RequiredError('parcelId','Required parameter parcelId was null or undefined when calling getParcelDeliveryNote.');
            }
            const localVarPath = `/api/parcels/{parcelId}/deliverynote`
                .replace(`{${"parcelId"}}`, encodeURIComponent(String(parcelId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get returnNote for a parcel
         * @param {string} parcelId ID of parcel you want to retrieve returnNote for
         * @param {string} [locale] Provide the localized values for the returnNote. If not provided the default locale is used. For example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getParcelReturnNote(parcelId: string, locale?: string, options: any = {}): FetchArgs {
            // verify required parameter 'parcelId' is not null or undefined
            if (parcelId === null || parcelId === undefined) {
                throw new RequiredError('parcelId','Required parameter parcelId was null or undefined when calling getParcelReturnNote.');
            }
            const localVarPath = `/api/parcels/{parcelId}/returnnote`
                .replace(`{${"parcelId"}}`, encodeURIComponent(String(parcelId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Read tag configuration for parcels
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getParcelTagConfiguration(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/tags/parcel`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get defined return notes of the tenant
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getReturnNoteConfiguration(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/returnnote`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a Shipment with the given ID
         * @param {string} shipmentId ID of Shipment you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getShipment(shipmentId: string, options: any = {}): FetchArgs {
            // verify required parameter 'shipmentId' is not null or undefined
            if (shipmentId === null || shipmentId === undefined) {
                throw new RequiredError('shipmentId','Required parameter shipmentId was null or undefined when calling getShipment.');
            }
            const localVarPath = `/api/shipments/{shipmentId}`
                .replace(`{${"shipmentId"}}`, encodeURIComponent(String(shipmentId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get delivery note for a shipment
         * @param {string} shipmentId ID of shipment you want to retrieve delivery note for
         * @param {string} [locale] Provide the localized values for the delivery note. If not provided the default locale is used. For example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getShipmentDeliveryNote(shipmentId: string, locale?: string, options: any = {}): FetchArgs {
            // verify required parameter 'shipmentId' is not null or undefined
            if (shipmentId === null || shipmentId === undefined) {
                throw new RequiredError('shipmentId','Required parameter shipmentId was null or undefined when calling getShipmentDeliveryNote.');
            }
            const localVarPath = `/api/shipments/{shipmentId}/deliverynote`
                .replace(`{${"shipmentId"}}`, encodeURIComponent(String(shipmentId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Patches a parcel with the given ID
         * @param {ParcelPatchActions} body Patch set
         * @param {string} parcelId ID of the parcel you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchParcel(body: ParcelPatchActions, parcelId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling patchParcel.');
            }
            // verify required parameter 'parcelId' is not null or undefined
            if (parcelId === null || parcelId === undefined) {
                throw new RequiredError('parcelId','Required parameter parcelId was null or undefined when calling patchParcel.');
            }
            const localVarPath = `/api/parcels/{parcelId}`
                .replace(`{${"parcelId"}}`, encodeURIComponent(String(parcelId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ParcelPatchActions" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Patches a shipment with the given ID
         * @param {ShipmentPatchActions} body Patch set
         * @param {string} shipmentId ID of shipment you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchShipment(body: ShipmentPatchActions, shipmentId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling patchShipment.');
            }
            // verify required parameter 'shipmentId' is not null or undefined
            if (shipmentId === null || shipmentId === undefined) {
                throw new RequiredError('shipmentId','Required parameter shipmentId was null or undefined when calling patchShipment.');
            }
            const localVarPath = `/api/shipments/{shipmentId}`
                .replace(`{${"shipmentId"}}`, encodeURIComponent(String(shipmentId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ShipmentPatchActions" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Update delivery note configuration of a tenant
         * @param {DeliveryNoteConfigurationForUpsert} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putDeliveryNoteConfiguration(body: DeliveryNoteConfigurationForUpsert, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putDeliveryNoteConfiguration.');
            }
            const localVarPath = `/api/configurations/deliverynote`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"DeliveryNoteConfigurationForUpsert" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Change the tag configuration for Parcels
         * @param {ParcelTagConfigurationForUpsert} body Desired Tag Configuration for Parcels
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putParcelTagConfiguration(body: ParcelTagConfigurationForUpsert, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putParcelTagConfiguration.');
            }
            const localVarPath = `/api/configurations/tags/parcel`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ParcelTagConfigurationForUpsert" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Change the tenant wide return note configuration
         * @param {ReturnNoteConfigurationForUpsert} body Desired return note configuration to create/update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putReturnNoteConfiguration(body: ReturnNoteConfigurationForUpsert, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putReturnNoteConfiguration.');
            }
            const localVarPath = `/api/configurations/returnnote`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ReturnNoteConfigurationForUpsert" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * FulfillmentOperationsShipmentsApi - functional programming interface
 * @export
 */
export const FulfillmentOperationsShipmentsApiFp = function(configuration?: Configuration) {
    return {
        /**
         *
         * @summary Creates a new parcel for a shipment
         * @param {string} shipmentId ID of shipment you want to create parcel for
         * @param {ParcelForCreation} [body] Payload of the parcel you want to create
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addParcel(shipmentId: string, body?: ParcelForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Parcel> {
            const localVarFetchArgs = FulfillmentOperationsShipmentsApiFetchParamCreator(configuration).addParcel(shipmentId, body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Add a new Shipment
         * @param {ShipmentForCreation} body Shipment object supplied by your picking app
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addShipment(body: ShipmentForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Shipment> {
            const localVarFetchArgs = FulfillmentOperationsShipmentsApiFetchParamCreator(configuration).addShipment(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Create delivery note
         * @param {DeliveryNote} body
         * @param {string} [locale] Provide the localized values for the delivery note. If not provided the default locale is used. For example de_DE
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createDeliveryNote(body: DeliveryNote, locale?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<DeliveryNote> {
            const localVarFetchArgs = FulfillmentOperationsShipmentsApiFetchParamCreator(configuration).createDeliveryNote(body, locale, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Create return note
         * @param {ReturnNote} body
         * @param {string} [locale] Provide the localized values for the return note. If not provided the default locale is used. For example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createReturnNote(body: ReturnNote, locale?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ReturnNote> {
            const localVarFetchArgs = FulfillmentOperationsShipmentsApiFetchParamCreator(configuration).createReturnNote(body, locale, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Delete a parcel with the given ID
         * @param {string} parcelId ID of the parcel you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteParcel(parcelId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = FulfillmentOperationsShipmentsApiFetchParamCreator(configuration).deleteParcel(parcelId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Return all parcels
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllParcels(startAfterId?: string, size?: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<StrippedParcels> {
            const localVarFetchArgs = FulfillmentOperationsShipmentsApiFetchParamCreator(configuration).getAllParcels(startAfterId, size, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Return all shipments
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {string} [pickJobRef] This query can be used to find shipments for a referenced pickjob
         * @param {string} [facilityRef] This query can be used to find shipments belonging to the referenced facility
         * @param {string} [carrierRef] This query can be used to find shipments for a referenced carrier
         * @param {Array<string>} [carrierKeys] Find shipments with one the the given carriers
         * @param {Array<string>} [status] Find shipments in one of the given status
         * @param {Array<string>} [parcelStatus] Find shipments with parcels in one of the given status
         * @param {Date} [startTargetTime] Start date range for shipments
         * @param {Date} [endTargetTime] End date range for shipments
         * @param {boolean} [anonymized] Parameter to filter anonymized shipments
         * @param {string} [searchTerm] Fulltext search in shipment&#x27;s tenantOrderId, shortId, parcels.carrierTrackingNumber, lineItems.article.tenantArticleId, lineItems.article.title, invoiceAddress, targetAddress and customerName
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllShipments(startAfterId?: string, size?: number, pickJobRef?: string, facilityRef?: string, carrierRef?: string, carrierKeys?: Array<string>, status?: Array<string>, parcelStatus?: Array<string>, startTargetTime?: Date, endTargetTime?: Date, anonymized?: boolean, searchTerm?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<StrippedShipments> {
            const localVarFetchArgs = FulfillmentOperationsShipmentsApiFetchParamCreator(configuration).getAllShipments(startAfterId, size, pickJobRef, facilityRef, carrierRef, carrierKeys, status, parcelStatus, startTargetTime, endTargetTime, anonymized, searchTerm, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a tenant wide delivery configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDeliveryNoteConfiguration(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<DeliveryNoteConfiguration> {
            const localVarFetchArgs = FulfillmentOperationsShipmentsApiFetchParamCreator(configuration).getDeliveryNoteConfiguration(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a label for the parcel with the given ID
         * @param {string} parcelId ID of the parcel you want to get a label for
         * @param {string} labelDocument Within a parcel different labels can be created. The following types of labels are currently supported: all.pdf, send.pdf and return.pdf &#x3D; Parcel label plus (if configured) retoure label.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLabelForParcel(parcelId: string, labelDocument: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = FulfillmentOperationsShipmentsApiFetchParamCreator(configuration).getLabelForParcel(parcelId, labelDocument, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a parcel with the given ID
         * @param {string} parcelId ID of the parcel you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getParcel(parcelId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Parcel> {
            const localVarFetchArgs = FulfillmentOperationsShipmentsApiFetchParamCreator(configuration).getParcel(parcelId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get deliveryNote for a parcel
         * @param {string} parcelId ID of parcel you want to retrieve deliveryNote for
         * @param {string} [locale] Provide the localized values for the delivery note. If not provided the default locale is used. For example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getParcelDeliveryNote(parcelId: string, locale?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<DeliveryNote> {
            const localVarFetchArgs = FulfillmentOperationsShipmentsApiFetchParamCreator(configuration).getParcelDeliveryNote(parcelId, locale, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get returnNote for a parcel
         * @param {string} parcelId ID of parcel you want to retrieve returnNote for
         * @param {string} [locale] Provide the localized values for the returnNote. If not provided the default locale is used. For example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getParcelReturnNote(parcelId: string, locale?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ReturnNote> {
            const localVarFetchArgs = FulfillmentOperationsShipmentsApiFetchParamCreator(configuration).getParcelReturnNote(parcelId, locale, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Read tag configuration for parcels
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getParcelTagConfiguration(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ParcelTagConfiguration> {
            const localVarFetchArgs = FulfillmentOperationsShipmentsApiFetchParamCreator(configuration).getParcelTagConfiguration(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get defined return notes of the tenant
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getReturnNoteConfiguration(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ReturnNoteConfiguration> {
            const localVarFetchArgs = FulfillmentOperationsShipmentsApiFetchParamCreator(configuration).getReturnNoteConfiguration(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a Shipment with the given ID
         * @param {string} shipmentId ID of Shipment you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getShipment(shipmentId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Shipment> {
            const localVarFetchArgs = FulfillmentOperationsShipmentsApiFetchParamCreator(configuration).getShipment(shipmentId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get delivery note for a shipment
         * @param {string} shipmentId ID of shipment you want to retrieve delivery note for
         * @param {string} [locale] Provide the localized values for the delivery note. If not provided the default locale is used. For example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getShipmentDeliveryNote(shipmentId: string, locale?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<DeliveryNote> {
            const localVarFetchArgs = FulfillmentOperationsShipmentsApiFetchParamCreator(configuration).getShipmentDeliveryNote(shipmentId, locale, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Patches a parcel with the given ID
         * @param {ParcelPatchActions} body Patch set
         * @param {string} parcelId ID of the parcel you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchParcel(body: ParcelPatchActions, parcelId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Parcel> {
            const localVarFetchArgs = FulfillmentOperationsShipmentsApiFetchParamCreator(configuration).patchParcel(body, parcelId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Patches a shipment with the given ID
         * @param {ShipmentPatchActions} body Patch set
         * @param {string} shipmentId ID of shipment you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchShipment(body: ShipmentPatchActions, shipmentId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Shipment> {
            const localVarFetchArgs = FulfillmentOperationsShipmentsApiFetchParamCreator(configuration).patchShipment(body, shipmentId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Update delivery note configuration of a tenant
         * @param {DeliveryNoteConfigurationForUpsert} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putDeliveryNoteConfiguration(body: DeliveryNoteConfigurationForUpsert, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<DeliveryNoteConfiguration> {
            const localVarFetchArgs = FulfillmentOperationsShipmentsApiFetchParamCreator(configuration).putDeliveryNoteConfiguration(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Change the tag configuration for Parcels
         * @param {ParcelTagConfigurationForUpsert} body Desired Tag Configuration for Parcels
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putParcelTagConfiguration(body: ParcelTagConfigurationForUpsert, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ParcelTagConfiguration> {
            const localVarFetchArgs = FulfillmentOperationsShipmentsApiFetchParamCreator(configuration).putParcelTagConfiguration(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Change the tenant wide return note configuration
         * @param {ReturnNoteConfigurationForUpsert} body Desired return note configuration to create/update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putReturnNoteConfiguration(body: ReturnNoteConfigurationForUpsert, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ReturnNoteConfiguration> {
            const localVarFetchArgs = FulfillmentOperationsShipmentsApiFetchParamCreator(configuration).putReturnNoteConfiguration(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * FulfillmentOperationsShipmentsApi - factory interface
 * @export
 */
export const FulfillmentOperationsShipmentsApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         *
         * @summary Creates a new parcel for a shipment
         * @param {string} shipmentId ID of shipment you want to create parcel for
         * @param {ParcelForCreation} [body] Payload of the parcel you want to create
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addParcel(shipmentId: string, body?: ParcelForCreation, options?: any) {
            return FulfillmentOperationsShipmentsApiFp(configuration).addParcel(shipmentId, body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Add a new Shipment
         * @param {ShipmentForCreation} body Shipment object supplied by your picking app
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addShipment(body: ShipmentForCreation, options?: any) {
            return FulfillmentOperationsShipmentsApiFp(configuration).addShipment(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Create delivery note
         * @param {DeliveryNote} body
         * @param {string} [locale] Provide the localized values for the delivery note. If not provided the default locale is used. For example de_DE
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createDeliveryNote(body: DeliveryNote, locale?: string, options?: any) {
            return FulfillmentOperationsShipmentsApiFp(configuration).createDeliveryNote(body, locale, options)(fetch, basePath);
        },
        /**
         *
         * @summary Create return note
         * @param {ReturnNote} body
         * @param {string} [locale] Provide the localized values for the return note. If not provided the default locale is used. For example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createReturnNote(body: ReturnNote, locale?: string, options?: any) {
            return FulfillmentOperationsShipmentsApiFp(configuration).createReturnNote(body, locale, options)(fetch, basePath);
        },
        /**
         *
         * @summary Delete a parcel with the given ID
         * @param {string} parcelId ID of the parcel you want to delete
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteParcel(parcelId: string, options?: any) {
            return FulfillmentOperationsShipmentsApiFp(configuration).deleteParcel(parcelId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Return all parcels
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllParcels(startAfterId?: string, size?: number, options?: any) {
            return FulfillmentOperationsShipmentsApiFp(configuration).getAllParcels(startAfterId, size, options)(fetch, basePath);
        },
        /**
         *
         * @summary Return all shipments
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {string} [pickJobRef] This query can be used to find shipments for a referenced pickjob
         * @param {string} [facilityRef] This query can be used to find shipments belonging to the referenced facility
         * @param {string} [carrierRef] This query can be used to find shipments for a referenced carrier
         * @param {Array<string>} [carrierKeys] Find shipments with one the the given carriers
         * @param {Array<string>} [status] Find shipments in one of the given status
         * @param {Array<string>} [parcelStatus] Find shipments with parcels in one of the given status
         * @param {Date} [startTargetTime] Start date range for shipments
         * @param {Date} [endTargetTime] End date range for shipments
         * @param {boolean} [anonymized] Parameter to filter anonymized shipments
         * @param {string} [searchTerm] Fulltext search in shipment&#x27;s tenantOrderId, shortId, parcels.carrierTrackingNumber, lineItems.article.tenantArticleId, lineItems.article.title, invoiceAddress, targetAddress and customerName
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllShipments(startAfterId?: string, size?: number, pickJobRef?: string, facilityRef?: string, carrierRef?: string, carrierKeys?: Array<string>, status?: Array<string>, parcelStatus?: Array<string>, startTargetTime?: Date, endTargetTime?: Date, anonymized?: boolean, searchTerm?: string, options?: any) {
            return FulfillmentOperationsShipmentsApiFp(configuration).getAllShipments(startAfterId, size, pickJobRef, facilityRef, carrierRef, carrierKeys, status, parcelStatus, startTargetTime, endTargetTime, anonymized, searchTerm, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a tenant wide delivery configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDeliveryNoteConfiguration(options?: any) {
            return FulfillmentOperationsShipmentsApiFp(configuration).getDeliveryNoteConfiguration(options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a label for the parcel with the given ID
         * @param {string} parcelId ID of the parcel you want to get a label for
         * @param {string} labelDocument Within a parcel different labels can be created. The following types of labels are currently supported: all.pdf, send.pdf and return.pdf &#x3D; Parcel label plus (if configured) retoure label.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getLabelForParcel(parcelId: string, labelDocument: string, options?: any) {
            return FulfillmentOperationsShipmentsApiFp(configuration).getLabelForParcel(parcelId, labelDocument, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a parcel with the given ID
         * @param {string} parcelId ID of the parcel you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getParcel(parcelId: string, options?: any) {
            return FulfillmentOperationsShipmentsApiFp(configuration).getParcel(parcelId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get deliveryNote for a parcel
         * @param {string} parcelId ID of parcel you want to retrieve deliveryNote for
         * @param {string} [locale] Provide the localized values for the delivery note. If not provided the default locale is used. For example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getParcelDeliveryNote(parcelId: string, locale?: string, options?: any) {
            return FulfillmentOperationsShipmentsApiFp(configuration).getParcelDeliveryNote(parcelId, locale, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get returnNote for a parcel
         * @param {string} parcelId ID of parcel you want to retrieve returnNote for
         * @param {string} [locale] Provide the localized values for the returnNote. If not provided the default locale is used. For example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getParcelReturnNote(parcelId: string, locale?: string, options?: any) {
            return FulfillmentOperationsShipmentsApiFp(configuration).getParcelReturnNote(parcelId, locale, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Read tag configuration for parcels
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getParcelTagConfiguration(options?: any) {
            return FulfillmentOperationsShipmentsApiFp(configuration).getParcelTagConfiguration(options)(fetch, basePath);
        },
        /**
         *
         * @summary Get defined return notes of the tenant
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getReturnNoteConfiguration(options?: any) {
            return FulfillmentOperationsShipmentsApiFp(configuration).getReturnNoteConfiguration(options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a Shipment with the given ID
         * @param {string} shipmentId ID of Shipment you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getShipment(shipmentId: string, options?: any) {
            return FulfillmentOperationsShipmentsApiFp(configuration).getShipment(shipmentId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get delivery note for a shipment
         * @param {string} shipmentId ID of shipment you want to retrieve delivery note for
         * @param {string} [locale] Provide the localized values for the delivery note. If not provided the default locale is used. For example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getShipmentDeliveryNote(shipmentId: string, locale?: string, options?: any) {
            return FulfillmentOperationsShipmentsApiFp(configuration).getShipmentDeliveryNote(shipmentId, locale, options)(fetch, basePath);
        },
        /**
         *
         * @summary Patches a parcel with the given ID
         * @param {ParcelPatchActions} body Patch set
         * @param {string} parcelId ID of the parcel you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchParcel(body: ParcelPatchActions, parcelId: string, options?: any) {
            return FulfillmentOperationsShipmentsApiFp(configuration).patchParcel(body, parcelId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Patches a shipment with the given ID
         * @param {ShipmentPatchActions} body Patch set
         * @param {string} shipmentId ID of shipment you want to patch
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchShipment(body: ShipmentPatchActions, shipmentId: string, options?: any) {
            return FulfillmentOperationsShipmentsApiFp(configuration).patchShipment(body, shipmentId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Update delivery note configuration of a tenant
         * @param {DeliveryNoteConfigurationForUpsert} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putDeliveryNoteConfiguration(body: DeliveryNoteConfigurationForUpsert, options?: any) {
            return FulfillmentOperationsShipmentsApiFp(configuration).putDeliveryNoteConfiguration(body, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Change the tag configuration for Parcels
         * @param {ParcelTagConfigurationForUpsert} body Desired Tag Configuration for Parcels
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putParcelTagConfiguration(body: ParcelTagConfigurationForUpsert, options?: any) {
            return FulfillmentOperationsShipmentsApiFp(configuration).putParcelTagConfiguration(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Change the tenant wide return note configuration
         * @param {ReturnNoteConfigurationForUpsert} body Desired return note configuration to create/update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putReturnNoteConfiguration(body: ReturnNoteConfigurationForUpsert, options?: any) {
            return FulfillmentOperationsShipmentsApiFp(configuration).putReturnNoteConfiguration(body, options)(fetch, basePath);
        },
    };
};

/**
 * FulfillmentOperationsShipmentsApi - object-oriented interface
 * @export
 * @class FulfillmentOperationsShipmentsApi
 * @extends {BaseAPI}
 */
export class FulfillmentOperationsShipmentsApi extends BaseAPI {
    /**
     *
     * @summary Creates a new parcel for a shipment
     * @param {string} shipmentId ID of shipment you want to create parcel for
     * @param {ParcelForCreation} [body] Payload of the parcel you want to create
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsShipmentsApi
     */
    public addParcel(shipmentId: string, body?: ParcelForCreation, options?: any) {
        return FulfillmentOperationsShipmentsApiFp(this.configuration).addParcel(shipmentId, body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Add a new Shipment
     * @param {ShipmentForCreation} body Shipment object supplied by your picking app
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsShipmentsApi
     */
    public addShipment(body: ShipmentForCreation, options?: any) {
        return FulfillmentOperationsShipmentsApiFp(this.configuration).addShipment(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Create delivery note
     * @param {DeliveryNote} body
     * @param {string} [locale] Provide the localized values for the delivery note. If not provided the default locale is used. For example de_DE
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsShipmentsApi
     */
    public createDeliveryNote(body: DeliveryNote, locale?: string, options?: any) {
        return FulfillmentOperationsShipmentsApiFp(this.configuration).createDeliveryNote(body, locale, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Create return note
     * @param {ReturnNote} body
     * @param {string} [locale] Provide the localized values for the return note. If not provided the default locale is used. For example de_DE.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsShipmentsApi
     */
    public createReturnNote(body: ReturnNote, locale?: string, options?: any) {
        return FulfillmentOperationsShipmentsApiFp(this.configuration).createReturnNote(body, locale, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Delete a parcel with the given ID
     * @param {string} parcelId ID of the parcel you want to delete
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsShipmentsApi
     */
    public deleteParcel(parcelId: string, options?: any) {
        return FulfillmentOperationsShipmentsApiFp(this.configuration).deleteParcel(parcelId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Return all parcels
     * @param {string} [startAfterId] all entities after given Id
     * @param {number} [size] number of entities to show
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsShipmentsApi
     */
    public getAllParcels(startAfterId?: string, size?: number, options?: any) {
        return FulfillmentOperationsShipmentsApiFp(this.configuration).getAllParcels(startAfterId, size, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Return all shipments
     * @param {string} [startAfterId] all entities after given Id
     * @param {number} [size] number of entities to show
     * @param {string} [pickJobRef] This query can be used to find shipments for a referenced pickjob
     * @param {string} [facilityRef] This query can be used to find shipments belonging to the referenced facility
     * @param {string} [carrierRef] This query can be used to find shipments for a referenced carrier
     * @param {Array<string>} [carrierKeys] Find shipments with one the the given carriers
     * @param {Array<string>} [status] Find shipments in one of the given status
     * @param {Array<string>} [parcelStatus] Find shipments with parcels in one of the given status
     * @param {Date} [startTargetTime] Start date range for shipments
     * @param {Date} [endTargetTime] End date range for shipments
     * @param {boolean} [anonymized] Parameter to filter anonymized shipments
     * @param {string} [searchTerm] Fulltext search in shipment&#x27;s tenantOrderId, shortId, parcels.carrierTrackingNumber, lineItems.article.tenantArticleId, lineItems.article.title, invoiceAddress, targetAddress and customerName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsShipmentsApi
     */
    public getAllShipments(startAfterId?: string, size?: number, pickJobRef?: string, facilityRef?: string, carrierRef?: string, carrierKeys?: Array<string>, status?: Array<string>, parcelStatus?: Array<string>, startTargetTime?: Date, endTargetTime?: Date, anonymized?: boolean, searchTerm?: string, options?: any) {
        return FulfillmentOperationsShipmentsApiFp(this.configuration).getAllShipments(startAfterId, size, pickJobRef, facilityRef, carrierRef, carrierKeys, status, parcelStatus, startTargetTime, endTargetTime, anonymized, searchTerm, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a tenant wide delivery configuration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsShipmentsApi
     */
    public getDeliveryNoteConfiguration(options?: any) {
        return FulfillmentOperationsShipmentsApiFp(this.configuration).getDeliveryNoteConfiguration(options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a label for the parcel with the given ID
     * @param {string} parcelId ID of the parcel you want to get a label for
     * @param {string} labelDocument Within a parcel different labels can be created. The following types of labels are currently supported: all.pdf, send.pdf and return.pdf &#x3D; Parcel label plus (if configured) retoure label.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsShipmentsApi
     */
    public getLabelForParcel(parcelId: string, labelDocument: string, options?: any) {
        return FulfillmentOperationsShipmentsApiFp(this.configuration).getLabelForParcel(parcelId, labelDocument, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a parcel with the given ID
     * @param {string} parcelId ID of the parcel you want to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsShipmentsApi
     */
    public getParcel(parcelId: string, options?: any) {
        return FulfillmentOperationsShipmentsApiFp(this.configuration).getParcel(parcelId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get deliveryNote for a parcel
     * @param {string} parcelId ID of parcel you want to retrieve deliveryNote for
     * @param {string} [locale] Provide the localized values for the delivery note. If not provided the default locale is used. For example de_DE.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsShipmentsApi
     */
    public getParcelDeliveryNote(parcelId: string, locale?: string, options?: any) {
        return FulfillmentOperationsShipmentsApiFp(this.configuration).getParcelDeliveryNote(parcelId, locale, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get returnNote for a parcel
     * @param {string} parcelId ID of parcel you want to retrieve returnNote for
     * @param {string} [locale] Provide the localized values for the returnNote. If not provided the default locale is used. For example de_DE.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsShipmentsApi
     */
    public getParcelReturnNote(parcelId: string, locale?: string, options?: any) {
        return FulfillmentOperationsShipmentsApiFp(this.configuration).getParcelReturnNote(parcelId, locale, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Read tag configuration for parcels
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsShipmentsApi
     */
    public getParcelTagConfiguration(options?: any) {
        return FulfillmentOperationsShipmentsApiFp(this.configuration).getParcelTagConfiguration(options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get defined return notes of the tenant
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsShipmentsApi
     */
    public getReturnNoteConfiguration(options?: any) {
        return FulfillmentOperationsShipmentsApiFp(this.configuration).getReturnNoteConfiguration(options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a Shipment with the given ID
     * @param {string} shipmentId ID of Shipment you want to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsShipmentsApi
     */
    public getShipment(shipmentId: string, options?: any) {
        return FulfillmentOperationsShipmentsApiFp(this.configuration).getShipment(shipmentId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get delivery note for a shipment
     * @param {string} shipmentId ID of shipment you want to retrieve delivery note for
     * @param {string} [locale] Provide the localized values for the delivery note. If not provided the default locale is used. For example de_DE.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsShipmentsApi
     */
    public getShipmentDeliveryNote(shipmentId: string, locale?: string, options?: any) {
        return FulfillmentOperationsShipmentsApiFp(this.configuration).getShipmentDeliveryNote(shipmentId, locale, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Patches a parcel with the given ID
     * @param {ParcelPatchActions} body Patch set
     * @param {string} parcelId ID of the parcel you want to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsShipmentsApi
     */
    public patchParcel(body: ParcelPatchActions, parcelId: string, options?: any) {
        return FulfillmentOperationsShipmentsApiFp(this.configuration).patchParcel(body, parcelId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Patches a shipment with the given ID
     * @param {ShipmentPatchActions} body Patch set
     * @param {string} shipmentId ID of shipment you want to patch
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsShipmentsApi
     */
    public patchShipment(body: ShipmentPatchActions, shipmentId: string, options?: any) {
        return FulfillmentOperationsShipmentsApiFp(this.configuration).patchShipment(body, shipmentId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Update delivery note configuration of a tenant
     * @param {DeliveryNoteConfigurationForUpsert} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsShipmentsApi
     */
    public putDeliveryNoteConfiguration(body: DeliveryNoteConfigurationForUpsert, options?: any) {
        return FulfillmentOperationsShipmentsApiFp(this.configuration).putDeliveryNoteConfiguration(body, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Change the tag configuration for Parcels
     * @param {ParcelTagConfigurationForUpsert} body Desired Tag Configuration for Parcels
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsShipmentsApi
     */
    public putParcelTagConfiguration(body: ParcelTagConfigurationForUpsert, options?: any) {
        return FulfillmentOperationsShipmentsApiFp(this.configuration).putParcelTagConfiguration(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Change the tenant wide return note configuration
     * @param {ReturnNoteConfigurationForUpsert} body Desired return note configuration to create/update
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FulfillmentOperationsShipmentsApi
     */
    public putReturnNoteConfiguration(body: ReturnNoteConfigurationForUpsert, options?: any) {
        return FulfillmentOperationsShipmentsApiFp(this.configuration).putReturnNoteConfiguration(body, options)(this.fetch, this.basePath);
    }

}
/**
 * InfrastructureArtifactsApi - fetch parameter creator
 * @export
 */
export const InfrastructureArtifactsApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *
         * @summary Provides metadata for currently available artifacts for a platform
         * @param {string} platform Platform for which to list artifacts
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getArtifacts(platform: string, options: any = {}): FetchArgs {
            // verify required parameter 'platform' is not null or undefined
            if (platform === null || platform === undefined) {
                throw new RequiredError('platform','Required parameter platform was null or undefined when calling getArtifacts.');
            }
            const localVarPath = `/api/artifacts/{platform}`
                .replace(`{${"platform"}}`, encodeURIComponent(String(platform)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get default authentication domain of the tenant
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDomainConfiguration(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/domain`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get a tenant wide app connector configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTenantConnectorConfigurations(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/tenantconnector`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Change the tenant's default authentication domain configuration
         * @param {DomainConfiguration} body Desired domain note configuration to create/update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putDomainConfiguration(body: DomainConfiguration, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putDomainConfiguration.');
            }
            const localVarPath = `/api/configurations/domain`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"DomainConfiguration" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * InfrastructureArtifactsApi - functional programming interface
 * @export
 */
export const InfrastructureArtifactsApiFp = function(configuration?: Configuration) {
    return {
        /**
         *
         * @summary Provides metadata for currently available artifacts for a platform
         * @param {string} platform Platform for which to list artifacts
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getArtifacts(platform: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ArtifactMetadataItems> {
            const localVarFetchArgs = InfrastructureArtifactsApiFetchParamCreator(configuration).getArtifacts(platform, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get default authentication domain of the tenant
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDomainConfiguration(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<DomainConfiguration> {
            const localVarFetchArgs = InfrastructureArtifactsApiFetchParamCreator(configuration).getDomainConfiguration(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get a tenant wide app connector configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTenantConnectorConfigurations(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<TenantConnectorConfigurations> {
            const localVarFetchArgs = InfrastructureArtifactsApiFetchParamCreator(configuration).getTenantConnectorConfigurations(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Change the tenant's default authentication domain configuration
         * @param {DomainConfiguration} body Desired domain note configuration to create/update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putDomainConfiguration(body: DomainConfiguration, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<DomainConfiguration> {
            const localVarFetchArgs = InfrastructureArtifactsApiFetchParamCreator(configuration).putDomainConfiguration(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * InfrastructureArtifactsApi - factory interface
 * @export
 */
export const InfrastructureArtifactsApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         *
         * @summary Provides metadata for currently available artifacts for a platform
         * @param {string} platform Platform for which to list artifacts
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getArtifacts(platform: string, options?: any) {
            return InfrastructureArtifactsApiFp(configuration).getArtifacts(platform, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get default authentication domain of the tenant
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getDomainConfiguration(options?: any) {
            return InfrastructureArtifactsApiFp(configuration).getDomainConfiguration(options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get a tenant wide app connector configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTenantConnectorConfigurations(options?: any) {
            return InfrastructureArtifactsApiFp(configuration).getTenantConnectorConfigurations(options)(fetch, basePath);
        },
        /**
         *
         * @summary Change the tenant's default authentication domain configuration
         * @param {DomainConfiguration} body Desired domain note configuration to create/update
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putDomainConfiguration(body: DomainConfiguration, options?: any) {
            return InfrastructureArtifactsApiFp(configuration).putDomainConfiguration(body, options)(fetch, basePath);
        },
    };
};

/**
 * InfrastructureArtifactsApi - object-oriented interface
 * @export
 * @class InfrastructureArtifactsApi
 * @extends {BaseAPI}
 */
export class InfrastructureArtifactsApi extends BaseAPI {
    /**
     *
     * @summary Provides metadata for currently available artifacts for a platform
     * @param {string} platform Platform for which to list artifacts
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InfrastructureArtifactsApi
     */
    public getArtifacts(platform: string, options?: any) {
        return InfrastructureArtifactsApiFp(this.configuration).getArtifacts(platform, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get default authentication domain of the tenant
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InfrastructureArtifactsApi
     */
    public getDomainConfiguration(options?: any) {
        return InfrastructureArtifactsApiFp(this.configuration).getDomainConfiguration(options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get a tenant wide app connector configuration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InfrastructureArtifactsApi
     */
    public getTenantConnectorConfigurations(options?: any) {
        return InfrastructureArtifactsApiFp(this.configuration).getTenantConnectorConfigurations(options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Change the tenant's default authentication domain configuration
     * @param {DomainConfiguration} body Desired domain note configuration to create/update
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InfrastructureArtifactsApi
     */
    public putDomainConfiguration(body: DomainConfiguration, options?: any) {
        return InfrastructureArtifactsApiFp(this.configuration).putDomainConfiguration(body, options)(this.fetch, this.basePath);
    }

}
/**
 * InfrastructureFeaturesApi - fetch parameter creator
 * @export
 */
export const InfrastructureFeaturesApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Returns all scopedcapabilities which are at least inactive and available to a facility/user
         * @param {string} [facilityId] id of the facility
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCapabilities(facilityId?: string, options: any = {}): FetchArgs {
            const localVarPath = `/api/scopedcapabilities`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (facilityId !== undefined) {
                localVarQueryParameter['facilityId'] = facilityId;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Returns a feature
         * @param {string} featureName Name of the feature requested
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFeature(featureName: string, options: any = {}): FetchArgs {
            // verify required parameter 'featureName' is not null or undefined
            if (featureName === null || featureName === undefined) {
                throw new RequiredError('featureName','Required parameter featureName was null or undefined when calling getFeature.');
            }
            const localVarPath = `/api/features/{featureName}`
                .replace(`{${"featureName"}}`, encodeURIComponent(String(featureName)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Returns all features grouped by active modules
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFeatures(options: any = {}): FetchArgs {
            const localVarPath = `/api/features`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Patches a feature
         * @param {FeaturePatchActions} body Patch set
         * @param {string} featureName Name of the feature requested
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchFeature(body: FeaturePatchActions, featureName: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling patchFeature.');
            }
            // verify required parameter 'featureName' is not null or undefined
            if (featureName === null || featureName === undefined) {
                throw new RequiredError('featureName','Required parameter featureName was null or undefined when calling patchFeature.');
            }
            const localVarPath = `/api/features/{featureName}`
                .replace(`{${"featureName"}}`, encodeURIComponent(String(featureName)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"FeaturePatchActions" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * InfrastructureFeaturesApi - functional programming interface
 * @export
 */
export const InfrastructureFeaturesApiFp = function(configuration?: Configuration) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Returns all scopedcapabilities which are at least inactive and available to a facility/user
         * @param {string} [facilityId] id of the facility
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCapabilities(facilityId?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ScopedCapabilities> {
            const localVarFetchArgs = InfrastructureFeaturesApiFetchParamCreator(configuration).getCapabilities(facilityId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Returns a feature
         * @param {string} featureName Name of the feature requested
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFeature(featureName: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Feature> {
            const localVarFetchArgs = InfrastructureFeaturesApiFetchParamCreator(configuration).getFeature(featureName, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Returns all features grouped by active modules
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFeatures(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Features> {
            const localVarFetchArgs = InfrastructureFeaturesApiFetchParamCreator(configuration).getFeatures(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Patches a feature
         * @param {FeaturePatchActions} body Patch set
         * @param {string} featureName Name of the feature requested
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchFeature(body: FeaturePatchActions, featureName: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Feature> {
            const localVarFetchArgs = InfrastructureFeaturesApiFetchParamCreator(configuration).patchFeature(body, featureName, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * InfrastructureFeaturesApi - factory interface
 * @export
 */
export const InfrastructureFeaturesApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Returns all scopedcapabilities which are at least inactive and available to a facility/user
         * @param {string} [facilityId] id of the facility
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCapabilities(facilityId?: string, options?: any) {
            return InfrastructureFeaturesApiFp(configuration).getCapabilities(facilityId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Returns a feature
         * @param {string} featureName Name of the feature requested
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFeature(featureName: string, options?: any) {
            return InfrastructureFeaturesApiFp(configuration).getFeature(featureName, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Returns all features grouped by active modules
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFeatures(options?: any) {
            return InfrastructureFeaturesApiFp(configuration).getFeatures(options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Patches a feature
         * @param {FeaturePatchActions} body Patch set
         * @param {string} featureName Name of the feature requested
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchFeature(body: FeaturePatchActions, featureName: string, options?: any) {
            return InfrastructureFeaturesApiFp(configuration).patchFeature(body, featureName, options)(fetch, basePath);
        },
    };
};

/**
 * InfrastructureFeaturesApi - object-oriented interface
 * @export
 * @class InfrastructureFeaturesApi
 * @extends {BaseAPI}
 */
export class InfrastructureFeaturesApi extends BaseAPI {
    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Returns all scopedcapabilities which are at least inactive and available to a facility/user
     * @param {string} [facilityId] id of the facility
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InfrastructureFeaturesApi
     */
    public getCapabilities(facilityId?: string, options?: any) {
        return InfrastructureFeaturesApiFp(this.configuration).getCapabilities(facilityId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Returns a feature
     * @param {string} featureName Name of the feature requested
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InfrastructureFeaturesApi
     */
    public getFeature(featureName: string, options?: any) {
        return InfrastructureFeaturesApiFp(this.configuration).getFeature(featureName, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Returns all features grouped by active modules
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InfrastructureFeaturesApi
     */
    public getFeatures(options?: any) {
        return InfrastructureFeaturesApiFp(this.configuration).getFeatures(options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Patches a feature
     * @param {FeaturePatchActions} body Patch set
     * @param {string} featureName Name of the feature requested
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InfrastructureFeaturesApi
     */
    public patchFeature(body: FeaturePatchActions, featureName: string, options?: any) {
        return InfrastructureFeaturesApiFp(this.configuration).patchFeature(body, featureName, options)(this.fetch, this.basePath);
    }

}
/**
 * InfrastructureGraphQLApi - fetch parameter creator
 * @export
 */
export const InfrastructureGraphQLApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Endpoint for executing GraphQL commands
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        executeGraphQLCommand(options: any = {}): FetchArgs {
            const localVarPath = `/graphql`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get the GraphQL playground
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getGraphQLPlayground(options: any = {}): FetchArgs {
            const localVarPath = `/graphql`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * InfrastructureGraphQLApi - functional programming interface
 * @export
 */
export const InfrastructureGraphQLApiFp = function(configuration?: Configuration) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Endpoint for executing GraphQL commands
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        executeGraphQLCommand(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = InfrastructureGraphQLApiFetchParamCreator(configuration).executeGraphQLCommand(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get the GraphQL playground
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getGraphQLPlayground(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = InfrastructureGraphQLApiFetchParamCreator(configuration).getGraphQLPlayground(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * InfrastructureGraphQLApi - factory interface
 * @export
 */
export const InfrastructureGraphQLApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Endpoint for executing GraphQL commands
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        executeGraphQLCommand(options?: any) {
            return InfrastructureGraphQLApiFp(configuration).executeGraphQLCommand(options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get the GraphQL playground
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getGraphQLPlayground(options?: any) {
            return InfrastructureGraphQLApiFp(configuration).getGraphQLPlayground(options)(fetch, basePath);
        },
    };
};

/**
 * InfrastructureGraphQLApi - object-oriented interface
 * @export
 * @class InfrastructureGraphQLApi
 * @extends {BaseAPI}
 */
export class InfrastructureGraphQLApi extends BaseAPI {
    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Endpoint for executing GraphQL commands
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InfrastructureGraphQLApi
     */
    public executeGraphQLCommand(options?: any) {
        return InfrastructureGraphQLApiFp(this.configuration).executeGraphQLCommand(options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get the GraphQL playground
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InfrastructureGraphQLApi
     */
    public getGraphQLPlayground(options?: any) {
        return InfrastructureGraphQLApiFp(this.configuration).getGraphQLPlayground(options)(this.fetch, this.basePath);
    }

}
/**
 * InfrastructureHealthApi - fetch parameter creator
 * @export
 */
export const InfrastructureHealthApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *
         * @summary Do a health check
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        healthCheck(options: any = {}): FetchArgs {
            const localVarPath = `/api/health`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary A public status endpoint that renders general availability information
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        status(options: any = {}): FetchArgs {
            const localVarPath = `/api/status`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * InfrastructureHealthApi - functional programming interface
 * @export
 */
export const InfrastructureHealthApiFp = function(configuration?: Configuration) {
    return {
        /**
         *
         * @summary Do a health check
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        healthCheck(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<HealthResult> {
            const localVarFetchArgs = InfrastructureHealthApiFetchParamCreator(configuration).healthCheck(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary A public status endpoint that renders general availability information
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        status(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Status> {
            const localVarFetchArgs = InfrastructureHealthApiFetchParamCreator(configuration).status(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * InfrastructureHealthApi - factory interface
 * @export
 */
export const InfrastructureHealthApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         *
         * @summary Do a health check
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        healthCheck(options?: any) {
            return InfrastructureHealthApiFp(configuration).healthCheck(options)(fetch, basePath);
        },
        /**
         *
         * @summary A public status endpoint that renders general availability information
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        status(options?: any) {
            return InfrastructureHealthApiFp(configuration).status(options)(fetch, basePath);
        },
    };
};

/**
 * InfrastructureHealthApi - object-oriented interface
 * @export
 * @class InfrastructureHealthApi
 * @extends {BaseAPI}
 */
export class InfrastructureHealthApi extends BaseAPI {
    /**
     *
     * @summary Do a health check
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InfrastructureHealthApi
     */
    public healthCheck(options?: any) {
        return InfrastructureHealthApiFp(this.configuration).healthCheck(options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary A public status endpoint that renders general availability information
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InfrastructureHealthApi
     */
    public status(options?: any) {
        return InfrastructureHealthApiFp(this.configuration).status(options)(this.fetch, this.basePath);
    }

}
/**
 * InfrastructureOIDCConfigurationApi - fetch parameter creator
 * @export
 */
export const InfrastructureOIDCConfigurationApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Create an OIDC provider.
         * @summary Create an OIDC provider.
         * @param {OidcProviderForCreation} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createOidcProvider(body?: OidcProviderForCreation, options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/oidcproviders`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"OidcProviderForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Delete an OIDC Provider.
         * @summary Delete an OIDC Provider.
         * @param {string} oidcProviderId ID of the OIDC provider you want to delete.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteOidcProvider(oidcProviderId: string, options: any = {}): FetchArgs {
            // verify required parameter 'oidcProviderId' is not null or undefined
            if (oidcProviderId === null || oidcProviderId === undefined) {
                throw new RequiredError('oidcProviderId','Required parameter oidcProviderId was null or undefined when calling deleteOidcProvider.');
            }
            const localVarPath = `/api/configurations/oidcproviders/{oidcProviderId}`
                .replace(`{${"oidcProviderId"}}`, encodeURIComponent(String(oidcProviderId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get OIDC provider by id.
         * @param {string} oidcProviderId ID of OIDC provider you want to get.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOidcProvider(oidcProviderId: string, options: any = {}): FetchArgs {
            // verify required parameter 'oidcProviderId' is not null or undefined
            if (oidcProviderId === null || oidcProviderId === undefined) {
                throw new RequiredError('oidcProviderId','Required parameter oidcProviderId was null or undefined when calling getOidcProvider.');
            }
            const localVarPath = `/api/configurations/oidcproviders/{oidcProviderId}`
                .replace(`{${"oidcProviderId"}}`, encodeURIComponent(String(oidcProviderId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Get the available OIDC providers.
         * @summary Get the available OIDC providers.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOidcProviders(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/oidcproviders`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Update an OIDC Provider.
         * @summary Update an OIDC Provider.
         * @param {string} oidcProviderId ID of OIDC provider you want to update.
         * @param {OidcProviderForUpdate} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateOidcProvider(oidcProviderId: string, body?: OidcProviderForUpdate, options: any = {}): FetchArgs {
            // verify required parameter 'oidcProviderId' is not null or undefined
            if (oidcProviderId === null || oidcProviderId === undefined) {
                throw new RequiredError('oidcProviderId','Required parameter oidcProviderId was null or undefined when calling updateOidcProvider.');
            }
            const localVarPath = `/api/configurations/oidcproviders/{oidcProviderId}`
                .replace(`{${"oidcProviderId"}}`, encodeURIComponent(String(oidcProviderId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"OidcProviderForUpdate" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * InfrastructureOIDCConfigurationApi - functional programming interface
 * @export
 */
export const InfrastructureOIDCConfigurationApiFp = function(configuration?: Configuration) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Create an OIDC provider.
         * @summary Create an OIDC provider.
         * @param {OidcProviderForCreation} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createOidcProvider(body?: OidcProviderForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<StrippedOidcProvider> {
            const localVarFetchArgs = InfrastructureOIDCConfigurationApiFetchParamCreator(configuration).createOidcProvider(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Delete an OIDC Provider.
         * @summary Delete an OIDC Provider.
         * @param {string} oidcProviderId ID of the OIDC provider you want to delete.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteOidcProvider(oidcProviderId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = InfrastructureOIDCConfigurationApiFetchParamCreator(configuration).deleteOidcProvider(oidcProviderId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get OIDC provider by id.
         * @param {string} oidcProviderId ID of OIDC provider you want to get.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOidcProvider(oidcProviderId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<StrippedOidcProvider> {
            const localVarFetchArgs = InfrastructureOIDCConfigurationApiFetchParamCreator(configuration).getOidcProvider(oidcProviderId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Get the available OIDC providers.
         * @summary Get the available OIDC providers.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOidcProviders(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<OidcProviders> {
            const localVarFetchArgs = InfrastructureOIDCConfigurationApiFetchParamCreator(configuration).getOidcProviders(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Update an OIDC Provider.
         * @summary Update an OIDC Provider.
         * @param {string} oidcProviderId ID of OIDC provider you want to update.
         * @param {OidcProviderForUpdate} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateOidcProvider(oidcProviderId: string, body?: OidcProviderForUpdate, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<OidcProviderForUpdate> {
            const localVarFetchArgs = InfrastructureOIDCConfigurationApiFetchParamCreator(configuration).updateOidcProvider(oidcProviderId, body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * InfrastructureOIDCConfigurationApi - factory interface
 * @export
 */
export const InfrastructureOIDCConfigurationApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Create an OIDC provider.
         * @summary Create an OIDC provider.
         * @param {OidcProviderForCreation} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createOidcProvider(body?: OidcProviderForCreation, options?: any) {
            return InfrastructureOIDCConfigurationApiFp(configuration).createOidcProvider(body, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Delete an OIDC Provider.
         * @summary Delete an OIDC Provider.
         * @param {string} oidcProviderId ID of the OIDC provider you want to delete.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteOidcProvider(oidcProviderId: string, options?: any) {
            return InfrastructureOIDCConfigurationApiFp(configuration).deleteOidcProvider(oidcProviderId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get OIDC provider by id.
         * @param {string} oidcProviderId ID of OIDC provider you want to get.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOidcProvider(oidcProviderId: string, options?: any) {
            return InfrastructureOIDCConfigurationApiFp(configuration).getOidcProvider(oidcProviderId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Get the available OIDC providers.
         * @summary Get the available OIDC providers.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOidcProviders(options?: any) {
            return InfrastructureOIDCConfigurationApiFp(configuration).getOidcProviders(options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Update an OIDC Provider.
         * @summary Update an OIDC Provider.
         * @param {string} oidcProviderId ID of OIDC provider you want to update.
         * @param {OidcProviderForUpdate} [body]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateOidcProvider(oidcProviderId: string, body?: OidcProviderForUpdate, options?: any) {
            return InfrastructureOIDCConfigurationApiFp(configuration).updateOidcProvider(oidcProviderId, body, options)(fetch, basePath);
        },
    };
};

/**
 * InfrastructureOIDCConfigurationApi - object-oriented interface
 * @export
 * @class InfrastructureOIDCConfigurationApi
 * @extends {BaseAPI}
 */
export class InfrastructureOIDCConfigurationApi extends BaseAPI {
    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Create an OIDC provider.
     * @summary Create an OIDC provider.
     * @param {OidcProviderForCreation} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InfrastructureOIDCConfigurationApi
     */
    public createOidcProvider(body?: OidcProviderForCreation, options?: any) {
        return InfrastructureOIDCConfigurationApiFp(this.configuration).createOidcProvider(body, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Delete an OIDC Provider.
     * @summary Delete an OIDC Provider.
     * @param {string} oidcProviderId ID of the OIDC provider you want to delete.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InfrastructureOIDCConfigurationApi
     */
    public deleteOidcProvider(oidcProviderId: string, options?: any) {
        return InfrastructureOIDCConfigurationApiFp(this.configuration).deleteOidcProvider(oidcProviderId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get OIDC provider by id.
     * @param {string} oidcProviderId ID of OIDC provider you want to get.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InfrastructureOIDCConfigurationApi
     */
    public getOidcProvider(oidcProviderId: string, options?: any) {
        return InfrastructureOIDCConfigurationApiFp(this.configuration).getOidcProvider(oidcProviderId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Get the available OIDC providers.
     * @summary Get the available OIDC providers.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InfrastructureOIDCConfigurationApi
     */
    public getOidcProviders(options?: any) {
        return InfrastructureOIDCConfigurationApiFp(this.configuration).getOidcProviders(options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />Update an OIDC Provider.
     * @summary Update an OIDC Provider.
     * @param {string} oidcProviderId ID of OIDC provider you want to update.
     * @param {OidcProviderForUpdate} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InfrastructureOIDCConfigurationApi
     */
    public updateOidcProvider(oidcProviderId: string, body?: OidcProviderForUpdate, options?: any) {
        return InfrastructureOIDCConfigurationApiFp(this.configuration).updateOidcProvider(oidcProviderId, body, options)(this.fetch, this.basePath);
    }

}
/**
 * InventoryManagementChannelAvailabilityApi - fetch parameter creator
 * @export
 */
export const InventoryManagementChannelAvailabilityApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Create a new Allocation under Group
         * @param {AvailabilityAllocationForCreationUnderGroup} body
         * @param {string} groupId
         * @param {string} availabilityChannelId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createAllocationUnderGroup(body: AvailabilityAllocationForCreationUnderGroup, groupId: string, availabilityChannelId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling createAllocationUnderGroup.');
            }
            // verify required parameter 'groupId' is not null or undefined
            if (groupId === null || groupId === undefined) {
                throw new RequiredError('groupId','Required parameter groupId was null or undefined when calling createAllocationUnderGroup.');
            }
            // verify required parameter 'availabilityChannelId' is not null or undefined
            if (availabilityChannelId === null || availabilityChannelId === undefined) {
                throw new RequiredError('availabilityChannelId','Required parameter availabilityChannelId was null or undefined when calling createAllocationUnderGroup.');
            }
            const localVarPath = `/api/availabilitychannels/{availabilityChannelId}/groups/{groupId}/allocations`
                .replace(`{${"groupId"}}`, encodeURIComponent(String(groupId)))
                .replace(`{${"availabilityChannelId"}}`, encodeURIComponent(String(availabilityChannelId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"AvailabilityAllocationForCreationUnderGroup" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Create a new Availability Channel
         * @param {AvailabilityChannelForCreation} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createAvailabilityChannel(body: AvailabilityChannelForCreation, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling createAvailabilityChannel.');
            }
            const localVarPath = `/api/availabilitychannels`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"AvailabilityChannelForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Create a Group under Channel
         * @param {AvailabilityAllocationGroupForCreationUnderChannel} body
         * @param {string} availabilityChannelId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createGroupUnderChannel(body: AvailabilityAllocationGroupForCreationUnderChannel, availabilityChannelId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling createGroupUnderChannel.');
            }
            // verify required parameter 'availabilityChannelId' is not null or undefined
            if (availabilityChannelId === null || availabilityChannelId === undefined) {
                throw new RequiredError('availabilityChannelId','Required parameter availabilityChannelId was null or undefined when calling createGroupUnderChannel.');
            }
            const localVarPath = `/api/availabilitychannels/{availabilityChannelId}/groups`
                .replace(`{${"availabilityChannelId"}}`, encodeURIComponent(String(availabilityChannelId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"AvailabilityAllocationGroupForCreationUnderChannel" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Delete an existing Allocation under Group
         * @param {string} allocationId
         * @param {string} groupId
         * @param {string} availabilityChannelId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteAllocationUnderGroup(allocationId: string, groupId: string, availabilityChannelId: string, options: any = {}): FetchArgs {
            // verify required parameter 'allocationId' is not null or undefined
            if (allocationId === null || allocationId === undefined) {
                throw new RequiredError('allocationId','Required parameter allocationId was null or undefined when calling deleteAllocationUnderGroup.');
            }
            // verify required parameter 'groupId' is not null or undefined
            if (groupId === null || groupId === undefined) {
                throw new RequiredError('groupId','Required parameter groupId was null or undefined when calling deleteAllocationUnderGroup.');
            }
            // verify required parameter 'availabilityChannelId' is not null or undefined
            if (availabilityChannelId === null || availabilityChannelId === undefined) {
                throw new RequiredError('availabilityChannelId','Required parameter availabilityChannelId was null or undefined when calling deleteAllocationUnderGroup.');
            }
            const localVarPath = `/api/availabilitychannels/{availabilityChannelId}/groups/{groupId}/allocations/{allocationId}`
                .replace(`{${"allocationId"}}`, encodeURIComponent(String(allocationId)))
                .replace(`{${"groupId"}}`, encodeURIComponent(String(groupId)))
                .replace(`{${"availabilityChannelId"}}`, encodeURIComponent(String(availabilityChannelId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Delete an existing Availability Channel. PLEASE NOTE: This will also delete all groups and allocations under this channel.
         * @param {string} availabilityChannelId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteAvailabilityChannel(availabilityChannelId: string, options: any = {}): FetchArgs {
            // verify required parameter 'availabilityChannelId' is not null or undefined
            if (availabilityChannelId === null || availabilityChannelId === undefined) {
                throw new RequiredError('availabilityChannelId','Required parameter availabilityChannelId was null or undefined when calling deleteAvailabilityChannel.');
            }
            const localVarPath = `/api/availabilitychannels/{availabilityChannelId}`
                .replace(`{${"availabilityChannelId"}}`, encodeURIComponent(String(availabilityChannelId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Delete an existing Group and all its allocations under Channel
         * @param {string} groupId
         * @param {string} availabilityChannelId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteGroupUnderChannel(groupId: string, availabilityChannelId: string, options: any = {}): FetchArgs {
            // verify required parameter 'groupId' is not null or undefined
            if (groupId === null || groupId === undefined) {
                throw new RequiredError('groupId','Required parameter groupId was null or undefined when calling deleteGroupUnderChannel.');
            }
            // verify required parameter 'availabilityChannelId' is not null or undefined
            if (availabilityChannelId === null || availabilityChannelId === undefined) {
                throw new RequiredError('availabilityChannelId','Required parameter availabilityChannelId was null or undefined when calling deleteGroupUnderChannel.');
            }
            const localVarPath = `/api/availabilitychannels/{availabilityChannelId}/groups/{groupId}`
                .replace(`{${"groupId"}}`, encodeURIComponent(String(groupId)))
                .replace(`{${"availabilityChannelId"}}`, encodeURIComponent(String(availabilityChannelId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get an Allocation under a Group by its id
         * @param {string} groupId
         * @param {string} allocationId
         * @param {string} availabilityChannelId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllocationUnderGroupById(groupId: string, allocationId: string, availabilityChannelId: string, options: any = {}): FetchArgs {
            // verify required parameter 'groupId' is not null or undefined
            if (groupId === null || groupId === undefined) {
                throw new RequiredError('groupId','Required parameter groupId was null or undefined when calling getAllocationUnderGroupById.');
            }
            // verify required parameter 'allocationId' is not null or undefined
            if (allocationId === null || allocationId === undefined) {
                throw new RequiredError('allocationId','Required parameter allocationId was null or undefined when calling getAllocationUnderGroupById.');
            }
            // verify required parameter 'availabilityChannelId' is not null or undefined
            if (availabilityChannelId === null || availabilityChannelId === undefined) {
                throw new RequiredError('availabilityChannelId','Required parameter availabilityChannelId was null or undefined when calling getAllocationUnderGroupById.');
            }
            const localVarPath = `/api/availabilitychannels/{availabilityChannelId}/groups/{groupId}/allocations/{allocationId}`
                .replace(`{${"groupId"}}`, encodeURIComponent(String(groupId)))
                .replace(`{${"allocationId"}}`, encodeURIComponent(String(allocationId)))
                .replace(`{${"availabilityChannelId"}}`, encodeURIComponent(String(availabilityChannelId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get Allocations under Group
         * @param {string} groupId
         * @param {string} availabilityChannelId
         * @param {string} [searchTerm]
         * @param {string} [searchTermExact]
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllocationsUnderGroup(groupId: string, availabilityChannelId: string, searchTerm?: string, searchTermExact?: string, size?: number, startAfterId?: string, options: any = {}): FetchArgs {
            // verify required parameter 'groupId' is not null or undefined
            if (groupId === null || groupId === undefined) {
                throw new RequiredError('groupId','Required parameter groupId was null or undefined when calling getAllocationsUnderGroup.');
            }
            // verify required parameter 'availabilityChannelId' is not null or undefined
            if (availabilityChannelId === null || availabilityChannelId === undefined) {
                throw new RequiredError('availabilityChannelId','Required parameter availabilityChannelId was null or undefined when calling getAllocationsUnderGroup.');
            }
            const localVarPath = `/api/availabilitychannels/{availabilityChannelId}/groups/{groupId}/allocations`
                .replace(`{${"groupId"}}`, encodeURIComponent(String(groupId)))
                .replace(`{${"availabilityChannelId"}}`, encodeURIComponent(String(availabilityChannelId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (searchTerm !== undefined) {
                localVarQueryParameter['searchTerm'] = searchTerm;
            }

            if (searchTermExact !== undefined) {
                localVarQueryParameter['searchTermExact'] = searchTermExact;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get an Availability Channel by its id
         * @param {string} availabilityChannelId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAvailabilityChannelById(availabilityChannelId: string, options: any = {}): FetchArgs {
            // verify required parameter 'availabilityChannelId' is not null or undefined
            if (availabilityChannelId === null || availabilityChannelId === undefined) {
                throw new RequiredError('availabilityChannelId','Required parameter availabilityChannelId was null or undefined when calling getAvailabilityChannelById.');
            }
            const localVarPath = `/api/availabilitychannels/{availabilityChannelId}`
                .replace(`{${"availabilityChannelId"}}`, encodeURIComponent(String(availabilityChannelId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get all Availability Channels
         * @param {string} [searchTerm]
         * @param {string} [searchTermExact]
         * @param {string} [strategy]
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAvailabilityChannels(searchTerm?: string, searchTermExact?: string, strategy?: string, size?: number, startAfterId?: string, options: any = {}): FetchArgs {
            const localVarPath = `/api/availabilitychannels`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (searchTerm !== undefined) {
                localVarQueryParameter['searchTerm'] = searchTerm;
            }

            if (searchTermExact !== undefined) {
                localVarQueryParameter['searchTermExact'] = searchTermExact;
            }

            if (strategy !== undefined) {
                localVarQueryParameter['strategy'] = strategy;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get Groups under Channel by its ID
         * @param {string} availabilityChannelId
         * @param {string} groupId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getGroupUnderChannelById(availabilityChannelId: string, groupId: string, options: any = {}): FetchArgs {
            // verify required parameter 'availabilityChannelId' is not null or undefined
            if (availabilityChannelId === null || availabilityChannelId === undefined) {
                throw new RequiredError('availabilityChannelId','Required parameter availabilityChannelId was null or undefined when calling getGroupUnderChannelById.');
            }
            // verify required parameter 'groupId' is not null or undefined
            if (groupId === null || groupId === undefined) {
                throw new RequiredError('groupId','Required parameter groupId was null or undefined when calling getGroupUnderChannelById.');
            }
            const localVarPath = `/api/availabilitychannels/{availabilityChannelId}/groups/{groupId}`
                .replace(`{${"availabilityChannelId"}}`, encodeURIComponent(String(availabilityChannelId)))
                .replace(`{${"groupId"}}`, encodeURIComponent(String(groupId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get Groups under Channel
         * @param {string} availabilityChannelId
         * @param {string} [searchTerm]
         * @param {string} [searchTermExact]
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getGroupsUnderChannel(availabilityChannelId: string, searchTerm?: string, searchTermExact?: string, size?: number, startAfterId?: string, options: any = {}): FetchArgs {
            // verify required parameter 'availabilityChannelId' is not null or undefined
            if (availabilityChannelId === null || availabilityChannelId === undefined) {
                throw new RequiredError('availabilityChannelId','Required parameter availabilityChannelId was null or undefined when calling getGroupsUnderChannel.');
            }
            const localVarPath = `/api/availabilitychannels/{availabilityChannelId}/groups`
                .replace(`{${"availabilityChannelId"}}`, encodeURIComponent(String(availabilityChannelId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (searchTerm !== undefined) {
                localVarQueryParameter['searchTerm'] = searchTerm;
            }

            if (searchTermExact !== undefined) {
                localVarQueryParameter['searchTermExact'] = searchTermExact;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Replace an existing Allocation under a group
         * @param {AvailabilityAllocationForReplacement} body
         * @param {string} groupId
         * @param {string} allocationId
         * @param {string} availabilityChannelId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        replaceAllocationUnderGroup(body: AvailabilityAllocationForReplacement, groupId: string, allocationId: string, availabilityChannelId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling replaceAllocationUnderGroup.');
            }
            // verify required parameter 'groupId' is not null or undefined
            if (groupId === null || groupId === undefined) {
                throw new RequiredError('groupId','Required parameter groupId was null or undefined when calling replaceAllocationUnderGroup.');
            }
            // verify required parameter 'allocationId' is not null or undefined
            if (allocationId === null || allocationId === undefined) {
                throw new RequiredError('allocationId','Required parameter allocationId was null or undefined when calling replaceAllocationUnderGroup.');
            }
            // verify required parameter 'availabilityChannelId' is not null or undefined
            if (availabilityChannelId === null || availabilityChannelId === undefined) {
                throw new RequiredError('availabilityChannelId','Required parameter availabilityChannelId was null or undefined when calling replaceAllocationUnderGroup.');
            }
            const localVarPath = `/api/availabilitychannels/{availabilityChannelId}/groups/{groupId}/allocations/{allocationId}`
                .replace(`{${"groupId"}}`, encodeURIComponent(String(groupId)))
                .replace(`{${"allocationId"}}`, encodeURIComponent(String(allocationId)))
                .replace(`{${"availabilityChannelId"}}`, encodeURIComponent(String(availabilityChannelId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"AvailabilityAllocationForReplacement" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Replace an existing Availability Channel
         * @param {AvailabilityChannelForReplacement} body
         * @param {string} availabilityChannelId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        replaceAvailabilityChannel(body: AvailabilityChannelForReplacement, availabilityChannelId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling replaceAvailabilityChannel.');
            }
            // verify required parameter 'availabilityChannelId' is not null or undefined
            if (availabilityChannelId === null || availabilityChannelId === undefined) {
                throw new RequiredError('availabilityChannelId','Required parameter availabilityChannelId was null or undefined when calling replaceAvailabilityChannel.');
            }
            const localVarPath = `/api/availabilitychannels/{availabilityChannelId}`
                .replace(`{${"availabilityChannelId"}}`, encodeURIComponent(String(availabilityChannelId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"AvailabilityChannelForReplacement" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Replace a  Group under Channel
         * @param {AvailabilityAllocationGroupForReplacement} body
         * @param {string} availabilityChannelId
         * @param {string} groupId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        replaceGroupUnderChannel(body: AvailabilityAllocationGroupForReplacement, availabilityChannelId: string, groupId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling replaceGroupUnderChannel.');
            }
            // verify required parameter 'availabilityChannelId' is not null or undefined
            if (availabilityChannelId === null || availabilityChannelId === undefined) {
                throw new RequiredError('availabilityChannelId','Required parameter availabilityChannelId was null or undefined when calling replaceGroupUnderChannel.');
            }
            // verify required parameter 'groupId' is not null or undefined
            if (groupId === null || groupId === undefined) {
                throw new RequiredError('groupId','Required parameter groupId was null or undefined when calling replaceGroupUnderChannel.');
            }
            const localVarPath = `/api/availabilitychannels/{availabilityChannelId}/groups/{groupId}`
                .replace(`{${"availabilityChannelId"}}`, encodeURIComponent(String(availabilityChannelId)))
                .replace(`{${"groupId"}}`, encodeURIComponent(String(groupId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"AvailabilityAllocationGroupForReplacement" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * InventoryManagementChannelAvailabilityApi - functional programming interface
 * @export
 */
export const InventoryManagementChannelAvailabilityApiFp = function(configuration?: Configuration) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Create a new Allocation under Group
         * @param {AvailabilityAllocationForCreationUnderGroup} body
         * @param {string} groupId
         * @param {string} availabilityChannelId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createAllocationUnderGroup(body: AvailabilityAllocationForCreationUnderGroup, groupId: string, availabilityChannelId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<AvailabilityAllocation> {
            const localVarFetchArgs = InventoryManagementChannelAvailabilityApiFetchParamCreator(configuration).createAllocationUnderGroup(body, groupId, availabilityChannelId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Create a new Availability Channel
         * @param {AvailabilityChannelForCreation} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createAvailabilityChannel(body: AvailabilityChannelForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<AvailabilityChannel> {
            const localVarFetchArgs = InventoryManagementChannelAvailabilityApiFetchParamCreator(configuration).createAvailabilityChannel(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Create a Group under Channel
         * @param {AvailabilityAllocationGroupForCreationUnderChannel} body
         * @param {string} availabilityChannelId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createGroupUnderChannel(body: AvailabilityAllocationGroupForCreationUnderChannel, availabilityChannelId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<AvailabilityAllocationGroup> {
            const localVarFetchArgs = InventoryManagementChannelAvailabilityApiFetchParamCreator(configuration).createGroupUnderChannel(body, availabilityChannelId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Delete an existing Allocation under Group
         * @param {string} allocationId
         * @param {string} groupId
         * @param {string} availabilityChannelId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteAllocationUnderGroup(allocationId: string, groupId: string, availabilityChannelId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = InventoryManagementChannelAvailabilityApiFetchParamCreator(configuration).deleteAllocationUnderGroup(allocationId, groupId, availabilityChannelId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Delete an existing Availability Channel. PLEASE NOTE: This will also delete all groups and allocations under this channel.
         * @param {string} availabilityChannelId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteAvailabilityChannel(availabilityChannelId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = InventoryManagementChannelAvailabilityApiFetchParamCreator(configuration).deleteAvailabilityChannel(availabilityChannelId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Delete an existing Group and all its allocations under Channel
         * @param {string} groupId
         * @param {string} availabilityChannelId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteGroupUnderChannel(groupId: string, availabilityChannelId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = InventoryManagementChannelAvailabilityApiFetchParamCreator(configuration).deleteGroupUnderChannel(groupId, availabilityChannelId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get an Allocation under a Group by its id
         * @param {string} groupId
         * @param {string} allocationId
         * @param {string} availabilityChannelId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllocationUnderGroupById(groupId: string, allocationId: string, availabilityChannelId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<AvailabilityAllocation> {
            const localVarFetchArgs = InventoryManagementChannelAvailabilityApiFetchParamCreator(configuration).getAllocationUnderGroupById(groupId, allocationId, availabilityChannelId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get Allocations under Group
         * @param {string} groupId
         * @param {string} availabilityChannelId
         * @param {string} [searchTerm]
         * @param {string} [searchTermExact]
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllocationsUnderGroup(groupId: string, availabilityChannelId: string, searchTerm?: string, searchTermExact?: string, size?: number, startAfterId?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<AvailabilityAllocationPaginatedResult> {
            const localVarFetchArgs = InventoryManagementChannelAvailabilityApiFetchParamCreator(configuration).getAllocationsUnderGroup(groupId, availabilityChannelId, searchTerm, searchTermExact, size, startAfterId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get an Availability Channel by its id
         * @param {string} availabilityChannelId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAvailabilityChannelById(availabilityChannelId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<AvailabilityChannel> {
            const localVarFetchArgs = InventoryManagementChannelAvailabilityApiFetchParamCreator(configuration).getAvailabilityChannelById(availabilityChannelId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get all Availability Channels
         * @param {string} [searchTerm]
         * @param {string} [searchTermExact]
         * @param {string} [strategy]
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAvailabilityChannels(searchTerm?: string, searchTermExact?: string, strategy?: string, size?: number, startAfterId?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<AvailabilityChannelPaginatedResult> {
            const localVarFetchArgs = InventoryManagementChannelAvailabilityApiFetchParamCreator(configuration).getAvailabilityChannels(searchTerm, searchTermExact, strategy, size, startAfterId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get Groups under Channel by its ID
         * @param {string} availabilityChannelId
         * @param {string} groupId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getGroupUnderChannelById(availabilityChannelId: string, groupId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<AvailabilityAllocationGroupPaginatedResult> {
            const localVarFetchArgs = InventoryManagementChannelAvailabilityApiFetchParamCreator(configuration).getGroupUnderChannelById(availabilityChannelId, groupId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get Groups under Channel
         * @param {string} availabilityChannelId
         * @param {string} [searchTerm]
         * @param {string} [searchTermExact]
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getGroupsUnderChannel(availabilityChannelId: string, searchTerm?: string, searchTermExact?: string, size?: number, startAfterId?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<AvailabilityAllocationGroupPaginatedResult> {
            const localVarFetchArgs = InventoryManagementChannelAvailabilityApiFetchParamCreator(configuration).getGroupsUnderChannel(availabilityChannelId, searchTerm, searchTermExact, size, startAfterId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Replace an existing Allocation under a group
         * @param {AvailabilityAllocationForReplacement} body
         * @param {string} groupId
         * @param {string} allocationId
         * @param {string} availabilityChannelId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        replaceAllocationUnderGroup(body: AvailabilityAllocationForReplacement, groupId: string, allocationId: string, availabilityChannelId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<AvailabilityAllocation> {
            const localVarFetchArgs = InventoryManagementChannelAvailabilityApiFetchParamCreator(configuration).replaceAllocationUnderGroup(body, groupId, allocationId, availabilityChannelId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Replace an existing Availability Channel
         * @param {AvailabilityChannelForReplacement} body
         * @param {string} availabilityChannelId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        replaceAvailabilityChannel(body: AvailabilityChannelForReplacement, availabilityChannelId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<AvailabilityChannel> {
            const localVarFetchArgs = InventoryManagementChannelAvailabilityApiFetchParamCreator(configuration).replaceAvailabilityChannel(body, availabilityChannelId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Replace a  Group under Channel
         * @param {AvailabilityAllocationGroupForReplacement} body
         * @param {string} availabilityChannelId
         * @param {string} groupId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        replaceGroupUnderChannel(body: AvailabilityAllocationGroupForReplacement, availabilityChannelId: string, groupId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<AvailabilityAllocationGroup> {
            const localVarFetchArgs = InventoryManagementChannelAvailabilityApiFetchParamCreator(configuration).replaceGroupUnderChannel(body, availabilityChannelId, groupId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * InventoryManagementChannelAvailabilityApi - factory interface
 * @export
 */
export const InventoryManagementChannelAvailabilityApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Create a new Allocation under Group
         * @param {AvailabilityAllocationForCreationUnderGroup} body
         * @param {string} groupId
         * @param {string} availabilityChannelId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createAllocationUnderGroup(body: AvailabilityAllocationForCreationUnderGroup, groupId: string, availabilityChannelId: string, options?: any) {
            return InventoryManagementChannelAvailabilityApiFp(configuration).createAllocationUnderGroup(body, groupId, availabilityChannelId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Create a new Availability Channel
         * @param {AvailabilityChannelForCreation} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createAvailabilityChannel(body: AvailabilityChannelForCreation, options?: any) {
            return InventoryManagementChannelAvailabilityApiFp(configuration).createAvailabilityChannel(body, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Create a Group under Channel
         * @param {AvailabilityAllocationGroupForCreationUnderChannel} body
         * @param {string} availabilityChannelId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createGroupUnderChannel(body: AvailabilityAllocationGroupForCreationUnderChannel, availabilityChannelId: string, options?: any) {
            return InventoryManagementChannelAvailabilityApiFp(configuration).createGroupUnderChannel(body, availabilityChannelId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Delete an existing Allocation under Group
         * @param {string} allocationId
         * @param {string} groupId
         * @param {string} availabilityChannelId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteAllocationUnderGroup(allocationId: string, groupId: string, availabilityChannelId: string, options?: any) {
            return InventoryManagementChannelAvailabilityApiFp(configuration).deleteAllocationUnderGroup(allocationId, groupId, availabilityChannelId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Delete an existing Availability Channel. PLEASE NOTE: This will also delete all groups and allocations under this channel.
         * @param {string} availabilityChannelId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteAvailabilityChannel(availabilityChannelId: string, options?: any) {
            return InventoryManagementChannelAvailabilityApiFp(configuration).deleteAvailabilityChannel(availabilityChannelId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Delete an existing Group and all its allocations under Channel
         * @param {string} groupId
         * @param {string} availabilityChannelId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteGroupUnderChannel(groupId: string, availabilityChannelId: string, options?: any) {
            return InventoryManagementChannelAvailabilityApiFp(configuration).deleteGroupUnderChannel(groupId, availabilityChannelId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get an Allocation under a Group by its id
         * @param {string} groupId
         * @param {string} allocationId
         * @param {string} availabilityChannelId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllocationUnderGroupById(groupId: string, allocationId: string, availabilityChannelId: string, options?: any) {
            return InventoryManagementChannelAvailabilityApiFp(configuration).getAllocationUnderGroupById(groupId, allocationId, availabilityChannelId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get Allocations under Group
         * @param {string} groupId
         * @param {string} availabilityChannelId
         * @param {string} [searchTerm]
         * @param {string} [searchTermExact]
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllocationsUnderGroup(groupId: string, availabilityChannelId: string, searchTerm?: string, searchTermExact?: string, size?: number, startAfterId?: string, options?: any) {
            return InventoryManagementChannelAvailabilityApiFp(configuration).getAllocationsUnderGroup(groupId, availabilityChannelId, searchTerm, searchTermExact, size, startAfterId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get an Availability Channel by its id
         * @param {string} availabilityChannelId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAvailabilityChannelById(availabilityChannelId: string, options?: any) {
            return InventoryManagementChannelAvailabilityApiFp(configuration).getAvailabilityChannelById(availabilityChannelId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get all Availability Channels
         * @param {string} [searchTerm]
         * @param {string} [searchTermExact]
         * @param {string} [strategy]
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAvailabilityChannels(searchTerm?: string, searchTermExact?: string, strategy?: string, size?: number, startAfterId?: string, options?: any) {
            return InventoryManagementChannelAvailabilityApiFp(configuration).getAvailabilityChannels(searchTerm, searchTermExact, strategy, size, startAfterId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get Groups under Channel by its ID
         * @param {string} availabilityChannelId
         * @param {string} groupId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getGroupUnderChannelById(availabilityChannelId: string, groupId: string, options?: any) {
            return InventoryManagementChannelAvailabilityApiFp(configuration).getGroupUnderChannelById(availabilityChannelId, groupId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get Groups under Channel
         * @param {string} availabilityChannelId
         * @param {string} [searchTerm]
         * @param {string} [searchTermExact]
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getGroupsUnderChannel(availabilityChannelId: string, searchTerm?: string, searchTermExact?: string, size?: number, startAfterId?: string, options?: any) {
            return InventoryManagementChannelAvailabilityApiFp(configuration).getGroupsUnderChannel(availabilityChannelId, searchTerm, searchTermExact, size, startAfterId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Replace an existing Allocation under a group
         * @param {AvailabilityAllocationForReplacement} body
         * @param {string} groupId
         * @param {string} allocationId
         * @param {string} availabilityChannelId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        replaceAllocationUnderGroup(body: AvailabilityAllocationForReplacement, groupId: string, allocationId: string, availabilityChannelId: string, options?: any) {
            return InventoryManagementChannelAvailabilityApiFp(configuration).replaceAllocationUnderGroup(body, groupId, allocationId, availabilityChannelId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Replace an existing Availability Channel
         * @param {AvailabilityChannelForReplacement} body
         * @param {string} availabilityChannelId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        replaceAvailabilityChannel(body: AvailabilityChannelForReplacement, availabilityChannelId: string, options?: any) {
            return InventoryManagementChannelAvailabilityApiFp(configuration).replaceAvailabilityChannel(body, availabilityChannelId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Replace a  Group under Channel
         * @param {AvailabilityAllocationGroupForReplacement} body
         * @param {string} availabilityChannelId
         * @param {string} groupId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        replaceGroupUnderChannel(body: AvailabilityAllocationGroupForReplacement, availabilityChannelId: string, groupId: string, options?: any) {
            return InventoryManagementChannelAvailabilityApiFp(configuration).replaceGroupUnderChannel(body, availabilityChannelId, groupId, options)(fetch, basePath);
        },
    };
};

/**
 * InventoryManagementChannelAvailabilityApi - object-oriented interface
 * @export
 * @class InventoryManagementChannelAvailabilityApi
 * @extends {BaseAPI}
 */
export class InventoryManagementChannelAvailabilityApi extends BaseAPI {
    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Create a new Allocation under Group
     * @param {AvailabilityAllocationForCreationUnderGroup} body
     * @param {string} groupId
     * @param {string} availabilityChannelId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementChannelAvailabilityApi
     */
    public createAllocationUnderGroup(body: AvailabilityAllocationForCreationUnderGroup, groupId: string, availabilityChannelId: string, options?: any) {
        return InventoryManagementChannelAvailabilityApiFp(this.configuration).createAllocationUnderGroup(body, groupId, availabilityChannelId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Create a new Availability Channel
     * @param {AvailabilityChannelForCreation} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementChannelAvailabilityApi
     */
    public createAvailabilityChannel(body: AvailabilityChannelForCreation, options?: any) {
        return InventoryManagementChannelAvailabilityApiFp(this.configuration).createAvailabilityChannel(body, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Create a Group under Channel
     * @param {AvailabilityAllocationGroupForCreationUnderChannel} body
     * @param {string} availabilityChannelId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementChannelAvailabilityApi
     */
    public createGroupUnderChannel(body: AvailabilityAllocationGroupForCreationUnderChannel, availabilityChannelId: string, options?: any) {
        return InventoryManagementChannelAvailabilityApiFp(this.configuration).createGroupUnderChannel(body, availabilityChannelId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Delete an existing Allocation under Group
     * @param {string} allocationId
     * @param {string} groupId
     * @param {string} availabilityChannelId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementChannelAvailabilityApi
     */
    public deleteAllocationUnderGroup(allocationId: string, groupId: string, availabilityChannelId: string, options?: any) {
        return InventoryManagementChannelAvailabilityApiFp(this.configuration).deleteAllocationUnderGroup(allocationId, groupId, availabilityChannelId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Delete an existing Availability Channel. PLEASE NOTE: This will also delete all groups and allocations under this channel.
     * @param {string} availabilityChannelId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementChannelAvailabilityApi
     */
    public deleteAvailabilityChannel(availabilityChannelId: string, options?: any) {
        return InventoryManagementChannelAvailabilityApiFp(this.configuration).deleteAvailabilityChannel(availabilityChannelId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Delete an existing Group and all its allocations under Channel
     * @param {string} groupId
     * @param {string} availabilityChannelId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementChannelAvailabilityApi
     */
    public deleteGroupUnderChannel(groupId: string, availabilityChannelId: string, options?: any) {
        return InventoryManagementChannelAvailabilityApiFp(this.configuration).deleteGroupUnderChannel(groupId, availabilityChannelId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get an Allocation under a Group by its id
     * @param {string} groupId
     * @param {string} allocationId
     * @param {string} availabilityChannelId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementChannelAvailabilityApi
     */
    public getAllocationUnderGroupById(groupId: string, allocationId: string, availabilityChannelId: string, options?: any) {
        return InventoryManagementChannelAvailabilityApiFp(this.configuration).getAllocationUnderGroupById(groupId, allocationId, availabilityChannelId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get Allocations under Group
     * @param {string} groupId
     * @param {string} availabilityChannelId
     * @param {string} [searchTerm]
     * @param {string} [searchTermExact]
     * @param {number} [size]
     * @param {string} [startAfterId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementChannelAvailabilityApi
     */
    public getAllocationsUnderGroup(groupId: string, availabilityChannelId: string, searchTerm?: string, searchTermExact?: string, size?: number, startAfterId?: string, options?: any) {
        return InventoryManagementChannelAvailabilityApiFp(this.configuration).getAllocationsUnderGroup(groupId, availabilityChannelId, searchTerm, searchTermExact, size, startAfterId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get an Availability Channel by its id
     * @param {string} availabilityChannelId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementChannelAvailabilityApi
     */
    public getAvailabilityChannelById(availabilityChannelId: string, options?: any) {
        return InventoryManagementChannelAvailabilityApiFp(this.configuration).getAvailabilityChannelById(availabilityChannelId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get all Availability Channels
     * @param {string} [searchTerm]
     * @param {string} [searchTermExact]
     * @param {string} [strategy]
     * @param {number} [size]
     * @param {string} [startAfterId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementChannelAvailabilityApi
     */
    public getAvailabilityChannels(searchTerm?: string, searchTermExact?: string, strategy?: string, size?: number, startAfterId?: string, options?: any) {
        return InventoryManagementChannelAvailabilityApiFp(this.configuration).getAvailabilityChannels(searchTerm, searchTermExact, strategy, size, startAfterId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get Groups under Channel by its ID
     * @param {string} availabilityChannelId
     * @param {string} groupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementChannelAvailabilityApi
     */
    public getGroupUnderChannelById(availabilityChannelId: string, groupId: string, options?: any) {
        return InventoryManagementChannelAvailabilityApiFp(this.configuration).getGroupUnderChannelById(availabilityChannelId, groupId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get Groups under Channel
     * @param {string} availabilityChannelId
     * @param {string} [searchTerm]
     * @param {string} [searchTermExact]
     * @param {number} [size]
     * @param {string} [startAfterId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementChannelAvailabilityApi
     */
    public getGroupsUnderChannel(availabilityChannelId: string, searchTerm?: string, searchTermExact?: string, size?: number, startAfterId?: string, options?: any) {
        return InventoryManagementChannelAvailabilityApiFp(this.configuration).getGroupsUnderChannel(availabilityChannelId, searchTerm, searchTermExact, size, startAfterId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Replace an existing Allocation under a group
     * @param {AvailabilityAllocationForReplacement} body
     * @param {string} groupId
     * @param {string} allocationId
     * @param {string} availabilityChannelId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementChannelAvailabilityApi
     */
    public replaceAllocationUnderGroup(body: AvailabilityAllocationForReplacement, groupId: string, allocationId: string, availabilityChannelId: string, options?: any) {
        return InventoryManagementChannelAvailabilityApiFp(this.configuration).replaceAllocationUnderGroup(body, groupId, allocationId, availabilityChannelId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Replace an existing Availability Channel
     * @param {AvailabilityChannelForReplacement} body
     * @param {string} availabilityChannelId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementChannelAvailabilityApi
     */
    public replaceAvailabilityChannel(body: AvailabilityChannelForReplacement, availabilityChannelId: string, options?: any) {
        return InventoryManagementChannelAvailabilityApiFp(this.configuration).replaceAvailabilityChannel(body, availabilityChannelId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Replace a  Group under Channel
     * @param {AvailabilityAllocationGroupForReplacement} body
     * @param {string} availabilityChannelId
     * @param {string} groupId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementChannelAvailabilityApi
     */
    public replaceGroupUnderChannel(body: AvailabilityAllocationGroupForReplacement, availabilityChannelId: string, groupId: string, options?: any) {
        return InventoryManagementChannelAvailabilityApiFp(this.configuration).replaceGroupUnderChannel(body, availabilityChannelId, groupId, options)(this.fetch, this.basePath);
    }

}
/**
 * InventoryManagementInboundApi - fetch parameter creator
 * @export
 */
export const InventoryManagementInboundApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Adds a receipt to an inbound process.
         * @param {InboundReceiptForCreation} body
         * @param {string} inboundProcessId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addReceiptToInboundProcess(body: InboundReceiptForCreation, inboundProcessId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling addReceiptToInboundProcess.');
            }
            // verify required parameter 'inboundProcessId' is not null or undefined
            if (inboundProcessId === null || inboundProcessId === undefined) {
                throw new RequiredError('inboundProcessId','Required parameter inboundProcessId was null or undefined when calling addReceiptToInboundProcess.');
            }
            const localVarPath = `/api/inboundprocesses/{inboundProcessId}/receipts`
                .replace(`{${"inboundProcessId"}}`, encodeURIComponent(String(inboundProcessId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"InboundReceiptForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Creates an attachment
         * @param {InboundAttachmentForCreation} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createAttachment(body: InboundAttachmentForCreation, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling createAttachment.');
            }
            const localVarPath = `/api/inboundprocesses/attachments`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"InboundAttachmentForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Create a new Inbound Process
         * @param {InboundProcessForCreation} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createInboundProcess(body: InboundProcessForCreation, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling createInboundProcess.');
            }
            const localVarPath = `/api/inboundprocesses`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"InboundProcessForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Create a new Purchase Order
         * @param {PurchaseOrderForCreation} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createPurchaseOrder(body: PurchaseOrderForCreation, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling createPurchaseOrder.');
            }
            const localVarPath = `/api/purchaseorders`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"PurchaseOrderForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Creates a receipt
         * @param {ReceiptForCreation} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createReceipt(body: ReceiptForCreation, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling createReceipt.');
            }
            const localVarPath = `/api/receipts`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"ReceiptForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Delete an Inbound Process by ID
         * @param {string} inboundProcessId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteInboundProcess(inboundProcessId: string, options: any = {}): FetchArgs {
            // verify required parameter 'inboundProcessId' is not null or undefined
            if (inboundProcessId === null || inboundProcessId === undefined) {
                throw new RequiredError('inboundProcessId','Required parameter inboundProcessId was null or undefined when calling deleteInboundProcess.');
            }
            const localVarPath = `/api/inboundprocesses/{inboundProcessId}`
                .replace(`{${"inboundProcessId"}}`, encodeURIComponent(String(inboundProcessId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Delete receipt by id
         * @param {string} receiptId
         * @param {number} version
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteReceipt(receiptId: string, version: number, options: any = {}): FetchArgs {
            // verify required parameter 'receiptId' is not null or undefined
            if (receiptId === null || receiptId === undefined) {
                throw new RequiredError('receiptId','Required parameter receiptId was null or undefined when calling deleteReceipt.');
            }
            // verify required parameter 'version' is not null or undefined
            if (version === null || version === undefined) {
                throw new RequiredError('version','Required parameter version was null or undefined when calling deleteReceipt.');
            }
            const localVarPath = `/api/receipts/{receiptId}`
                .replace(`{${"receiptId"}}`, encodeURIComponent(String(receiptId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (version !== undefined) {
                localVarQueryParameter['version'] = version;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get an Inbound Process by ID
         * @param {string} inboundProcessId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getInboundProcess(inboundProcessId: string, options: any = {}): FetchArgs {
            // verify required parameter 'inboundProcessId' is not null or undefined
            if (inboundProcessId === null || inboundProcessId === undefined) {
                throw new RequiredError('inboundProcessId','Required parameter inboundProcessId was null or undefined when calling getInboundProcess.');
            }
            const localVarPath = `/api/inboundprocesses/{inboundProcessId}`
                .replace(`{${"inboundProcessId"}}`, encodeURIComponent(String(inboundProcessId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get multiple Inbound Processes
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {string} [sort]
         * @param {Array<string>} [facilityRef]
         * @param {Array<string>} [status]
         * @param {string} [searchTerm] Matches partial values; The queries terms and therefore the result set of the query can change in the future: - tenantInboundProcessId - scannableCodes - receipts.receivedItems.tenantArticleId - purchaseOrder.requestedItems.tenantArticleId - purchaseOrder.supplier.name - values of related listings   - listing.title   - listing.scannableCodes
         * @param {string} [searchTermExact] Only matches complete values; The queries terms and therefore the result set of the query can change in the future: - tenantInboundProcessId - scannableCodes - receipts.receivedItems.tenantArticleId - purchaseOrder.requestedItems.tenantArticleId - purchaseOrder.supplier.name - values of related listings   - listing.title   - listing.scannableCodes
         * @param {boolean} [purchaseOrderCancelled]
         * @param {Array<string>} [receiptStatus]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getInboundProcesses(size?: number, startAfterId?: string, sort?: string, facilityRef?: Array<string>, status?: Array<string>, searchTerm?: string, searchTermExact?: string, purchaseOrderCancelled?: boolean, receiptStatus?: Array<string>, options: any = {}): FetchArgs {
            const localVarPath = `/api/inboundprocesses`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (sort !== undefined) {
                localVarQueryParameter['sort'] = sort;
            }

            if (facilityRef) {
                localVarQueryParameter['facilityRef'] = facilityRef;
            }

            if (status) {
                localVarQueryParameter['status'] = status.join(COLLECTION_FORMATS["csv"]);
            }

            if (searchTerm !== undefined) {
                localVarQueryParameter['searchTerm'] = searchTerm;
            }

            if (searchTermExact !== undefined) {
                localVarQueryParameter['searchTermExact'] = searchTermExact;
            }

            if (purchaseOrderCancelled !== undefined) {
                localVarQueryParameter['purchaseOrder_cancelled'] = purchaseOrderCancelled;
            }

            if (receiptStatus) {
                localVarQueryParameter['receipt_status'] = receiptStatus.join(COLLECTION_FORMATS["csv"]);
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get an Inbound Receipt Job by ID
         * @param {string} inboundEntryId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getInboundReceiptJob(inboundEntryId: string, options: any = {}): FetchArgs {
            // verify required parameter 'inboundEntryId' is not null or undefined
            if (inboundEntryId === null || inboundEntryId === undefined) {
                throw new RequiredError('inboundEntryId','Required parameter inboundEntryId was null or undefined when calling getInboundReceiptJob.');
            }
            const localVarPath = `/api/inboundreceiptjobs/{inboundEntryId}`
                .replace(`{${"inboundEntryId"}}`, encodeURIComponent(String(inboundEntryId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get InboundReceiptJobs
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {Array<string>} [facilityRef]
         * @param {Array<string>} [status]
         * @param {string} [searchTerm]
         * @param {string} [searchTermExact]
         * @param {Date} [fromDate]
         * @param {Date} [toDate]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getInboundReceiptJobs(size?: number, startAfterId?: string, facilityRef?: Array<string>, status?: Array<string>, searchTerm?: string, searchTermExact?: string, fromDate?: Date, toDate?: Date, options: any = {}): FetchArgs {
            const localVarPath = `/api/inboundreceiptjobs`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (facilityRef) {
                localVarQueryParameter['facilityRef'] = facilityRef;
            }

            if (status) {
                localVarQueryParameter['status'] = status.join(COLLECTION_FORMATS["csv"]);
            }

            if (searchTerm !== undefined) {
                localVarQueryParameter['searchTerm'] = searchTerm;
            }

            if (searchTermExact !== undefined) {
                localVarQueryParameter['searchTermExact'] = searchTermExact;
            }

            if (fromDate !== undefined) {
                localVarQueryParameter['fromDate'] = (fromDate as any).toISOString();
            }

            if (toDate !== undefined) {
                localVarQueryParameter['toDate'] = (toDate as any).toISOString();
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a Purchase Order by ID
         * @param {string} purchaseOrderId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPurchaseOrder(purchaseOrderId: string, options: any = {}): FetchArgs {
            // verify required parameter 'purchaseOrderId' is not null or undefined
            if (purchaseOrderId === null || purchaseOrderId === undefined) {
                throw new RequiredError('purchaseOrderId','Required parameter purchaseOrderId was null or undefined when calling getPurchaseOrder.');
            }
            const localVarPath = `/api/purchaseorders/{purchaseOrderId}`
                .replace(`{${"purchaseOrderId"}}`, encodeURIComponent(String(purchaseOrderId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get receipt by id
         * @param {string} receiptId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getReceipt(receiptId: string, options: any = {}): FetchArgs {
            // verify required parameter 'receiptId' is not null or undefined
            if (receiptId === null || receiptId === undefined) {
                throw new RequiredError('receiptId','Required parameter receiptId was null or undefined when calling getReceipt.');
            }
            const localVarPath = `/api/receipts/{receiptId}`
                .replace(`{${"receiptId"}}`, encodeURIComponent(String(receiptId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Retrieves a signed url for an attachment
         * @param {string} attachmentId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getSignedAttachmentUrl(attachmentId: string, options: any = {}): FetchArgs {
            // verify required parameter 'attachmentId' is not null or undefined
            if (attachmentId === null || attachmentId === undefined) {
                throw new RequiredError('attachmentId','Required parameter attachmentId was null or undefined when calling getSignedAttachmentUrl.');
            }
            const localVarPath = `/api/inboundprocesses/attachments/{attachmentId}/signedurl`
                .replace(`{${"attachmentId"}}`, encodeURIComponent(String(attachmentId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Patch an Inbound Process by ID
         * @param {InboundProcessForPatch} body
         * @param {string} inboundProcessId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchInboundProcess(body: InboundProcessForPatch, inboundProcessId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling patchInboundProcess.');
            }
            // verify required parameter 'inboundProcessId' is not null or undefined
            if (inboundProcessId === null || inboundProcessId === undefined) {
                throw new RequiredError('inboundProcessId','Required parameter inboundProcessId was null or undefined when calling patchInboundProcess.');
            }
            const localVarPath = `/api/inboundprocesses/{inboundProcessId}`
                .replace(`{${"inboundProcessId"}}`, encodeURIComponent(String(inboundProcessId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"InboundProcessForPatch" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Partially updates a Purchase Order using a selection of fields
         * @param {PurchaseOrderForPartialUpdate} body
         * @param {string} purchaseOrderId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchPurchaseOrder(body: PurchaseOrderForPartialUpdate, purchaseOrderId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling patchPurchaseOrder.');
            }
            // verify required parameter 'purchaseOrderId' is not null or undefined
            if (purchaseOrderId === null || purchaseOrderId === undefined) {
                throw new RequiredError('purchaseOrderId','Required parameter purchaseOrderId was null or undefined when calling patchPurchaseOrder.');
            }
            const localVarPath = `/api/purchaseorders/{purchaseOrderId}`
                .replace(`{${"purchaseOrderId"}}`, encodeURIComponent(String(purchaseOrderId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"PurchaseOrderForPartialUpdate" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Patch receipt by id
         * @param {InboundReceiptForPatch} body
         * @param {string} receiptId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchReceipt(body: InboundReceiptForPatch, receiptId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling patchReceipt.');
            }
            // verify required parameter 'receiptId' is not null or undefined
            if (receiptId === null || receiptId === undefined) {
                throw new RequiredError('receiptId','Required parameter receiptId was null or undefined when calling patchReceipt.');
            }
            const localVarPath = `/api/receipts/{receiptId}`
                .replace(`{${"receiptId"}}`, encodeURIComponent(String(receiptId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"InboundReceiptForPatch" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Put receipt to id
         * @param {InboundReceiptForUpdate} body
         * @param {string} receiptId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putReceipt(body: InboundReceiptForUpdate, receiptId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putReceipt.');
            }
            // verify required parameter 'receiptId' is not null or undefined
            if (receiptId === null || receiptId === undefined) {
                throw new RequiredError('receiptId','Required parameter receiptId was null or undefined when calling putReceipt.');
            }
            const localVarPath = `/api/receipts/{receiptId}`
                .replace(`{${"receiptId"}}`, encodeURIComponent(String(receiptId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"InboundReceiptForUpdate" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Creates or updates the specific purchase order of an existing inbound process.
         * @param {InboundProcessPurchaseOrderForUpsert} body
         * @param {string} inboundProcessId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertInboundProcessPurchaseOrder(body: InboundProcessPurchaseOrderForUpsert, inboundProcessId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling upsertInboundProcessPurchaseOrder.');
            }
            // verify required parameter 'inboundProcessId' is not null or undefined
            if (inboundProcessId === null || inboundProcessId === undefined) {
                throw new RequiredError('inboundProcessId','Required parameter inboundProcessId was null or undefined when calling upsertInboundProcessPurchaseOrder.');
            }
            const localVarPath = `/api/inboundprocesses/{inboundProcessId}/purchaseorder`
                .replace(`{${"inboundProcessId"}}`, encodeURIComponent(String(inboundProcessId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"InboundProcessPurchaseOrderForUpsert" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Update or create a Purchase Order
         * @param {PurchaseOrderForUpdate} body
         * @param {string} purchaseOrderId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertPurchaseOrder(body: PurchaseOrderForUpdate, purchaseOrderId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling upsertPurchaseOrder.');
            }
            // verify required parameter 'purchaseOrderId' is not null or undefined
            if (purchaseOrderId === null || purchaseOrderId === undefined) {
                throw new RequiredError('purchaseOrderId','Required parameter purchaseOrderId was null or undefined when calling upsertPurchaseOrder.');
            }
            const localVarPath = `/api/purchaseorders/{purchaseOrderId}`
                .replace(`{${"purchaseOrderId"}}`, encodeURIComponent(String(purchaseOrderId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"PurchaseOrderForUpdate" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * InventoryManagementInboundApi - functional programming interface
 * @export
 */
export const InventoryManagementInboundApiFp = function(configuration?: Configuration) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Adds a receipt to an inbound process.
         * @param {InboundReceiptForCreation} body
         * @param {string} inboundProcessId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addReceiptToInboundProcess(body: InboundReceiptForCreation, inboundProcessId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<InboundReceipt> {
            const localVarFetchArgs = InventoryManagementInboundApiFetchParamCreator(configuration).addReceiptToInboundProcess(body, inboundProcessId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Creates an attachment
         * @param {InboundAttachmentForCreation} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createAttachment(body: InboundAttachmentForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<InboundAttachment> {
            const localVarFetchArgs = InventoryManagementInboundApiFetchParamCreator(configuration).createAttachment(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Create a new Inbound Process
         * @param {InboundProcessForCreation} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createInboundProcess(body: InboundProcessForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<InboundProcess> {
            const localVarFetchArgs = InventoryManagementInboundApiFetchParamCreator(configuration).createInboundProcess(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Create a new Purchase Order
         * @param {PurchaseOrderForCreation} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createPurchaseOrder(body: PurchaseOrderForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PurchaseOrder> {
            const localVarFetchArgs = InventoryManagementInboundApiFetchParamCreator(configuration).createPurchaseOrder(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Creates a receipt
         * @param {ReceiptForCreation} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createReceipt(body: ReceiptForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Receipt> {
            const localVarFetchArgs = InventoryManagementInboundApiFetchParamCreator(configuration).createReceipt(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Delete an Inbound Process by ID
         * @param {string} inboundProcessId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteInboundProcess(inboundProcessId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = InventoryManagementInboundApiFetchParamCreator(configuration).deleteInboundProcess(inboundProcessId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Delete receipt by id
         * @param {string} receiptId
         * @param {number} version
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteReceipt(receiptId: string, version: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Receipt> {
            const localVarFetchArgs = InventoryManagementInboundApiFetchParamCreator(configuration).deleteReceipt(receiptId, version, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get an Inbound Process by ID
         * @param {string} inboundProcessId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getInboundProcess(inboundProcessId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<InboundProcess> {
            const localVarFetchArgs = InventoryManagementInboundApiFetchParamCreator(configuration).getInboundProcess(inboundProcessId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get multiple Inbound Processes
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {string} [sort]
         * @param {Array<string>} [facilityRef]
         * @param {Array<string>} [status]
         * @param {string} [searchTerm] Matches partial values; The queries terms and therefore the result set of the query can change in the future: - tenantInboundProcessId - scannableCodes - receipts.receivedItems.tenantArticleId - purchaseOrder.requestedItems.tenantArticleId - purchaseOrder.supplier.name - values of related listings   - listing.title   - listing.scannableCodes
         * @param {string} [searchTermExact] Only matches complete values; The queries terms and therefore the result set of the query can change in the future: - tenantInboundProcessId - scannableCodes - receipts.receivedItems.tenantArticleId - purchaseOrder.requestedItems.tenantArticleId - purchaseOrder.supplier.name - values of related listings   - listing.title   - listing.scannableCodes
         * @param {boolean} [purchaseOrderCancelled]
         * @param {Array<string>} [receiptStatus]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getInboundProcesses(size?: number, startAfterId?: string, sort?: string, facilityRef?: Array<string>, status?: Array<string>, searchTerm?: string, searchTermExact?: string, purchaseOrderCancelled?: boolean, receiptStatus?: Array<string>, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<InboundProcessPaginatedResult> {
            const localVarFetchArgs = InventoryManagementInboundApiFetchParamCreator(configuration).getInboundProcesses(size, startAfterId, sort, facilityRef, status, searchTerm, searchTermExact, purchaseOrderCancelled, receiptStatus, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get an Inbound Receipt Job by ID
         * @param {string} inboundEntryId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getInboundReceiptJob(inboundEntryId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<InboundReceiptJob> {
            const localVarFetchArgs = InventoryManagementInboundApiFetchParamCreator(configuration).getInboundReceiptJob(inboundEntryId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get InboundReceiptJobs
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {Array<string>} [facilityRef]
         * @param {Array<string>} [status]
         * @param {string} [searchTerm]
         * @param {string} [searchTermExact]
         * @param {Date} [fromDate]
         * @param {Date} [toDate]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getInboundReceiptJobs(size?: number, startAfterId?: string, facilityRef?: Array<string>, status?: Array<string>, searchTerm?: string, searchTermExact?: string, fromDate?: Date, toDate?: Date, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<InboundReceiptJobPaginatedResult> {
            const localVarFetchArgs = InventoryManagementInboundApiFetchParamCreator(configuration).getInboundReceiptJobs(size, startAfterId, facilityRef, status, searchTerm, searchTermExact, fromDate, toDate, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a Purchase Order by ID
         * @param {string} purchaseOrderId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPurchaseOrder(purchaseOrderId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PurchaseOrder> {
            const localVarFetchArgs = InventoryManagementInboundApiFetchParamCreator(configuration).getPurchaseOrder(purchaseOrderId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get receipt by id
         * @param {string} receiptId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getReceipt(receiptId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Receipt> {
            const localVarFetchArgs = InventoryManagementInboundApiFetchParamCreator(configuration).getReceipt(receiptId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Retrieves a signed url for an attachment
         * @param {string} attachmentId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getSignedAttachmentUrl(attachmentId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<string> {
            const localVarFetchArgs = InventoryManagementInboundApiFetchParamCreator(configuration).getSignedAttachmentUrl(attachmentId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Patch an Inbound Process by ID
         * @param {InboundProcessForPatch} body
         * @param {string} inboundProcessId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchInboundProcess(body: InboundProcessForPatch, inboundProcessId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = InventoryManagementInboundApiFetchParamCreator(configuration).patchInboundProcess(body, inboundProcessId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Partially updates a Purchase Order using a selection of fields
         * @param {PurchaseOrderForPartialUpdate} body
         * @param {string} purchaseOrderId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchPurchaseOrder(body: PurchaseOrderForPartialUpdate, purchaseOrderId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PurchaseOrder> {
            const localVarFetchArgs = InventoryManagementInboundApiFetchParamCreator(configuration).patchPurchaseOrder(body, purchaseOrderId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Patch receipt by id
         * @param {InboundReceiptForPatch} body
         * @param {string} receiptId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchReceipt(body: InboundReceiptForPatch, receiptId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Receipt> {
            const localVarFetchArgs = InventoryManagementInboundApiFetchParamCreator(configuration).patchReceipt(body, receiptId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Put receipt to id
         * @param {InboundReceiptForUpdate} body
         * @param {string} receiptId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putReceipt(body: InboundReceiptForUpdate, receiptId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Receipt> {
            const localVarFetchArgs = InventoryManagementInboundApiFetchParamCreator(configuration).putReceipt(body, receiptId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Creates or updates the specific purchase order of an existing inbound process.
         * @param {InboundProcessPurchaseOrderForUpsert} body
         * @param {string} inboundProcessId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertInboundProcessPurchaseOrder(body: InboundProcessPurchaseOrderForUpsert, inboundProcessId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<InboundProcessPurchaseOrder> {
            const localVarFetchArgs = InventoryManagementInboundApiFetchParamCreator(configuration).upsertInboundProcessPurchaseOrder(body, inboundProcessId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Update or create a Purchase Order
         * @param {PurchaseOrderForUpdate} body
         * @param {string} purchaseOrderId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertPurchaseOrder(body: PurchaseOrderForUpdate, purchaseOrderId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PurchaseOrder> {
            const localVarFetchArgs = InventoryManagementInboundApiFetchParamCreator(configuration).upsertPurchaseOrder(body, purchaseOrderId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * InventoryManagementInboundApi - factory interface
 * @export
 */
export const InventoryManagementInboundApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Adds a receipt to an inbound process.
         * @param {InboundReceiptForCreation} body
         * @param {string} inboundProcessId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addReceiptToInboundProcess(body: InboundReceiptForCreation, inboundProcessId: string, options?: any) {
            return InventoryManagementInboundApiFp(configuration).addReceiptToInboundProcess(body, inboundProcessId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Creates an attachment
         * @param {InboundAttachmentForCreation} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createAttachment(body: InboundAttachmentForCreation, options?: any) {
            return InventoryManagementInboundApiFp(configuration).createAttachment(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Create a new Inbound Process
         * @param {InboundProcessForCreation} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createInboundProcess(body: InboundProcessForCreation, options?: any) {
            return InventoryManagementInboundApiFp(configuration).createInboundProcess(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Create a new Purchase Order
         * @param {PurchaseOrderForCreation} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createPurchaseOrder(body: PurchaseOrderForCreation, options?: any) {
            return InventoryManagementInboundApiFp(configuration).createPurchaseOrder(body, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Creates a receipt
         * @param {ReceiptForCreation} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createReceipt(body: ReceiptForCreation, options?: any) {
            return InventoryManagementInboundApiFp(configuration).createReceipt(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Delete an Inbound Process by ID
         * @param {string} inboundProcessId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteInboundProcess(inboundProcessId: string, options?: any) {
            return InventoryManagementInboundApiFp(configuration).deleteInboundProcess(inboundProcessId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Delete receipt by id
         * @param {string} receiptId
         * @param {number} version
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteReceipt(receiptId: string, version: number, options?: any) {
            return InventoryManagementInboundApiFp(configuration).deleteReceipt(receiptId, version, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get an Inbound Process by ID
         * @param {string} inboundProcessId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getInboundProcess(inboundProcessId: string, options?: any) {
            return InventoryManagementInboundApiFp(configuration).getInboundProcess(inboundProcessId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get multiple Inbound Processes
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {string} [sort]
         * @param {Array<string>} [facilityRef]
         * @param {Array<string>} [status]
         * @param {string} [searchTerm] Matches partial values; The queries terms and therefore the result set of the query can change in the future: - tenantInboundProcessId - scannableCodes - receipts.receivedItems.tenantArticleId - purchaseOrder.requestedItems.tenantArticleId - purchaseOrder.supplier.name - values of related listings   - listing.title   - listing.scannableCodes
         * @param {string} [searchTermExact] Only matches complete values; The queries terms and therefore the result set of the query can change in the future: - tenantInboundProcessId - scannableCodes - receipts.receivedItems.tenantArticleId - purchaseOrder.requestedItems.tenantArticleId - purchaseOrder.supplier.name - values of related listings   - listing.title   - listing.scannableCodes
         * @param {boolean} [purchaseOrderCancelled]
         * @param {Array<string>} [receiptStatus]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getInboundProcesses(size?: number, startAfterId?: string, sort?: string, facilityRef?: Array<string>, status?: Array<string>, searchTerm?: string, searchTermExact?: string, purchaseOrderCancelled?: boolean, receiptStatus?: Array<string>, options?: any) {
            return InventoryManagementInboundApiFp(configuration).getInboundProcesses(size, startAfterId, sort, facilityRef, status, searchTerm, searchTermExact, purchaseOrderCancelled, receiptStatus, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get an Inbound Receipt Job by ID
         * @param {string} inboundEntryId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getInboundReceiptJob(inboundEntryId: string, options?: any) {
            return InventoryManagementInboundApiFp(configuration).getInboundReceiptJob(inboundEntryId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get InboundReceiptJobs
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {Array<string>} [facilityRef]
         * @param {Array<string>} [status]
         * @param {string} [searchTerm]
         * @param {string} [searchTermExact]
         * @param {Date} [fromDate]
         * @param {Date} [toDate]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getInboundReceiptJobs(size?: number, startAfterId?: string, facilityRef?: Array<string>, status?: Array<string>, searchTerm?: string, searchTermExact?: string, fromDate?: Date, toDate?: Date, options?: any) {
            return InventoryManagementInboundApiFp(configuration).getInboundReceiptJobs(size, startAfterId, facilityRef, status, searchTerm, searchTermExact, fromDate, toDate, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a Purchase Order by ID
         * @param {string} purchaseOrderId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPurchaseOrder(purchaseOrderId: string, options?: any) {
            return InventoryManagementInboundApiFp(configuration).getPurchaseOrder(purchaseOrderId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get receipt by id
         * @param {string} receiptId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getReceipt(receiptId: string, options?: any) {
            return InventoryManagementInboundApiFp(configuration).getReceipt(receiptId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Retrieves a signed url for an attachment
         * @param {string} attachmentId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getSignedAttachmentUrl(attachmentId: string, options?: any) {
            return InventoryManagementInboundApiFp(configuration).getSignedAttachmentUrl(attachmentId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Patch an Inbound Process by ID
         * @param {InboundProcessForPatch} body
         * @param {string} inboundProcessId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchInboundProcess(body: InboundProcessForPatch, inboundProcessId: string, options?: any) {
            return InventoryManagementInboundApiFp(configuration).patchInboundProcess(body, inboundProcessId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Partially updates a Purchase Order using a selection of fields
         * @param {PurchaseOrderForPartialUpdate} body
         * @param {string} purchaseOrderId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchPurchaseOrder(body: PurchaseOrderForPartialUpdate, purchaseOrderId: string, options?: any) {
            return InventoryManagementInboundApiFp(configuration).patchPurchaseOrder(body, purchaseOrderId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Patch receipt by id
         * @param {InboundReceiptForPatch} body
         * @param {string} receiptId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchReceipt(body: InboundReceiptForPatch, receiptId: string, options?: any) {
            return InventoryManagementInboundApiFp(configuration).patchReceipt(body, receiptId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Put receipt to id
         * @param {InboundReceiptForUpdate} body
         * @param {string} receiptId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putReceipt(body: InboundReceiptForUpdate, receiptId: string, options?: any) {
            return InventoryManagementInboundApiFp(configuration).putReceipt(body, receiptId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Creates or updates the specific purchase order of an existing inbound process.
         * @param {InboundProcessPurchaseOrderForUpsert} body
         * @param {string} inboundProcessId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertInboundProcessPurchaseOrder(body: InboundProcessPurchaseOrderForUpsert, inboundProcessId: string, options?: any) {
            return InventoryManagementInboundApiFp(configuration).upsertInboundProcessPurchaseOrder(body, inboundProcessId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Update or create a Purchase Order
         * @param {PurchaseOrderForUpdate} body
         * @param {string} purchaseOrderId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertPurchaseOrder(body: PurchaseOrderForUpdate, purchaseOrderId: string, options?: any) {
            return InventoryManagementInboundApiFp(configuration).upsertPurchaseOrder(body, purchaseOrderId, options)(fetch, basePath);
        },
    };
};

/**
 * InventoryManagementInboundApi - object-oriented interface
 * @export
 * @class InventoryManagementInboundApi
 * @extends {BaseAPI}
 */
export class InventoryManagementInboundApi extends BaseAPI {
    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Adds a receipt to an inbound process.
     * @param {InboundReceiptForCreation} body
     * @param {string} inboundProcessId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementInboundApi
     */
    public addReceiptToInboundProcess(body: InboundReceiptForCreation, inboundProcessId: string, options?: any) {
        return InventoryManagementInboundApiFp(this.configuration).addReceiptToInboundProcess(body, inboundProcessId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Creates an attachment
     * @param {InboundAttachmentForCreation} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementInboundApi
     */
    public createAttachment(body: InboundAttachmentForCreation, options?: any) {
        return InventoryManagementInboundApiFp(this.configuration).createAttachment(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Create a new Inbound Process
     * @param {InboundProcessForCreation} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementInboundApi
     */
    public createInboundProcess(body: InboundProcessForCreation, options?: any) {
        return InventoryManagementInboundApiFp(this.configuration).createInboundProcess(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Create a new Purchase Order
     * @param {PurchaseOrderForCreation} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementInboundApi
     */
    public createPurchaseOrder(body: PurchaseOrderForCreation, options?: any) {
        return InventoryManagementInboundApiFp(this.configuration).createPurchaseOrder(body, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Creates a receipt
     * @param {ReceiptForCreation} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementInboundApi
     */
    public createReceipt(body: ReceiptForCreation, options?: any) {
        return InventoryManagementInboundApiFp(this.configuration).createReceipt(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Delete an Inbound Process by ID
     * @param {string} inboundProcessId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementInboundApi
     */
    public deleteInboundProcess(inboundProcessId: string, options?: any) {
        return InventoryManagementInboundApiFp(this.configuration).deleteInboundProcess(inboundProcessId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Delete receipt by id
     * @param {string} receiptId
     * @param {number} version
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementInboundApi
     */
    public deleteReceipt(receiptId: string, version: number, options?: any) {
        return InventoryManagementInboundApiFp(this.configuration).deleteReceipt(receiptId, version, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get an Inbound Process by ID
     * @param {string} inboundProcessId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementInboundApi
     */
    public getInboundProcess(inboundProcessId: string, options?: any) {
        return InventoryManagementInboundApiFp(this.configuration).getInboundProcess(inboundProcessId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get multiple Inbound Processes
     * @param {number} [size]
     * @param {string} [startAfterId]
     * @param {string} [sort]
     * @param {Array<string>} [facilityRef]
     * @param {Array<string>} [status]
     * @param {string} [searchTerm] Matches partial values; The queries terms and therefore the result set of the query can change in the future: - tenantInboundProcessId - scannableCodes - receipts.receivedItems.tenantArticleId - purchaseOrder.requestedItems.tenantArticleId - purchaseOrder.supplier.name - values of related listings   - listing.title   - listing.scannableCodes
     * @param {string} [searchTermExact] Only matches complete values; The queries terms and therefore the result set of the query can change in the future: - tenantInboundProcessId - scannableCodes - receipts.receivedItems.tenantArticleId - purchaseOrder.requestedItems.tenantArticleId - purchaseOrder.supplier.name - values of related listings   - listing.title   - listing.scannableCodes
     * @param {boolean} [purchaseOrderCancelled]
     * @param {Array<string>} [receiptStatus]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementInboundApi
     */
    public getInboundProcesses(size?: number, startAfterId?: string, sort?: string, facilityRef?: Array<string>, status?: Array<string>, searchTerm?: string, searchTermExact?: string, purchaseOrderCancelled?: boolean, receiptStatus?: Array<string>, options?: any) {
        return InventoryManagementInboundApiFp(this.configuration).getInboundProcesses(size, startAfterId, sort, facilityRef, status, searchTerm, searchTermExact, purchaseOrderCancelled, receiptStatus, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get an Inbound Receipt Job by ID
     * @param {string} inboundEntryId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementInboundApi
     */
    public getInboundReceiptJob(inboundEntryId: string, options?: any) {
        return InventoryManagementInboundApiFp(this.configuration).getInboundReceiptJob(inboundEntryId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get InboundReceiptJobs
     * @param {number} [size]
     * @param {string} [startAfterId]
     * @param {Array<string>} [facilityRef]
     * @param {Array<string>} [status]
     * @param {string} [searchTerm]
     * @param {string} [searchTermExact]
     * @param {Date} [fromDate]
     * @param {Date} [toDate]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementInboundApi
     */
    public getInboundReceiptJobs(size?: number, startAfterId?: string, facilityRef?: Array<string>, status?: Array<string>, searchTerm?: string, searchTermExact?: string, fromDate?: Date, toDate?: Date, options?: any) {
        return InventoryManagementInboundApiFp(this.configuration).getInboundReceiptJobs(size, startAfterId, facilityRef, status, searchTerm, searchTermExact, fromDate, toDate, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a Purchase Order by ID
     * @param {string} purchaseOrderId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementInboundApi
     */
    public getPurchaseOrder(purchaseOrderId: string, options?: any) {
        return InventoryManagementInboundApiFp(this.configuration).getPurchaseOrder(purchaseOrderId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get receipt by id
     * @param {string} receiptId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementInboundApi
     */
    public getReceipt(receiptId: string, options?: any) {
        return InventoryManagementInboundApiFp(this.configuration).getReceipt(receiptId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Retrieves a signed url for an attachment
     * @param {string} attachmentId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementInboundApi
     */
    public getSignedAttachmentUrl(attachmentId: string, options?: any) {
        return InventoryManagementInboundApiFp(this.configuration).getSignedAttachmentUrl(attachmentId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Patch an Inbound Process by ID
     * @param {InboundProcessForPatch} body
     * @param {string} inboundProcessId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementInboundApi
     */
    public patchInboundProcess(body: InboundProcessForPatch, inboundProcessId: string, options?: any) {
        return InventoryManagementInboundApiFp(this.configuration).patchInboundProcess(body, inboundProcessId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Partially updates a Purchase Order using a selection of fields
     * @param {PurchaseOrderForPartialUpdate} body
     * @param {string} purchaseOrderId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementInboundApi
     */
    public patchPurchaseOrder(body: PurchaseOrderForPartialUpdate, purchaseOrderId: string, options?: any) {
        return InventoryManagementInboundApiFp(this.configuration).patchPurchaseOrder(body, purchaseOrderId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Patch receipt by id
     * @param {InboundReceiptForPatch} body
     * @param {string} receiptId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementInboundApi
     */
    public patchReceipt(body: InboundReceiptForPatch, receiptId: string, options?: any) {
        return InventoryManagementInboundApiFp(this.configuration).patchReceipt(body, receiptId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Put receipt to id
     * @param {InboundReceiptForUpdate} body
     * @param {string} receiptId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementInboundApi
     */
    public putReceipt(body: InboundReceiptForUpdate, receiptId: string, options?: any) {
        return InventoryManagementInboundApiFp(this.configuration).putReceipt(body, receiptId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Creates or updates the specific purchase order of an existing inbound process.
     * @param {InboundProcessPurchaseOrderForUpsert} body
     * @param {string} inboundProcessId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementInboundApi
     */
    public upsertInboundProcessPurchaseOrder(body: InboundProcessPurchaseOrderForUpsert, inboundProcessId: string, options?: any) {
        return InventoryManagementInboundApiFp(this.configuration).upsertInboundProcessPurchaseOrder(body, inboundProcessId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Update or create a Purchase Order
     * @param {PurchaseOrderForUpdate} body
     * @param {string} purchaseOrderId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementInboundApi
     */
    public upsertPurchaseOrder(body: PurchaseOrderForUpdate, purchaseOrderId: string, options?: any) {
        return InventoryManagementInboundApiFp(this.configuration).upsertPurchaseOrder(body, purchaseOrderId, options)(this.fetch, this.basePath);
    }

}
/**
 * InventoryManagementStocksApi - fetch parameter creator
 * @export
 */
export const InventoryManagementStocksApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Use <a href=\"https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/entities#stock\">Inventory Stock</a> instead
         * @summary Update Stock in bulk facilityRef and tenantArticleId
         * @param {FacilityStockBulkOperations} body
         * @param {string} facilityId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        bulkUpdateFacilityStock(body: FacilityStockBulkOperations, facilityId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling bulkUpdateFacilityStock.');
            }
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling bulkUpdateFacilityStock.');
            }
            const localVarPath = `/api/facilities/{facilityId}/stocks`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"FacilityStockBulkOperations" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Update Safety Stocks in bulk
         * @param {SafetyStockBulkOperations} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        bulkUpdateSafetyStock(body: SafetyStockBulkOperations, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling bulkUpdateSafetyStock.');
            }
            const localVarPath = `/api/safetystocks`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"SafetyStockBulkOperations" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Create stock
         * @param {StockForCreation} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createStock(body: StockForCreation, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling createStock.');
            }
            const localVarPath = `/api/stocks`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"StockForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Delete a single Safety Stock
         * @param {string} safetyStockId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSafetyStock(safetyStockId: string, options: any = {}): FetchArgs {
            // verify required parameter 'safetyStockId' is not null or undefined
            if (safetyStockId === null || safetyStockId === undefined) {
                throw new RequiredError('safetyStockId','Required parameter safetyStockId was null or undefined when calling deleteSafetyStock.');
            }
            const localVarPath = `/api/safetystocks/{safetyStockId}`
                .replace(`{${"safetyStockId"}}`, encodeURIComponent(String(safetyStockId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Delete stock
         * @param {string} stockId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteStock(stockId: string, options: any = {}): FetchArgs {
            // verify required parameter 'stockId' is not null or undefined
            if (stockId === null || stockId === undefined) {
                throw new RequiredError('stockId','Required parameter stockId was null or undefined when calling deleteStock.');
            }
            const localVarPath = `/api/stocks/{stockId}`
                .replace(`{${"stockId"}}`, encodeURIComponent(String(stockId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />
         * @summary Search articles tenant-wide based on title or tenantArticleId
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {string} [facilityRef]
         * @param {string} [searchTerm]
         * @param {SupportedLocale} [locale]
         * @param {string} [tenantArticleId]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getArticles(size?: number, startAfterId?: string, facilityRef?: string, searchTerm?: string, locale?: SupportedLocale, tenantArticleId?: string, options: any = {}): FetchArgs {
            const localVarPath = `/api/articles`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (facilityRef !== undefined) {
                localVarQueryParameter['facilityRef'] = facilityRef;
            }

            if (searchTerm !== undefined) {
                localVarQueryParameter['searchTerm'] = searchTerm;
            }

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            if (tenantArticleId !== undefined) {
                localVarQueryParameter['tenantArticleId'] = tenantArticleId;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Gets the facility's current configuration for stock related order distribution
         * @param {string} facilityId ID of facility you want to retrieve the configurations for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityStockConfiguration(facilityId: string, options: any = {}): FetchArgs {
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling getFacilityStockConfiguration.');
            }
            const localVarPath = `/api/facilities/{facilityId}/configurations/stock`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Use <a href=\"https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/entities#stock\">Inventory Stock</a> instead
         * @summary Get stock related to a facilityRef
         * @param {string} facilityId
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityStocks(facilityId: string, size?: number, startAfterId?: string, options: any = {}): FetchArgs {
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling getFacilityStocks.');
            }
            const localVarPath = `/api/facilities/{facilityId}/stocks`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get the forecast for a specific tenantArticleId
         * @param {string} tenantArticleId
         * @param {string} [period]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getForecastsForArticle(tenantArticleId: string, period?: string, options: any = {}): FetchArgs {
            // verify required parameter 'tenantArticleId' is not null or undefined
            if (tenantArticleId === null || tenantArticleId === undefined) {
                throw new RequiredError('tenantArticleId','Required parameter tenantArticleId was null or undefined when calling getForecastsForArticle.');
            }
            const localVarPath = `/api/articles/{tenantArticleId}/forecasts`
                .replace(`{${"tenantArticleId"}}`, encodeURIComponent(String(tenantArticleId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (period !== undefined) {
                localVarQueryParameter['period'] = period;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get Inventory Configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getInventoryConfigurations(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/inventory`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get Inventory Configuration for a Facility
         * @param {string} facilityId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getInventoryFacilityConfigurations(facilityId: string, options: any = {}): FetchArgs {
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling getInventoryFacilityConfigurations.');
            }
            const localVarPath = `/api/facilities/{facilityId}/configurations/inventory`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get all Safety Stocks
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {string} [tenantArticleId]
         * @param {string} [facilityRef]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getSafetyStocks(size?: number, startAfterId?: string, tenantArticleId?: string, facilityRef?: string, options: any = {}): FetchArgs {
            const localVarPath = `/api/safetystocks`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (tenantArticleId !== undefined) {
                localVarQueryParameter['tenantArticleId'] = tenantArticleId;
            }

            if (facilityRef !== undefined) {
                localVarQueryParameter['facilityRef'] = facilityRef;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get stock
         * @param {string} stockId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getStock(stockId: string, options: any = {}): FetchArgs {
            // verify required parameter 'stockId' is not null or undefined
            if (stockId === null || stockId === undefined) {
                throw new RequiredError('stockId','Required parameter stockId was null or undefined when calling getStock.');
            }
            const localVarPath = `/api/stocks/{stockId}`
                .replace(`{${"stockId"}}`, encodeURIComponent(String(stockId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get the current stock configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getStockConfiguration(options: any = {}): FetchArgs {
            const localVarPath = `/api/configurations/stock`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Stock per Facility for a specific tenantArticleId, also includes the Tenant-Wide Summary
         * @param {string} tenantArticleId
         * @param {Array<string>} [facilityServiceTypes]
         * @param {Array<string>} [facilityStatus]
         * @param {string} [facilityName]
         * @param {Array<string>} [facilityIds]
         * @param {Array<string>} [channelRefs] The channels to included under \&quot;channelAdjusted\&quot; in each summary and facility stock. Provide up to 50 channelRefs, specify \&quot;UNALLOCATED for unallocated stock.\&quot;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getStockDistribution(tenantArticleId: string, facilityServiceTypes?: Array<string>, facilityStatus?: Array<string>, facilityName?: string, facilityIds?: Array<string>, channelRefs?: Array<string>, options: any = {}): FetchArgs {
            // verify required parameter 'tenantArticleId' is not null or undefined
            if (tenantArticleId === null || tenantArticleId === undefined) {
                throw new RequiredError('tenantArticleId','Required parameter tenantArticleId was null or undefined when calling getStockDistribution.');
            }
            const localVarPath = `/api/articles/{tenantArticleId}/stockdistribution`
                .replace(`{${"tenantArticleId"}}`, encodeURIComponent(String(tenantArticleId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (facilityServiceTypes) {
                localVarQueryParameter['facilityServiceTypes'] = facilityServiceTypes.join(COLLECTION_FORMATS["csv"]);
            }

            if (facilityStatus) {
                localVarQueryParameter['facilityStatus'] = facilityStatus.join(COLLECTION_FORMATS["csv"]);
            }

            if (facilityName !== undefined) {
                localVarQueryParameter['facilityName'] = facilityName;
            }

            if (facilityIds) {
                localVarQueryParameter['facilityIds'] = facilityIds;
            }

            if (channelRefs) {
                localVarQueryParameter['channelRefs'] = channelRefs;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get the accumulated Stock for each Article
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {Array<string>} [facilityServiceTypes]
         * @param {Array<string>} [facilityStatus]
         * @param {Array<string>} [facilityRefs]
         * @param {boolean} [allowStale]
         * @param {Array<string>} [tenantArticleIds]
         * @param {Array<string>} [channelRefs] The channels to included under \&quot;channelAdjusted\&quot; in the stock summary. Provide up to 50 channelRefs, specify \&quot;UNALLOCATED for unallocated stock.\&quot;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getStockSummaries(size?: number, startAfterId?: string, facilityServiceTypes?: Array<string>, facilityStatus?: Array<string>, facilityRefs?: Array<string>, allowStale?: boolean, tenantArticleIds?: Array<string>, channelRefs?: Array<string>, options: any = {}): FetchArgs {
            const localVarPath = `/api/stocks/summaries`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (facilityServiceTypes) {
                localVarQueryParameter['facilityServiceTypes'] = facilityServiceTypes.join(COLLECTION_FORMATS["csv"]);
            }

            if (facilityStatus) {
                localVarQueryParameter['facilityStatus'] = facilityStatus.join(COLLECTION_FORMATS["csv"]);
            }

            if (facilityRefs) {
                localVarQueryParameter['facilityRefs'] = facilityRefs;
            }

            if (allowStale !== undefined) {
                localVarQueryParameter['allowStale'] = allowStale;
            }

            if (tenantArticleIds) {
                localVarQueryParameter['tenantArticleIds'] = tenantArticleIds;
            }

            if (channelRefs) {
                localVarQueryParameter['channelRefs'] = channelRefs;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />
         * @summary This endpoint is deprecated. Please use /api/stocks/summaries instead.
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {Array<string>} [facilityServiceTypes]
         * @param {Array<string>} [facilityStatus]
         * @param {Array<string>} [facilityRefs]
         * @param {boolean} [allowStale]
         * @param {Array<string>} [tenantArticleIds]
         * @param {Array<string>} [channelRefs] The channels to included under \&quot;channelAdjusted\&quot; in the stock summary. Provide up to 50 channelRefs, specify \&quot;UNALLOCATED for unallocated stock.\&quot;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getStockSummariesDeprecated(size?: number, startAfterId?: string, facilityServiceTypes?: Array<string>, facilityStatus?: Array<string>, facilityRefs?: Array<string>, allowStale?: boolean, tenantArticleIds?: Array<string>, channelRefs?: Array<string>, options: any = {}): FetchArgs {
            const localVarPath = `/api/inventory/stocks/summaries`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (facilityServiceTypes) {
                localVarQueryParameter['facilityServiceTypes'] = facilityServiceTypes.join(COLLECTION_FORMATS["csv"]);
            }

            if (facilityStatus) {
                localVarQueryParameter['facilityStatus'] = facilityStatus.join(COLLECTION_FORMATS["csv"]);
            }

            if (facilityRefs) {
                localVarQueryParameter['facilityRefs'] = facilityRefs;
            }

            if (allowStale !== undefined) {
                localVarQueryParameter['allowStale'] = allowStale;
            }

            if (tenantArticleIds) {
                localVarQueryParameter['tenantArticleIds'] = tenantArticleIds;
            }

            if (channelRefs) {
                localVarQueryParameter['channelRefs'] = channelRefs;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get stocks
         * @param {string} [facilityRef]
         * @param {Array<string>} [tenantArticleId]
         * @param {Array<string>} [locationRef]
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getStocks(facilityRef?: string, tenantArticleId?: Array<string>, locationRef?: Array<string>, size?: number, startAfterId?: string, options: any = {}): FetchArgs {
            const localVarPath = `/api/stocks`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (facilityRef !== undefined) {
                localVarQueryParameter['facilityRef'] = facilityRef;
            }

            if (tenantArticleId) {
                localVarQueryParameter['tenantArticleId'] = tenantArticleId;
            }

            if (locationRef) {
                localVarQueryParameter['locationRef'] = locationRef;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get the Storage Location recommendations for a specific Stock
         * @param {string} stockId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getStorageLocationRecommendations(stockId: string, options: any = {}): FetchArgs {
            // verify required parameter 'stockId' is not null or undefined
            if (stockId === null || stockId === undefined) {
                throw new RequiredError('stockId','Required parameter stockId was null or undefined when calling getStorageLocationRecommendations.');
            }
            const localVarPath = `/api/stocks/{stockId}/locationrecommendations`
                .replace(`{${"stockId"}}`, encodeURIComponent(String(stockId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Patches a facility configuration with the given ID
         * @param {StockConfigurationPatchActions} body Patch set
         * @param {string} facilityId ID of facility you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchFacilityConfiguration(body: StockConfigurationPatchActions, facilityId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling patchFacilityConfiguration.');
            }
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling patchFacilityConfiguration.');
            }
            const localVarPath = `/api/facilities/{facilityId}/configurations/stock`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"StockConfigurationPatchActions" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Perform stocks actions
         * @param {StockAction} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        performStocksActions(body: StockAction, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling performStocksActions.');
            }
            const localVarPath = `/api/stocks/actions`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"StockAction" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Change the tenant wide stock configuration
         * @param {StockConfiguration} body Desired stock configuration to put
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putStockConfiguration(body: StockConfiguration, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putStockConfiguration.');
            }
            const localVarPath = `/api/configurations/stock`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"StockConfiguration" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Update stock
         * @param {StocksStockIdBody} body
         * @param {string} stockId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateStock(body: StocksStockIdBody, stockId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling updateStock.');
            }
            // verify required parameter 'stockId' is not null or undefined
            if (stockId === null || stockId === undefined) {
                throw new RequiredError('stockId','Required parameter stockId was null or undefined when calling updateStock.');
            }
            const localVarPath = `/api/stocks/{stockId}`
                .replace(`{${"stockId"}}`, encodeURIComponent(String(stockId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"StocksStockIdBody" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Update Inventory Configuration
         * @param {InventoryConfigurationForPatch} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertInventoryConfigurations(body: InventoryConfigurationForPatch, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling upsertInventoryConfigurations.');
            }
            const localVarPath = `/api/configurations/inventory`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"InventoryConfigurationForPatch" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Update Inventory Configuration for a Facility
         * @param {InventoryFacilityConfigurationForPatch} body
         * @param {string} facilityId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertInventoryFacilityConfigurations(body: InventoryFacilityConfigurationForPatch, facilityId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling upsertInventoryFacilityConfigurations.');
            }
            // verify required parameter 'facilityId' is not null or undefined
            if (facilityId === null || facilityId === undefined) {
                throw new RequiredError('facilityId','Required parameter facilityId was null or undefined when calling upsertInventoryFacilityConfigurations.');
            }
            const localVarPath = `/api/facilities/{facilityId}/configurations/inventory`
                .replace(`{${"facilityId"}}`, encodeURIComponent(String(facilityId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"InventoryFacilityConfigurationForPatch" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Update and create many stocks at once
         * @param {StocksForUpsert} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertStocks(body: StocksForUpsert, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling upsertStocks.');
            }
            const localVarPath = `/api/stocks`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"StocksForUpsert" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * InventoryManagementStocksApi - functional programming interface
 * @export
 */
export const InventoryManagementStocksApiFp = function(configuration?: Configuration) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Use <a href=\"https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/entities#stock\">Inventory Stock</a> instead
         * @summary Update Stock in bulk facilityRef and tenantArticleId
         * @param {FacilityStockBulkOperations} body
         * @param {string} facilityId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        bulkUpdateFacilityStock(body: FacilityStockBulkOperations, facilityId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<FacilityStockBulkResult>> {
            const localVarFetchArgs = InventoryManagementStocksApiFetchParamCreator(configuration).bulkUpdateFacilityStock(body, facilityId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Update Safety Stocks in bulk
         * @param {SafetyStockBulkOperations} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        bulkUpdateSafetyStock(body: SafetyStockBulkOperations, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<SafetyStockBulkOperationResult> {
            const localVarFetchArgs = InventoryManagementStocksApiFetchParamCreator(configuration).bulkUpdateSafetyStock(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Create stock
         * @param {StockForCreation} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createStock(body: StockForCreation, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Stock> {
            const localVarFetchArgs = InventoryManagementStocksApiFetchParamCreator(configuration).createStock(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Delete a single Safety Stock
         * @param {string} safetyStockId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSafetyStock(safetyStockId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = InventoryManagementStocksApiFetchParamCreator(configuration).deleteSafetyStock(safetyStockId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Delete stock
         * @param {string} stockId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteStock(stockId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = InventoryManagementStocksApiFetchParamCreator(configuration).deleteStock(stockId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />
         * @summary Search articles tenant-wide based on title or tenantArticleId
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {string} [facilityRef]
         * @param {string} [searchTerm]
         * @param {SupportedLocale} [locale]
         * @param {string} [tenantArticleId]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getArticles(size?: number, startAfterId?: string, facilityRef?: string, searchTerm?: string, locale?: SupportedLocale, tenantArticleId?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<InventoryArticlePaginatedResult> {
            const localVarFetchArgs = InventoryManagementStocksApiFetchParamCreator(configuration).getArticles(size, startAfterId, facilityRef, searchTerm, locale, tenantArticleId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Gets the facility's current configuration for stock related order distribution
         * @param {string} facilityId ID of facility you want to retrieve the configurations for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityStockConfiguration(facilityId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FacilityStockConfiguration> {
            const localVarFetchArgs = InventoryManagementStocksApiFetchParamCreator(configuration).getFacilityStockConfiguration(facilityId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Use <a href=\"https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/entities#stock\">Inventory Stock</a> instead
         * @summary Get stock related to a facilityRef
         * @param {string} facilityId
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityStocks(facilityId: string, size?: number, startAfterId?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<FacilityStock>> {
            const localVarFetchArgs = InventoryManagementStocksApiFetchParamCreator(configuration).getFacilityStocks(facilityId, size, startAfterId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get the forecast for a specific tenantArticleId
         * @param {string} tenantArticleId
         * @param {string} [period]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getForecastsForArticle(tenantArticleId: string, period?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<ArticleStockForecast>> {
            const localVarFetchArgs = InventoryManagementStocksApiFetchParamCreator(configuration).getForecastsForArticle(tenantArticleId, period, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get Inventory Configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getInventoryConfigurations(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<InventoryConfiguration> {
            const localVarFetchArgs = InventoryManagementStocksApiFetchParamCreator(configuration).getInventoryConfigurations(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get Inventory Configuration for a Facility
         * @param {string} facilityId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getInventoryFacilityConfigurations(facilityId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<InventoryFacilityConfiguration> {
            const localVarFetchArgs = InventoryManagementStocksApiFetchParamCreator(configuration).getInventoryFacilityConfigurations(facilityId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get all Safety Stocks
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {string} [tenantArticleId]
         * @param {string} [facilityRef]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getSafetyStocks(size?: number, startAfterId?: string, tenantArticleId?: string, facilityRef?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<SafetyStocksPaginatedResult> {
            const localVarFetchArgs = InventoryManagementStocksApiFetchParamCreator(configuration).getSafetyStocks(size, startAfterId, tenantArticleId, facilityRef, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get stock
         * @param {string} stockId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getStock(stockId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Stock> {
            const localVarFetchArgs = InventoryManagementStocksApiFetchParamCreator(configuration).getStock(stockId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get the current stock configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getStockConfiguration(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<StockConfiguration> {
            const localVarFetchArgs = InventoryManagementStocksApiFetchParamCreator(configuration).getStockConfiguration(options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Stock per Facility for a specific tenantArticleId, also includes the Tenant-Wide Summary
         * @param {string} tenantArticleId
         * @param {Array<string>} [facilityServiceTypes]
         * @param {Array<string>} [facilityStatus]
         * @param {string} [facilityName]
         * @param {Array<string>} [facilityIds]
         * @param {Array<string>} [channelRefs] The channels to included under \&quot;channelAdjusted\&quot; in each summary and facility stock. Provide up to 50 channelRefs, specify \&quot;UNALLOCATED for unallocated stock.\&quot;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getStockDistribution(tenantArticleId: string, facilityServiceTypes?: Array<string>, facilityStatus?: Array<string>, facilityName?: string, facilityIds?: Array<string>, channelRefs?: Array<string>, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<StockDistribution> {
            const localVarFetchArgs = InventoryManagementStocksApiFetchParamCreator(configuration).getStockDistribution(tenantArticleId, facilityServiceTypes, facilityStatus, facilityName, facilityIds, channelRefs, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get the accumulated Stock for each Article
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {Array<string>} [facilityServiceTypes]
         * @param {Array<string>} [facilityStatus]
         * @param {Array<string>} [facilityRefs]
         * @param {boolean} [allowStale]
         * @param {Array<string>} [tenantArticleIds]
         * @param {Array<string>} [channelRefs] The channels to included under \&quot;channelAdjusted\&quot; in the stock summary. Provide up to 50 channelRefs, specify \&quot;UNALLOCATED for unallocated stock.\&quot;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getStockSummaries(size?: number, startAfterId?: string, facilityServiceTypes?: Array<string>, facilityStatus?: Array<string>, facilityRefs?: Array<string>, allowStale?: boolean, tenantArticleIds?: Array<string>, channelRefs?: Array<string>, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<StockSummaries> {
            const localVarFetchArgs = InventoryManagementStocksApiFetchParamCreator(configuration).getStockSummaries(size, startAfterId, facilityServiceTypes, facilityStatus, facilityRefs, allowStale, tenantArticleIds, channelRefs, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />
         * @summary This endpoint is deprecated. Please use /api/stocks/summaries instead.
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {Array<string>} [facilityServiceTypes]
         * @param {Array<string>} [facilityStatus]
         * @param {Array<string>} [facilityRefs]
         * @param {boolean} [allowStale]
         * @param {Array<string>} [tenantArticleIds]
         * @param {Array<string>} [channelRefs] The channels to included under \&quot;channelAdjusted\&quot; in the stock summary. Provide up to 50 channelRefs, specify \&quot;UNALLOCATED for unallocated stock.\&quot;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getStockSummariesDeprecated(size?: number, startAfterId?: string, facilityServiceTypes?: Array<string>, facilityStatus?: Array<string>, facilityRefs?: Array<string>, allowStale?: boolean, tenantArticleIds?: Array<string>, channelRefs?: Array<string>, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<StockSummaries> {
            const localVarFetchArgs = InventoryManagementStocksApiFetchParamCreator(configuration).getStockSummariesDeprecated(size, startAfterId, facilityServiceTypes, facilityStatus, facilityRefs, allowStale, tenantArticleIds, channelRefs, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get stocks
         * @param {string} [facilityRef]
         * @param {Array<string>} [tenantArticleId]
         * @param {Array<string>} [locationRef]
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getStocks(facilityRef?: string, tenantArticleId?: Array<string>, locationRef?: Array<string>, size?: number, startAfterId?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<StockPaginatedResult> {
            const localVarFetchArgs = InventoryManagementStocksApiFetchParamCreator(configuration).getStocks(facilityRef, tenantArticleId, locationRef, size, startAfterId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get the Storage Location recommendations for a specific Stock
         * @param {string} stockId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getStorageLocationRecommendations(stockId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<StorageLocationRecommendation>> {
            const localVarFetchArgs = InventoryManagementStocksApiFetchParamCreator(configuration).getStorageLocationRecommendations(stockId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Patches a facility configuration with the given ID
         * @param {StockConfigurationPatchActions} body Patch set
         * @param {string} facilityId ID of facility you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchFacilityConfiguration(body: StockConfigurationPatchActions, facilityId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FacilityStockConfiguration> {
            const localVarFetchArgs = InventoryManagementStocksApiFetchParamCreator(configuration).patchFacilityConfiguration(body, facilityId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Perform stocks actions
         * @param {StockAction} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        performStocksActions(body: StockAction, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<StockActionResult> {
            const localVarFetchArgs = InventoryManagementStocksApiFetchParamCreator(configuration).performStocksActions(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Change the tenant wide stock configuration
         * @param {StockConfiguration} body Desired stock configuration to put
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putStockConfiguration(body: StockConfiguration, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<StockConfiguration> {
            const localVarFetchArgs = InventoryManagementStocksApiFetchParamCreator(configuration).putStockConfiguration(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Update stock
         * @param {StocksStockIdBody} body
         * @param {string} stockId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateStock(body: StocksStockIdBody, stockId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Stock> {
            const localVarFetchArgs = InventoryManagementStocksApiFetchParamCreator(configuration).updateStock(body, stockId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Update Inventory Configuration
         * @param {InventoryConfigurationForPatch} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertInventoryConfigurations(body: InventoryConfigurationForPatch, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<InventoryConfiguration> {
            const localVarFetchArgs = InventoryManagementStocksApiFetchParamCreator(configuration).upsertInventoryConfigurations(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Update Inventory Configuration for a Facility
         * @param {InventoryFacilityConfigurationForPatch} body
         * @param {string} facilityId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertInventoryFacilityConfigurations(body: InventoryFacilityConfigurationForPatch, facilityId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<InventoryFacilityConfiguration> {
            const localVarFetchArgs = InventoryManagementStocksApiFetchParamCreator(configuration).upsertInventoryFacilityConfigurations(body, facilityId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Update and create many stocks at once
         * @param {StocksForUpsert} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertStocks(body: StocksForUpsert, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<StockUpsertOperationResult>> {
            const localVarFetchArgs = InventoryManagementStocksApiFetchParamCreator(configuration).upsertStocks(body, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * InventoryManagementStocksApi - factory interface
 * @export
 */
export const InventoryManagementStocksApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Use <a href=\"https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/entities#stock\">Inventory Stock</a> instead
         * @summary Update Stock in bulk facilityRef and tenantArticleId
         * @param {FacilityStockBulkOperations} body
         * @param {string} facilityId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        bulkUpdateFacilityStock(body: FacilityStockBulkOperations, facilityId: string, options?: any) {
            return InventoryManagementStocksApiFp(configuration).bulkUpdateFacilityStock(body, facilityId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Update Safety Stocks in bulk
         * @param {SafetyStockBulkOperations} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        bulkUpdateSafetyStock(body: SafetyStockBulkOperations, options?: any) {
            return InventoryManagementStocksApiFp(configuration).bulkUpdateSafetyStock(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Create stock
         * @param {StockForCreation} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createStock(body: StockForCreation, options?: any) {
            return InventoryManagementStocksApiFp(configuration).createStock(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Delete a single Safety Stock
         * @param {string} safetyStockId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSafetyStock(safetyStockId: string, options?: any) {
            return InventoryManagementStocksApiFp(configuration).deleteSafetyStock(safetyStockId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Delete stock
         * @param {string} stockId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteStock(stockId: string, options?: any) {
            return InventoryManagementStocksApiFp(configuration).deleteStock(stockId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />
         * @summary Search articles tenant-wide based on title or tenantArticleId
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {string} [facilityRef]
         * @param {string} [searchTerm]
         * @param {SupportedLocale} [locale]
         * @param {string} [tenantArticleId]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getArticles(size?: number, startAfterId?: string, facilityRef?: string, searchTerm?: string, locale?: SupportedLocale, tenantArticleId?: string, options?: any) {
            return InventoryManagementStocksApiFp(configuration).getArticles(size, startAfterId, facilityRef, searchTerm, locale, tenantArticleId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Gets the facility's current configuration for stock related order distribution
         * @param {string} facilityId ID of facility you want to retrieve the configurations for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityStockConfiguration(facilityId: string, options?: any) {
            return InventoryManagementStocksApiFp(configuration).getFacilityStockConfiguration(facilityId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Use <a href=\"https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/entities#stock\">Inventory Stock</a> instead
         * @summary Get stock related to a facilityRef
         * @param {string} facilityId
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFacilityStocks(facilityId: string, size?: number, startAfterId?: string, options?: any) {
            return InventoryManagementStocksApiFp(configuration).getFacilityStocks(facilityId, size, startAfterId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get the forecast for a specific tenantArticleId
         * @param {string} tenantArticleId
         * @param {string} [period]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getForecastsForArticle(tenantArticleId: string, period?: string, options?: any) {
            return InventoryManagementStocksApiFp(configuration).getForecastsForArticle(tenantArticleId, period, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get Inventory Configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getInventoryConfigurations(options?: any) {
            return InventoryManagementStocksApiFp(configuration).getInventoryConfigurations(options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get Inventory Configuration for a Facility
         * @param {string} facilityId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getInventoryFacilityConfigurations(facilityId: string, options?: any) {
            return InventoryManagementStocksApiFp(configuration).getInventoryFacilityConfigurations(facilityId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get all Safety Stocks
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {string} [tenantArticleId]
         * @param {string} [facilityRef]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getSafetyStocks(size?: number, startAfterId?: string, tenantArticleId?: string, facilityRef?: string, options?: any) {
            return InventoryManagementStocksApiFp(configuration).getSafetyStocks(size, startAfterId, tenantArticleId, facilityRef, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get stock
         * @param {string} stockId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getStock(stockId: string, options?: any) {
            return InventoryManagementStocksApiFp(configuration).getStock(stockId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get the current stock configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getStockConfiguration(options?: any) {
            return InventoryManagementStocksApiFp(configuration).getStockConfiguration(options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Stock per Facility for a specific tenantArticleId, also includes the Tenant-Wide Summary
         * @param {string} tenantArticleId
         * @param {Array<string>} [facilityServiceTypes]
         * @param {Array<string>} [facilityStatus]
         * @param {string} [facilityName]
         * @param {Array<string>} [facilityIds]
         * @param {Array<string>} [channelRefs] The channels to included under \&quot;channelAdjusted\&quot; in each summary and facility stock. Provide up to 50 channelRefs, specify \&quot;UNALLOCATED for unallocated stock.\&quot;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getStockDistribution(tenantArticleId: string, facilityServiceTypes?: Array<string>, facilityStatus?: Array<string>, facilityName?: string, facilityIds?: Array<string>, channelRefs?: Array<string>, options?: any) {
            return InventoryManagementStocksApiFp(configuration).getStockDistribution(tenantArticleId, facilityServiceTypes, facilityStatus, facilityName, facilityIds, channelRefs, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get the accumulated Stock for each Article
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {Array<string>} [facilityServiceTypes]
         * @param {Array<string>} [facilityStatus]
         * @param {Array<string>} [facilityRefs]
         * @param {boolean} [allowStale]
         * @param {Array<string>} [tenantArticleIds]
         * @param {Array<string>} [channelRefs] The channels to included under \&quot;channelAdjusted\&quot; in the stock summary. Provide up to 50 channelRefs, specify \&quot;UNALLOCATED for unallocated stock.\&quot;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getStockSummaries(size?: number, startAfterId?: string, facilityServiceTypes?: Array<string>, facilityStatus?: Array<string>, facilityRefs?: Array<string>, allowStale?: boolean, tenantArticleIds?: Array<string>, channelRefs?: Array<string>, options?: any) {
            return InventoryManagementStocksApiFp(configuration).getStockSummaries(size, startAfterId, facilityServiceTypes, facilityStatus, facilityRefs, allowStale, tenantArticleIds, channelRefs, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />
         * @summary This endpoint is deprecated. Please use /api/stocks/summaries instead.
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {Array<string>} [facilityServiceTypes]
         * @param {Array<string>} [facilityStatus]
         * @param {Array<string>} [facilityRefs]
         * @param {boolean} [allowStale]
         * @param {Array<string>} [tenantArticleIds]
         * @param {Array<string>} [channelRefs] The channels to included under \&quot;channelAdjusted\&quot; in the stock summary. Provide up to 50 channelRefs, specify \&quot;UNALLOCATED for unallocated stock.\&quot;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getStockSummariesDeprecated(size?: number, startAfterId?: string, facilityServiceTypes?: Array<string>, facilityStatus?: Array<string>, facilityRefs?: Array<string>, allowStale?: boolean, tenantArticleIds?: Array<string>, channelRefs?: Array<string>, options?: any) {
            return InventoryManagementStocksApiFp(configuration).getStockSummariesDeprecated(size, startAfterId, facilityServiceTypes, facilityStatus, facilityRefs, allowStale, tenantArticleIds, channelRefs, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Get stocks
         * @param {string} [facilityRef]
         * @param {Array<string>} [tenantArticleId]
         * @param {Array<string>} [locationRef]
         * @param {number} [size]
         * @param {string} [startAfterId]
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getStocks(facilityRef?: string, tenantArticleId?: Array<string>, locationRef?: Array<string>, size?: number, startAfterId?: string, options?: any) {
            return InventoryManagementStocksApiFp(configuration).getStocks(facilityRef, tenantArticleId, locationRef, size, startAfterId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Get the Storage Location recommendations for a specific Stock
         * @param {string} stockId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getStorageLocationRecommendations(stockId: string, options?: any) {
            return InventoryManagementStocksApiFp(configuration).getStorageLocationRecommendations(stockId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Patches a facility configuration with the given ID
         * @param {StockConfigurationPatchActions} body Patch set
         * @param {string} facilityId ID of facility you want to get
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchFacilityConfiguration(body: StockConfigurationPatchActions, facilityId: string, options?: any) {
            return InventoryManagementStocksApiFp(configuration).patchFacilityConfiguration(body, facilityId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Perform stocks actions
         * @param {StockAction} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        performStocksActions(body: StockAction, options?: any) {
            return InventoryManagementStocksApiFp(configuration).performStocksActions(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Change the tenant wide stock configuration
         * @param {StockConfiguration} body Desired stock configuration to put
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putStockConfiguration(body: StockConfiguration, options?: any) {
            return InventoryManagementStocksApiFp(configuration).putStockConfiguration(body, options)(fetch, basePath);
        },
        /**
         *
         * @summary Update stock
         * @param {StocksStockIdBody} body
         * @param {string} stockId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateStock(body: StocksStockIdBody, stockId: string, options?: any) {
            return InventoryManagementStocksApiFp(configuration).updateStock(body, stockId, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Update Inventory Configuration
         * @param {InventoryConfigurationForPatch} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertInventoryConfigurations(body: InventoryConfigurationForPatch, options?: any) {
            return InventoryManagementStocksApiFp(configuration).upsertInventoryConfigurations(body, options)(fetch, basePath);
        },
        /**
         * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
         * @summary Update Inventory Configuration for a Facility
         * @param {InventoryFacilityConfigurationForPatch} body
         * @param {string} facilityId
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertInventoryFacilityConfigurations(body: InventoryFacilityConfigurationForPatch, facilityId: string, options?: any) {
            return InventoryManagementStocksApiFp(configuration).upsertInventoryFacilityConfigurations(body, facilityId, options)(fetch, basePath);
        },
        /**
         * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
         * @summary Update and create many stocks at once
         * @param {StocksForUpsert} body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upsertStocks(body: StocksForUpsert, options?: any) {
            return InventoryManagementStocksApiFp(configuration).upsertStocks(body, options)(fetch, basePath);
        },
    };
};

/**
 * InventoryManagementStocksApi - object-oriented interface
 * @export
 * @class InventoryManagementStocksApi
 * @extends {BaseAPI}
 */
export class InventoryManagementStocksApi extends BaseAPI {
    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Use <a href=\"https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/entities#stock\">Inventory Stock</a> instead
     * @summary Update Stock in bulk facilityRef and tenantArticleId
     * @param {FacilityStockBulkOperations} body
     * @param {string} facilityId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementStocksApi
     */
    public bulkUpdateFacilityStock(body: FacilityStockBulkOperations, facilityId: string, options?: any) {
        return InventoryManagementStocksApiFp(this.configuration).bulkUpdateFacilityStock(body, facilityId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Update Safety Stocks in bulk
     * @param {SafetyStockBulkOperations} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementStocksApi
     */
    public bulkUpdateSafetyStock(body: SafetyStockBulkOperations, options?: any) {
        return InventoryManagementStocksApiFp(this.configuration).bulkUpdateSafetyStock(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Create stock
     * @param {StockForCreation} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementStocksApi
     */
    public createStock(body: StockForCreation, options?: any) {
        return InventoryManagementStocksApiFp(this.configuration).createStock(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Delete a single Safety Stock
     * @param {string} safetyStockId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementStocksApi
     */
    public deleteSafetyStock(safetyStockId: string, options?: any) {
        return InventoryManagementStocksApiFp(this.configuration).deleteSafetyStock(safetyStockId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Delete stock
     * @param {string} stockId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementStocksApi
     */
    public deleteStock(stockId: string, options?: any) {
        return InventoryManagementStocksApiFp(this.configuration).deleteStock(stockId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />
     * @summary Search articles tenant-wide based on title or tenantArticleId
     * @param {number} [size]
     * @param {string} [startAfterId]
     * @param {string} [facilityRef]
     * @param {string} [searchTerm]
     * @param {SupportedLocale} [locale]
     * @param {string} [tenantArticleId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementStocksApi
     */
    public getArticles(size?: number, startAfterId?: string, facilityRef?: string, searchTerm?: string, locale?: SupportedLocale, tenantArticleId?: string, options?: any) {
        return InventoryManagementStocksApiFp(this.configuration).getArticles(size, startAfterId, facilityRef, searchTerm, locale, tenantArticleId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Gets the facility's current configuration for stock related order distribution
     * @param {string} facilityId ID of facility you want to retrieve the configurations for
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementStocksApi
     */
    public getFacilityStockConfiguration(facilityId: string, options?: any) {
        return InventoryManagementStocksApiFp(this.configuration).getFacilityStockConfiguration(facilityId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />Use <a href=\"https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/entities#stock\">Inventory Stock</a> instead
     * @summary Get stock related to a facilityRef
     * @param {string} facilityId
     * @param {number} [size]
     * @param {string} [startAfterId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementStocksApi
     */
    public getFacilityStocks(facilityId: string, size?: number, startAfterId?: string, options?: any) {
        return InventoryManagementStocksApiFp(this.configuration).getFacilityStocks(facilityId, size, startAfterId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get the forecast for a specific tenantArticleId
     * @param {string} tenantArticleId
     * @param {string} [period]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementStocksApi
     */
    public getForecastsForArticle(tenantArticleId: string, period?: string, options?: any) {
        return InventoryManagementStocksApiFp(this.configuration).getForecastsForArticle(tenantArticleId, period, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get Inventory Configuration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementStocksApi
     */
    public getInventoryConfigurations(options?: any) {
        return InventoryManagementStocksApiFp(this.configuration).getInventoryConfigurations(options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get Inventory Configuration for a Facility
     * @param {string} facilityId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementStocksApi
     */
    public getInventoryFacilityConfigurations(facilityId: string, options?: any) {
        return InventoryManagementStocksApiFp(this.configuration).getInventoryFacilityConfigurations(facilityId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get all Safety Stocks
     * @param {number} [size]
     * @param {string} [startAfterId]
     * @param {string} [tenantArticleId]
     * @param {string} [facilityRef]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementStocksApi
     */
    public getSafetyStocks(size?: number, startAfterId?: string, tenantArticleId?: string, facilityRef?: string, options?: any) {
        return InventoryManagementStocksApiFp(this.configuration).getSafetyStocks(size, startAfterId, tenantArticleId, facilityRef, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get stock
     * @param {string} stockId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementStocksApi
     */
    public getStock(stockId: string, options?: any) {
        return InventoryManagementStocksApiFp(this.configuration).getStock(stockId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Get the current stock configuration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementStocksApi
     */
    public getStockConfiguration(options?: any) {
        return InventoryManagementStocksApiFp(this.configuration).getStockConfiguration(options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Stock per Facility for a specific tenantArticleId, also includes the Tenant-Wide Summary
     * @param {string} tenantArticleId
     * @param {Array<string>} [facilityServiceTypes]
     * @param {Array<string>} [facilityStatus]
     * @param {string} [facilityName]
     * @param {Array<string>} [facilityIds]
     * @param {Array<string>} [channelRefs] The channels to included under \&quot;channelAdjusted\&quot; in each summary and facility stock. Provide up to 50 channelRefs, specify \&quot;UNALLOCATED for unallocated stock.\&quot;
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementStocksApi
     */
    public getStockDistribution(tenantArticleId: string, facilityServiceTypes?: Array<string>, facilityStatus?: Array<string>, facilityName?: string, facilityIds?: Array<string>, channelRefs?: Array<string>, options?: any) {
        return InventoryManagementStocksApiFp(this.configuration).getStockDistribution(tenantArticleId, facilityServiceTypes, facilityStatus, facilityName, facilityIds, channelRefs, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get the accumulated Stock for each Article
     * @param {number} [size]
     * @param {string} [startAfterId]
     * @param {Array<string>} [facilityServiceTypes]
     * @param {Array<string>} [facilityStatus]
     * @param {Array<string>} [facilityRefs]
     * @param {boolean} [allowStale]
     * @param {Array<string>} [tenantArticleIds]
     * @param {Array<string>} [channelRefs] The channels to included under \&quot;channelAdjusted\&quot; in the stock summary. Provide up to 50 channelRefs, specify \&quot;UNALLOCATED for unallocated stock.\&quot;
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementStocksApi
     */
    public getStockSummaries(size?: number, startAfterId?: string, facilityServiceTypes?: Array<string>, facilityStatus?: Array<string>, facilityRefs?: Array<string>, allowStale?: boolean, tenantArticleIds?: Array<string>, channelRefs?: Array<string>, options?: any) {
        return InventoryManagementStocksApiFp(this.configuration).getStockSummaries(size, startAfterId, facilityServiceTypes, facilityStatus, facilityRefs, allowStale, tenantArticleIds, channelRefs, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/fft-deprectated_254x51.png'></center> <br /> <i>This endpoint is deprecated and has been replaced.</i><br /><br />
     * @summary This endpoint is deprecated. Please use /api/stocks/summaries instead.
     * @param {number} [size]
     * @param {string} [startAfterId]
     * @param {Array<string>} [facilityServiceTypes]
     * @param {Array<string>} [facilityStatus]
     * @param {Array<string>} [facilityRefs]
     * @param {boolean} [allowStale]
     * @param {Array<string>} [tenantArticleIds]
     * @param {Array<string>} [channelRefs] The channels to included under \&quot;channelAdjusted\&quot; in the stock summary. Provide up to 50 channelRefs, specify \&quot;UNALLOCATED for unallocated stock.\&quot;
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementStocksApi
     */
    public getStockSummariesDeprecated(size?: number, startAfterId?: string, facilityServiceTypes?: Array<string>, facilityStatus?: Array<string>, facilityRefs?: Array<string>, allowStale?: boolean, tenantArticleIds?: Array<string>, channelRefs?: Array<string>, options?: any) {
        return InventoryManagementStocksApiFp(this.configuration).getStockSummariesDeprecated(size, startAfterId, facilityServiceTypes, facilityStatus, facilityRefs, allowStale, tenantArticleIds, channelRefs, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Get stocks
     * @param {string} [facilityRef]
     * @param {Array<string>} [tenantArticleId]
     * @param {Array<string>} [locationRef]
     * @param {number} [size]
     * @param {string} [startAfterId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementStocksApi
     */
    public getStocks(facilityRef?: string, tenantArticleId?: Array<string>, locationRef?: Array<string>, size?: number, startAfterId?: string, options?: any) {
        return InventoryManagementStocksApiFp(this.configuration).getStocks(facilityRef, tenantArticleId, locationRef, size, startAfterId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Get the Storage Location recommendations for a specific Stock
     * @param {string} stockId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementStocksApi
     */
    public getStorageLocationRecommendations(stockId: string, options?: any) {
        return InventoryManagementStocksApiFp(this.configuration).getStorageLocationRecommendations(stockId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Patches a facility configuration with the given ID
     * @param {StockConfigurationPatchActions} body Patch set
     * @param {string} facilityId ID of facility you want to get
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementStocksApi
     */
    public patchFacilityConfiguration(body: StockConfigurationPatchActions, facilityId: string, options?: any) {
        return InventoryManagementStocksApiFp(this.configuration).patchFacilityConfiguration(body, facilityId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Perform stocks actions
     * @param {StockAction} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementStocksApi
     */
    public performStocksActions(body: StockAction, options?: any) {
        return InventoryManagementStocksApiFp(this.configuration).performStocksActions(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Change the tenant wide stock configuration
     * @param {StockConfiguration} body Desired stock configuration to put
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementStocksApi
     */
    public putStockConfiguration(body: StockConfiguration, options?: any) {
        return InventoryManagementStocksApiFp(this.configuration).putStockConfiguration(body, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Update stock
     * @param {StocksStockIdBody} body
     * @param {string} stockId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementStocksApi
     */
    public updateStock(body: StocksStockIdBody, stockId: string, options?: any) {
        return InventoryManagementStocksApiFp(this.configuration).updateStock(body, stockId, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Update Inventory Configuration
     * @param {InventoryConfigurationForPatch} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementStocksApi
     */
    public upsertInventoryConfigurations(body: InventoryConfigurationForPatch, options?: any) {
        return InventoryManagementStocksApiFp(this.configuration).upsertInventoryConfigurations(body, options)(this.fetch, this.basePath);
    }

    /**
     * <i><center>   <img src='https://storage.googleapis.com/ocff-assets/api/fft-alpha_174x51.png'/>   </center> <br /> This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a>   </i><br /><br />
     * @summary Update Inventory Configuration for a Facility
     * @param {InventoryFacilityConfigurationForPatch} body
     * @param {string} facilityId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementStocksApi
     */
    public upsertInventoryFacilityConfigurations(body: InventoryFacilityConfigurationForPatch, facilityId: string, options?: any) {
        return InventoryManagementStocksApiFp(this.configuration).upsertInventoryFacilityConfigurations(body, facilityId, options)(this.fetch, this.basePath);
    }

    /**
     * <center><img src='https://storage.googleapis.com/ocff-assets/api/beta_174x74.png'   /></center> <br /> <i>This part of the API is currently under development.   That means that this endpoint, model, etc. can contain breaking changes   and / or might not be available at all times in your API instance. It   could disappear also without warning. Thus, it currently does not fall   under our SLA regulations. For details on this topic please check our   <a href=\"https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle\">documentation</a></i><br /><br />
     * @summary Update and create many stocks at once
     * @param {StocksForUpsert} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryManagementStocksApi
     */
    public upsertStocks(body: StocksForUpsert, options?: any) {
        return InventoryManagementStocksApiFp(this.configuration).upsertStocks(body, options)(this.fetch, this.basePath);
    }

}
/**
 * LastMileIntegrationCarriersApi - fetch parameter creator
 * @export
 */
export const LastMileIntegrationCarriersApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *
         * @summary Add a new carrier as a CEP partner
         * @param {CarrierForCreation} body Carrier object
         * @param {string} [locale] Provide the localized names and descriptions for the parcel label classifications. If not provided the default locale is used., for example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addCarrier(body: CarrierForCreation, locale?: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling addCarrier.');
            }
            const localVarPath = `/api/carriers`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"CarrierForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Crwate a carrierCountryServiceMapping for carrier with given ID
         * @param {CarrierCountryServiceMappingForCreation} body Carrier Configuration
         * @param {string} carrierId ID of the carrier you want to create a countryservicemapping for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createCarrierCountryServiceMapping(body: CarrierCountryServiceMappingForCreation, carrierId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling createCarrierCountryServiceMapping.');
            }
            // verify required parameter 'carrierId' is not null or undefined
            if (carrierId === null || carrierId === undefined) {
                throw new RequiredError('carrierId','Required parameter carrierId was null or undefined when calling createCarrierCountryServiceMapping.');
            }
            const localVarPath = `/api/carriers/{carrierId}/configuration/countryservicemappings`
                .replace(`{${"carrierId"}}`, encodeURIComponent(String(carrierId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"CarrierCountryServiceMappingForCreation" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Delete a carrierCountryServiceMapping for carrier with given ID
         * @param {string} carrierId ID of the carrier you want to delete a countryservicemapping from
         * @param {string} countryServiceMappingId ID of the countryservicemapping
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteCarrierCountryServiceMapping(carrierId: string, countryServiceMappingId: string, options: any = {}): FetchArgs {
            // verify required parameter 'carrierId' is not null or undefined
            if (carrierId === null || carrierId === undefined) {
                throw new RequiredError('carrierId','Required parameter carrierId was null or undefined when calling deleteCarrierCountryServiceMapping.');
            }
            // verify required parameter 'countryServiceMappingId' is not null or undefined
            if (countryServiceMappingId === null || countryServiceMappingId === undefined) {
                throw new RequiredError('countryServiceMappingId','Required parameter countryServiceMappingId was null or undefined when calling deleteCarrierCountryServiceMapping.');
            }
            const localVarPath = `/api/carriers/{carrierId}/configuration/countryservicemappings/{countryServiceMappingId}`
                .replace(`{${"carrierId"}}`, encodeURIComponent(String(carrierId)))
                .replace(`{${"countryServiceMappingId"}}`, encodeURIComponent(String(countryServiceMappingId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'DELETE' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a carrier with the given ID
         * @param {string} carrierId ID of the carrier you want to get
         * @param {string} [locale] Provide the localized names and descriptions for the parcel label classifications. If not provided the default locale is used., for example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCarrier(carrierId: string, locale?: string, options: any = {}): FetchArgs {
            // verify required parameter 'carrierId' is not null or undefined
            if (carrierId === null || carrierId === undefined) {
                throw new RequiredError('carrierId','Required parameter carrierId was null or undefined when calling getCarrier.');
            }
            const localVarPath = `/api/carriers/{carrierId}`
                .replace(`{${"carrierId"}}`, encodeURIComponent(String(carrierId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a carrier configuration with the given ID
         * @param {string} carrierId ID of the carrier you want to get the configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCarrierConfiguration(carrierId: string, options: any = {}): FetchArgs {
            // verify required parameter 'carrierId' is not null or undefined
            if (carrierId === null || carrierId === undefined) {
                throw new RequiredError('carrierId','Required parameter carrierId was null or undefined when calling getCarrierConfiguration.');
            }
            const localVarPath = `/api/carriers/{carrierId}/configuration`
                .replace(`{${"carrierId"}}`, encodeURIComponent(String(carrierId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a CarrierCountryServiceMappings for carrier with given ID
         * @param {string} carrierId ID of the carrier you want to get a countryservicemapping for
         * @param {string} countryServiceMappingId ID of the countryservicemapping
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCarrierCountryServiceMapping(carrierId: string, countryServiceMappingId: string, options: any = {}): FetchArgs {
            // verify required parameter 'carrierId' is not null or undefined
            if (carrierId === null || carrierId === undefined) {
                throw new RequiredError('carrierId','Required parameter carrierId was null or undefined when calling getCarrierCountryServiceMapping.');
            }
            // verify required parameter 'countryServiceMappingId' is not null or undefined
            if (countryServiceMappingId === null || countryServiceMappingId === undefined) {
                throw new RequiredError('countryServiceMappingId','Required parameter countryServiceMappingId was null or undefined when calling getCarrierCountryServiceMapping.');
            }
            const localVarPath = `/api/carriers/{carrierId}/configuration/countryservicemappings/{countryServiceMappingId}`
                .replace(`{${"carrierId"}}`, encodeURIComponent(String(carrierId)))
                .replace(`{${"countryServiceMappingId"}}`, encodeURIComponent(String(countryServiceMappingId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Get a CarrierCountryServiceMappings for carrier with given ID
         * @param {string} carrierId ID of the carrier you want to get the countryservicemappings for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCarrierCountryServiceMappings(carrierId: string, options: any = {}): FetchArgs {
            // verify required parameter 'carrierId' is not null or undefined
            if (carrierId === null || carrierId === undefined) {
                throw new RequiredError('carrierId','Required parameter carrierId was null or undefined when calling getCarrierCountryServiceMappings.');
            }
            const localVarPath = `/api/carriers/{carrierId}/configuration/countryservicemappings`
                .replace(`{${"carrierId"}}`, encodeURIComponent(String(carrierId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Returns all configured CEP partners
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {string} [locale] Provide the localized names and descriptions for the parcel label classifications. If not provided the default locale is used., for example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCarriers(startAfterId?: string, size?: number, locale?: string, options: any = {}): FetchArgs {
            const localVarPath = `/api/carriers`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startAfterId !== undefined) {
                localVarQueryParameter['startAfterId'] = startAfterId;
            }

            if (size !== undefined) {
                localVarQueryParameter['size'] = size;
            }

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Patches a carrier with the given ID
         * @param {CarrierPatchActions} body Patch set
         * @param {string} carrierId ID of carrier you want to patch
         * @param {string} [locale] Provide the localized names and descriptions for the parcel label classifications. If not provided the default locale is used., for example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchCarrier(body: CarrierPatchActions, carrierId: string, locale?: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling patchCarrier.');
            }
            // verify required parameter 'carrierId' is not null or undefined
            if (carrierId === null || carrierId === undefined) {
                throw new RequiredError('carrierId','Required parameter carrierId was null or undefined when calling patchCarrier.');
            }
            const localVarPath = `/api/carriers/{carrierId}`
                .replace(`{${"carrierId"}}`, encodeURIComponent(String(carrierId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"CarrierPatchActions" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Update a carrier configuration with the given ID
         * @param {CarrierIdConfigurationBody} body Carrier Configuration
         * @param {string} carrierId ID of the carrier you want to update the configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putCarrierConfiguration(body: CarrierIdConfigurationBody, carrierId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling putCarrierConfiguration.');
            }
            // verify required parameter 'carrierId' is not null or undefined
            if (carrierId === null || carrierId === undefined) {
                throw new RequiredError('carrierId','Required parameter carrierId was null or undefined when calling putCarrierConfiguration.');
            }
            const localVarPath = `/api/carriers/{carrierId}/configuration`
                .replace(`{${"carrierId"}}`, encodeURIComponent(String(carrierId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PUT' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"CarrierIdConfigurationBody" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *
         * @summary Update a carrierCountryServiceMapping for carrier with given ID
         * @param {CarrierCountryServiceMappingForUpdate} body Carrier Mapping for update
         * @param {string} carrierId ID of the carrier you want to update a countryservicemapping of
         * @param {string} countryServiceMappingId ID of the countryservicemapping
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateCarrierCountryServiceMapping(body: CarrierCountryServiceMappingForUpdate, carrierId: string, countryServiceMappingId: string, options: any = {}): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling updateCarrierCountryServiceMapping.');
            }
            // verify required parameter 'carrierId' is not null or undefined
            if (carrierId === null || carrierId === undefined) {
                throw new RequiredError('carrierId','Required parameter carrierId was null or undefined when calling updateCarrierCountryServiceMapping.');
            }
            // verify required parameter 'countryServiceMappingId' is not null or undefined
            if (countryServiceMappingId === null || countryServiceMappingId === undefined) {
                throw new RequiredError('countryServiceMappingId','Required parameter countryServiceMappingId was null or undefined when calling updateCarrierCountryServiceMapping.');
            }
            const localVarPath = `/api/carriers/{carrierId}/configuration/countryservicemappings/{countryServiceMappingId}`
                .replace(`{${"carrierId"}}`, encodeURIComponent(String(carrierId)))
                .replace(`{${"countryServiceMappingId"}}`, encodeURIComponent(String(countryServiceMappingId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'PATCH' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            localVarUrlObj.search = null;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            const needsSerialization = (<any>"CarrierCountryServiceMappingForUpdate" !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.body =  needsSerialization ? JSON.stringify(body || {}) : (body || "");

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * LastMileIntegrationCarriersApi - functional programming interface
 * @export
 */
export const LastMileIntegrationCarriersApiFp = function(configuration?: Configuration) {
    return {
        /**
         *
         * @summary Add a new carrier as a CEP partner
         * @param {CarrierForCreation} body Carrier object
         * @param {string} [locale] Provide the localized names and descriptions for the parcel label classifications. If not provided the default locale is used., for example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addCarrier(body: CarrierForCreation, locale?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Carrier> {
            const localVarFetchArgs = LastMileIntegrationCarriersApiFetchParamCreator(configuration).addCarrier(body, locale, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Crwate a carrierCountryServiceMapping for carrier with given ID
         * @param {CarrierCountryServiceMappingForCreation} body Carrier Configuration
         * @param {string} carrierId ID of the carrier you want to create a countryservicemapping for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createCarrierCountryServiceMapping(body: CarrierCountryServiceMappingForCreation, carrierId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CarrierCountryServiceMapping> {
            const localVarFetchArgs = LastMileIntegrationCarriersApiFetchParamCreator(configuration).createCarrierCountryServiceMapping(body, carrierId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Delete a carrierCountryServiceMapping for carrier with given ID
         * @param {string} carrierId ID of the carrier you want to delete a countryservicemapping from
         * @param {string} countryServiceMappingId ID of the countryservicemapping
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteCarrierCountryServiceMapping(carrierId: string, countryServiceMappingId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = LastMileIntegrationCarriersApiFetchParamCreator(configuration).deleteCarrierCountryServiceMapping(carrierId, countryServiceMappingId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a carrier with the given ID
         * @param {string} carrierId ID of the carrier you want to get
         * @param {string} [locale] Provide the localized names and descriptions for the parcel label classifications. If not provided the default locale is used., for example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCarrier(carrierId: string, locale?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Carrier> {
            const localVarFetchArgs = LastMileIntegrationCarriersApiFetchParamCreator(configuration).getCarrier(carrierId, locale, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a carrier configuration with the given ID
         * @param {string} carrierId ID of the carrier you want to get the configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCarrierConfiguration(carrierId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<InlineResponse200> {
            const localVarFetchArgs = LastMileIntegrationCarriersApiFetchParamCreator(configuration).getCarrierConfiguration(carrierId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a CarrierCountryServiceMappings for carrier with given ID
         * @param {string} carrierId ID of the carrier you want to get a countryservicemapping for
         * @param {string} countryServiceMappingId ID of the countryservicemapping
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCarrierCountryServiceMapping(carrierId: string, countryServiceMappingId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CarrierCountryServiceMapping> {
            const localVarFetchArgs = LastMileIntegrationCarriersApiFetchParamCreator(configuration).getCarrierCountryServiceMapping(carrierId, countryServiceMappingId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Get a CarrierCountryServiceMappings for carrier with given ID
         * @param {string} carrierId ID of the carrier you want to get the countryservicemappings for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCarrierCountryServiceMappings(carrierId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<CarrierCountryServiceMapping>> {
            const localVarFetchArgs = LastMileIntegrationCarriersApiFetchParamCreator(configuration).getCarrierCountryServiceMappings(carrierId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Returns all configured CEP partners
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {string} [locale] Provide the localized names and descriptions for the parcel label classifications. If not provided the default locale is used., for example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCarriers(startAfterId?: string, size?: number, locale?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<StrippedCarriers> {
            const localVarFetchArgs = LastMileIntegrationCarriersApiFetchParamCreator(configuration).getCarriers(startAfterId, size, locale, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Patches a carrier with the given ID
         * @param {CarrierPatchActions} body Patch set
         * @param {string} carrierId ID of carrier you want to patch
         * @param {string} [locale] Provide the localized names and descriptions for the parcel label classifications. If not provided the default locale is used., for example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchCarrier(body: CarrierPatchActions, carrierId: string, locale?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Carrier> {
            const localVarFetchArgs = LastMileIntegrationCarriersApiFetchParamCreator(configuration).patchCarrier(body, carrierId, locale, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Update a carrier configuration with the given ID
         * @param {CarrierIdConfigurationBody} body Carrier Configuration
         * @param {string} carrierId ID of the carrier you want to update the configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putCarrierConfiguration(body: CarrierIdConfigurationBody, carrierId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CarrierIdConfigurationBody> {
            const localVarFetchArgs = LastMileIntegrationCarriersApiFetchParamCreator(configuration).putCarrierConfiguration(body, carrierId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *
         * @summary Update a carrierCountryServiceMapping for carrier with given ID
         * @param {CarrierCountryServiceMappingForUpdate} body Carrier Mapping for update
         * @param {string} carrierId ID of the carrier you want to update a countryservicemapping of
         * @param {string} countryServiceMappingId ID of the countryservicemapping
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateCarrierCountryServiceMapping(body: CarrierCountryServiceMappingForUpdate, carrierId: string, countryServiceMappingId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CarrierCountryServiceMapping> {
            const localVarFetchArgs = LastMileIntegrationCarriersApiFetchParamCreator(configuration).updateCarrierCountryServiceMapping(body, carrierId, countryServiceMappingId, options);
            return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * LastMileIntegrationCarriersApi - factory interface
 * @export
 */
export const LastMileIntegrationCarriersApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         *
         * @summary Add a new carrier as a CEP partner
         * @param {CarrierForCreation} body Carrier object
         * @param {string} [locale] Provide the localized names and descriptions for the parcel label classifications. If not provided the default locale is used., for example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addCarrier(body: CarrierForCreation, locale?: string, options?: any) {
            return LastMileIntegrationCarriersApiFp(configuration).addCarrier(body, locale, options)(fetch, basePath);
        },
        /**
         *
         * @summary Crwate a carrierCountryServiceMapping for carrier with given ID
         * @param {CarrierCountryServiceMappingForCreation} body Carrier Configuration
         * @param {string} carrierId ID of the carrier you want to create a countryservicemapping for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createCarrierCountryServiceMapping(body: CarrierCountryServiceMappingForCreation, carrierId: string, options?: any) {
            return LastMileIntegrationCarriersApiFp(configuration).createCarrierCountryServiceMapping(body, carrierId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Delete a carrierCountryServiceMapping for carrier with given ID
         * @param {string} carrierId ID of the carrier you want to delete a countryservicemapping from
         * @param {string} countryServiceMappingId ID of the countryservicemapping
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteCarrierCountryServiceMapping(carrierId: string, countryServiceMappingId: string, options?: any) {
            return LastMileIntegrationCarriersApiFp(configuration).deleteCarrierCountryServiceMapping(carrierId, countryServiceMappingId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a carrier with the given ID
         * @param {string} carrierId ID of the carrier you want to get
         * @param {string} [locale] Provide the localized names and descriptions for the parcel label classifications. If not provided the default locale is used., for example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCarrier(carrierId: string, locale?: string, options?: any) {
            return LastMileIntegrationCarriersApiFp(configuration).getCarrier(carrierId, locale, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a carrier configuration with the given ID
         * @param {string} carrierId ID of the carrier you want to get the configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCarrierConfiguration(carrierId: string, options?: any) {
            return LastMileIntegrationCarriersApiFp(configuration).getCarrierConfiguration(carrierId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a CarrierCountryServiceMappings for carrier with given ID
         * @param {string} carrierId ID of the carrier you want to get a countryservicemapping for
         * @param {string} countryServiceMappingId ID of the countryservicemapping
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCarrierCountryServiceMapping(carrierId: string, countryServiceMappingId: string, options?: any) {
            return LastMileIntegrationCarriersApiFp(configuration).getCarrierCountryServiceMapping(carrierId, countryServiceMappingId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Get a CarrierCountryServiceMappings for carrier with given ID
         * @param {string} carrierId ID of the carrier you want to get the countryservicemappings for
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCarrierCountryServiceMappings(carrierId: string, options?: any) {
            return LastMileIntegrationCarriersApiFp(configuration).getCarrierCountryServiceMappings(carrierId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Returns all configured CEP partners
         * @param {string} [startAfterId] all entities after given Id
         * @param {number} [size] number of entities to show
         * @param {string} [locale] Provide the localized names and descriptions for the parcel label classifications. If not provided the default locale is used., for example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCarriers(startAfterId?: string, size?: number, locale?: string, options?: any) {
            return LastMileIntegrationCarriersApiFp(configuration).getCarriers(startAfterId, size, locale, options)(fetch, basePath);
        },
        /**
         *
         * @summary Patches a carrier with the given ID
         * @param {CarrierPatchActions} body Patch set
         * @param {string} carrierId ID of carrier you want to patch
         * @param {string} [locale] Provide the localized names and descriptions for the parcel label classifications. If not provided the default locale is used., for example de_DE.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        patchCarrier(body: CarrierPatchActions, carrierId: string, locale?: string, options?: any) {
            return LastMileIntegrationCarriersApiFp(configuration).patchCarrier(body, carrierId, locale, options)(fetch, basePath);
        },
        /**
         *
         * @summary Update a carrier configuration with the given ID
         * @param {CarrierIdConfigurationBody} body Carrier Configuration
         * @param {string} carrierId ID of the carrier you want to update the configuration
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        putCarrierConfiguration(body: CarrierIdConfigurationBody, carrierId: string, options?: any) {
            return LastMileIntegrationCarriersApiFp(configuration).putCarrierConfiguration(body, carrierId, options)(fetch, basePath);
        },
        /**
         *
         * @summary Update a carrierCountryServiceMapping for carrier with given ID
         * @param {CarrierCountryServiceMappingForUpdate} body Carrier Mapping for update
         * @param {string} carrierId ID of the carrier you want to update a countryservicemapping of
         * @param {string} countryServiceMappingId ID of the countryservicemapping
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateCarrierCountryServiceMapping(body: CarrierCountryServiceMappingForUpdate, carrierId: string, countryServiceMappingId: string, options?: any) {
            return LastMileIntegrationCarriersApiFp(configuration).updateCarrierCountryServiceMapping(body, carrierId, countryServiceMappingId, options)(fetch, basePath);
        },
    };
};

/**
 * LastMileIntegrationCarriersApi - object-oriented interface
 * @export
 * @class LastMileIntegrationCarriersApi
 * @extends {BaseAPI}
 */
export class LastMileIntegrationCarriersApi extends BaseAPI {
    /**
     *
     * @summary Add a new carrier as a CEP partner
     * @param {CarrierForCreation} body Carrier object
     * @param {string} [locale] Provide the localized names and descriptions for the parcel label classifications. If not provided the default locale is used., for example de_DE.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LastMileIntegrationCarriersApi
     */
    public addCarrier(body: CarrierForCreation, locale?: string, options?: any) {
        return LastMileIntegrationCarriersApiFp(this.configuration).addCarrier(body, locale, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Crwate a carrierCountryServiceMapping for carrier with given ID
     * @param {CarrierCountryServiceMappingForCreation} body Carrier Configuration
     * @param {string} carrierId ID of the carrier you want to create a countryservicemapping for
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LastMileIntegrationCarriersApi
     */
    public createCarrierCountryServiceMapping(body: CarrierCountryServiceMappingForCreation, carrierId: string, options?: any) {
        return LastMileIntegrationCarriersApiFp(this.configuration).createCarrierCountryServiceMapping(body, carrierId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Delete a carrierCountryServiceMapping for carrier with given ID
     * @param {string} carrierId ID of the carrier you want to delete a countryservicemapping from
     * @param {string} countryServiceMappingId ID of the countryservicemapping
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LastMileIntegrationCarriersApi
     */
    public deleteCarrierCountryServiceMapping(carrierId: string, countryServiceMappingId: string, options?: any) {
        return LastMileIntegrationCarriersApiFp(this.configuration).deleteCarrierCountryServiceMapping(carrierId, countryServiceMappingId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a carrier with the given ID
     * @param {string} carrierId ID of the carrier you want to get
     * @param {string} [locale] Provide the localized names and descriptions for the parcel label classifications. If not provided the default locale is used., for example de_DE.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LastMileIntegrationCarriersApi
     */
    public getCarrier(carrierId: string, locale?: string, options?: any) {
        return LastMileIntegrationCarriersApiFp(this.configuration).getCarrier(carrierId, locale, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a carrier configuration with the given ID
     * @param {string} carrierId ID of the carrier you want to get the configuration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LastMileIntegrationCarriersApi
     */
    public getCarrierConfiguration(carrierId: string, options?: any) {
        return LastMileIntegrationCarriersApiFp(this.configuration).getCarrierConfiguration(carrierId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a CarrierCountryServiceMappings for carrier with given ID
     * @param {string} carrierId ID of the carrier you want to get a countryservicemapping for
     * @param {string} countryServiceMappingId ID of the countryservicemapping
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LastMileIntegrationCarriersApi
     */
    public getCarrierCountryServiceMapping(carrierId: string, countryServiceMappingId: string, options?: any) {
        return LastMileIntegrationCarriersApiFp(this.configuration).getCarrierCountryServiceMapping(carrierId, countryServiceMappingId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Get a CarrierCountryServiceMappings for carrier with given ID
     * @param {string} carrierId ID of the carrier you want to get the countryservicemappings for
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LastMileIntegrationCarriersApi
     */
    public getCarrierCountryServiceMappings(carrierId: string, options?: any) {
        return LastMileIntegrationCarriersApiFp(this.configuration).getCarrierCountryServiceMappings(carrierId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Returns all configured CEP partners
     * @param {string} [startAfterId] all entities after given Id
     * @param {number} [size] number of entities to show
     * @param {string} [locale] Provide the localized names and descriptions for the parcel label classifications. If not provided the default locale is used., for example de_DE.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LastMileIntegrationCarriersApi
     */
    public getCarriers(startAfterId?: string, size?: number, locale?: string, options?: any) {
        return LastMileIntegrationCarriersApiFp(this.configuration).getCarriers(startAfterId, size, locale, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Patches a carrier with the given ID
     * @param {CarrierPatchActions} body Patch set
     * @param {string} carrierId ID of carrier you want to patch
     * @param {string} [locale] Provide the localized names and descriptions for the parcel label classifications. If not provided the default locale is used., for example de_DE.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LastMileIntegrationCarriersApi
     */
    public patchCarrier(body: CarrierPatchActions, carrierId: string, locale?: string, options?: any) {
        return LastMileIntegrationCarriersApiFp(this.configuration).patchCarrier(body, carrierId, locale, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Update a carrier configuration with the given ID
     * @param {CarrierIdConfigurationBody} body Carrier Configuration
     * @param {string} carrierId ID of the carrier you want to update the configuration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LastMileIntegrationCarriersApi
     */
    public putCarrierConfiguration(body: CarrierIdConfigurationBody, carrierId: string, options?: any) {
        return LastMileIntegrationCarriersApiFp(this.configuration).putCarrierConfiguration(body, carrierId, options)(this.fetch, this.basePath);
    }

    /**
     *
     * @summary Update a carrierCountryServiceMapping for carrier with given ID
     * @param {CarrierCountryServiceMappingForUpdate} body Carrier Mapping for update
     * @param {string} carrierId ID of the carrier you want to update a countryservicemapping of
     * @param {string} countryServiceMappingId ID of the countryservicemapping
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LastMileIntegrationCarriersApi
     */
    public updateCarrierCountryServiceMapping(body: CarrierCountryServiceMappingForUpdate, carrierId: string, countryServiceMappingId: string, options?: any) {
        return LastMileIntegrationCarriersApiFp(this.configuration).updateCarrierCountryServiceMapping(body, carrierId, countryServiceMappingId, options)(this.fetch, this.basePath);
    }

}
